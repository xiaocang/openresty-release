New Commit	: echo-nginx-module: 1 commits since 'v0.62'
------ diff log --------
commit 08ad67787d19235cb298f061e8950afbb6fd48b9
Author: Meathill <meathill@openresty.com>
Date:   Fri Jul 3 16:25:45 2020 +0800

    doc: updated the Version section to reflect the release date

diff --git a/README.markdown b/README.markdown
index 02d4608..a6b25e3 100644
--- a/README.markdown
+++ b/README.markdown
@@ -68,7 +68,7 @@ This module is production ready.
 Version
 =======
 
-This document describes ngx_echo [v0.61](https://github.com/openresty/echo-nginx-module/tags) released on 8 August 2017.
+This document describes ngx_echo [v0.62](https://github.com/openresty/echo-nginx-module/tags) released on 2 July, 2020.
 
 Synopsis
 ========
------ diff log end --------
** Summary: check here https://github.com/openresty/echo-nginx-module
===================== END echo-nginx-module =================================
Pass		: xss-nginx-module: latest!
===================== END xss-nginx-module =================================
Pass		: ngx_devel_kit: latest!
===================== END ngx_devel_kit =================================
New Commit	: set-misc-nginx-module: 7 commits since 'v0.32'
------ diff log --------
commit 4667684cfed0f523596895d338f376ffd5f72879
Author: rainingmaster <312841925@qq.com>
Date:   Sun May 17 11:42:28 2020 +0800

    style: fix some style found by ngx-style

diff --git a/src/ddebug.h b/src/ddebug.h
index 97962b1..aaa6fef 100644
--- a/src/ddebug.h
+++ b/src/ddebug.h
@@ -20,7 +20,7 @@
 #include <stdarg.h>
 
 static ngx_inline void
-dd(const char* fmt, ...) {
+dd(const char *fmt, ...) {
 }
 
 #    endif
@@ -36,7 +36,7 @@ dd(const char* fmt, ...) {
 #include <stdarg.h>
 
 static ngx_inline void
-dd(const char* fmt, ...) {
+dd(const char *fmt, ...) {
 }
 
 #   endif
diff --git a/src/ngx_http_set_base64.c b/src/ngx_http_set_base64.c
index 8493187..8666ad8 100644
--- a/src/ngx_http_set_base64.c
+++ b/src/ngx_http_set_base64.c
@@ -11,7 +11,6 @@ ngx_int_t
 ngx_http_set_misc_set_decode_base64(ngx_http_request_t *r, ngx_str_t *res,
     ngx_http_variable_value_t *v)
 {
-
     ngx_str_t        src;
 
     src.len = v->len;
@@ -34,7 +33,6 @@ ngx_int_t
 ngx_http_set_misc_set_encode_base64(ngx_http_request_t *r, ngx_str_t *res,
     ngx_http_variable_value_t *v)
 {
-
     ngx_str_t        src;
 
     src.len = v->len;
diff --git a/src/ngx_http_set_hex.c b/src/ngx_http_set_hex.c
index 6bdaa4b..6900650 100644
--- a/src/ngx_http_set_hex.c
+++ b/src/ngx_http_set_hex.c
@@ -11,7 +11,6 @@ ngx_int_t
 ngx_http_set_misc_set_decode_hex(ngx_http_request_t *r, ngx_str_t *res,
     ngx_http_variable_value_t *v)
 {
-
     u_char      *p;
     ngx_int_t    n;
     ngx_uint_t   i;
diff --git a/src/ngx_http_set_misc_module.c b/src/ngx_http_set_misc_module.c
index 4f1929d..fe5044c 100644
--- a/src/ngx_http_set_misc_module.c
+++ b/src/ngx_http_set_misc_module.c
@@ -48,6 +48,7 @@ static ndk_set_var_t  ngx_http_set_misc_set_encode_base64_filter = {
     NULL
 };
 
+
 static ndk_set_var_t  ngx_http_set_misc_set_decode_base64_filter = {
     NDK_SET_VAR_VALUE,
     (void *) ngx_http_set_misc_set_decode_base64,

commit 5cc144d7b3387f4bf90ad92525985c835255debd
Author: Thibault Charbonnier <thibaultcha@me.com>
Date:   Wed Jan 22 15:14:52 2020 -0800

    travis-ci: bumped the NGINX core to 1.17.8.

diff --git a/.travis.yml b/.travis.yml
index 1e6bd42..8924df4 100644
--- a/.travis.yml
+++ b/.travis.yml
@@ -21,7 +21,7 @@ env:
     - NGX_BUILD_JOBS=$JOBS
     - TEST_NGINX_SLEEP=0.006
   matrix:
-    - NGINX_VERSION=1.17.4
+    - NGINX_VERSION=1.17.8
 
 before_install:
   - sudo apt-get install -qq -y axel cpanminus libtest-base-perl libtext-diff-perl liburi-perl libwww-perl libtest-longstring-perl liblist-moreutils-perl > build.log 2>&1 || (cat build.log && exit 1)

commit b28f23335a8c0020f3b189275af5f6ae11c4cd59
Author: Thibault Charbonnier <thibaultcha@me.com>
Date:   Mon Sep 30 11:57:39 2019 -0700

    travis-ci: bumped the NGINX core to 1.17.4.

diff --git a/.travis.yml b/.travis.yml
index e706e62..1e6bd42 100644
--- a/.travis.yml
+++ b/.travis.yml
@@ -21,7 +21,7 @@ env:
     - NGX_BUILD_JOBS=$JOBS
     - TEST_NGINX_SLEEP=0.006
   matrix:
-    - NGINX_VERSION=1.17.1
+    - NGINX_VERSION=1.17.4
 
 before_install:
   - sudo apt-get install -qq -y axel cpanminus libtest-base-perl libtext-diff-perl liburi-perl libwww-perl libtest-longstring-perl liblist-moreutils-perl > build.log 2>&1 || (cat build.log && exit 1)

commit 048e9e05dbbc83ae4a0ea9c739397a8be2c4399a
Author: Thibault Charbonnier <thibaultcha@me.com>
Date:   Thu Jul 11 13:58:42 2019 -0700

    travis: bumped the nginx core version to 1.17.1.

diff --git a/.travis.yml b/.travis.yml
index 771e8e5..e706e62 100644
--- a/.travis.yml
+++ b/.travis.yml
@@ -21,7 +21,7 @@ env:
     - NGX_BUILD_JOBS=$JOBS
     - TEST_NGINX_SLEEP=0.006
   matrix:
-    - NGINX_VERSION=1.15.8
+    - NGINX_VERSION=1.17.1
 
 before_install:
   - sudo apt-get install -qq -y axel cpanminus libtest-base-perl libtext-diff-perl liburi-perl libwww-perl libtest-longstring-perl liblist-moreutils-perl > build.log 2>&1 || (cat build.log && exit 1)

commit 3562a8d051334d812fc857af225db9b6bda7c8d5
Author: Thibault Charbonnier <thibaultcha@me.com>
Date:   Tue Jan 29 19:33:59 2019 -0800

    travis: bumped the nginx core version to 1.15.8.

diff --git a/.travis.yml b/.travis.yml
index c2295fe..771e8e5 100644
--- a/.travis.yml
+++ b/.travis.yml
@@ -21,7 +21,7 @@ env:
     - NGX_BUILD_JOBS=$JOBS
     - TEST_NGINX_SLEEP=0.006
   matrix:
-    - NGINX_VERSION=1.13.6
+    - NGINX_VERSION=1.15.8
 
 before_install:
   - sudo apt-get install -qq -y axel cpanminus libtest-base-perl libtext-diff-perl liburi-perl libwww-perl libtest-longstring-perl liblist-moreutils-perl > build.log 2>&1 || (cat build.log && exit 1)
@@ -34,6 +34,8 @@ install:
   - git clone https://github.com/openresty/test-nginx.git
   - git clone -b v2.1-agentzh https://github.com/openresty/luajit2.git
   - git clone https://github.com/openresty/lua-nginx-module.git ../lua-nginx-module
+  - git clone https://github.com/openresty/lua-resty-core.git ../lua-resty-core
+  - git clone https://github.com/openresty/lua-resty-lrucache.git ../lua-resty-lrucache
   - git clone https://github.com/openresty/echo-nginx-module.git ../echo-nginx-module
   - git clone https://github.com/calio/iconv-nginx-module.git ../iconv-nginx-module
 

commit bcfa7a6d0d0fca4dac57d5b45e6064c6fa7f1cae
Author: Adam Leskis <leskis@gmail.com>
Date:   Wed Oct 31 23:35:57 2018 +0000

    doc: fixed a few typos in readme.

diff --git a/README.markdown b/README.markdown
index d640032..c8375e0 100644
--- a/README.markdown
+++ b/README.markdown
@@ -592,7 +592,7 @@ set_decode_base32
 
 **category:** *ndk_set_var_value*
 
-Similar to the [set_encode_base32](#set_encode_base32) directive, but does exactly the the opposite operation, .i.e, decoding a base32(hex) digest into its original form.
+Similar to the [set_encode_base32](#set_encode_base32) directive, but does exactly the opposite operation, .i.e, decoding a base32(hex) digest into its original form.
 
 [Back to TOC](#table-of-contents)
 
@@ -662,7 +662,7 @@ set_decode_base64
 
 **category:** *ndk_set_var_value*
 
-Similar to the [set_encode_base64](#set_encode_base64) directive, but does exactly the the opposite operation, .i.e, decoding a base64 digest into its original form.
+Similar to the [set_encode_base64](#set_encode_base64) directive, but does exactly the opposite operation, .i.e, decoding a base64 digest into its original form.
 
 [Back to TOC](#table-of-contents)
 
@@ -732,7 +732,7 @@ set_decode_hex
 
 **category:** *ndk_set_var_value*
 
-Similar to the [set_encode_hex](#set_encode_hex) directive, but does exactly the the opposite operation, .i.e, decoding a hexadecimal digest into its original form.
+Similar to the [set_encode_hex](#set_encode_hex) directive, but does exactly the opposite operation, .i.e, decoding a hexadecimal digest into its original form.
 
 [Back to TOC](#table-of-contents)
 

commit aac9afe4c42d96e35d496994c552839799010255
Author: Yichun Zhang (agentzh) <agentzh@gmail.com>
Date:   Sat May 26 11:01:08 2018 -0700

    doc: updated the link to ngx_devel_kit.
    
    Signed-off-by: Yichun Zhang (agentzh) <agentzh@gmail.com>

diff --git a/README.markdown b/README.markdown
index d5b4bbe..d640032 100644
--- a/README.markdown
+++ b/README.markdown
@@ -1193,7 +1193,7 @@ the version 1.13.6 (see [nginx compatibility](#compatibility)), and then build t
  make install
 ```
 
-Download the latest version of the release tarball of this module from [set-misc-nginx-module file list](http://github.com/openresty/set-misc-nginx-module/tags), and the latest tarball for [ngx_devel_kit](https://github.com/simpl/ngx_devel_kit) from its [file list](https://github.com/simpl/ngx_devel_kit/tags).
+Download the latest version of the release tarball of this module from [set-misc-nginx-module file list](http://github.com/openresty/set-misc-nginx-module/tags), and the latest tarball for [ngx_devel_kit](https://github.com/simplresty/ngx_devel_kit) from its [file list](https://github.com/simplresty/ngx_devel_kit/tags).
 
 [Back to TOC](#table-of-contents)
 
------ diff log end --------
** Summary: check here https://github.com/openresty/set-misc-nginx-module
===================== END set-misc-nginx-modul =================================
New Commit	: rds-json-nginx-module: 6 commits since 'v0.15'
------ diff log --------
commit 283eecb4242a787c6d67bab4ffdc50ae9cd30e5f
Author: Thibault Charbonnier <thibaultcha@me.com>
Date:   Wed Jan 22 15:13:50 2020 -0800

    travis-ci: bumped the NGINX core to 1.17.8.

diff --git a/.travis.yml b/.travis.yml
index 8ff8dc3..b75d3f1 100644
--- a/.travis.yml
+++ b/.travis.yml
@@ -40,7 +40,7 @@ env:
     - TEST_NGINX_SLEEP=0.006
   matrix:
     - NGINX_VERSION=1.11.2
-    - NGINX_VERSION=1.17.4
+    - NGINX_VERSION=1.17.8
 
 services:
  - mysql

commit d05fffac5ec8819bccd834c6e4896f4d2a8a55a2
Author: Thibault Charbonnier <thibaultcha@me.com>
Date:   Mon Sep 30 11:56:26 2019 -0700

    travis-ci: bumped the NGINX core to 1.17.4.

diff --git a/.travis.yml b/.travis.yml
index feb3e9c..8ff8dc3 100644
--- a/.travis.yml
+++ b/.travis.yml
@@ -40,7 +40,7 @@ env:
     - TEST_NGINX_SLEEP=0.006
   matrix:
     - NGINX_VERSION=1.11.2
-    - NGINX_VERSION=1.17.1
+    - NGINX_VERSION=1.17.4
 
 services:
  - mysql

commit 59e5ab993d9f88c55189b1412de653dcad55dffc
Author: Thibault Charbonnier <thibaultcha@me.com>
Date:   Thu Jul 11 14:42:08 2019 -0700

    travis: bumped the nginx core version to 1.17.1.

diff --git a/.travis.yml b/.travis.yml
index 5372984..feb3e9c 100644
--- a/.travis.yml
+++ b/.travis.yml
@@ -40,7 +40,7 @@ env:
     - TEST_NGINX_SLEEP=0.006
   matrix:
     - NGINX_VERSION=1.11.2
-    - NGINX_VERSION=1.15.8
+    - NGINX_VERSION=1.17.1
 
 services:
  - mysql

commit 95f317c1a4a3bcba28078c2747cd974b02dbe799
Author: Thibault Charbonnier <thibaultcha@me.com>
Date:   Thu Jul 11 14:41:51 2019 -0700

    travis: clone the lua-resty-core and lua-resty-lrucache repositories.
    
    Those are required with recent versions of ngx_lua.

diff --git a/.travis.yml b/.travis.yml
index 8dd15eb..5372984 100644
--- a/.travis.yml
+++ b/.travis.yml
@@ -55,6 +55,8 @@ install:
   - git clone https://github.com/openresty/test-nginx.git
   - git clone -b v2.1-agentzh https://github.com/openresty/luajit2.git
   - git clone https://github.com/openresty/lua-nginx-module.git ../lua-nginx-module
+  - git clone https://github.com/openresty/lua-resty-core.git ../lua-resty-core
+  - git clone https://github.com/openresty/lua-resty-lrucache.git ../lua-resty-lrucache
   - git clone https://github.com/openresty/echo-nginx-module.git ../echo-nginx-module
   - git clone https://github.com/openresty/nginx-eval-module.git ../eval-nginx-module
   - git clone https://github.com/openresty/xss-nginx-module.git ../xss-nginx-module

commit 730f546f7378de20fb49a51506b302320d0e710e
Author: Thibault Charbonnier <thibaultcha@me.com>
Date:   Tue Jan 29 19:43:03 2019 -0800

    travis: bumped the nginx core version to 1.15.8.

diff --git a/.travis.yml b/.travis.yml
index 3bfecd1..8dd15eb 100644
--- a/.travis.yml
+++ b/.travis.yml
@@ -40,7 +40,7 @@ env:
     - TEST_NGINX_SLEEP=0.006
   matrix:
     - NGINX_VERSION=1.11.2
-    - NGINX_VERSION=1.13.6
+    - NGINX_VERSION=1.15.8
 
 services:
  - mysql

commit 6b10a63f53e34c3e4566e8b6b7cc9e89daf3085f
Author: Yichun Zhang (agentzh) <agentzh@gmail.com>
Date:   Sat Jan 20 16:50:29 2018 -0800

    style: fixed minor coding style issues found by ngx-releng.

diff --git a/src/ngx_http_rds_json_filter_module.c b/src/ngx_http_rds_json_filter_module.c
index 1a26583..8954abc 100644
--- a/src/ngx_http_rds_json_filter_module.c
+++ b/src/ngx_http_rds_json_filter_module.c
@@ -535,8 +535,7 @@ ngx_http_rds_json_ret(ngx_conf_t *cf, ngx_command_t *cmd, void *conf)
 
 done:
 
-    clcf = ngx_http_conf_get_module_loc_conf(cf,
-            ngx_http_core_module);
+    clcf = ngx_http_conf_get_module_loc_conf(cf, ngx_http_core_module);
     if (clcf == NULL) {
         return NGX_CONF_ERROR;
     }
diff --git a/src/ngx_http_rds_json_handler.c b/src/ngx_http_rds_json_handler.c
index 756e007..28f53d4 100644
--- a/src/ngx_http_rds_json_handler.c
+++ b/src/ngx_http_rds_json_handler.c
@@ -24,8 +24,7 @@ ngx_http_rds_json_ret_handler(ngx_http_request_t *r)
 
     dd("entered ret handler");
 
-    conf = ngx_http_get_module_loc_conf(r,
-            ngx_http_rds_json_filter_module);
+    conf = ngx_http_get_module_loc_conf(r, ngx_http_rds_json_filter_module);
 
     /* evaluate the final value of conf->errstr */
 
@@ -43,8 +42,8 @@ ngx_http_rds_json_ret_handler(ngx_http_request_t *r)
         ;
 
     if (errstr.len) {
-        escape = ngx_http_rds_json_escape_json_str(NULL,
-                errstr.data, errstr.len);
+        escape = ngx_http_rds_json_escape_json_str(NULL, errstr.data,
+                                                   errstr.len);
 
         len += sizeof(",") - 1
              + conf->errstr_key.len
@@ -58,6 +57,7 @@ ngx_http_rds_json_ret_handler(ngx_http_request_t *r)
 
     if (conf->success.len) {
         len += conf->success.len + sizeof(":,") - 1;
+
         if (ngx_atoi(conf->errcode.data, conf->errcode.len) == 0) {
             len += sizeof("true") - 1;
 
@@ -68,15 +68,15 @@ ngx_http_rds_json_ret_handler(ngx_http_request_t *r)
 
     if (conf->user_props) {
         values = ngx_pnalloc(r->pool,
-                    conf->user_props->nelts * (sizeof(ngx_str_t) +
-                    sizeof(uintptr_t)));
+                             conf->user_props->nelts
+                             * (sizeof(ngx_str_t) + sizeof(uintptr_t)));
 
         if (values == NULL) {
             return NGX_ERROR;
         }
 
         escapes = (uintptr_t *) ((u_char *) values +
-                  conf->user_props->nelts * sizeof(ngx_str_t));
+                                 conf->user_props->nelts * sizeof(ngx_str_t));
 
         prop = conf->user_props->elts;
         for (i = 0; i < conf->user_props->nelts; i++) {
@@ -87,7 +87,7 @@ ngx_http_rds_json_ret_handler(ngx_http_request_t *r)
             }
 
             escapes[i] = ngx_http_rds_json_escape_json_str(NULL, values[i].data,
-                values[i].len);
+                                                           values[i].len);
 
             len += sizeof(":\"\",") - 1 + prop[i].key.len + values[i].len
                   + escapes[i];
@@ -124,8 +124,8 @@ ngx_http_rds_json_ret_handler(ngx_http_request_t *r)
 
     if (errstr.len) {
         *b->last++ = ',';
-        b->last = ngx_copy(b->last,
-                conf->errstr_key.data, conf->errstr_key.len);
+        b->last = ngx_copy(b->last, conf->errstr_key.data,
+                           conf->errstr_key.len);
         *b->last++ = ':';
         *b->last++ = '"';
 
@@ -174,7 +174,7 @@ ngx_http_rds_json_ret_handler(ngx_http_request_t *r)
 
     if (b->last != b->end) {
         ngx_log_error(NGX_LOG_ERR, r->connection->log, 0,
-                "rds_json: rds_json_ret: buffer error");
+                      "rds_json: rds_json_ret: buffer error");
 
         return NGX_ERROR;
     }
diff --git a/src/ngx_http_rds_json_output.c b/src/ngx_http_rds_json_output.c
index f266808..6f85904 100644
--- a/src/ngx_http_rds_json_output.c
+++ b/src/ngx_http_rds_json_output.c
@@ -152,15 +152,15 @@ ngx_http_rds_json_output_header(ngx_http_request_t *r,
 
     if (conf->user_props) {
         values = ngx_pnalloc(r->pool,
-                             conf->user_props->nelts * (sizeof(ngx_str_t)
-                             + sizeof(uintptr_t)));
+                             conf->user_props->nelts
+                             * (sizeof(ngx_str_t) + sizeof(uintptr_t)));
 
         if (values == NULL) {
             return NGX_ERROR;
         }
 
         escapes = (uintptr_t *) ((u_char *) values
-                  + conf->user_props->nelts * sizeof(ngx_str_t));
+                                 + conf->user_props->nelts * sizeof(ngx_str_t));
 
         prop = conf->user_props->elts;
         for (i = 0; i < conf->user_props->nelts; i++) {
@@ -327,15 +327,16 @@ ngx_http_rds_json_output_props(ngx_http_request_t *r,
 
     if (conf->user_props) {
         values = ngx_pnalloc(r->pool,
-                             conf->user_props->nelts * (sizeof(ngx_str_t)
-                             + sizeof(uintptr_t)));
+                             conf->user_props->nelts
+                             * (sizeof(ngx_str_t) + sizeof(uintptr_t)));
 
         if (values == NULL) {
             return NGX_ERROR;
         }
 
         escapes = (uintptr_t *) ((u_char *) values
-                  + conf->user_props->nelts * sizeof(ngx_str_t));
+                                 + conf->user_props->nelts
+                                 * sizeof(ngx_str_t));
 
         prop = conf->user_props->elts;
         for (i = 0; i < conf->user_props->nelts; i++) {
@@ -873,14 +874,14 @@ ngx_http_rds_json_output_more_field_data(ngx_http_request_t *r,
 
         } else {
             dd("more field data: string value escape non-zero: %d",
-                (int) escape);
+               (int) escape);
 
 #if DDEBUG
                 p = last;
 #endif
 
             last = (u_char *) ngx_http_rds_json_escape_json_str(last,
-                    data, len);
+                                                                data, len);
 
 #if DDEBUG
             dd("escaped value \"%.*s\" (len %d, escape %d, escape2 %d)",
diff --git a/src/ngx_http_rds_json_util.c b/src/ngx_http_rds_json_util.c
index 8a7616b..d0080e6 100644
--- a/src/ngx_http_rds_json_util.c
+++ b/src/ngx_http_rds_json_util.c
@@ -145,7 +145,8 @@ ngx_http_rds_json_discard_bufs(ngx_pool_t *pool, ngx_chain_t *in)
     for (cl = in; cl; cl = cl->next) {
 #if 0
         if (cl->buf->temporary
-                && ngx_buf_size(cl->buf) > 0) {
+            && ngx_buf_size(cl->buf) > 0)
+        {
             ngx_pfree(pool, cl->buf->start);
         }
 #endif
------ diff log end --------
** Summary: check here https://github.com/openresty/rds-json-nginx-module
===================== END rds-json-nginx-modul =================================
Pass		: rds-csv-nginx-module: latest!
===================== END rds-csv-nginx-module =================================
New Commit	: headers-more-nginx-module: 10 commits since 'v0.33'
------ diff log --------
commit af8160e0174c7187818a3396559486200af0f663
Author: Yichun Zhang (agentzh) <yichun@openresty.com>
Date:   Wed Sep 2 15:00:37 2020 -0700

    doc: we now work with nginx 1.17.x (up to 1.17.8 at least).

diff --git a/README.markdown b/README.markdown
index 6459b60..018a14b 100644
--- a/README.markdown
+++ b/README.markdown
@@ -347,13 +347,13 @@ Installation
 ============
 
 Grab the nginx source code from [nginx.org](http://nginx.org/), for example,
-the version 1.13.6 (see [nginx compatibility](#compatibility)), and then build the source with this module:
+the version 1.17.8 (see [nginx compatibility](#compatibility)), and then build the source with this module:
 
 ```bash
 
- wget 'http://nginx.org/download/nginx-1.13.6.tar.gz'
- tar -xzvf nginx-1.13.6.tar.gz
- cd nginx-1.13.6/
+ wget 'http://nginx.org/download/nginx-1.17.8.tar.gz'
+ tar -xzvf nginx-1.17.8.tar.gz
+ cd nginx-1.17.8/
 
  # Here we assume you would install you nginx under /opt/nginx/.
  ./configure --prefix=/opt/nginx \
@@ -382,6 +382,7 @@ Compatibility
 
 The following versions of Nginx should work with this module:
 
+* **1.17.x**                      (last tested: 1.17.8)
 * **1.16.x**
 * **1.15.x**                      (last tested: 1.15.8)
 * **1.14.x**

commit 743a4bb1a253325d17a4f4ce8ee61ea0d8e0cc19
Author: Thibault Charbonnier <thibaultcha@me.com>
Date:   Wed Jan 22 15:06:11 2020 -0800

    travis-ci: bumped the NGINX core to 1.17.8.

diff --git a/.travis.yml b/.travis.yml
index a10ba54..9cae8ad 100644
--- a/.travis.yml
+++ b/.travis.yml
@@ -23,7 +23,7 @@ env:
     - LD_LIBRARY_PATH=$LUAJIT_LIB:$LD_LIBRARY_PATH
   matrix:
     - NGINX_VERSION=1.9.15
-    - NGINX_VERSION=1.17.4
+    - NGINX_VERSION=1.17.8
 
 before_install:
   - sudo cpanm -v --notest Test::Nginx > build.log 2>&1 || (cat build.log && exit 1)

commit 552e216a0da95c685d9db4f43e209c3f2a803e49
Author: Thibault Charbonnier <thibaultcha@me.com>
Date:   Mon Sep 30 12:09:24 2019 -0700

    travis-ci: switched to OpenResty's fork of LuaJIT.
    
    The previously installed LuaJIT version did not have FFI enabled which
    made compilation fail.

diff --git a/.travis.yml b/.travis.yml
index eb772ee..a10ba54 100644
--- a/.travis.yml
+++ b/.travis.yml
@@ -14,12 +14,13 @@ addons:
     packages:
     - axel
     - cpanminus
-    - libluajit-5.1-dev
 
 env:
   global:
-    - LUAJIT_LIB=/usr/lib64/libluajit-5.1.so
-    - LUAJIT_INC=/usr/include/luajit-2.0
+    - LUAJIT_PREFIX=/opt/luajit21
+    - LUAJIT_LIB=$LUAJIT_PREFIX/lib
+    - LUAJIT_INC=$LUAJIT_PREFIX/include/luajit-2.1
+    - LD_LIBRARY_PATH=$LUAJIT_LIB:$LD_LIBRARY_PATH
   matrix:
     - NGINX_VERSION=1.9.15
     - NGINX_VERSION=1.17.4
@@ -36,6 +37,13 @@ install:
   - git clone https://github.com/openresty/openresty.git ../openresty
   - git clone https://github.com/openresty/no-pool-nginx.git ../no-pool-nginx
   - git clone https://github.com/openresty/nginx-devel-utils.git
+  - git clone -b v2.1-agentzh https://github.com/openresty/luajit2.git luajit2
+
+before_script:
+  - cd luajit2/
+  - make -j$JOBS CCDEBUG=-g Q= PREFIX=$LUAJIT_PREFIX CC=$CC XCFLAGS='-DLUA_USE_APICHECK -DLUA_USE_ASSERT -msse4.2' > build.log 2>&1 || (cat build.log && exit 1)
+  - sudo make install PREFIX=$LUAJIT_PREFIX > build.log 2>&1 || (cat build.log && exit 1)
+  - cd ..
 
 script:
   - export PATH=$PWD/work/nginx/sbin:$PWD/nginx-devel-utils:$PATH

commit 7255ae95d97b9ac6c001b2a084e55235a3d6ca0d
Author: Thibault Charbonnier <thibaultcha@me.com>
Date:   Mon Sep 30 11:52:28 2019 -0700

    travis-ci: bumped the NGINX core to 1.17.4.

diff --git a/.travis.yml b/.travis.yml
index 528e931..eb772ee 100644
--- a/.travis.yml
+++ b/.travis.yml
@@ -22,7 +22,7 @@ env:
     - LUAJIT_INC=/usr/include/luajit-2.0
   matrix:
     - NGINX_VERSION=1.9.15
-    - NGINX_VERSION=1.17.1
+    - NGINX_VERSION=1.17.4
 
 before_install:
   - sudo cpanm -v --notest Test::Nginx > build.log 2>&1 || (cat build.log && exit 1)

commit 380e994d31284f6f450f9b00f464782467ee567c
Author: Yichun Zhang (agentzh) <yichun@openresty.com>
Date:   Thu Aug 1 11:13:45 2019 -0700

    doc: updated the nginx compatibility list.

diff --git a/README.markdown b/README.markdown
index 452ef1f..6459b60 100644
--- a/README.markdown
+++ b/README.markdown
@@ -382,6 +382,9 @@ Compatibility
 
 The following versions of Nginx should work with this module:
 
+* **1.16.x**
+* **1.15.x**                      (last tested: 1.15.8)
+* **1.14.x**
 * **1.13.x**                      (last tested: 1.13.6)
 * **1.12.x**
 * **1.11.x**                      (last tested: 1.11.2)

commit ab40f3446405b23b42f19242fc3a603886e5c6fd
Author: Thibault Charbonnier <thibaultcha@me.com>
Date:   Thu Jul 11 13:55:49 2019 -0700

    travis: bumped the nginx core version to 1.17.1.

diff --git a/.travis.yml b/.travis.yml
index c6d9604..528e931 100644
--- a/.travis.yml
+++ b/.travis.yml
@@ -22,7 +22,7 @@ env:
     - LUAJIT_INC=/usr/include/luajit-2.0
   matrix:
     - NGINX_VERSION=1.9.15
-    - NGINX_VERSION=1.15.8
+    - NGINX_VERSION=1.17.1
 
 before_install:
   - sudo cpanm -v --notest Test::Nginx > build.log 2>&1 || (cat build.log && exit 1)

commit d3a920ad343404ef8c52ccc8d6295425d0611c80
Author: Thibault Charbonnier <thibaultcha@me.com>
Date:   Thu Jul 11 14:09:31 2019 -0700

    travis: clone the lua-resty-core and lua-resty-lrucache repositories.
    
    Those are required with recent versions of ngx_lua.

diff --git a/.travis.yml b/.travis.yml
index 81e85ec..c6d9604 100644
--- a/.travis.yml
+++ b/.travis.yml
@@ -30,6 +30,8 @@ before_install:
 install:
   - git clone https://github.com/openresty/echo-nginx-module.git ../echo-nginx-module
   - git clone https://github.com/openresty/lua-nginx-module.git ../lua-nginx-module
+  - git clone https://github.com/openresty/lua-resty-core.git ../lua-resty-core
+  - git clone https://github.com/openresty/lua-resty-lrucache.git ../lua-resty-lrucache
   - git clone https://github.com/openresty/nginx-eval-module.git ../eval-nginx-module
   - git clone https://github.com/openresty/openresty.git ../openresty
   - git clone https://github.com/openresty/no-pool-nginx.git ../no-pool-nginx

commit 085fbbc28fe5d7bd61bc7cd8d1355e73abc296ea
Author: Thibault Charbonnier <thibaultcha@me.com>
Date:   Tue Jan 29 19:38:30 2019 -0800

    travis: bumped the nginx core version to 1.15.8.

diff --git a/.travis.yml b/.travis.yml
index d8c39b0..81e85ec 100644
--- a/.travis.yml
+++ b/.travis.yml
@@ -22,7 +22,7 @@ env:
     - LUAJIT_INC=/usr/include/luajit-2.0
   matrix:
     - NGINX_VERSION=1.9.15
-    - NGINX_VERSION=1.11.2
+    - NGINX_VERSION=1.15.8
 
 before_install:
   - sudo cpanm -v --notest Test::Nginx > build.log 2>&1 || (cat build.log && exit 1)

commit f1fadb9e29a52e950206c452279b6538e2c58b44
Author: Thibault Charbonnier <thibaultcha@me.com>
Date:   Tue Jan 29 19:49:33 2019 -0800

    tests: t/input-cookie.t: fixed a failing test case with our newest version of ngx_http_lua's LuaJIT alert log.

diff --git a/t/input-cookie.t b/t/input-cookie.t
index 68db4d0..3e5257b 100644
--- a/t/input-cookie.t
+++ b/t/input-cookie.t
@@ -178,6 +178,6 @@ GeT / HTTP/1.1
 --- response_body
 ok
 --- no_error_log
+[warn]
 [error]
-[alert]
 --- no_check_leak

commit a9f7c7e86cc7441d04e2f11f01c2e3a9c4b0301d
Author: Yichun Zhang (agentzh) <agentzh@gmail.com>
Date:   Fri Mar 9 12:33:20 2018 -0800

    tests: added a passing test for overriding Cache-Control header created by proxy module.

diff --git a/t/bug.t b/t/bug.t
index 88cfa09..2339401 100644
--- a/t/bug.t
+++ b/t/bug.t
@@ -4,7 +4,7 @@ use Test::Nginx::Socket; # 'no_plan';
 
 repeat_each(2);
 
-plan tests => 53 * repeat_each();
+plan tests => 56 * repeat_each();
 
 no_diff;
 
@@ -391,3 +391,26 @@ GET x HTTP/1.1
 --- response_body
 ok
 --- no_check_leak
+
+
+
+=== TEST 21: override Cache-Control header sent by proxy module
+--- config
+    location = /back {
+        content_by_lua_block {
+            ngx.header['Cache-Control'] = 'max-age=0, no-cache'
+            ngx.send_headers()
+            ngx.say("Cache-Control: ", ngx.var.sent_http_cache_control)
+        }
+    }
+
+    location = /t {
+        more_set_headers "Cache-Control: max-age=1800";
+        proxy_pass http://127.0.0.1:$server_port/back;
+    }
+--- request
+    GET /t
+--- response_headers
+Cache-Control: max-age=1800
+--- response_body
+Cache-Control: max-age=0, no-cache
------ diff log end --------
** Summary: check here https://github.com/openresty/headers-more-nginx-module
===================== END headers-more-nginx-m =================================
New Commit	: drizzle-nginx-module: 7 commits since 'v0.1.11'
------ diff log --------
commit e93542ed6a965eb5dacfcafc3f793ff04fb5b6ba
Author: Thibault Charbonnier <thibaultcha@me.com>
Date:   Wed Jan 22 15:04:58 2020 -0800

    travis-ci: bumped the NGINX core to 1.17.8.

diff --git a/.travis.yml b/.travis.yml
index 27a3fff..2e298c0 100644
--- a/.travis.yml
+++ b/.travis.yml
@@ -43,7 +43,7 @@ env:
     - TEST_NGINX_SLEEP=0.006
   matrix:
     - NGINX_VERSION=1.9.15
-    - NGINX_VERSION=1.17.4
+    - NGINX_VERSION=1.17.8
 
 install:
   - if [ ! -f download-cache/drizzle7-2011.07.21.tar.gz ]; then wget -P download-cache/ http://openresty.org/download/drizzle7-2011.07.21.tar.gz; fi

commit 0092fb57c181b333a8fc473804af83595a3b6294
Author: Thibault Charbonnier <thibaultcha@me.com>
Date:   Mon Sep 30 11:02:35 2019 -0700

    travis-ci: bumped the NGINX core to 1.17.4.

diff --git a/.travis.yml b/.travis.yml
index 4db010b..27a3fff 100644
--- a/.travis.yml
+++ b/.travis.yml
@@ -43,7 +43,7 @@ env:
     - TEST_NGINX_SLEEP=0.006
   matrix:
     - NGINX_VERSION=1.9.15
-    - NGINX_VERSION=1.17.1
+    - NGINX_VERSION=1.17.4
 
 install:
   - if [ ! -f download-cache/drizzle7-2011.07.21.tar.gz ]; then wget -P download-cache/ http://openresty.org/download/drizzle7-2011.07.21.tar.gz; fi

commit e9d6b37f983117a7289fded5f20e272b012ec39d
Author: Yichun Zhang (agentzh) <yichun@openresty.com>
Date:   Thu Aug 1 11:16:05 2019 -0700

    updated docs to reflect recent changes.

diff --git a/README.markdown b/README.markdown
index 8362d09..1f71855 100644
--- a/README.markdown
+++ b/README.markdown
@@ -62,7 +62,7 @@ This module is already production ready.
 Version
 =======
 
-This document describes ngx_drizzle [v0.1.10](https://github.com/openresty/drizzle-nginx-module/tags) released on 19 April 2018.
+This document describes ngx_drizzle [v0.1.11](https://github.com/openresty/drizzle-nginx-module/tags) released on 19 April 2018.
 
 Synopsis
 ========
@@ -725,6 +725,9 @@ This module has been tested on Linux and Mac OS X. Reports on other POSIX-compli
 
 The following versions of Nginx should work with this module:
 
+* 1.16.x
+* 1.15.x    (last tested: 1.15.8)
+* 1.14.x
 * 1.13.x    (last tested: 1.13.6)
 * 1.12.x
 * 1.11.x    (last tested: 1.11.2)

commit 350b3567437e49f94e0319c15be174687da7f701
Author: Yichun Zhang (agentzh) <yichun@openresty.com>
Date:   Thu Aug 1 11:15:49 2019 -0700

    api: bumped version to 0.1.11.

diff --git a/src/ngx_http_drizzle_module.h b/src/ngx_http_drizzle_module.h
index ce13a2c..1e46f85 100644
--- a/src/ngx_http_drizzle_module.h
+++ b/src/ngx_http_drizzle_module.h
@@ -35,8 +35,8 @@
 #define NGX_HTTP_GONE  410
 #endif
 
-#define ngx_http_drizzle_module_version  1009
-#define ngx_http_drizzle_module_version_string  "0.1.7"
+#define ngx_http_drizzle_module_version  1011
+#define ngx_http_drizzle_module_version_string  "0.1.11"
 
 
 extern ngx_module_t ngx_http_drizzle_module;

commit 1caac60e4520b80f0e7a67e484ee362df7e34fb2
Author: Thibault Charbonnier <thibaultcha@me.com>
Date:   Thu Jul 11 15:23:45 2019 -0700

    travis: bumped the nginx core version to 1.17.1.

diff --git a/.travis.yml b/.travis.yml
index 6d18d5a..4db010b 100644
--- a/.travis.yml
+++ b/.travis.yml
@@ -43,7 +43,7 @@ env:
     - TEST_NGINX_SLEEP=0.006
   matrix:
     - NGINX_VERSION=1.9.15
-    - NGINX_VERSION=1.15.8
+    - NGINX_VERSION=1.17.1
 
 install:
   - if [ ! -f download-cache/drizzle7-2011.07.21.tar.gz ]; then wget -P download-cache/ http://openresty.org/download/drizzle7-2011.07.21.tar.gz; fi

commit 777705c0bd48914a568c9b0d24cee92a7bf2f00b
Author: Thibault Charbonnier <thibaultcha@me.com>
Date:   Thu Jul 11 15:23:28 2019 -0700

    travis: clone the lua-resty-core and lua-resty-lrucache repositories.
    
    Those are required with recent versions of ngx_lua.

diff --git a/.travis.yml b/.travis.yml
index 6226160..6d18d5a 100644
--- a/.travis.yml
+++ b/.travis.yml
@@ -54,6 +54,8 @@ install:
   - git clone https://github.com/openresty/test-nginx.git
   - git clone -b v2.1-agentzh https://github.com/openresty/luajit2.git
   - git clone https://github.com/openresty/lua-nginx-module.git ../lua-nginx-module
+  - git clone https://github.com/openresty/lua-resty-core.git ../lua-resty-core
+  - git clone https://github.com/openresty/lua-resty-lrucache.git ../lua-resty-lrucache
   - git clone https://github.com/openresty/nginx-eval-module.git ../eval-nginx-module
   - git clone https://github.com/openresty/echo-nginx-module.git ../echo-nginx-module
   - git clone https://github.com/openresty/set-misc-nginx-module.git ../set-misc-nginx-module

commit 7a80e7261e81f8128dcfa214656624e749c60c11
Author: Thibault Charbonnier <thibaultcha@me.com>
Date:   Tue Jan 29 19:45:32 2019 -0800

    travis: bumped the nginx core version to 1.15.8.

diff --git a/.travis.yml b/.travis.yml
index bfba75f..6226160 100644
--- a/.travis.yml
+++ b/.travis.yml
@@ -43,7 +43,7 @@ env:
     - TEST_NGINX_SLEEP=0.006
   matrix:
     - NGINX_VERSION=1.9.15
-    - NGINX_VERSION=1.11.2
+    - NGINX_VERSION=1.15.8
 
 install:
   - if [ ! -f download-cache/drizzle7-2011.07.21.tar.gz ]; then wget -P download-cache/ http://openresty.org/download/drizzle7-2011.07.21.tar.gz; fi
------ diff log end --------
** Summary: check here https://github.com/openresty/drizzle-nginx-module
===================== END drizzle-nginx-module =================================
New Commit	: lua-nginx-module: 32 commits since 'v0.10.17'
------ diff log --------
commit 0bd1a9d13935bef06bcd126c5064bd16d9dfeee8
Author: jiahao <wangjiahao@openresty.com>
Date:   Tue Sep 29 15:16:04 2020 +0800

    travis: use the 1.19.2.x branch of no-pool-nginx.

diff --git a/.travis.yml b/.travis.yml
index aec5d2e5..c3d82bb2 100644
--- a/.travis.yml
+++ b/.travis.yml
@@ -67,7 +67,7 @@ install:
   - if [ ! -f download-cache/openssl-$OPENSSL_VER.tar.gz ]; then wget -P download-cache https://www.openssl.org/source/openssl-$OPENSSL_VER.tar.gz || wget -P download-cache https://www.openssl.org/source/old/${OPENSSL_VER//[a-z]/}/openssl-$OPENSSL_VER.tar.gz; fi
   - git clone https://github.com/openresty/test-nginx.git
   - git clone https://github.com/openresty/openresty.git ../openresty
-  - git clone https://github.com/openresty/no-pool-nginx.git ../no-pool-nginx
+  - git clone -b 1.19.2.x https://github.com/xiaocang/no-pool-nginx.git ../no-pool-nginx
   - git clone https://github.com/openresty/openresty-devel-utils.git
   - git clone https://github.com/openresty/mockeagain.git
   - git clone https://github.com/openresty/lua-cjson.git lua-cjson

commit ebc3d0ae1ebd6774a0f06ceccc5254d98a490231
Author: jiahao <wangjiahao@openresty.com>
Date:   Tue Sep 29 13:28:00 2020 +0800

    travis-ci: bumped the NGINX core to 1.19.2.

diff --git a/.travis.yml b/.travis.yml
index bf433bef..aec5d2e5 100644
--- a/.travis.yml
+++ b/.travis.yml
@@ -47,9 +47,9 @@ env:
     - DRIZZLE_VER=2011.07.21
     - TEST_NGINX_SLEEP=0.006
   jobs:
-    - NGINX_VERSION=1.17.8 OPENSSL_VER=1.0.2u OPENSSL_PATCH_VER=1.0.2h
-    - NGINX_VERSION=1.17.8 OPENSSL_VER=1.1.0l OPENSSL_PATCH_VER=1.1.0d
-    - NGINX_VERSION=1.17.8 OPENSSL_VER=1.1.1g OPENSSL_PATCH_VER=1.1.1f
+    - NGINX_VERSION=1.19.2 OPENSSL_VER=1.0.2u OPENSSL_PATCH_VER=1.0.2h
+    - NGINX_VERSION=1.19.2 OPENSSL_VER=1.1.0l OPENSSL_PATCH_VER=1.1.0d
+    - NGINX_VERSION=1.19.2 OPENSSL_VER=1.1.1g OPENSSL_PATCH_VER=1.1.1f
 
 services:
  - memcached

commit db1999816e0a71ed67506776818fdc13335a614f
Author: Alexander Drozdov <al.drozdov@gmail.com>
Date:   Mon Sep 28 11:02:55 2020 +0300

    bugfix: the format in argerror messages are incorrect (#1787)
    
    lua_pushfstring() doesn't accept '%i' format. We should use '%d'
    instead.

diff --git a/src/ngx_http_lua_socket_tcp.c b/src/ngx_http_lua_socket_tcp.c
index 9ff3f575..4df69ea0 100644
--- a/src/ngx_http_lua_socket_tcp.c
+++ b/src/ngx_http_lua_socket_tcp.c
@@ -901,7 +901,7 @@ ngx_http_lua_socket_tcp_connect(lua_State *L)
             pool_size = (ngx_int_t) lua_tointeger(L, -1);
 
             if (pool_size <= 0) {
-                msg = lua_pushfstring(L, "bad \"pool_size\" option value: %i",
+                msg = lua_pushfstring(L, "bad \"pool_size\" option value: %d",
                                       pool_size);
                 return luaL_argerror(L, n, msg);
             }
@@ -920,7 +920,7 @@ ngx_http_lua_socket_tcp_connect(lua_State *L)
             backlog = (ngx_int_t) lua_tointeger(L, -1);
 
             if (backlog < 0) {
-                msg = lua_pushfstring(L, "bad \"backlog\" option value: %i",
+                msg = lua_pushfstring(L, "bad \"backlog\" option value: %d",
                                       backlog);
                 return luaL_argerror(L, n, msg);
             }
@@ -5286,7 +5286,7 @@ ngx_http_lua_socket_tcp_setkeepalive(lua_State *L)
         }
 
         if (pool_size <= 0) {
-            msg = lua_pushfstring(L, "bad \"pool_size\" option value: %i",
+            msg = lua_pushfstring(L, "bad \"pool_size\" option value: %d",
                                   pool_size);
             return luaL_argerror(L, n, msg);
         }

commit 97b91899c996a459c88d313a0151663369525627
Author: Datong Sun <datong.sun@konghq.com>
Date:   Fri Sep 18 18:26:28 2020 +0800

    bugfix: when recreating balancer buffer, remove existing buffers first (#1770)

diff --git a/src/ngx_http_lua_balancer.c b/src/ngx_http_lua_balancer.c
index eff9dc13..e4ac57a3 100644
--- a/src/ngx_http_lua_balancer.c
+++ b/src/ngx_http_lua_balancer.c
@@ -788,6 +788,13 @@ ngx_http_lua_ffi_balancer_recreate_request(ngx_http_request_t *r,
 
     *err = NULL;
 
+    if (u->request_bufs != NULL && u->request_bufs != r->request_body->bufs) {
+        /* u->request_bufs already contains a valid request buffer
+         * remove it from chain first
+         */
+        u->request_bufs = u->request_bufs->next;
+    }
+
     return u->create_request(r);
 }
 
diff --git a/t/138-balancer.t b/t/138-balancer.t
index 151db7be..238dea8f 100644
--- a/t/138-balancer.t
+++ b/t/138-balancer.t
@@ -524,3 +524,43 @@ http next upstream, 2
 --- no_error_log
 failed to set more tries: reduced tries due to limit
 [alert]
+
+
+
+=== TEST 17: recreate_request buffer bugfix
+--- http_config
+    lua_package_path "../lua-resty-core/lib/?.lua;;";
+
+    server {
+        listen 127.0.0.1:8888;
+
+        location / {
+            return 200 "it works";
+        }
+    }
+
+    upstream foo {
+        server 127.0.0.1:8888 max_fails=0;
+        server 127.0.0.1:8889 max_fails=0 weight=9999;
+
+        balancer_by_lua_block {
+            local bal = require "ngx.balancer"
+
+            assert(bal.recreate_request())
+        }
+    }
+
+--- config
+    location = /t {
+        proxy_http_version 1.1;
+        proxy_set_header Connection "";
+        proxy_pass http://foo;
+    }
+--- request
+GET /t
+--- error_code: 200
+--- error_log
+connect() failed (111: Connection refused) while connecting to upstream
+--- no_error_log
+upstream sent more data than specified in "Content-Length" header while reading upstream
+[alert]

commit 172c2145e170aecc6a5bc1e1e06456b38201d986
Author: Yichun Zhang (agentzh) <agentzh@gmail.com>
Date:   Tue Sep 1 15:08:20 2020 -0700

    doc: fixed broken links.

diff --git a/README.markdown b/README.markdown
index 942cca61..dd737310 100644
--- a/README.markdown
+++ b/README.markdown
@@ -328,9 +328,9 @@ Build the source with this module:
 
 ```bash
 
- wget 'https://nginx.org/download/nginx-1.13.6.tar.gz'
- tar -xzvf nginx-1.13.6.tar.gz
- cd nginx-1.13.6/
+ wget 'https://openresty.org/download/nginx-1.17.8.tar.gz'
+ tar -xzvf nginx-1.17.8.tar.gz
+ cd nginx-1.17.8/
 
  # tell nginx's build system where to find LuaJIT 2.0:
  export LUAJIT_LIB=/path/to/luajit/lib
@@ -1446,8 +1446,8 @@ This directive was first introduced in the `v0.5.5` release.
 
 See also the following blog posts for more details on OpenResty and Nginx's shared memory zones:
 
-* [How OpenResty and Nginx Shared Memory Zones Consume RAM](https://blog.openresty.com/en/how-nginx-shm-consume-ram/src=gh_ngxlua)
-* [Memory Fragmentation in OpenResty and Nginx's Shared Memory Zones](https://blog.openresty.com/en/nginx-shm-frag/src=gh_ngxlua)
+* [How OpenResty and Nginx Shared Memory Zones Consume RAM](https://blog.openresty.com/en/how-nginx-shm-consume-ram/?src=gh_ngxlua)
+* [Memory Fragmentation in OpenResty and Nginx's Shared Memory Zones](https://blog.openresty.com/en/nginx-shm-frag/?src=gh_ngxlua)
 
 [Back to TOC](#directives)
 
diff --git a/doc/HttpLuaModule.wiki b/doc/HttpLuaModule.wiki
index d1bca2c0..3aa7b36b 100644
--- a/doc/HttpLuaModule.wiki
+++ b/doc/HttpLuaModule.wiki
@@ -262,9 +262,9 @@ Alternatively, ngx_lua can be manually compiled into Nginx:
 Build the source with this module:
 
 <geshi lang="bash">
-    wget 'https://nginx.org/download/nginx-1.13.6.tar.gz'
-    tar -xzvf nginx-1.13.6.tar.gz
-    cd nginx-1.13.6/
+    wget 'https://openresty.org/download/nginx-1.17.8.tar.gz'
+    tar -xzvf nginx-1.17.8.tar.gz
+    cd nginx-1.17.8/
 
     # tell nginx's build system where to find LuaJIT 2.0:
     export LUAJIT_LIB=/path/to/luajit/lib
@@ -1167,8 +1167,8 @@ This directive was first introduced in the <code>v0.5.5</code> release.
 
 See also the following blog posts for more details on OpenResty and Nginx's shared memory zones:
 
-* [How OpenResty and Nginx Shared Memory Zones Consume RAM](https://blog.openresty.com/en/how-nginx-shm-consume-ram/src=gh_ngxlua)
-* [Memory Fragmentation in OpenResty and Nginx's Shared Memory Zones](https://blog.openresty.com/en/nginx-shm-frag/src=gh_ngxlua)
+* [How OpenResty and Nginx Shared Memory Zones Consume RAM](https://blog.openresty.com/en/how-nginx-shm-consume-ram/?src=gh_ngxlua)
+* [Memory Fragmentation in OpenResty and Nginx's Shared Memory Zones](https://blog.openresty.com/en/nginx-shm-frag/?src=gh_ngxlua)
 
 == init_by_lua_block ==
 

commit 9416eadfaa8793c7ab0e89afe917824762c19aa5
Author: Yichun Zhang (agentzh) <agentzh@gmail.com>
Date:   Tue Sep 1 14:47:32 2020 -0700

    doc: minor link tweaks.

diff --git a/README.markdown b/README.markdown
index b42576d0..942cca61 100644
--- a/README.markdown
+++ b/README.markdown
@@ -1024,10 +1024,10 @@ See Also
 
 Blog posts:
 
-* [Introduction to Lua-Land CPU Flame Graphs](https://blog.openresty.com/en/lua-cpu-flame-graph/)
-* [How OpenResty and Nginx Allocate and Manage Memory](https://blog.openresty.com/en//how-or-alloc-mem)
-* [How OpenResty and Nginx Shared Memory Zones Consume RAM](https://blog.openresty.com/en/how-nginx-shm-consume-ram/)
-* [Memory Fragmentation in OpenResty and Nginx's Shared Memory Zones](https://blog.openresty.com/en/nginx-shm-frag/)
+* [Introduction to Lua-Land CPU Flame Graphs](https://blog.openresty.com/en/lua-cpu-flame-graph/?src=gh_ngxlua)
+* [How OpenResty and Nginx Allocate and Manage Memory](https://blog.openresty.com/en//how-or-alloc-mem?src=gh_ngxlua)
+* [How OpenResty and Nginx Shared Memory Zones Consume RAM](https://blog.openresty.com/en/how-nginx-shm-consume-ram/?src=gh_ngxlua)
+* [Memory Fragmentation in OpenResty and Nginx's Shared Memory Zones](https://blog.openresty.com/en/nginx-shm-frag/?src=gh_ngxlua)
 
 Other related modules and libraries:
 
@@ -1446,8 +1446,8 @@ This directive was first introduced in the `v0.5.5` release.
 
 See also the following blog posts for more details on OpenResty and Nginx's shared memory zones:
 
-* [How OpenResty and Nginx Shared Memory Zones Consume RAM](https://blog.openresty.com/en/how-nginx-shm-consume-ram/)
-* [Memory Fragmentation in OpenResty and Nginx's Shared Memory Zones](https://blog.openresty.com/en/nginx-shm-frag/)
+* [How OpenResty and Nginx Shared Memory Zones Consume RAM](https://blog.openresty.com/en/how-nginx-shm-consume-ram/src=gh_ngxlua)
+* [Memory Fragmentation in OpenResty and Nginx's Shared Memory Zones](https://blog.openresty.com/en/nginx-shm-frag/src=gh_ngxlua)
 
 [Back to TOC](#directives)
 

commit b1a3b5d16abf329f1d236ecf38554f961c7b924f
Author: Yichun Zhang (agentzh) <agentzh@gmail.com>
Date:   Tue Sep 1 14:47:16 2020 -0700

    style: removed a line-trailing space found by ngx-releng.

diff --git a/src/ngx_http_lua_socket_tcp.c b/src/ngx_http_lua_socket_tcp.c
index d3690edc..9ff3f575 100644
--- a/src/ngx_http_lua_socket_tcp.c
+++ b/src/ngx_http_lua_socket_tcp.c
@@ -1010,7 +1010,7 @@ ngx_http_lua_socket_tcp_connect(lua_State *L)
         /* Ban the following parameter combination:
          * sock:connect("127.0.0.1")
          * sock:connect("127.0.0.1", nil)
-         * sock:connect("127.0.0.1", opts) 
+         * sock:connect("127.0.0.1", opts)
          * sock:connect("127.0.0.1", nil, opts) */
 
         lua_pushnil(L);

commit 2db0e82469210344f4333dde4e21432b69d42bc3
Author: Yichun Zhang (agentzh) <agentzh@gmail.com>
Date:   Tue Sep 1 14:46:32 2020 -0700

    doc: minor link tweaks.

diff --git a/doc/HttpLuaModule.wiki b/doc/HttpLuaModule.wiki
index 7f2ee763..d1bca2c0 100644
--- a/doc/HttpLuaModule.wiki
+++ b/doc/HttpLuaModule.wiki
@@ -851,10 +851,10 @@ THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND
 
 Blog posts:
 
-* [Introduction to Lua-Land CPU Flame Graphs](https://blog.openresty.com/en/lua-cpu-flame-graph/)
-* [How OpenResty and Nginx Allocate and Manage Memory](https://blog.openresty.com/en//how-or-alloc-mem)
-* [How OpenResty and Nginx Shared Memory Zones Consume RAM](https://blog.openresty.com/en/how-nginx-shm-consume-ram/)
-* [Memory Fragmentation in OpenResty and Nginx's Shared Memory Zones](https://blog.openresty.com/en/nginx-shm-frag/)
+* [Introduction to Lua-Land CPU Flame Graphs](https://blog.openresty.com/en/lua-cpu-flame-graph/?src=gh_ngxlua)
+* [How OpenResty and Nginx Allocate and Manage Memory](https://blog.openresty.com/en//how-or-alloc-mem?src=gh_ngxlua)
+* [How OpenResty and Nginx Shared Memory Zones Consume RAM](https://blog.openresty.com/en/how-nginx-shm-consume-ram/?src=gh_ngxlua)
+* [Memory Fragmentation in OpenResty and Nginx's Shared Memory Zones](https://blog.openresty.com/en/nginx-shm-frag/?src=gh_ngxlua)
 
 Other related modules and libraries:
 
@@ -1167,8 +1167,8 @@ This directive was first introduced in the <code>v0.5.5</code> release.
 
 See also the following blog posts for more details on OpenResty and Nginx's shared memory zones:
 
-* [How OpenResty and Nginx Shared Memory Zones Consume RAM](https://blog.openresty.com/en/how-nginx-shm-consume-ram/)
-* [Memory Fragmentation in OpenResty and Nginx's Shared Memory Zones](https://blog.openresty.com/en/nginx-shm-frag/)
+* [How OpenResty and Nginx Shared Memory Zones Consume RAM](https://blog.openresty.com/en/how-nginx-shm-consume-ram/src=gh_ngxlua)
+* [Memory Fragmentation in OpenResty and Nginx's Shared Memory Zones](https://blog.openresty.com/en/nginx-shm-frag/src=gh_ngxlua)
 
 == init_by_lua_block ==
 

commit b4f464a909f1d9272f2a73b8b7558a6f7e490f55
Author: Yichun Zhang (agentzh) <agentzh@gmail.com>
Date:   Tue Sep 1 14:41:21 2020 -0700

    doc: added a link to new blog post "Introduction to Lua-Land CPU Flame Graphs".

diff --git a/README.markdown b/README.markdown
index 93e899f1..b42576d0 100644
--- a/README.markdown
+++ b/README.markdown
@@ -1022,6 +1022,13 @@ THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND
 See Also
 ========
 
+Blog posts:
+
+* [Introduction to Lua-Land CPU Flame Graphs](https://blog.openresty.com/en/lua-cpu-flame-graph/)
+* [How OpenResty and Nginx Allocate and Manage Memory](https://blog.openresty.com/en//how-or-alloc-mem)
+* [How OpenResty and Nginx Shared Memory Zones Consume RAM](https://blog.openresty.com/en/how-nginx-shm-consume-ram/)
+* [Memory Fragmentation in OpenResty and Nginx's Shared Memory Zones](https://blog.openresty.com/en/nginx-shm-frag/)
+
 Other related modules and libraries:
 
 * [ngx_stream_lua_module](https://github.com/openresty/stream-lua-nginx-module#readme) for an official port of this module for the Nginx "stream" subsystem (doing generic downstream TCP communications).
@@ -1046,12 +1053,6 @@ Other related modules and libraries:
 * [The OpenResty bundle](https://openresty.org)
 * [Nginx Systemtap Toolkit](https://github.com/openresty/nginx-systemtap-toolkit)
 
-Blog posts:
-
-* [How OpenResty and Nginx Allocate and Manage Memory](https://blog.openresty.com/en//how-or-alloc-mem)
-* [How OpenResty and Nginx Shared Memory Zones Consume RAM](https://blog.openresty.com/en/how-nginx-shm-consume-ram/)
-* [Memory Fragmentation in OpenResty and Nginx's Shared Memory Zones](https://blog.openresty.com/en/nginx-shm-frag/)
-
 [Back to TOC](#table-of-contents)
 
 Directives
diff --git a/doc/HttpLuaModule.wiki b/doc/HttpLuaModule.wiki
index 15cee711..7f2ee763 100644
--- a/doc/HttpLuaModule.wiki
+++ b/doc/HttpLuaModule.wiki
@@ -849,6 +849,13 @@ THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND
 
 = See Also =
 
+Blog posts:
+
+* [Introduction to Lua-Land CPU Flame Graphs](https://blog.openresty.com/en/lua-cpu-flame-graph/)
+* [How OpenResty and Nginx Allocate and Manage Memory](https://blog.openresty.com/en//how-or-alloc-mem)
+* [How OpenResty and Nginx Shared Memory Zones Consume RAM](https://blog.openresty.com/en/how-nginx-shm-consume-ram/)
+* [Memory Fragmentation in OpenResty and Nginx's Shared Memory Zones](https://blog.openresty.com/en/nginx-shm-frag/)
+
 Other related modules and libraries:
 
 * [https://github.com/openresty/stream-lua-nginx-module#readme ngx_stream_lua_module] for an official port of this module for the Nginx "stream" subsystem (doing generic downstream TCP communications).
@@ -873,12 +880,6 @@ Other related modules and libraries:
 * [https://openresty.org The OpenResty bundle]
 * [https://github.com/openresty/nginx-systemtap-toolkit Nginx Systemtap Toolkit]
 
-Blog posts:
-
-* [How OpenResty and Nginx Allocate and Manage Memory](https://blog.openresty.com/en//how-or-alloc-mem)
-* [How OpenResty and Nginx Shared Memory Zones Consume RAM](https://blog.openresty.com/en/how-nginx-shm-consume-ram/)
-* [Memory Fragmentation in OpenResty and Nginx's Shared Memory Zones](https://blog.openresty.com/en/nginx-shm-frag/)
-
 = Directives =
 
 <!-- inline-toc -->

commit e86d41f50a6cf7b71a6ff5d61e8ad96356e39c0b
Author: 罗泽轩 <spacewanderlzx@gmail.com>
Date:   Mon Aug 31 09:12:42 2020 +0800

    bugfix: added missing SSL feature macro (#1776)

diff --git a/src/ngx_http_lua_ctx.c b/src/ngx_http_lua_ctx.c
index 1709aefa..dc840134 100644
--- a/src/ngx_http_lua_ctx.c
+++ b/src/ngx_http_lua_ctx.c
@@ -74,7 +74,9 @@ ngx_http_lua_ffi_get_ctx_ref(ngx_http_request_t *r, int *in_ssl_phase,
     int *ssl_ctx_ref)
 {
     ngx_http_lua_ctx_t              *ctx;
+#if (NGX_HTTP_SSL)
     ngx_http_lua_ssl_ctx_t          *ssl_ctx;
+#endif
 
     ctx = ngx_http_get_module_ctx(r, ngx_http_lua_module);
     if (ctx == NULL) {
@@ -90,6 +92,7 @@ ngx_http_lua_ffi_get_ctx_ref(ngx_http_request_t *r, int *in_ssl_phase,
                                     | NGX_HTTP_LUA_CONTEXT_SSL_SESS_STORE);
     *ssl_ctx_ref = LUA_NOREF;
 
+#if (NGX_HTTP_SSL)
     if (r->connection->ssl != NULL) {
         ssl_ctx = ngx_http_lua_ssl_get_ctx(r->connection->ssl->connection);
 
@@ -97,6 +100,7 @@ ngx_http_lua_ffi_get_ctx_ref(ngx_http_request_t *r, int *in_ssl_phase,
             *ssl_ctx_ref = ssl_ctx->ctx_ref;
         }
     }
+#endif
 
     return LUA_NOREF;
 }
@@ -106,15 +110,18 @@ int
 ngx_http_lua_ffi_set_ctx_ref(ngx_http_request_t *r, int ref)
 {
     ngx_pool_t                      *pool;
-    ngx_connection_t                *c;
     ngx_http_lua_ctx_t              *ctx;
+#if (NGX_HTTP_SSL)
+    ngx_connection_t                *c;
     ngx_http_lua_ssl_ctx_t          *ssl_ctx;
+#endif
 
     ctx = ngx_http_get_module_ctx(r, ngx_http_lua_module);
     if (ctx == NULL) {
         return NGX_HTTP_LUA_FFI_NO_REQ_CTX;
     }
 
+#if (NGX_HTTP_SSL)
     if (ctx->context & (NGX_HTTP_LUA_CONTEXT_SSL_CERT
                         | NGX_HTTP_LUA_CONTEXT_SSL_SESS_FETCH
                         | NGX_HTTP_LUA_CONTEXT_SSL_SESS_STORE))
@@ -132,6 +139,10 @@ ngx_http_lua_ffi_set_ctx_ref(ngx_http_request_t *r, int ref)
         pool = r->pool;
     }
 
+#else
+    pool = r->pool;
+#endif
+
     ctx->ctx_ref = ref;
 
     if (ngx_http_lua_ngx_ctx_add_cleanup(r, pool, ref) != NGX_OK) {

commit 218af5ee90adeffc8d2cd6eb82d3dc908f9f3f6d
Author: 罗泽轩 <spacewanderlzx@gmail.com>
Date:   Fri Aug 21 20:50:18 2020 +0800

    feature: shared ngx.ctx among SSL_* phases and the following phases. (#1514)

diff --git a/README.markdown b/README.markdown
index 9395d50c..93e899f1 100644
--- a/README.markdown
+++ b/README.markdown
@@ -3769,6 +3769,14 @@ Then `GET /orig` will give
 
 rather than the original `"hello"` value.
 
+Because HTTP request is created after SSL handshake, the `ngx.ctx` created
+in [ssl_certificate_by_lua*](#ssl_certificate_by_lua), [ssl_session_store_by_lua*](#ssl_session_store_by_lua) and [ssl_session_fetch_by_lua*](#ssl_session_fetch_by_lua)
+is not available in the following phases like [rewrite_by_lua*](#rewrite_by_lua).
+
+Since `dev`, the `ngx.ctx` created during a SSL handshake
+will be inherited by the requests which share the same TCP connection established by the handshake.
+Note that overwrite values in `ngx.ctx` in the http request phases (like `rewrite_by_lua*`) will only take affect in the current http request.
+
 Arbitrary data values, including Lua closures and nested tables, can be inserted into this "magic" table. It also allows the registration of custom meta methods.
 
 Overriding `ngx.ctx` with a new Lua table is also supported, for example,
diff --git a/doc/HttpLuaModule.wiki b/doc/HttpLuaModule.wiki
index 65558e9e..15cee711 100644
--- a/doc/HttpLuaModule.wiki
+++ b/doc/HttpLuaModule.wiki
@@ -3082,6 +3082,14 @@ Then <code>GET /orig</code> will give
 
 rather than the original <code>"hello"</code> value.
 
+Because HTTP request is created after SSL handshake, the <code>ngx.ctx</code> created
+in [[#ssl_certificate_by_lua|ssl_certificate_by_lua*]], [[#ssl_session_store_by_lua|ssl_session_store_by_lua*]] and [[#ssl_session_fetch_by_lua|ssl_session_fetch_by_lua*]]
+is not available in the following phases like [[#rewrite_by_lua|rewrite_by_lua*]].
+
+Since <code>dev</code>, the <code>ngx.ctx</code> created during a SSL handshake
+will be inherited by the requests which share the same TCP connection established by the handshake.
+Note that overwrite values in <code>ngx.ctx</code> in the http request phases (like `rewrite_by_lua*`) will only take affect in the current http request.
+
 Arbitrary data values, including Lua closures and nested tables, can be inserted into this "magic" table. It also allows the registration of custom meta methods.
 
 Overriding <code>ngx.ctx</code> with a new Lua table is also supported, for example,
diff --git a/src/ngx_http_lua_ctx.c b/src/ngx_http_lua_ctx.c
index 74571378..1709aefa 100644
--- a/src/ngx_http_lua_ctx.c
+++ b/src/ngx_http_lua_ctx.c
@@ -11,6 +11,7 @@
 
 
 #include "ngx_http_lua_util.h"
+#include "ngx_http_lua_ssl.h"
 #include "ngx_http_lua_ctx.h"
 
 
@@ -21,7 +22,7 @@ typedef struct {
 
 
 static ngx_int_t ngx_http_lua_ngx_ctx_add_cleanup(ngx_http_request_t *r,
-    int ref);
+    ngx_pool_t *pool, int ref);
 static void ngx_http_lua_ngx_ctx_cleanup(void *data);
 
 
@@ -29,6 +30,8 @@ int
 ngx_http_lua_ngx_set_ctx_helper(lua_State *L, ngx_http_request_t *r,
     ngx_http_lua_ctx_t *ctx, int index)
 {
+    ngx_pool_t              *pool;
+
     if (index < 0) {
         index = lua_gettop(L) + index + 1;
     }
@@ -43,7 +46,8 @@ ngx_http_lua_ngx_set_ctx_helper(lua_State *L, ngx_http_request_t *r,
         ctx->ctx_ref = luaL_ref(L, -2);
         lua_pop(L, 1);
 
-        if (ngx_http_lua_ngx_ctx_add_cleanup(r, ctx->ctx_ref) != NGX_OK) {
+        pool = r->pool;
+        if (ngx_http_lua_ngx_ctx_add_cleanup(r, pool, ctx->ctx_ref) != NGX_OK) {
             return luaL_error(L, "no memory");
         }
 
@@ -66,32 +70,71 @@ ngx_http_lua_ngx_set_ctx_helper(lua_State *L, ngx_http_request_t *r,
 
 
 int
-ngx_http_lua_ffi_get_ctx_ref(ngx_http_request_t *r)
+ngx_http_lua_ffi_get_ctx_ref(ngx_http_request_t *r, int *in_ssl_phase,
+    int *ssl_ctx_ref)
 {
-    ngx_http_lua_ctx_t  *ctx;
+    ngx_http_lua_ctx_t              *ctx;
+    ngx_http_lua_ssl_ctx_t          *ssl_ctx;
 
     ctx = ngx_http_get_module_ctx(r, ngx_http_lua_module);
     if (ctx == NULL) {
         return NGX_HTTP_LUA_FFI_NO_REQ_CTX;
     }
 
-    return ctx->ctx_ref;
+    if (ctx->ctx_ref >= 0 || in_ssl_phase == NULL) {
+        return ctx->ctx_ref;
+    }
+
+    *in_ssl_phase = ctx->context & (NGX_HTTP_LUA_CONTEXT_SSL_CERT
+                                    | NGX_HTTP_LUA_CONTEXT_SSL_SESS_FETCH
+                                    | NGX_HTTP_LUA_CONTEXT_SSL_SESS_STORE);
+    *ssl_ctx_ref = LUA_NOREF;
+
+    if (r->connection->ssl != NULL) {
+        ssl_ctx = ngx_http_lua_ssl_get_ctx(r->connection->ssl->connection);
+
+        if (ssl_ctx != NULL) {
+            *ssl_ctx_ref = ssl_ctx->ctx_ref;
+        }
+    }
+
+    return LUA_NOREF;
 }
 
 
 int
 ngx_http_lua_ffi_set_ctx_ref(ngx_http_request_t *r, int ref)
 {
-    ngx_http_lua_ctx_t  *ctx;
+    ngx_pool_t                      *pool;
+    ngx_connection_t                *c;
+    ngx_http_lua_ctx_t              *ctx;
+    ngx_http_lua_ssl_ctx_t          *ssl_ctx;
 
     ctx = ngx_http_get_module_ctx(r, ngx_http_lua_module);
     if (ctx == NULL) {
         return NGX_HTTP_LUA_FFI_NO_REQ_CTX;
     }
 
+    if (ctx->context & (NGX_HTTP_LUA_CONTEXT_SSL_CERT
+                        | NGX_HTTP_LUA_CONTEXT_SSL_SESS_FETCH
+                        | NGX_HTTP_LUA_CONTEXT_SSL_SESS_STORE))
+    {
+        ssl_ctx = ngx_http_lua_ssl_get_ctx(r->connection->ssl->connection);
+        if (ssl_ctx == NULL) {
+            return NGX_ERROR;
+        }
+
+        ssl_ctx->ctx_ref = ref;
+        c = ngx_ssl_get_connection(r->connection->ssl->connection);
+        pool = c->pool;
+
+    } else {
+        pool = r->pool;
+    }
+
     ctx->ctx_ref = ref;
 
-    if (ngx_http_lua_ngx_ctx_add_cleanup(r, ref) != NGX_OK) {
+    if (ngx_http_lua_ngx_ctx_add_cleanup(r, pool, ref) != NGX_OK) {
         return NGX_ERROR;
     }
 
@@ -100,7 +143,8 @@ ngx_http_lua_ffi_set_ctx_ref(ngx_http_request_t *r, int ref)
 
 
 static ngx_int_t
-ngx_http_lua_ngx_ctx_add_cleanup(ngx_http_request_t *r, int ref)
+ngx_http_lua_ngx_ctx_add_cleanup(ngx_http_request_t *r, ngx_pool_t *pool,
+    int ref)
 {
     lua_State                   *L;
     ngx_pool_cleanup_t          *cln;
@@ -111,7 +155,7 @@ ngx_http_lua_ngx_ctx_add_cleanup(ngx_http_request_t *r, int ref)
     ctx = ngx_http_get_module_ctx(r, ngx_http_lua_module);
     L = ngx_http_lua_get_lua_vm(r, ctx);
 
-    cln = ngx_pool_cleanup_add(r->pool,
+    cln = ngx_pool_cleanup_add(pool,
                                sizeof(ngx_http_lua_ngx_ctx_cleanup_data_t));
     if (cln == NULL) {
         return NGX_ERROR;
diff --git a/src/ngx_http_lua_ssl.h b/src/ngx_http_lua_ssl.h
index acb8c4b1..f50ecc51 100644
--- a/src/ngx_http_lua_ssl.h
+++ b/src/ngx_http_lua_ssl.h
@@ -27,6 +27,10 @@ typedef struct {
     int                      exit_code;  /* exit code for openssl's
                                             set_cert_cb callback */
 
+    int                      ctx_ref;  /*  reference to anchor
+                                           request ctx data in lua
+                                           registry */
+
     unsigned                 done:1;
     unsigned                 aborted:1;
 
diff --git a/src/ngx_http_lua_ssl_certby.c b/src/ngx_http_lua_ssl_certby.c
index 2e09a038..c6fc8832 100644
--- a/src/ngx_http_lua_ssl_certby.c
+++ b/src/ngx_http_lua_ssl_certby.c
@@ -257,6 +257,8 @@ ngx_http_lua_ssl_cert_handler(ngx_ssl_conn_t *ssl_conn, void *data)
         if (cctx == NULL) {
             goto failed;  /* error */
         }
+
+        cctx->ctx_ref = LUA_NOREF;
     }
 
     cctx->exit_code = 1;  /* successful by default */
diff --git a/src/ngx_http_lua_ssl_session_fetchby.c b/src/ngx_http_lua_ssl_session_fetchby.c
index c54e8ead..3ac92726 100644
--- a/src/ngx_http_lua_ssl_session_fetchby.c
+++ b/src/ngx_http_lua_ssl_session_fetchby.c
@@ -279,6 +279,8 @@ ngx_http_lua_ssl_sess_fetch_handler(ngx_ssl_conn_t *ssl_conn,
         if (cctx == NULL) {
             goto failed;  /* error */
         }
+
+        cctx->ctx_ref = LUA_NOREF;
     }
 
     cctx->exit_code = 1;  /* successful by default */
diff --git a/src/ngx_http_lua_ssl_session_storeby.c b/src/ngx_http_lua_ssl_session_storeby.c
index 1067b3bb..10803522 100644
--- a/src/ngx_http_lua_ssl_session_storeby.c
+++ b/src/ngx_http_lua_ssl_session_storeby.c
@@ -241,6 +241,8 @@ ngx_http_lua_ssl_sess_store_handler(ngx_ssl_conn_t *ssl_conn,
         if (cctx == NULL) {
             goto failed;  /* error */
         }
+
+        cctx->ctx_ref = LUA_NOREF;
     }
 
 #if OPENSSL_VERSION_NUMBER >= 0x1000200fL
diff --git a/src/ngx_http_lua_util.h b/src/ngx_http_lua_util.h
index 52d804bf..fa24f407 100644
--- a/src/ngx_http_lua_util.h
+++ b/src/ngx_http_lua_util.h
@@ -15,6 +15,7 @@
 
 
 #include "ngx_http_lua_common.h"
+#include "ngx_http_lua_ssl.h"
 #include "ngx_http_lua_api.h"
 
 

commit d6a29d2611094ff4421d42bf96662dc2fcd59dc9
Author: rainingmaster <312841925@qq.com>
Date:   Fri Jul 24 12:19:15 2020 +0800

    feature(socket.tcp): enhance the logic of parameter verification in
    connect

diff --git a/src/ngx_http_lua_socket_tcp.c b/src/ngx_http_lua_socket_tcp.c
index cc0ab2d6..d3690edc 100644
--- a/src/ngx_http_lua_socket_tcp.c
+++ b/src/ngx_http_lua_socket_tcp.c
@@ -970,8 +970,16 @@ ngx_http_lua_socket_tcp_connect(lua_State *L)
         n--;
     }
 
-    if (n == 3) {
-        port = luaL_checkinteger(L, 3);
+    /* most popular suit: host:port */
+    if (n == 3 && lua_isnumber(L, 3)) {
+
+        /* Hit the following parameter combination:
+         * sock:connect("127.0.0.1", port)
+         * sock:connect("127.0.0.1", port, opts)
+         * sock:connect("unix:/path", port)
+         * sock:connect("unix:/path", port, opts) */
+
+        port = (int) lua_tointeger(L, 3);
 
         if (port < 0 || port > 65535) {
             lua_pushnil(L);
@@ -987,8 +995,27 @@ ngx_http_lua_socket_tcp_connect(lua_State *L)
 
         dd("socket key: %s", lua_tostring(L, -1));
 
-    } else { /* n == 2 */
+    } else if (len >= 5 && ngx_strncasecmp(p, (u_char *) "unix:", 5) == 0) {
+
+        /* Hit the following parameter combination:
+         * sock:connect("unix:/path")
+         * sock:connect("unix:/path", nil)
+         * sock:connect("unix:/path", opts)
+         * sock:connect("unix:/path", nil, opts) */
+
         port = 0;
+
+    } else {
+
+        /* Ban the following parameter combination:
+         * sock:connect("127.0.0.1")
+         * sock:connect("127.0.0.1", nil)
+         * sock:connect("127.0.0.1", opts) 
+         * sock:connect("127.0.0.1", nil, opts) */
+
+        lua_pushnil(L);
+        lua_pushfstring(L, "missing the port number");
+        return 2;
     }
 
     if (!custom_pool) {
diff --git a/t/023-rewrite/unix-socket.t b/t/023-rewrite/unix-socket.t
index 8a5f0001..91826fc3 100644
--- a/t/023-rewrite/unix-socket.t
+++ b/t/023-rewrite/unix-socket.t
@@ -79,7 +79,7 @@ qr{\[crit\] .*? connect\(\) to unix:/tmp/nosuchfile\.sock failed}
 --- request
     GET /test
 --- response_body
-failed to connect: failed to parse host name "/tmp/test-nginx.sock": invalid host
+failed to connect: missing the port number
 
 
 
diff --git a/t/058-tcp-socket.t b/t/058-tcp-socket.t
index cac464d8..593e4946 100644
--- a/t/058-tcp-socket.t
+++ b/t/058-tcp-socket.t
@@ -4,7 +4,7 @@ use Test::Nginx::Socket::Lua;
 
 repeat_each(2);
 
-plan tests => repeat_each() * 228;
+plan tests => repeat_each() * 231;
 
 our $HtmlDir = html_dir;
 
@@ -3029,7 +3029,7 @@ qr/runtime error: content_by_lua\(nginx\.conf:\d+\):16: bad request/
 --- user_files
 >>> myfoo.lua
 local sock = ngx.socket.tcp()
-local ok, err = sock:connect("agentzh.org")
+local ok, err = sock:connect("agentzh.org", 12345)
 if not ok then
     ngx.log(ngx.ERR, "failed to connect: ", err)
     return
@@ -3059,7 +3059,7 @@ runtime error: attempt to yield across C-call boundary
             end
             local function err()
                 local sock = ngx.socket.tcp()
-                local ok, err = sock:connect("agentzh.org")
+                local ok, err = sock:connect("agentzh.org", 12345)
                 if not ok then
                     ngx.log(ngx.ERR, "failed to connect: ", err)
                     return
@@ -4327,3 +4327,43 @@ failed to receive a line: closed []
 close: 1 nil
 --- no_error_log
 [error]
+
+
+
+=== TEST 72: port is not number
+--- config
+    server_tokens off;
+    location = /t {
+        set $port $TEST_NGINX_SERVER_PORT;
+        content_by_lua_block {
+            local sock = ngx.socket.tcp()
+            sock:settimeout(500)
+
+            local ok, err = sock:connect("127.0.0.1")
+            if not ok then
+                ngx.say("connect failed: ", err)
+            end
+
+            local ok, err = sock:connect("127.0.0.1", nil)
+            if not ok then
+                ngx.say("connect failed: ", err)
+            end
+
+            local ok, err = sock:connect("127.0.0.1", {})
+            if not ok then
+                ngx.say("connect failed: ", err)
+            end
+
+            ngx.say("finish")
+        }
+    }
+
+--- request
+GET /t
+--- response_body
+connect failed: missing the port number
+connect failed: missing the port number
+connect failed: missing the port number
+finish
+--- no_error_log
+[error]
diff --git a/t/059-unix-socket.t b/t/059-unix-socket.t
index b06ba6e2..bd83006b 100644
--- a/t/059-unix-socket.t
+++ b/t/059-unix-socket.t
@@ -64,7 +64,7 @@ qr{\[crit\] .*? connect\(\) to unix:/tmp/nosuchfile\.sock failed}
 --- request
     GET /test
 --- response_body
-failed to connect: failed to parse host name "/tmp/test-nginx.sock": invalid host
+failed to connect: missing the port number
 
 
 
@@ -201,3 +201,139 @@ received:
 received: foo
 failed to receive a line: closed
 close: 1 nil
+
+
+
+=== TEST 5: port will be ignored
+--- http_config
+    server {
+        listen unix:$TEST_NGINX_HTML_DIR/nginx.sock;
+        default_type 'text/plain';
+
+        server_tokens off;
+        location /foo {
+            content_by_lua 'ngx.say("foo")';
+            more_clear_headers Date;
+        }
+    }
+--- config
+    location /test {
+        content_by_lua '
+            local sock = ngx.socket.tcp()
+            local ok, err = sock:connect("unix:$TEST_NGINX_HTML_DIR/nginx.sock", 80)
+            if not ok then
+                ngx.say("failed to connect: ", err)
+                return
+            end
+
+            ngx.say("connected: ", ok)
+
+            local req = "GET /foo HTTP/1.0\\r\\nHost: localhost\\r\\nConnection: close\\r\\n\\r\\n"
+            -- req = "OK"
+
+            local bytes, err = sock:send(req)
+            if not bytes then
+                ngx.say("failed to send request: ", err)
+                return
+            end
+
+            ngx.say("request sent: ", bytes)
+
+            while true do
+                print("calling receive")
+                local line, err = sock:receive()
+                if line then
+                    ngx.say("received: ", line)
+
+                else
+                    ngx.say("failed to receive a line: ", err)
+                    break
+                end
+            end
+
+            ok, err = sock:close()
+            ngx.say("close: ", ok, " ", err)
+        ';
+    }
+--- request
+    GET /test
+--- response_body
+connected: 1
+request sent: 57
+received: HTTP/1.1 200 OK
+received: Server: nginx
+received: Content-Type: text/plain
+received: Content-Length: 4
+received: Connection: close
+received: 
+received: foo
+failed to receive a line: closed
+close: 1 nil
+
+
+
+=== TEST 6: second parameter is nil
+--- http_config
+    server {
+        listen unix:$TEST_NGINX_HTML_DIR/nginx.sock;
+        default_type 'text/plain';
+
+        server_tokens off;
+        location /foo {
+            content_by_lua 'ngx.say("foo")';
+            more_clear_headers Date;
+        }
+    }
+--- config
+    location /test {
+        content_by_lua '
+            local sock = ngx.socket.tcp()
+            local ok, err = sock:connect("unix:$TEST_NGINX_HTML_DIR/nginx.sock", nil)
+            if not ok then
+                ngx.say("failed to connect: ", err)
+                return
+            end
+
+            ngx.say("connected: ", ok)
+
+            local req = "GET /foo HTTP/1.0\\r\\nHost: localhost\\r\\nConnection: close\\r\\n\\r\\n"
+            -- req = "OK"
+
+            local bytes, err = sock:send(req)
+            if not bytes then
+                ngx.say("failed to send request: ", err)
+                return
+            end
+
+            ngx.say("request sent: ", bytes)
+
+            while true do
+                print("calling receive")
+                local line, err = sock:receive()
+                if line then
+                    ngx.say("received: ", line)
+
+                else
+                    ngx.say("failed to receive a line: ", err)
+                    break
+                end
+            end
+
+            ok, err = sock:close()
+            ngx.say("close: ", ok, " ", err)
+        ';
+    }
+--- request
+    GET /test
+--- response_body
+connected: 1
+request sent: 57
+received: HTTP/1.1 200 OK
+received: Server: nginx
+received: Content-Type: text/plain
+received: Content-Length: 4
+received: Connection: close
+received: 
+received: foo
+failed to receive a line: closed
+close: 1 nil
diff --git a/t/068-socket-keepalive.t b/t/068-socket-keepalive.t
index e4c69888..d67da3bd 100644
--- a/t/068-socket-keepalive.t
+++ b/t/068-socket-keepalive.t
@@ -4,7 +4,7 @@ use Test::Nginx::Socket::Lua;
 
 #repeat_each(2);
 
-plan tests => repeat_each() * (blocks() * 4 + 31);
+plan tests => repeat_each() * (blocks() * 4 + 34);
 
 our $HtmlDir = html_dir;
 
@@ -2956,3 +2956,63 @@ GET /t
 lua tcp socket abort queueing
 --- response_body
 ok
+
+
+
+=== TEST 53: custom pools in third parameters for unix domain socket
+--- http_config eval
+"
+    lua_package_path '$::HtmlDir/?.lua;./?.lua;;';
+    server {
+        listen unix:$::HtmlDir/nginx.sock;
+        default_type 'text/plain';
+
+        server_tokens off;
+        location /foo {
+            echo foo;
+            more_clear_headers Date;
+        }
+    }
+"
+--- config
+    location /t {
+        set $port $TEST_NGINX_MEMCACHED_PORT;
+        content_by_lua '
+            local test = require "test"
+            local path = "$TEST_NGINX_HTML_DIR/nginx.sock";
+            test.go(path, "A")
+            test.go(path, "B")
+        ';
+    }
+--- user_files
+>>> test.lua
+module("test", package.seeall)
+
+function go(path, pool)
+    local sock = ngx.socket.tcp()
+    local ok, err = sock:connect("unix:" .. path, nil, {pool = pool})
+    if not ok then
+        ngx.say("failed to connect: ", err)
+        return
+    end
+
+    ngx.say("connected: ", ok, ", reused: ", sock:getreusedtimes())
+
+    local ok, err = sock:setkeepalive()
+    if not ok then
+        ngx.say("failed to set reusable: ", err)
+    end
+end
+--- request
+GET /t
+--- response_body
+connected: 1, reused: 0
+connected: 1, reused: 0
+--- no_error_log eval
+["[error]",
+"lua tcp socket keepalive: free connection pool for ",
+"lua tcp socket get keepalive peer: using connection"
+]
+--- error_log
+lua tcp socket keepalive create connection pool for key "A"
+lua tcp socket keepalive create connection pool for key "B"

commit 21cfd8ab26b0aec0520f2d707770cb9e34680a5b
Author: Yichun Zhang (agentzh) <agentzh@gmail.com>
Date:   Tue Aug 11 17:02:27 2020 -0700

    doc: ported recent changes in mardkown to the wiki file.

diff --git a/doc/HttpLuaModule.wiki b/doc/HttpLuaModule.wiki
index ec98979f..65558e9e 100644
--- a/doc/HttpLuaModule.wiki
+++ b/doc/HttpLuaModule.wiki
@@ -849,6 +849,8 @@ THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND
 
 = See Also =
 
+Other related modules and libraries:
+
 * [https://github.com/openresty/stream-lua-nginx-module#readme ngx_stream_lua_module] for an official port of this module for the Nginx "stream" subsystem (doing generic downstream TCP communications).
 * [https://github.com/openresty/lua-resty-memcached lua-resty-memcached] library based on ngx_lua cosocket.
 * [https://github.com/openresty/lua-resty-redis lua-resty-redis] library based on ngx_lua cosocket.
@@ -871,6 +873,12 @@ THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND
 * [https://openresty.org The OpenResty bundle]
 * [https://github.com/openresty/nginx-systemtap-toolkit Nginx Systemtap Toolkit]
 
+Blog posts:
+
+* [How OpenResty and Nginx Allocate and Manage Memory](https://blog.openresty.com/en//how-or-alloc-mem)
+* [How OpenResty and Nginx Shared Memory Zones Consume RAM](https://blog.openresty.com/en/how-nginx-shm-consume-ram/)
+* [Memory Fragmentation in OpenResty and Nginx's Shared Memory Zones](https://blog.openresty.com/en/nginx-shm-frag/)
+
 = Directives =
 
 <!-- inline-toc -->
@@ -1156,6 +1164,11 @@ You should be very careful about potential security vulnerabilities in your Lua
 
 This directive was first introduced in the <code>v0.5.5</code> release.
 
+See also the following blog posts for more details on OpenResty and Nginx's shared memory zones:
+
+* [How OpenResty and Nginx Shared Memory Zones Consume RAM](https://blog.openresty.com/en/how-nginx-shm-consume-ram/)
+* [Memory Fragmentation in OpenResty and Nginx's Shared Memory Zones](https://blog.openresty.com/en/nginx-shm-frag/)
+
 == init_by_lua_block ==
 
 '''syntax:''' ''init_by_lua_block { lua-script }''
@@ -3274,7 +3287,7 @@ The <code>copy_all_vars</code> option provides a copy of the parent request's Ng
         set $dog 'hello';
         content_by_lua_block {
             res = ngx.location.capture("/other",
-                { copy_all_vars = true });
+                { copy_all_vars = true })
 
             ngx.print(res.body)
             ngx.say(ngx.var.uri, ": ", ngx.var.dog)
@@ -4402,7 +4415,7 @@ This function was first introduced in the <code>v0.5.0rc1</code> release.
 Does an internal redirect to <code>uri</code> with <code>args</code> and is similar to the [[HttpEchoModule#echo_exec|echo_exec]] directive of the [[HttpEchoModule]].
 
 <geshi lang="lua">
-    ngx.exec('/some-location');
+    ngx.exec('/some-location')
     ngx.exec('/some-location', 'a=3&b=5&c=6')
     ngx.exec('/some-location?a=3&b=5', 'c=6')
 </geshi>

commit b0875fa8f8244f85a273586ab636a0f4e8594338
Author: Yichun Zhang (agentzh) <agentzh@gmail.com>
Date:   Tue Aug 11 16:39:37 2020 -0700

    doc: added more blog post links.

diff --git a/README.markdown b/README.markdown
index f9ed3e06..9395d50c 100644
--- a/README.markdown
+++ b/README.markdown
@@ -1022,6 +1022,8 @@ THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND
 See Also
 ========
 
+Other related modules and libraries:
+
 * [ngx_stream_lua_module](https://github.com/openresty/stream-lua-nginx-module#readme) for an official port of this module for the Nginx "stream" subsystem (doing generic downstream TCP communications).
 * [lua-resty-memcached](https://github.com/openresty/lua-resty-memcached) library based on ngx_lua cosocket.
 * [lua-resty-redis](https://github.com/openresty/lua-resty-redis) library based on ngx_lua cosocket.
@@ -1044,6 +1046,12 @@ See Also
 * [The OpenResty bundle](https://openresty.org)
 * [Nginx Systemtap Toolkit](https://github.com/openresty/nginx-systemtap-toolkit)
 
+Blog posts:
+
+* [How OpenResty and Nginx Allocate and Manage Memory](https://blog.openresty.com/en//how-or-alloc-mem)
+* [How OpenResty and Nginx Shared Memory Zones Consume RAM](https://blog.openresty.com/en/how-nginx-shm-consume-ram/)
+* [Memory Fragmentation in OpenResty and Nginx's Shared Memory Zones](https://blog.openresty.com/en/nginx-shm-frag/)
+
 [Back to TOC](#table-of-contents)
 
 Directives
@@ -1435,7 +1443,10 @@ You should be very careful about potential security vulnerabilities in your Lua
 
 This directive was first introduced in the `v0.5.5` release.
 
-See also the blog post ["How OpenResty and Nginx Shared Memory Zones Consume RAM "](https://blog.openresty.com/en/how-nginx-shm-consume-ram/).
+See also the following blog posts for more details on OpenResty and Nginx's shared memory zones:
+
+* [How OpenResty and Nginx Shared Memory Zones Consume RAM](https://blog.openresty.com/en/how-nginx-shm-consume-ram/)
+* [Memory Fragmentation in OpenResty and Nginx's Shared Memory Zones](https://blog.openresty.com/en/nginx-shm-frag/)
 
 [Back to TOC](#directives)
 

commit 3e24a95a27f64b41901511ebd632f8654e69d8fc
Author: syz <eagle-china@hotmail.com>
Date:   Tue Aug 11 22:16:10 2020 +0800

    bugfix: the body size may overflow since the size_t is only int32 in 32-bit system (#1756)

diff --git a/src/ngx_http_lua_socket_tcp.c b/src/ngx_http_lua_socket_tcp.c
index 96477404..cc0ab2d6 100644
--- a/src/ngx_http_lua_socket_tcp.c
+++ b/src/ngx_http_lua_socket_tcp.c
@@ -2396,7 +2396,7 @@ ngx_http_lua_socket_tcp_read(ngx_http_request_t *r,
     ngx_connection_t            *c;
     ngx_buf_t                   *b;
     ngx_event_t                 *rev;
-    size_t                       size;
+    off_t                        size;
     ssize_t                      n;
     unsigned                     read;
     off_t                        preread = 0;
@@ -2503,7 +2503,7 @@ success:
             }
 
             b = &u->buffer;
-            size = (size_t) (b->end - b->last);
+            size = b->end - b->last;
         }
 
         if (u->raw_downstream) {
@@ -2511,8 +2511,8 @@ success:
 
             if (preread) {
 
-                if ((off_t) size > preread) {
-                    size = (size_t) preread;
+                if (size > preread) {
+                    size = preread;
                 }
 
                 ngx_http_lua_probe_req_socket_consume_preread(r,
@@ -2553,8 +2553,8 @@ success:
                     preread = r->request_body->rest;
                 }
 
-                if ((off_t) size > preread) {
-                    size = (size_t) preread;
+                if (size > preread) {
+                    size = preread;
                 }
 
                 ngx_http_lua_probe_req_socket_consume_preread(r,
@@ -2573,8 +2573,8 @@ success:
                 continue;
             }
 
-            if (size > (size_t) r->request_body->rest) {
-                size = (size_t) r->request_body->rest;
+            if (size > r->request_body->rest) {
+                size = r->request_body->rest;
             }
         }
 

commit eeee4069e0e6d03ef135fa290020460868717d2b
Author: qltk <qyihua@gmail.com>
Date:   Tue Aug 11 22:12:24 2020 +0800

    doc: ngx.var.VARIABLE is available in the balancer_by_lua* context (#1761)

diff --git a/README.markdown b/README.markdown
index df079cab..f9ed3e06 100644
--- a/README.markdown
+++ b/README.markdown
@@ -3464,7 +3464,7 @@ ngx.var.VARIABLE
 
 **syntax:** *ngx.var.VAR_NAME*
 
-**context:** *set_by_lua&#42;, rewrite_by_lua&#42;, access_by_lua&#42;, content_by_lua&#42;, header_filter_by_lua&#42;, body_filter_by_lua&#42;, log_by_lua&#42;*
+**context:** *set_by_lua&#42;, rewrite_by_lua&#42;, access_by_lua&#42;, content_by_lua&#42;, header_filter_by_lua&#42;, body_filter_by_lua&#42;, log_by_lua&#42;, balancer_by_lua&#42;*
 
 Read and write Nginx variable values.
 
diff --git a/doc/HttpLuaModule.wiki b/doc/HttpLuaModule.wiki
index 20bf7013..ec98979f 100644
--- a/doc/HttpLuaModule.wiki
+++ b/doc/HttpLuaModule.wiki
@@ -2808,7 +2808,7 @@ The data chunk and "eof" flag passed to the downstream Nginx output filters can
 
 '''syntax:''' ''ngx.var.VAR_NAME''
 
-'''context:''' ''set_by_lua*, rewrite_by_lua*, access_by_lua*, content_by_lua*, header_filter_by_lua*, body_filter_by_lua*, log_by_lua*''
+'''context:''' ''set_by_lua*, rewrite_by_lua*, access_by_lua*, content_by_lua*, header_filter_by_lua*, body_filter_by_lua*, log_by_lua*, balancer_by_lua*''
 
 Read and write Nginx variable values.
 
diff --git a/t/045-ngx-var.t b/t/045-ngx-var.t
index 6475f1e8..81fcef64 100644
--- a/t/045-ngx-var.t
+++ b/t/045-ngx-var.t
@@ -7,7 +7,7 @@ use Test::Nginx::Socket::Lua;
 
 repeat_each(2);
 
-plan tests => repeat_each() * (blocks() * 2 + 7);
+plan tests => repeat_each() * (blocks() * 2 + 9);
 
 #no_diff();
 #no_long_string();
@@ -228,3 +228,53 @@ GET /test?hello
 --- error_log
 variable "query_string" not changeable
 --- error_code: 500
+
+
+
+=== TEST 12: get a variable in balancer_by_lua_block
+--- http_config
+    upstream balancer {
+        server 127.0.0.1;
+        balancer_by_lua_block {
+            local balancer = require "ngx.balancer"
+            local host = "127.0.0.1"
+            local port = ngx.var.port;
+            local ok, err = balancer.set_current_peer(host, port)
+            if not ok then
+                ngx.log(ngx.ERR, "failed to set the current peer: ", err)
+                return ngx.exit(500)
+            end
+        }
+    }
+    server {
+        # this is the real entry point
+        listen 8091;
+        location / {
+            content_by_lua_block{
+                ngx.print("this is backend peer 8091")
+            }
+        }
+    }
+    server {
+        # this is the real entry point
+        listen 8092;
+        location / {
+            content_by_lua_block{
+                ngx.print("this is backend peer 8092")
+            }
+        }
+    }
+--- config
+    location =/balancer {
+        set $port '';
+        set_by_lua_block $port {
+            local args, _ = ngx.req.get_uri_args()
+            local port = args['port']
+            return port
+        }
+        proxy_pass http://balancer;
+    }
+--- pipelined_requests eval
+["GET /balancer?port=8091", "GET /balancer?port=8092"]
+--- response_body eval
+["this is backend peer 8091", "this is backend peer 8092"]

commit 49937fb69aed6945263d1e1b3fe6fcc8e8277152
Author: sjnam <jsunam@gmail.com>
Date:   Thu Aug 6 10:08:46 2020 +0900

    doc: removed the useless semicolon in the example lua code

diff --git a/README.markdown b/README.markdown
index 0240c042..df079cab 100644
--- a/README.markdown
+++ b/README.markdown
@@ -4207,9 +4207,9 @@ The header names are matched case-insensitively.
 ```lua
 
  -- equivalent to ngx.header["Content-Type"] = 'text/plain'
- ngx.header.content_type = 'text/plain';
+ ngx.header.content_type = 'text/plain'
 
- ngx.header["X-My-Header"] = 'blah blah';
+ ngx.header["X-My-Header"] = 'blah blah'
 ```
 
 Multi-value headers can be set this way:
diff --git a/doc/HttpLuaModule.wiki b/doc/HttpLuaModule.wiki
index 6ff23306..20bf7013 100644
--- a/doc/HttpLuaModule.wiki
+++ b/doc/HttpLuaModule.wiki
@@ -1123,14 +1123,14 @@ You can also initialize the [[#lua_shared_dict|lua_shared_dict]] shm storage at
     lua_shared_dict dogs 1m;
 
     init_by_lua_block {
-        local dogs = ngx.shared.dogs;
+        local dogs = ngx.shared.dogs
         dogs:set("Tom", 56)
     }
 
     server {
         location = /api {
             content_by_lua_block {
-                local dogs = ngx.shared.dogs;
+                local dogs = ngx.shared.dogs
                 ngx.say(dogs:get("Tom"))
             }
         }
@@ -1351,8 +1351,8 @@ a time. However, a workaround is possible using the [[#ngx.var.VARIABLE|ngx.var.
             local a = 32
             local b = 56
 
-            ngx.var.diff = a - b;  -- write to $diff directly
-            return a + b;          -- return the $sum value normally
+            ngx.var.diff = a - b  -- write to $diff directly
+            return a + b          -- return the $sum value normally
         ';
 
         echo "sum = $sum, diff = $diff";
@@ -1541,7 +1541,7 @@ The right way of doing this is as follows:
         rewrite_by_lua '
             ngx.var.b = tonumber(ngx.var.a) + 1
             if tonumber(ngx.var.b) == 13 then
-                return ngx.redirect("/bar");
+                return ngx.redirect("/bar")
             end
         ';
 
@@ -2824,7 +2824,7 @@ For example:
     location /foo {
         set $my_var ''; # this line is required to create $my_var at config time
         content_by_lua_block {
-            ngx.var.my_var = 123;
+            ngx.var.my_var = 123
             ...
         }
     }
@@ -3247,7 +3247,7 @@ This option is set to <code>false</code> by default
         set $dog 'hello';
         content_by_lua_block {
             res = ngx.location.capture("/other",
-                { share_all_vars = true });
+                { share_all_vars = true })
 
             ngx.print(res.body)
             ngx.say(ngx.var.uri, ": ", ngx.var.dog)
@@ -3311,7 +3311,7 @@ unescaping them in the Nginx config file.
         set $cat '';
         content_by_lua_block {
             res = ngx.location.capture("/other",
-                { vars = { dog = "hello", cat = 32 }});
+                { vars = { dog = "hello", cat = 32 }})
 
             ngx.print(res.body)
         }
@@ -3338,8 +3338,8 @@ The <code>ctx</code> option can be used to specify a custom Lua table to serve a
             local ctx = {}
             res = ngx.location.capture("/sub", { ctx = ctx })
 
-            ngx.say(ctx.foo);
-            ngx.say(ngx.ctx.foo);
+            ngx.say(ctx.foo)
+            ngx.say(ngx.ctx.foo)
         }
     }
 </geshi>
@@ -3356,13 +3356,13 @@ It is also possible to use this <code>ctx</code> option to share the same [[#ngx
 <geshi lang="nginx">
     location /sub {
         content_by_lua_block {
-            ngx.ctx.foo = "bar";
+            ngx.ctx.foo = "bar"
         }
     }
     location /lua {
         content_by_lua_block {
             res = ngx.location.capture("/sub", { ctx = ngx.ctx })
-            ngx.say(ngx.ctx.foo);
+            ngx.say(ngx.ctx.foo)
         }
     }
 </geshi>
@@ -3486,9 +3486,9 @@ The header names are matched case-insensitively.
 
 <geshi lang="lua">
     -- equivalent to ngx.header["Content-Type"] = 'text/plain'
-    ngx.header.content_type = 'text/plain';
+    ngx.header.content_type = 'text/plain'
 
-    ngx.header["X-My-Header"] = 'blah blah';
+    ngx.header["X-My-Header"] = 'blah blah'
 </geshi>
 
 Multi-value headers can be set this way:
@@ -3521,13 +3521,13 @@ is equivalent to
 Setting a slot to <code>nil</code> effectively removes it from the response headers:
 
 <geshi lang="lua">
-    ngx.header["X-My-Header"] = nil;
+    ngx.header["X-My-Header"] = nil
 </geshi>
 
 The same applies to assigning an empty table:
 
 <geshi lang="lua">
-    ngx.header["X-My-Header"] = {};
+    ngx.header["X-My-Header"] = {}
 </geshi>
 
 Setting <code>ngx.header.HEADER</code> after sending out response headers (either explicitly with [[#ngx.send_headers|ngx.send_headers]] or implicitly with [[#ngx.print|ngx.print]] and similar) will log an error message.
@@ -4403,8 +4403,8 @@ Does an internal redirect to <code>uri</code> with <code>args</code> and is simi
 
 <geshi lang="lua">
     ngx.exec('/some-location');
-    ngx.exec('/some-location', 'a=3&b=5&c=6');
-    ngx.exec('/some-location?a=3&b=5', 'c=6');
+    ngx.exec('/some-location', 'a=3&b=5&c=6')
+    ngx.exec('/some-location?a=3&b=5', 'c=6')
 </geshi>
 
 The optional second <code>args</code> can be used to specify extra URI query arguments, for example:
@@ -4430,7 +4430,7 @@ Named locations are also supported but the second <code>args</code> argument wil
 <geshi lang="nginx">
     location /foo {
         content_by_lua_block {
-            ngx.exec("@bar", "a=goodbye");
+            ngx.exec("@bar", "a=goodbye")
         }
     }
 
@@ -4509,7 +4509,7 @@ This method is similar to the [[HttpRewriteModule#rewrite|rewrite]] directive wi
 is equivalent to the following Lua code
 
 <geshi lang="lua">
-    return ngx.redirect('/foo');  -- Lua code
+    return ngx.redirect('/foo')  -- Lua code
 </geshi>
 
 while
@@ -7377,7 +7377,7 @@ For example, the following [[HttpSetMiscModule]] directives can be invoked this
 For instance,
 
 <geshi lang="lua">
-    local res = ndk.set_var.set_escape_uri('a/b');
+    local res = ndk.set_var.set_escape_uri('a/b')
     -- now res == 'a%2fb'
 </geshi>
 

commit 83bfe91572d77bc8a882504fce57247cc1186d43
Author: Yichun Zhang (agentzh) <yichun@openresty.com>
Date:   Thu Aug 6 15:14:44 2020 -0700

    doc: added a blog post link.

diff --git a/README.markdown b/README.markdown
index 48c75e62..0240c042 100644
--- a/README.markdown
+++ b/README.markdown
@@ -1435,6 +1435,8 @@ You should be very careful about potential security vulnerabilities in your Lua
 
 This directive was first introduced in the `v0.5.5` release.
 
+See also the blog post ["How OpenResty and Nginx Shared Memory Zones Consume RAM "](https://blog.openresty.com/en/how-nginx-shm-consume-ram/).
+
 [Back to TOC](#directives)
 
 init_by_lua_block

commit f6b486b24e6f35e8eb918141918c110c5ab0b5f2
Author: Jeffrey 'jf' Lim <jf@users.noreply.github.com>
Date:   Fri Jul 31 11:01:44 2020 +0800

    doc: fixed the wrong phase for lua_need_request_body (#1758)

diff --git a/README.markdown b/README.markdown
index 35008000..48c75e62 100644
--- a/README.markdown
+++ b/README.markdown
@@ -2535,7 +2535,7 @@ lua_need_request_body
 
 **phase:** *depends on usage*
 
-Determines whether to force the request body data to be read before running rewrite/access/access_by_lua* or not. The Nginx core does not read the client request body by default and if request body data is required, then this directive should be turned `on` or the [ngx.req.read_body](#ngxreqread_body) function should be called within the Lua code.
+Determines whether to force the request body data to be read before running rewrite/access/content_by_lua* or not. The Nginx core does not read the client request body by default and if request body data is required, then this directive should be turned `on` or the [ngx.req.read_body](#ngxreqread_body) function should be called within the Lua code.
 
 To read the request body data within the [$request_body](http://nginx.org/en/docs/http/ngx_http_core_module.html#var_request_body) variable,
 [client_body_buffer_size](http://nginx.org/en/docs/http/ngx_http_core_module.html#client_body_buffer_size) must have the same value as [client_max_body_size](http://nginx.org/en/docs/http/ngx_http_core_module.html#client_max_body_size). Because when the content length exceeds [client_body_buffer_size](http://nginx.org/en/docs/http/ngx_http_core_module.html#client_body_buffer_size) but less than [client_max_body_size](http://nginx.org/en/docs/http/ngx_http_core_module.html#client_max_body_size), Nginx will buffer the data into a temporary file on the disk, which will lead to empty value in the [$request_body](http://nginx.org/en/docs/http/ngx_http_core_module.html#var_request_body) variable.
diff --git a/doc/HttpLuaModule.wiki b/doc/HttpLuaModule.wiki
index 04a26949..6ff23306 100644
--- a/doc/HttpLuaModule.wiki
+++ b/doc/HttpLuaModule.wiki
@@ -2133,7 +2133,7 @@ This directive was first introduced in the <code>v0.10.0</code> release.
 
 '''phase:''' ''depends on usage''
 
-Determines whether to force the request body data to be read before running rewrite/access/access_by_lua* or not. The Nginx core does not read the client request body by default and if request body data is required, then this directive should be turned <code>on</code> or the [[#ngx.req.read_body|ngx.req.read_body]] function should be called within the Lua code.
+Determines whether to force the request body data to be read before running rewrite/access/content_by_lua* or not. The Nginx core does not read the client request body by default and if request body data is required, then this directive should be turned <code>on</code> or the [[#ngx.req.read_body|ngx.req.read_body]] function should be called within the Lua code.
 
 To read the request body data within the [[HttpCoreModule#$request_body|$request_body]] variable,
 [[HttpCoreModule#client_body_buffer_size|client_body_buffer_size]] must have the same value as [[HttpCoreModule#client_max_body_size|client_max_body_size]]. Because when the content length exceeds [[HttpCoreModule#client_body_buffer_size|client_body_buffer_size]] but less than [[HttpCoreModule#client_max_body_size|client_max_body_size]], Nginx will buffer the data into a temporary file on the disk, which will lead to empty value in the [[HttpCoreModule#$request_body|$request_body]] variable.

commit bdfc4bfc072796dfd20141af672007f5119d2d1e
Author: Soojin Nam <jsunam@gmail.com>
Date:   Fri Jul 31 00:38:12 2020 +0900

    doc: removed the useless semicolon in the example lua code (#1757)
    
    Co-authored-by: bob-floyd <bob.floyd@kakaoenterprise.com>

diff --git a/README.markdown b/README.markdown
index bd29909b..35008000 100644
--- a/README.markdown
+++ b/README.markdown
@@ -1402,14 +1402,14 @@ You can also initialize the [lua_shared_dict](#lua_shared_dict) shm storage at t
  lua_shared_dict dogs 1m;
 
  init_by_lua_block {
-     local dogs = ngx.shared.dogs;
+     local dogs = ngx.shared.dogs
      dogs:set("Tom", 56)
  }
 
  server {
      location = /api {
          content_by_lua_block {
-             local dogs = ngx.shared.dogs;
+             local dogs = ngx.shared.dogs
              ngx.say(dogs:get("Tom"))
          }
      }
@@ -1659,8 +1659,8 @@ a time. However, a workaround is possible using the [ngx.var.VARIABLE](#ngxvarva
          local a = 32
          local b = 56
 
-         ngx.var.diff = a - b;  -- write to $diff directly
-         return a + b;          -- return the $sum value normally
+         ngx.var.diff = a - b  -- write to $diff directly
+         return a + b          -- return the $sum value normally
      ';
 
      echo "sum = $sum, diff = $diff";
@@ -1874,7 +1874,7 @@ The right way of doing this is as follows:
      rewrite_by_lua '
          ngx.var.b = tonumber(ngx.var.a) + 1
          if tonumber(ngx.var.b) == 13 then
-             return ngx.redirect("/bar");
+             return ngx.redirect("/bar")
          end
      ';
 
@@ -3480,7 +3480,7 @@ For example:
  location /foo {
      set $my_var ''; # this line is required to create $my_var at config time
      content_by_lua_block {
-         ngx.var.my_var = 123;
+         ngx.var.my_var = 123
          ...
      }
  }
@@ -3948,7 +3948,7 @@ This option is set to `false` by default
      set $dog 'hello';
      content_by_lua_block {
          res = ngx.location.capture("/other",
-             { share_all_vars = true });
+             { share_all_vars = true })
 
          ngx.print(res.body)
          ngx.say(ngx.var.uri, ": ", ngx.var.dog)
@@ -3976,7 +3976,7 @@ The `copy_all_vars` option provides a copy of the parent request's Nginx variabl
      set $dog 'hello';
      content_by_lua_block {
          res = ngx.location.capture("/other",
-             { copy_all_vars = true });
+             { copy_all_vars = true })
 
          ngx.print(res.body)
          ngx.say(ngx.var.uri, ": ", ngx.var.dog)
@@ -4014,7 +4014,7 @@ unescaping them in the Nginx config file.
      set $cat '';
      content_by_lua_block {
          res = ngx.location.capture("/other",
-             { vars = { dog = "hello", cat = 32 }});
+             { vars = { dog = "hello", cat = 32 }})
 
          ngx.print(res.body)
      }
@@ -4042,8 +4042,8 @@ The `ctx` option can be used to specify a custom Lua table to serve as the [ngx.
          local ctx = {}
          res = ngx.location.capture("/sub", { ctx = ctx })
 
-         ngx.say(ctx.foo);
-         ngx.say(ngx.ctx.foo);
+         ngx.say(ctx.foo)
+         ngx.say(ngx.ctx.foo)
      }
  }
 ```
@@ -4061,13 +4061,13 @@ It is also possible to use this `ctx` option to share the same [ngx.ctx](#ngxctx
 
  location /sub {
      content_by_lua_block {
-         ngx.ctx.foo = "bar";
+         ngx.ctx.foo = "bar"
      }
  }
  location /lua {
      content_by_lua_block {
          res = ngx.location.capture("/sub", { ctx = ngx.ctx })
-         ngx.say(ngx.ctx.foo);
+         ngx.say(ngx.ctx.foo)
      }
  }
 ```
@@ -4245,14 +4245,14 @@ Setting a slot to `nil` effectively removes it from the response headers:
 
 ```lua
 
- ngx.header["X-My-Header"] = nil;
+ ngx.header["X-My-Header"] = nil
 ```
 
 The same applies to assigning an empty table:
 
 ```lua
 
- ngx.header["X-My-Header"] = {};
+ ngx.header["X-My-Header"] = {}
 ```
 
 Setting `ngx.header.HEADER` after sending out response headers (either explicitly with [ngx.send_headers](#ngxsend_headers) or implicitly with [ngx.print](#ngxprint) and similar) will log an error message.
@@ -5254,9 +5254,9 @@ Does an internal redirect to `uri` with `args` and is similar to the [echo_exec]
 
 ```lua
 
- ngx.exec('/some-location');
- ngx.exec('/some-location', 'a=3&b=5&c=6');
- ngx.exec('/some-location?a=3&b=5', 'c=6');
+ ngx.exec('/some-location')
+ ngx.exec('/some-location', 'a=3&b=5&c=6')
+ ngx.exec('/some-location?a=3&b=5', 'c=6')
 ```
 
 The optional second `args` can be used to specify extra URI query arguments, for example:
@@ -5285,7 +5285,7 @@ Named locations are also supported but the second `args` argument will be ignore
 
  location /foo {
      content_by_lua_block {
-         ngx.exec("@bar", "a=goodbye");
+         ngx.exec("@bar", "a=goodbye")
      }
  }
 
@@ -5373,7 +5373,7 @@ is equivalent to the following Lua code
 
 ```lua
 
- return ngx.redirect('/foo');  -- Lua code
+ return ngx.redirect('/foo')  -- Lua code
 ```
 
 while
@@ -8626,7 +8626,7 @@ For instance,
 
 ```lua
 
- local res = ndk.set_var.set_escape_uri('a/b');
+ local res = ndk.set_var.set_escape_uri('a/b')
  -- now res == 'a%2fb'
 ```
 

commit e526caeeb2bf963d261bef2889940153fdb06b8a
Author: Datong Sun <datong.sun@konghq.com>
Date:   Thu Jul 30 19:47:15 2020 +0800

    feature: added the `ngx_http_lua_ffi_balancer_recreate_request` FFI function to allow recreation of request buffer in balancer phase. (#1734)

diff --git a/src/ngx_http_lua_balancer.c b/src/ngx_http_lua_balancer.c
index f71a3e00..eff9dc13 100644
--- a/src/ngx_http_lua_balancer.c
+++ b/src/ngx_http_lua_balancer.c
@@ -753,4 +753,43 @@ ngx_http_lua_ffi_balancer_get_last_failure(ngx_http_request_t *r,
 }
 
 
+int
+ngx_http_lua_ffi_balancer_recreate_request(ngx_http_request_t *r,
+    char **err)
+{
+    ngx_http_lua_ctx_t    *ctx;
+    ngx_http_upstream_t   *u;
+
+    if (r == NULL) {
+        *err = "no request found";
+        return NGX_ERROR;
+    }
+
+    u = r->upstream;
+
+    if (u == NULL) {
+        *err = "no upstream found";
+        return NGX_ERROR;
+    }
+
+    ctx = ngx_http_get_module_ctx(r, ngx_http_lua_module);
+    if (ctx == NULL) {
+        *err = "no ctx found";
+        return NGX_ERROR;
+    }
+
+    if ((ctx->context & NGX_HTTP_LUA_CONTEXT_BALANCER) == 0) {
+        *err = "API disabled in the current context";
+        return NGX_ERROR;
+    }
+
+    /* u->create_request can not be NULL since we are in balancer phase */
+    ngx_http_lua_assert(u->create_request != NULL);
+
+    *err = NULL;
+
+    return u->create_request(r);
+}
+
+
 /* vi:set ft=c ts=4 sw=4 et fdm=marker: */

commit c0e460a5387e816f4eddc561c0c1f04ab6294a62
Author: ArchangelSDY <Archangel.SDY@gmail.com>
Date:   Thu Jul 30 19:37:47 2020 +0800

    feature: add FFI interface to verify SSL client certificate (#1666)

diff --git a/src/ngx_http_lua_ssl_certby.c b/src/ngx_http_lua_ssl_certby.c
index 6106c694..2e09a038 100644
--- a/src/ngx_http_lua_ssl_certby.c
+++ b/src/ngx_http_lua_ssl_certby.c
@@ -1294,4 +1294,140 @@ failed:
 }
 
 
+static int
+ngx_http_lua_ssl_verify_callback(int ok, X509_STORE_CTX *x509_store)
+{
+    /*
+     * we never terminate handshake here and user can later use
+     * $ssl_client_verify to check verification result.
+     *
+     * this is consistent with Nginx behavior.
+     */
+    return 1;
+}
+
+
+int
+ngx_http_lua_ffi_ssl_verify_client(ngx_http_request_t *r, void *ca_certs,
+    int depth, char **err)
+{
+    ngx_http_lua_ctx_t          *ctx;
+    ngx_ssl_conn_t              *ssl_conn;
+    ngx_http_ssl_srv_conf_t     *sscf;
+    STACK_OF(X509)              *chain = ca_certs;
+    STACK_OF(X509_NAME)         *name_chain = NULL;
+    X509                        *x509 = NULL;
+    X509_NAME                   *subject = NULL;
+    X509_STORE                  *ca_store = NULL;
+#ifdef OPENSSL_IS_BORINGSSL
+    size_t                      i;
+#else
+    int                         i;
+#endif
+
+    ctx = ngx_http_get_module_ctx(r, ngx_http_lua_module);
+    if (ctx == NULL) {
+        *err = "no request ctx found";
+        return NGX_ERROR;
+    }
+
+    if (!(ctx->context & NGX_HTTP_LUA_CONTEXT_SSL_CERT)) {
+        *err = "API disabled in the current context";
+        return NGX_ERROR;
+    }
+
+    if (r->connection == NULL || r->connection->ssl == NULL) {
+        *err = "bad request";
+        return NGX_ERROR;
+    }
+
+    ssl_conn = r->connection->ssl->connection;
+    if (ssl_conn == NULL) {
+        *err = "bad ssl conn";
+        return NGX_ERROR;
+    }
+
+    /* enable verify */
+
+    SSL_set_verify(ssl_conn, SSL_VERIFY_PEER, ngx_http_lua_ssl_verify_callback);
+
+    /* set depth */
+
+    if (depth < 0) {
+        sscf = ngx_http_get_module_srv_conf(r, ngx_http_ssl_module);
+        if (sscf != NULL) {
+            depth = sscf->verify_depth;
+
+        } else {
+            /* same as the default value of ssl_verify_depth */
+            depth = 1;
+        }
+    }
+
+    SSL_set_verify_depth(ssl_conn, depth);
+
+    /* set CA chain */
+
+    if (chain != NULL) {
+        ca_store = X509_STORE_new();
+        if (ca_store == NULL) {
+            *err = "X509_STORE_new() failed";
+            return NGX_ERROR;
+        }
+
+        /* construct name chain */
+
+        name_chain = sk_X509_NAME_new_null();
+        if (name_chain == NULL) {
+            *err = "sk_X509_NAME_new_null() failed";
+            goto failed;
+        }
+
+        for (i = 0; i < sk_X509_num(chain); i++) {
+            x509 = sk_X509_value(chain, i);
+            if (x509 == NULL) {
+                *err = "sk_X509_value() failed";
+                goto failed;
+            }
+
+            /* add subject to name chain, which will be sent to client */
+            subject = X509_NAME_dup(X509_get_subject_name(x509));
+            if (subject == NULL) {
+                *err = "X509_get_subject_name() failed";
+                goto failed;
+            }
+
+            if (!sk_X509_NAME_push(name_chain, subject)) {
+                *err = "sk_X509_NAME_push() failed";
+                X509_NAME_free(subject);
+                goto failed;
+            }
+
+            /* add to trusted CA store */
+            if (X509_STORE_add_cert(ca_store, x509) == 0) {
+                *err = "X509_STORE_add_cert() failed";
+                goto failed;
+            }
+        }
+
+        if (SSL_set0_verify_cert_store(ssl_conn, ca_store) == 0) {
+            *err = "SSL_set0_verify_cert_store() failed";
+            goto failed;
+        }
+
+        SSL_set_client_CA_list(ssl_conn, name_chain);
+    }
+
+    return NGX_OK;
+
+failed:
+
+    sk_X509_NAME_free(name_chain);
+
+    X509_STORE_free(ca_store);
+
+    return NGX_ERROR;
+}
+
+
 #endif /* NGX_HTTP_SSL */
diff --git a/t/140-ssl-c-api.t b/t/140-ssl-c-api.t
index a77f5d4c..1c591354 100644
--- a/t/140-ssl-c-api.t
+++ b/t/140-ssl-c-api.t
@@ -63,6 +63,10 @@ ffi.cdef[[
     void ngx_http_lua_ffi_free_priv_key(void *cdata);
 
     int ngx_http_lua_ffi_ssl_clear_certs(void *r, char **err);
+
+    int ngx_http_lua_ffi_ssl_verify_client(void *r, void *cdata,
+        int depth, char **err);
+
 ]]
 _EOC_
     }
@@ -812,3 +816,213 @@ lua ssl server name: "test.com"
 --- no_error_log
 [error]
 [alert]
+
+
+
+=== TEST 6: verify client with CA certificates
+--- http_config
+    server {
+        listen unix:$TEST_NGINX_HTML_DIR/nginx.sock ssl;
+        server_name   test.com;
+
+        ssl_certificate_by_lua_block {
+            collectgarbage()
+
+            require "defines"
+            local ffi = require "ffi"
+
+            local errmsg = ffi.new("char *[1]")
+
+            local r = require "resty.core.base" .get_request()
+            if r == nil then
+                ngx.log(ngx.ERR, "no request found")
+                return
+            end
+
+            local f = assert(io.open("t/cert/test.crt", "rb"))
+            local cert_data = f:read("*all")
+            f:close()
+
+            local cert = ffi.C.ngx_http_lua_ffi_parse_pem_cert(cert_data, #cert_data, errmsg)
+            if not cert then
+                ngx.log(ngx.ERR, "failed to parse PEM cert: ",
+                        ffi.string(errmsg[0]))
+                return
+            end
+
+            local rc = ffi.C.ngx_http_lua_ffi_ssl_verify_client(r, cert, 1, errmsg)
+            if rc ~= 0 then
+                ngx.log(ngx.ERR, "failed to verify client: ",
+                        ffi.string(errmsg[0]))
+                return
+            end
+
+            ffi.C.ngx_http_lua_ffi_free_cert(cert)
+        }
+
+        ssl_certificate ../../cert/test2.crt;
+        ssl_certificate_key ../../cert/test2.key;
+
+        location / {
+            default_type 'text/plain';
+            content_by_lua_block {
+                print('client certificate subject: ', ngx.var.ssl_client_s_dn)
+                ngx.say(ngx.var.ssl_client_verify)
+            }
+            more_clear_headers Date;
+        }
+    }
+--- config
+    location /t {
+        proxy_pass                  https://unix:$TEST_NGINX_HTML_DIR/nginx.sock;
+        proxy_ssl_certificate       ../../cert/test.crt;
+        proxy_ssl_certificate_key   ../../cert/test.key;
+        proxy_ssl_session_reuse     off;
+    }
+
+--- request
+GET /t
+--- response_body
+SUCCESS
+
+--- error_log
+client certificate subject: emailAddress=agentzh@gmail.com,CN=test.com
+
+--- no_error_log
+[error]
+[alert]
+
+
+
+=== TEST 7: verify client without CA certificates
+--- http_config
+    server {
+        listen unix:$TEST_NGINX_HTML_DIR/nginx.sock ssl;
+        server_name   test.com;
+
+        ssl_certificate_by_lua_block {
+            collectgarbage()
+
+            require "defines"
+            local ffi = require "ffi"
+
+            local errmsg = ffi.new("char *[1]")
+
+            local r = require "resty.core.base" .get_request()
+            if r == nil then
+                ngx.log(ngx.ERR, "no request found")
+                return
+            end
+
+            local rc = ffi.C.ngx_http_lua_ffi_ssl_verify_client(r, nil, -1, errmsg)
+            if rc ~= 0 then
+                ngx.log(ngx.ERR, "failed to verify client: ",
+                        ffi.string(errmsg[0]))
+                return
+            end
+        }
+
+        ssl_certificate ../../cert/test2.crt;
+        ssl_certificate_key ../../cert/test2.key;
+
+        location / {
+            default_type 'text/plain';
+            content_by_lua_block {
+                print('client certificate subject: ', ngx.var.ssl_client_s_dn)
+                ngx.say(ngx.var.ssl_client_verify)
+            }
+            more_clear_headers Date;
+        }
+    }
+--- config
+    location /t {
+        proxy_pass                  https://unix:$TEST_NGINX_HTML_DIR/nginx.sock;
+        proxy_ssl_certificate       ../../cert/test.crt;
+        proxy_ssl_certificate_key   ../../cert/test.key;
+        proxy_ssl_session_reuse     off;
+    }
+
+--- request
+GET /t
+--- response_body
+FAILED:self signed certificate
+
+--- error_log
+client certificate subject: emailAddress=agentzh@gmail.com,CN=test.com
+
+--- no_error_log
+[error]
+[alert]
+
+
+
+=== TEST 8: verify client but client provides no certificate
+--- http_config
+    server {
+        listen unix:$TEST_NGINX_HTML_DIR/nginx.sock ssl;
+        server_name   test.com;
+
+        ssl_certificate_by_lua_block {
+            collectgarbage()
+
+            require "defines"
+            local ffi = require "ffi"
+
+            local errmsg = ffi.new("char *[1]")
+
+            local r = require "resty.core.base" .get_request()
+            if r == nil then
+                ngx.log(ngx.ERR, "no request found")
+                return
+            end
+
+            local f = assert(io.open("t/cert/test.crt", "rb"))
+            local cert_data = f:read("*all")
+            f:close()
+
+            local cert = ffi.C.ngx_http_lua_ffi_parse_pem_cert(cert_data, #cert_data, errmsg)
+            if not cert then
+                ngx.log(ngx.ERR, "failed to parse PEM cert: ",
+                        ffi.string(errmsg[0]))
+                return
+            end
+
+            local rc = ffi.C.ngx_http_lua_ffi_ssl_verify_client(r, cert, 1, errmsg)
+            if rc ~= 0 then
+                ngx.log(ngx.ERR, "failed to verify client: ",
+                        ffi.string(errmsg[0]))
+                return
+            end
+
+            ffi.C.ngx_http_lua_ffi_free_cert(cert)
+        }
+
+        ssl_certificate ../../cert/test2.crt;
+        ssl_certificate_key ../../cert/test2.key;
+
+        location / {
+            default_type 'text/plain';
+            content_by_lua_block {
+                print('client certificate subject: ', ngx.var.ssl_client_s_dn)
+                ngx.say(ngx.var.ssl_client_verify)
+            }
+            more_clear_headers Date;
+        }
+    }
+--- config
+    location /t {
+        proxy_pass                  https://unix:$TEST_NGINX_HTML_DIR/nginx.sock;
+        proxy_ssl_session_reuse     off;
+    }
+
+--- request
+GET /t
+--- response_body
+NONE
+
+--- error_log
+client certificate subject: nil
+
+--- no_error_log
+[error]
+[alert]

commit fd25474917f0912c0f5054182ef63bc270467510
Author: rainingmaster <312841925@qq.com>
Date:   Fri Jul 24 11:41:28 2020 +0800

    test: use official repo instead of third pard repo

diff --git a/.travis.yml b/.travis.yml
index dd4be41a..bf433bef 100644
--- a/.travis.yml
+++ b/.travis.yml
@@ -83,7 +83,7 @@ install:
   - git clone https://github.com/openresty/rds-json-nginx-module.git ../rds-json-nginx-module
   - git clone https://github.com/openresty/srcache-nginx-module.git ../srcache-nginx-module
   - git clone https://github.com/openresty/redis2-nginx-module.git ../redis2-nginx-module
-  - git clone -b exit_worker https://github.com/rainingmaster/lua-resty-core.git ../lua-resty-core
+  - git clone https://github.com/openresty/lua-resty-core.git ../lua-resty-core
   - git clone https://github.com/openresty/lua-resty-lrucache.git ../lua-resty-lrucache
   - git clone https://github.com/openresty/lua-resty-mysql.git ../lua-resty-mysql
   - git clone https://github.com/openresty/lua-resty-string.git ../lua-resty-string

commit 393c95470089225a258f4b530b595f43302d6deb
Author: Jinhua Tan <312841925@qq.com>
Date:   Thu Jul 23 11:28:00 2020 +0800

    feature: added exit_worker_by* to run Lua code upon nginx worker process exit. (#1682)
    
    Co-authored-by: letian <letian@in66.com>
    Co-authored-by: jinhua.tan <jinhua.tan@shopee.com>

diff --git a/.travis.yml b/.travis.yml
index bf433bef..dd4be41a 100644
--- a/.travis.yml
+++ b/.travis.yml
@@ -83,7 +83,7 @@ install:
   - git clone https://github.com/openresty/rds-json-nginx-module.git ../rds-json-nginx-module
   - git clone https://github.com/openresty/srcache-nginx-module.git ../srcache-nginx-module
   - git clone https://github.com/openresty/redis2-nginx-module.git ../redis2-nginx-module
-  - git clone https://github.com/openresty/lua-resty-core.git ../lua-resty-core
+  - git clone -b exit_worker https://github.com/rainingmaster/lua-resty-core.git ../lua-resty-core
   - git clone https://github.com/openresty/lua-resty-lrucache.git ../lua-resty-lrucache
   - git clone https://github.com/openresty/lua-resty-mysql.git ../lua-resty-mysql
   - git clone https://github.com/openresty/lua-resty-string.git ../lua-resty-string
diff --git a/README.markdown b/README.markdown
index 4046dfe1..bd29909b 100644
--- a/README.markdown
+++ b/README.markdown
@@ -1064,6 +1064,8 @@ Directives
 * [init_worker_by_lua](#init_worker_by_lua)
 * [init_worker_by_lua_block](#init_worker_by_lua_block)
 * [init_worker_by_lua_file](#init_worker_by_lua_file)
+* [exit_worker_by_lua_block](#exit_worker_by_lua_block)
+* [exit_worker_by_lua_file](#exit_worker_by_lua_file)
 * [set_by_lua](#set_by_lua)
 * [set_by_lua_block](#set_by_lua_block)
 * [set_by_lua_file](#set_by_lua_file)
@@ -1578,6 +1580,47 @@ This hook no longer runs in the cache manager and cache loader processes since t
 
 [Back to TOC](#directives)
 
+exit_worker_by_lua_block
+------------------------
+
+**syntax:** *exit_worker_by_lua_block { lua-script }*
+
+**context:** *http*
+
+**phase:** *exiting-worker*
+
+Runs the specified Lua code upon every Nginx worker process's exit when the master process is enabled. When the master process is disabled, this hook will run before the Nginx process exits.
+
+This hook is often used to release resources allocated by each worker (e.g. resources allocated by [init_worker_by_lua*](#init_worker_by_lua)), or to prevent workers from exiting abnormally.
+
+For example,
+
+```nginx
+
+ exit_worker_by_lua_block {
+     print("log from exit_worker_by_lua_block")
+ }
+```
+
+This directive was first introduced in the `v0.10.18` release.
+
+[Back to TOC](#directives)
+
+exit_worker_by_lua_file
+-----------------------
+
+**syntax:** *exit_worker_by_lua_file &lt;path-to-lua-script-file&gt;*
+
+**context:** *http*
+
+**phase:** *exiting-worker*
+
+Similar to [exit_worker_by_lua_block](#exit_worker_by_lua_block), but accepts the file path to a Lua source file or Lua bytecode file.
+
+This directive was first introduced in the `v0.10.18` release.
+
+[Back to TOC](#directives)
+
 set_by_lua
 ----------
 
@@ -3577,7 +3620,7 @@ HTTP status constants
 Nginx log level constants
 -------------------------
 
-**context:** *init_by_lua&#42;, init_worker_by_lua&#42;, set_by_lua&#42;, rewrite_by_lua&#42;, access_by_lua&#42;, content_by_lua&#42;, header_filter_by_lua&#42;, body_filter_by_lua&#42;, log_by_lua&#42;, ngx.timer.&#42;, balancer_by_lua&#42;, ssl_certificate_by_lua&#42;, ssl_session_fetch_by_lua&#42;, ssl_session_store_by_lua&#42;*
+**context:** *init_by_lua&#42;, init_worker_by_lua&#42;, set_by_lua&#42;, rewrite_by_lua&#42;, access_by_lua&#42;, content_by_lua&#42;, header_filter_by_lua&#42;, body_filter_by_lua&#42;, log_by_lua&#42;, ngx.timer.&#42;, balancer_by_lua&#42;, ssl_certificate_by_lua&#42;, ssl_session_fetch_by_lua&#42;, ssl_session_store_by_lua&#42;, exit_worker_by_lua&#42;*
 
 ```lua
 
@@ -3601,7 +3644,7 @@ print
 
 **syntax:** *print(...)*
 
-**context:** *init_by_lua&#42;, init_worker_by_lua&#42;, set_by_lua&#42;, rewrite_by_lua&#42;, access_by_lua&#42;, content_by_lua&#42;, header_filter_by_lua&#42;, body_filter_by_lua&#42;, log_by_lua&#42;, ngx.timer.&#42;, balancer_by_lua&#42;, ssl_certificate_by_lua&#42;, ssl_session_fetch_by_lua&#42;, ssl_session_store_by_lua&#42;*
+**context:** *init_by_lua&#42;, init_worker_by_lua&#42;, set_by_lua&#42;, rewrite_by_lua&#42;, access_by_lua&#42;, content_by_lua&#42;, header_filter_by_lua&#42;, body_filter_by_lua&#42;, log_by_lua&#42;, ngx.timer.&#42;, balancer_by_lua&#42;, ssl_certificate_by_lua&#42;, ssl_session_fetch_by_lua&#42;, ssl_session_store_by_lua&#42;, exit_worker_by_lua&#42;*
 
 Writes argument values into the Nginx `error.log` file with the `ngx.NOTICE` log level.
 
@@ -3621,7 +3664,7 @@ There is a hard coded `2048` byte limitation on error message lengths in the Ngi
 ngx.ctx
 -------
 
-**context:** *init_worker_by_lua&#42;, set_by_lua&#42;, rewrite_by_lua&#42;, access_by_lua&#42;, content_by_lua&#42;, header_filter_by_lua&#42;, body_filter_by_lua&#42;, log_by_lua&#42;, ngx.timer.&#42;, balancer_by_lua&#42;*
+**context:** *init_worker_by_lua&#42;, set_by_lua&#42;, rewrite_by_lua&#42;, access_by_lua&#42;, content_by_lua&#42;, header_filter_by_lua&#42;, body_filter_by_lua&#42;, log_by_lua&#42;, ngx.timer.&#42;, balancer_by_lua&#42;, exit_worker_by_lua&#42;*
 
 This table can be used to store per-request Lua context data and has a life time identical to the current request (as with the Nginx variables).
 
@@ -5448,7 +5491,7 @@ ngx.log
 
 **syntax:** *ngx.log(log_level, ...)*
 
-**context:** *init_by_lua&#42;, init_worker_by_lua&#42;, set_by_lua&#42;, rewrite_by_lua&#42;, access_by_lua&#42;, content_by_lua&#42;, header_filter_by_lua&#42;, body_filter_by_lua&#42;, log_by_lua&#42;, ngx.timer.&#42;, balancer_by_lua&#42;, ssl_certificate_by_lua&#42;, ssl_session_fetch_by_lua&#42;, ssl_session_store_by_lua&#42;*
+**context:** *init_by_lua&#42;, init_worker_by_lua&#42;, set_by_lua&#42;, rewrite_by_lua&#42;, access_by_lua&#42;, content_by_lua&#42;, header_filter_by_lua&#42;, body_filter_by_lua&#42;, log_by_lua&#42;, ngx.timer.&#42;, balancer_by_lua&#42;, ssl_certificate_by_lua&#42;, ssl_session_fetch_by_lua&#42;, ssl_session_store_by_lua&#42;, exit_worker_by_lua&#42;*
 
 Log arguments concatenated to error.log with the given logging level.
 
@@ -5595,7 +5638,7 @@ ngx.escape_uri
 
 **syntax:** *newstr = ngx.escape_uri(str, type?)*
 
-**context:** *init_by_lua&#42;, init_worker_by_lua&#42;, set_by_lua&#42;, rewrite_by_lua&#42;, access_by_lua&#42;, content_by_lua&#42;, header_filter_by_lua&#42;, body_filter_by_lua&#42;, log_by_lua&#42;, ngx.timer.&#42;, balancer_by_lua&#42;, ssl_certificate_by_lua&#42;, ssl_session_fetch_by_lua&#42;, ssl_session_store_by_lua&#42;*
+**context:** *init_by_lua&#42;, init_worker_by_lua&#42;, set_by_lua&#42;, rewrite_by_lua&#42;, access_by_lua&#42;, content_by_lua&#42;, header_filter_by_lua&#42;, body_filter_by_lua&#42;, log_by_lua&#42;, ngx.timer.&#42;, balancer_by_lua&#42;, ssl_certificate_by_lua&#42;, ssl_session_fetch_by_lua&#42;, ssl_session_store_by_lua&#42;, exit_worker_by_lua&#42;*
 
 Since `v0.10.16`, this function accepts an optional `type` argument.
 It accepts the following values (defaults to `2`):
@@ -5614,7 +5657,7 @@ ngx.unescape_uri
 
 **syntax:** *newstr = ngx.unescape_uri(str)*
 
-**context:** *init_by_lua&#42;, init_worker_by_lua&#42;, set_by_lua&#42;, rewrite_by_lua&#42;, access_by_lua&#42;, content_by_lua&#42;, header_filter_by_lua&#42;, body_filter_by_lua&#42;, log_by_lua&#42;, ngx.timer.&#42;, balancer_by_lua&#42;, ssl_certificate_by_lua&#42;*
+**context:** *init_by_lua&#42;, init_worker_by_lua&#42;, set_by_lua&#42;, rewrite_by_lua&#42;, access_by_lua&#42;, content_by_lua&#42;, header_filter_by_lua&#42;, body_filter_by_lua&#42;, log_by_lua&#42;, ngx.timer.&#42;, balancer_by_lua&#42;, ssl_certificate_by_lua&#42;, exit_worker_by_lua&#42;*
 
 Unescape `str` as an escaped URI component.
 
@@ -5878,7 +5921,7 @@ ngx.today
 
 **syntax:** *str = ngx.today()*
 
-**context:** *init_worker_by_lua&#42;, set_by_lua&#42;, rewrite_by_lua&#42;, access_by_lua&#42;, content_by_lua&#42;, header_filter_by_lua&#42;, body_filter_by_lua&#42;, log_by_lua&#42;, ngx.timer.&#42;, balancer_by_lua&#42;, ssl_certificate_by_lua&#42;, ssl_session_fetch_by_lua&#42;, ssl_session_store_by_lua&#42;*
+**context:** *init_worker_by_lua&#42;, set_by_lua&#42;, rewrite_by_lua&#42;, access_by_lua&#42;, content_by_lua&#42;, header_filter_by_lua&#42;, body_filter_by_lua&#42;, log_by_lua&#42;, ngx.timer.&#42;, balancer_by_lua&#42;, ssl_certificate_by_lua&#42;, ssl_session_fetch_by_lua&#42;, ssl_session_store_by_lua&#42;, exit_worker_by_lua&#42;*
 
 Returns current date (in the format `yyyy-mm-dd`) from the Nginx cached time (no syscall involved unlike Lua's date library).
 
@@ -5891,7 +5934,7 @@ ngx.time
 
 **syntax:** *secs = ngx.time()*
 
-**context:** *init_worker_by_lua&#42;, set_by_lua&#42;, rewrite_by_lua&#42;, access_by_lua&#42;, content_by_lua&#42;, header_filter_by_lua&#42;, body_filter_by_lua&#42;, log_by_lua&#42;, ngx.timer.&#42;, balancer_by_lua&#42;, ssl_certificate_by_lua&#42;, ssl_session_fetch_by_lua&#42;, ssl_session_store_by_lua&#42;*
+**context:** *init_worker_by_lua&#42;, set_by_lua&#42;, rewrite_by_lua&#42;, access_by_lua&#42;, content_by_lua&#42;, header_filter_by_lua&#42;, body_filter_by_lua&#42;, log_by_lua&#42;, ngx.timer.&#42;, balancer_by_lua&#42;, ssl_certificate_by_lua&#42;, ssl_session_fetch_by_lua&#42;, ssl_session_store_by_lua&#42;, exit_worker_by_lua&#42;*
 
 Returns the elapsed seconds from the epoch for the current time stamp from the Nginx cached time (no syscall involved unlike Lua's date library).
 
@@ -5904,7 +5947,7 @@ ngx.now
 
 **syntax:** *secs = ngx.now()*
 
-**context:** *init_worker_by_lua&#42;, set_by_lua&#42;, rewrite_by_lua&#42;, access_by_lua&#42;, content_by_lua&#42;, header_filter_by_lua&#42;, body_filter_by_lua&#42;, log_by_lua&#42;, ngx.timer.&#42;, balancer_by_lua&#42;, ssl_certificate_by_lua&#42;, ssl_session_fetch_by_lua&#42;, ssl_session_store_by_lua&#42;*
+**context:** *init_worker_by_lua&#42;, set_by_lua&#42;, rewrite_by_lua&#42;, access_by_lua&#42;, content_by_lua&#42;, header_filter_by_lua&#42;, body_filter_by_lua&#42;, log_by_lua&#42;, ngx.timer.&#42;, balancer_by_lua&#42;, ssl_certificate_by_lua&#42;, ssl_session_fetch_by_lua&#42;, ssl_session_store_by_lua&#42;, exit_worker_by_lua&#42;*
 
 Returns a floating-point number for the elapsed time in seconds (including milliseconds as the decimal part) from the epoch for the current time stamp from the Nginx cached time (no syscall involved unlike Lua's date library).
 
@@ -5919,7 +5962,7 @@ ngx.update_time
 
 **syntax:** *ngx.update_time()*
 
-**context:** *init_worker_by_lua&#42;, set_by_lua&#42;, rewrite_by_lua&#42;, access_by_lua&#42;, content_by_lua&#42;, header_filter_by_lua&#42;, body_filter_by_lua&#42;, log_by_lua&#42;, ngx.timer.&#42;, balancer_by_lua&#42;, ssl_certificate_by_lua&#42;, ssl_session_fetch_by_lua&#42;, ssl_session_store_by_lua&#42;*
+**context:** *init_worker_by_lua&#42;, set_by_lua&#42;, rewrite_by_lua&#42;, access_by_lua&#42;, content_by_lua&#42;, header_filter_by_lua&#42;, body_filter_by_lua&#42;, log_by_lua&#42;, ngx.timer.&#42;, balancer_by_lua&#42;, ssl_certificate_by_lua&#42;, ssl_session_fetch_by_lua&#42;, ssl_session_store_by_lua&#42;, exit_worker_by_lua&#42;*
 
 Forcibly updates the Nginx current time cache. This call involves a syscall and thus has some overhead, so do not abuse it.
 
@@ -5932,7 +5975,7 @@ ngx.localtime
 
 **syntax:** *str = ngx.localtime()*
 
-**context:** *init_worker_by_lua&#42;, set_by_lua&#42;, rewrite_by_lua&#42;, access_by_lua&#42;, content_by_lua&#42;, header_filter_by_lua&#42;, body_filter_by_lua&#42;, log_by_lua&#42;, ngx.timer.&#42;, balancer_by_lua&#42;, ssl_certificate_by_lua&#42;, ssl_session_fetch_by_lua&#42;, ssl_session_store_by_lua&#42;*
+**context:** *init_worker_by_lua&#42;, set_by_lua&#42;, rewrite_by_lua&#42;, access_by_lua&#42;, content_by_lua&#42;, header_filter_by_lua&#42;, body_filter_by_lua&#42;, log_by_lua&#42;, ngx.timer.&#42;, balancer_by_lua&#42;, ssl_certificate_by_lua&#42;, ssl_session_fetch_by_lua&#42;, ssl_session_store_by_lua&#42;, exit_worker_by_lua&#42;*
 
 Returns the current time stamp (in the format `yyyy-mm-dd hh:mm:ss`) of the Nginx cached time (no syscall involved unlike Lua's [os.date](https://www.lua.org/manual/5.1/manual.html#pdf-os.date) function).
 
@@ -5945,7 +5988,7 @@ ngx.utctime
 
 **syntax:** *str = ngx.utctime()*
 
-**context:** *init_worker_by_lua&#42;, set_by_lua&#42;, rewrite_by_lua&#42;, access_by_lua&#42;, content_by_lua&#42;, header_filter_by_lua&#42;, body_filter_by_lua&#42;, log_by_lua&#42;, ngx.timer.&#42;, balancer_by_lua&#42;, ssl_certificate_by_lua&#42;, ssl_session_fetch_by_lua&#42;, ssl_session_store_by_lua&#42;*
+**context:** *init_worker_by_lua&#42;, set_by_lua&#42;, rewrite_by_lua&#42;, access_by_lua&#42;, content_by_lua&#42;, header_filter_by_lua&#42;, body_filter_by_lua&#42;, log_by_lua&#42;, ngx.timer.&#42;, balancer_by_lua&#42;, ssl_certificate_by_lua&#42;, ssl_session_fetch_by_lua&#42;, ssl_session_store_by_lua&#42;, exit_worker_by_lua&#42;*
 
 Returns the current time stamp (in the format `yyyy-mm-dd hh:mm:ss`) of the Nginx cached time (no syscall involved unlike Lua's [os.date](https://www.lua.org/manual/5.1/manual.html#pdf-os.date) function).
 
@@ -5958,7 +6001,7 @@ ngx.cookie_time
 
 **syntax:** *str = ngx.cookie_time(sec)*
 
-**context:** *init_worker_by_lua&#42;, set_by_lua&#42;, rewrite_by_lua&#42;, access_by_lua&#42;, content_by_lua&#42;, header_filter_by_lua&#42;, body_filter_by_lua&#42;, log_by_lua&#42;, ngx.timer.&#42;, balancer_by_lua&#42;, ssl_certificate_by_lua&#42;, ssl_session_fetch_by_lua&#42;, ssl_session_store_by_lua&#42;*
+**context:** *init_worker_by_lua&#42;, set_by_lua&#42;, rewrite_by_lua&#42;, access_by_lua&#42;, content_by_lua&#42;, header_filter_by_lua&#42;, body_filter_by_lua&#42;, log_by_lua&#42;, ngx.timer.&#42;, balancer_by_lua&#42;, ssl_certificate_by_lua&#42;, ssl_session_fetch_by_lua&#42;, ssl_session_store_by_lua&#42;, exit_worker_by_lua&#42;*
 
 Returns a formatted string can be used as the cookie expiration time. The parameter `sec` is the time stamp in seconds (like those returned from [ngx.time](#ngxtime)).
 
@@ -5975,7 +6018,7 @@ ngx.http_time
 
 **syntax:** *str = ngx.http_time(sec)*
 
-**context:** *init_worker_by_lua&#42;, set_by_lua&#42;, rewrite_by_lua&#42;, access_by_lua&#42;, content_by_lua&#42;, header_filter_by_lua&#42;, body_filter_by_lua&#42;, log_by_lua&#42;, ngx.timer.&#42;, balancer_by_lua&#42;, ssl_certificate_by_lua&#42;, ssl_session_fetch_by_lua&#42;, ssl_session_store_by_lua&#42;*
+**context:** *init_worker_by_lua&#42;, set_by_lua&#42;, rewrite_by_lua&#42;, access_by_lua&#42;, content_by_lua&#42;, header_filter_by_lua&#42;, body_filter_by_lua&#42;, log_by_lua&#42;, ngx.timer.&#42;, balancer_by_lua&#42;, ssl_certificate_by_lua&#42;, ssl_session_fetch_by_lua&#42;, ssl_session_store_by_lua&#42;, exit_worker_by_lua&#42;*
 
 Returns a formated string can be used as the http header time (for example, being used in `Last-Modified` header). The parameter `sec` is the time stamp in seconds (like those returned from [ngx.time](#ngxtime)).
 
@@ -5992,7 +6035,7 @@ ngx.parse_http_time
 
 **syntax:** *sec = ngx.parse_http_time(str)*
 
-**context:** *init_worker_by_lua&#42;, set_by_lua&#42;, rewrite_by_lua&#42;, access_by_lua&#42;, content_by_lua&#42;, header_filter_by_lua&#42;, body_filter_by_lua&#42;, log_by_lua&#42;, ngx.timer.&#42;, balancer_by_lua&#42;, ssl_certificate_by_lua&#42;, ssl_session_fetch_by_lua&#42;, ssl_session_store_by_lua&#42;*
+**context:** *init_worker_by_lua&#42;, set_by_lua&#42;, rewrite_by_lua&#42;, access_by_lua&#42;, content_by_lua&#42;, header_filter_by_lua&#42;, body_filter_by_lua&#42;, log_by_lua&#42;, ngx.timer.&#42;, balancer_by_lua&#42;, ssl_certificate_by_lua&#42;, ssl_session_fetch_by_lua&#42;, ssl_session_store_by_lua&#42;, exit_worker_by_lua&#42;*
 
 Parse the http time string (as returned by [ngx.http_time](#ngxhttp_time)) into seconds. Returns the seconds or `nil` if the input string is in bad forms.
 
@@ -6022,7 +6065,7 @@ ngx.re.match
 
 **syntax:** *captures, err = ngx.re.match(subject, regex, options?, ctx?, res_table?)*
 
-**context:** *init_worker_by_lua&#42;, set_by_lua&#42;, rewrite_by_lua&#42;, access_by_lua&#42;, content_by_lua&#42;, header_filter_by_lua&#42;, body_filter_by_lua&#42;, log_by_lua&#42;, ngx.timer.&#42;, balancer_by_lua&#42;, ssl_certificate_by_lua&#42;, ssl_session_fetch_by_lua&#42;, ssl_session_store_by_lua&#42;*
+**context:** *init_worker_by_lua&#42;, set_by_lua&#42;, rewrite_by_lua&#42;, access_by_lua&#42;, content_by_lua&#42;, header_filter_by_lua&#42;, body_filter_by_lua&#42;, log_by_lua&#42;, ngx.timer.&#42;, balancer_by_lua&#42;, ssl_certificate_by_lua&#42;, ssl_session_fetch_by_lua&#42;, ssl_session_store_by_lua&#42;, exit_worker_by_lua&#42;*
 
 Matches the `subject` string using the Perl compatible regular expression `regex` with the optional `options`.
 
@@ -6181,7 +6224,7 @@ ngx.re.find
 
 **syntax:** *from, to, err = ngx.re.find(subject, regex, options?, ctx?, nth?)*
 
-**context:** *init_worker_by_lua&#42;, set_by_lua&#42;, rewrite_by_lua&#42;, access_by_lua&#42;, content_by_lua&#42;, header_filter_by_lua&#42;, body_filter_by_lua&#42;, log_by_lua&#42;, ngx.timer.&#42;, balancer_by_lua&#42;, ssl_certificate_by_lua&#42;, ssl_session_fetch_by_lua&#42;, ssl_session_store_by_lua&#42;*
+**context:** *init_worker_by_lua&#42;, set_by_lua&#42;, rewrite_by_lua&#42;, access_by_lua&#42;, content_by_lua&#42;, header_filter_by_lua&#42;, body_filter_by_lua&#42;, log_by_lua&#42;, ngx.timer.&#42;, balancer_by_lua&#42;, ssl_certificate_by_lua&#42;, ssl_session_fetch_by_lua&#42;, ssl_session_store_by_lua&#42;, exit_worker_by_lua&#42;*
 
 Similar to [ngx.re.match](#ngxrematch) but only returns the beginning index (`from`) and end index (`to`) of the matched substring. The returned indexes are 1-based and can be fed directly into the [string.sub](https://www.lua.org/manual/5.1/manual.html#pdf-string.sub) API function to obtain the matched substring.
 
@@ -6236,7 +6279,7 @@ ngx.re.gmatch
 
 **syntax:** *iterator, err = ngx.re.gmatch(subject, regex, options?)*
 
-**context:** *init_worker_by_lua&#42;, set_by_lua&#42;, rewrite_by_lua&#42;, access_by_lua&#42;, content_by_lua&#42;, header_filter_by_lua&#42;, body_filter_by_lua&#42;, log_by_lua&#42;, ngx.timer.&#42;, balancer_by_lua&#42;, ssl_certificate_by_lua&#42;, ssl_session_fetch_by_lua&#42;, ssl_session_store_by_lua&#42;*
+**context:** *init_worker_by_lua&#42;, set_by_lua&#42;, rewrite_by_lua&#42;, access_by_lua&#42;, content_by_lua&#42;, header_filter_by_lua&#42;, body_filter_by_lua&#42;, log_by_lua&#42;, ngx.timer.&#42;, balancer_by_lua&#42;, ssl_certificate_by_lua&#42;, ssl_session_fetch_by_lua&#42;, ssl_session_store_by_lua&#42;, exit_worker_by_lua&#42;*
 
 Similar to [ngx.re.match](#ngxrematch), but returns a Lua iterator instead, so as to let the user programmer iterate all the matches over the `<subject>` string argument with the PCRE `regex`.
 
@@ -6315,7 +6358,7 @@ ngx.re.sub
 
 **syntax:** *newstr, n, err = ngx.re.sub(subject, regex, replace, options?)*
 
-**context:** *init_worker_by_lua&#42;, set_by_lua&#42;, rewrite_by_lua&#42;, access_by_lua&#42;, content_by_lua&#42;, header_filter_by_lua&#42;, body_filter_by_lua&#42;, log_by_lua&#42;, ngx.timer.&#42;, balancer_by_lua&#42;, ssl_certificate_by_lua&#42;, ssl_session_fetch_by_lua&#42;, ssl_session_store_by_lua&#42;*
+**context:** *init_worker_by_lua&#42;, set_by_lua&#42;, rewrite_by_lua&#42;, access_by_lua&#42;, content_by_lua&#42;, header_filter_by_lua&#42;, body_filter_by_lua&#42;, log_by_lua&#42;, ngx.timer.&#42;, balancer_by_lua&#42;, ssl_certificate_by_lua&#42;, ssl_session_fetch_by_lua&#42;, ssl_session_store_by_lua&#42;, exit_worker_by_lua&#42;*
 
 Substitutes the first match of the Perl compatible regular expression `regex` on the `subject` argument string with the string or function argument `replace`. The optional `options` argument has exactly the same meaning as in [ngx.re.match](#ngxrematch).
 
@@ -6383,7 +6426,7 @@ ngx.re.gsub
 
 **syntax:** *newstr, n, err = ngx.re.gsub(subject, regex, replace, options?)*
 
-**context:** *init_worker_by_lua&#42;, set_by_lua&#42;, rewrite_by_lua&#42;, access_by_lua&#42;, content_by_lua&#42;, header_filter_by_lua&#42;, body_filter_by_lua&#42;, log_by_lua&#42;, ngx.timer.&#42;, balancer_by_lua&#42;, ssl_certificate_by_lua&#42;, ssl_session_fetch_by_lua&#42;, ssl_session_store_by_lua&#42;*
+**context:** *init_worker_by_lua&#42;, set_by_lua&#42;, rewrite_by_lua&#42;, access_by_lua&#42;, content_by_lua&#42;, header_filter_by_lua&#42;, body_filter_by_lua&#42;, log_by_lua&#42;, ngx.timer.&#42;, balancer_by_lua&#42;, ssl_certificate_by_lua&#42;, ssl_session_fetch_by_lua&#42;, ssl_session_store_by_lua&#42;, exit_worker_by_lua&#42;*
 
 Just like [ngx.re.sub](#ngxresub), but does global substitution.
 
@@ -6424,7 +6467,7 @@ ngx.shared.DICT
 
 **syntax:** *dict = ngx.shared\[name_var\]*
 
-**context:** *init_by_lua&#42;, init_worker_by_lua&#42;, set_by_lua&#42;, rewrite_by_lua&#42;, access_by_lua&#42;, content_by_lua&#42;, header_filter_by_lua&#42;, body_filter_by_lua&#42;, log_by_lua&#42;, ngx.timer.&#42;, balancer_by_lua&#42;, ssl_certificate_by_lua&#42;, ssl_session_fetch_by_lua&#42;, ssl_session_store_by_lua&#42;*
+**context:** *init_by_lua&#42;, init_worker_by_lua&#42;, set_by_lua&#42;, rewrite_by_lua&#42;, access_by_lua&#42;, content_by_lua&#42;, header_filter_by_lua&#42;, body_filter_by_lua&#42;, log_by_lua&#42;, ngx.timer.&#42;, balancer_by_lua&#42;, ssl_certificate_by_lua&#42;, ssl_session_fetch_by_lua&#42;, ssl_session_store_by_lua&#42;, exit_worker_by_lua&#42;*
 
 Fetching the shm-based Lua dictionary object for the shared memory zone named `DICT` defined by the [lua_shared_dict](#lua_shared_dict) directive.
 
@@ -7806,7 +7849,7 @@ ngx.get_phase
 
 **syntax:** *str = ngx.get_phase()*
 
-**context:** *init_by_lua&#42;, init_worker_by_lua&#42;, set_by_lua&#42;, rewrite_by_lua&#42;, access_by_lua&#42;, content_by_lua&#42;, header_filter_by_lua&#42;, body_filter_by_lua&#42;, log_by_lua&#42;, ngx.timer.&#42;, balancer_by_lua&#42;, ssl_certificate_by_lua&#42;, ssl_session_fetch_by_lua&#42;, ssl_session_store_by_lua&#42;*
+**context:** *init_by_lua&#42;, init_worker_by_lua&#42;, set_by_lua&#42;, rewrite_by_lua&#42;, access_by_lua&#42;, content_by_lua&#42;, header_filter_by_lua&#42;, body_filter_by_lua&#42;, log_by_lua&#42;, ngx.timer.&#42;, balancer_by_lua&#42;, ssl_certificate_by_lua&#42;, ssl_session_fetch_by_lua&#42;, ssl_session_store_by_lua&#42;, exit_worker_by_lua&#42;*
 
 Retrieves the current running phase name. Possible return values are
 
@@ -7838,6 +7881,8 @@ Retrieves the current running phase name. Possible return values are
 	for the context of [log_by_lua*](#log_by_lua).
 * `timer`
 	for the context of user callback functions for [ngx.timer.*](#ngxtimerat).
+* `exit_worker`
+	for the context of [exit_worker_by_lua*](#exit_worker_by_lua).
 
 This API was first introduced in the `v0.5.10` release.
 
@@ -8147,7 +8192,7 @@ ngx.timer.at
 
 **syntax:** *hdl, err = ngx.timer.at(delay, callback, user_arg1, user_arg2, ...)*
 
-**context:** *init_worker_by_lua&#42;, set_by_lua&#42;, rewrite_by_lua&#42;, access_by_lua&#42;, content_by_lua&#42;, header_filter_by_lua&#42;, body_filter_by_lua&#42;, log_by_lua&#42;, ngx.timer.&#42;, balancer_by_lua&#42;, ssl_certificate_by_lua&#42;, ssl_session_fetch_by_lua&#42;, ssl_session_store_by_lua&#42;*
+**context:** *init_worker_by_lua&#42;, set_by_lua&#42;, rewrite_by_lua&#42;, access_by_lua&#42;, content_by_lua&#42;, header_filter_by_lua&#42;, body_filter_by_lua&#42;, log_by_lua&#42;, ngx.timer.&#42;, balancer_by_lua&#42;, ssl_certificate_by_lua&#42;, ssl_session_fetch_by_lua&#42;, ssl_session_store_by_lua&#42;, exit_worker_by_lua&#42;*
 
 Creates an Nginx timer with a user callback function as well as optional user arguments.
 
@@ -8283,7 +8328,7 @@ ngx.timer.every
 
 **syntax:** *hdl, err = ngx.timer.every(delay, callback, user_arg1, user_arg2, ...)*
 
-**context:** *init_worker_by_lua&#42;, set_by_lua&#42;, rewrite_by_lua&#42;, access_by_lua&#42;, content_by_lua&#42;, header_filter_by_lua&#42;, body_filter_by_lua&#42;, log_by_lua&#42;, ngx.timer.&#42;, balancer_by_lua&#42;, ssl_certificate_by_lua&#42;, ssl_session_fetch_by_lua&#42;, ssl_session_store_by_lua&#42;*
+**context:** *init_worker_by_lua&#42;, set_by_lua&#42;, rewrite_by_lua&#42;, access_by_lua&#42;, content_by_lua&#42;, header_filter_by_lua&#42;, body_filter_by_lua&#42;, log_by_lua&#42;, ngx.timer.&#42;, balancer_by_lua&#42;, ssl_certificate_by_lua&#42;, ssl_session_fetch_by_lua&#42;, ssl_session_store_by_lua&#42;, exit_worker_by_lua&#42;*
 
 Similar to the [ngx.timer.at](#ngxtimerat) API function, but
 
@@ -8306,7 +8351,7 @@ ngx.timer.running_count
 
 **syntax:** *count = ngx.timer.running_count()*
 
-**context:** *init_worker_by_lua&#42;, set_by_lua&#42;, rewrite_by_lua&#42;, access_by_lua&#42;, content_by_lua&#42;, header_filter_by_lua&#42;, body_filter_by_lua&#42;, log_by_lua&#42;, ngx.timer.&#42;, balancer_by_lua&#42;, ssl_certificate_by_lua&#42;, ssl_session_fetch_by_lua&#42;, ssl_session_store_by_lua&#42;*
+**context:** *init_worker_by_lua&#42;, set_by_lua&#42;, rewrite_by_lua&#42;, access_by_lua&#42;, content_by_lua&#42;, header_filter_by_lua&#42;, body_filter_by_lua&#42;, log_by_lua&#42;, ngx.timer.&#42;, balancer_by_lua&#42;, ssl_certificate_by_lua&#42;, ssl_session_fetch_by_lua&#42;, ssl_session_store_by_lua&#42;, exit_worker_by_lua&#42;*
 
 Returns the number of timers currently running.
 
@@ -8319,7 +8364,7 @@ ngx.timer.pending_count
 
 **syntax:** *count = ngx.timer.pending_count()*
 
-**context:** *init_worker_by_lua&#42;, set_by_lua&#42;, rewrite_by_lua&#42;, access_by_lua&#42;, content_by_lua&#42;, header_filter_by_lua&#42;, body_filter_by_lua&#42;, log_by_lua&#42;, ngx.timer.&#42;, balancer_by_lua&#42;, ssl_certificate_by_lua&#42;, ssl_session_fetch_by_lua&#42;, ssl_session_store_by_lua&#42;*
+**context:** *init_worker_by_lua&#42;, set_by_lua&#42;, rewrite_by_lua&#42;, access_by_lua&#42;, content_by_lua&#42;, header_filter_by_lua&#42;, body_filter_by_lua&#42;, log_by_lua&#42;, ngx.timer.&#42;, balancer_by_lua&#42;, ssl_certificate_by_lua&#42;, ssl_session_fetch_by_lua&#42;, ssl_session_store_by_lua&#42;, exit_worker_by_lua&#42;*
 
 Returns the number of pending timers.
 
@@ -8332,7 +8377,7 @@ ngx.config.subsystem
 
 **syntax:** *subsystem = ngx.config.subsystem*
 
-**context:** *set_by_lua&#42;, rewrite_by_lua&#42;, access_by_lua&#42;, content_by_lua&#42;, header_filter_by_lua&#42;, body_filter_by_lua&#42;, log_by_lua&#42;, ngx.timer.&#42;, init_by_lua&#42;, init_worker_by_lua&#42;*
+**context:** *set_by_lua&#42;, rewrite_by_lua&#42;, access_by_lua&#42;, content_by_lua&#42;, header_filter_by_lua&#42;, body_filter_by_lua&#42;, log_by_lua&#42;, ngx.timer.&#42;, init_by_lua&#42;, init_worker_by_lua&#42;, exit_worker_by_lua&#42;*
 
 This string field indicates the Nginx subsystem the current Lua environment is based on. For this module, this field always takes the string value `"http"`. For
 [ngx_stream_lua_module](https://github.com/openresty/stream-lua-nginx-module#readme), however, this field takes the value `"stream"`.
@@ -8346,7 +8391,7 @@ ngx.config.debug
 
 **syntax:** *debug = ngx.config.debug*
 
-**context:** *set_by_lua&#42;, rewrite_by_lua&#42;, access_by_lua&#42;, content_by_lua&#42;, header_filter_by_lua&#42;, body_filter_by_lua&#42;, log_by_lua&#42;, ngx.timer.&#42;, init_by_lua&#42;, init_worker_by_lua&#42;*
+**context:** *set_by_lua&#42;, rewrite_by_lua&#42;, access_by_lua&#42;, content_by_lua&#42;, header_filter_by_lua&#42;, body_filter_by_lua&#42;, log_by_lua&#42;, ngx.timer.&#42;, init_by_lua&#42;, init_worker_by_lua&#42;, exit_worker_by_lua&#42;*
 
 This boolean field indicates whether the current Nginx is a debug build, i.e., being built by the `./configure` option `--with-debug`.
 
@@ -8359,7 +8404,7 @@ ngx.config.prefix
 
 **syntax:** *prefix = ngx.config.prefix()*
 
-**context:** *set_by_lua&#42;, rewrite_by_lua&#42;, access_by_lua&#42;, content_by_lua&#42;, header_filter_by_lua&#42;, body_filter_by_lua&#42;, log_by_lua&#42;, ngx.timer.&#42;, init_by_lua&#42;, init_worker_by_lua&#42;*
+**context:** *set_by_lua&#42;, rewrite_by_lua&#42;, access_by_lua&#42;, content_by_lua&#42;, header_filter_by_lua&#42;, body_filter_by_lua&#42;, log_by_lua&#42;, ngx.timer.&#42;, init_by_lua&#42;, init_worker_by_lua&#42;, exit_worker_by_lua&#42;*
 
 Returns the Nginx server "prefix" path, as determined by the `-p` command-line option when running the Nginx executable, or the path specified by the `--prefix` command-line option when building Nginx with the `./configure` script.
 
@@ -8372,7 +8417,7 @@ ngx.config.nginx_version
 
 **syntax:** *ver = ngx.config.nginx_version*
 
-**context:** *set_by_lua&#42;, rewrite_by_lua&#42;, access_by_lua&#42;, content_by_lua&#42;, header_filter_by_lua&#42;, body_filter_by_lua&#42;, log_by_lua&#42;, ngx.timer.&#42;, init_by_lua&#42;, init_worker_by_lua&#42;*
+**context:** *set_by_lua&#42;, rewrite_by_lua&#42;, access_by_lua&#42;, content_by_lua&#42;, header_filter_by_lua&#42;, body_filter_by_lua&#42;, log_by_lua&#42;, ngx.timer.&#42;, init_by_lua&#42;, init_worker_by_lua&#42;, exit_worker_by_lua&#42;*
 
 This field take an integral value indicating the version number of the current Nginx core being used. For example, the version number `1.4.3` results in the Lua number 1004003.
 
@@ -8411,7 +8456,7 @@ ngx.worker.exiting
 
 **syntax:** *exiting = ngx.worker.exiting()*
 
-**context:** *set_by_lua&#42;, rewrite_by_lua&#42;, access_by_lua&#42;, content_by_lua&#42;, header_filter_by_lua&#42;, body_filter_by_lua&#42;, log_by_lua&#42;, ngx.timer.&#42;, init_by_lua&#42;, init_worker_by_lua&#42;*
+**context:** *set_by_lua&#42;, rewrite_by_lua&#42;, access_by_lua&#42;, content_by_lua&#42;, header_filter_by_lua&#42;, body_filter_by_lua&#42;, log_by_lua&#42;, ngx.timer.&#42;, init_by_lua&#42;, init_worker_by_lua&#42;, exit_worker_by_lua&#42;*
 
 This function returns a boolean value indicating whether the current Nginx worker process already starts exiting. Nginx worker process exiting happens on Nginx server quit or configuration reload (aka HUP reload).
 
@@ -8424,7 +8469,7 @@ ngx.worker.pid
 
 **syntax:** *pid = ngx.worker.pid()*
 
-**context:** *set_by_lua&#42;, rewrite_by_lua&#42;, access_by_lua&#42;, content_by_lua&#42;, header_filter_by_lua&#42;, body_filter_by_lua&#42;, log_by_lua&#42;, ngx.timer.&#42;, init_by_lua&#42;, init_worker_by_lua&#42;*
+**context:** *set_by_lua&#42;, rewrite_by_lua&#42;, access_by_lua&#42;, content_by_lua&#42;, header_filter_by_lua&#42;, body_filter_by_lua&#42;, log_by_lua&#42;, ngx.timer.&#42;, init_by_lua&#42;, init_worker_by_lua&#42;, exit_worker_by_lua&#42;*
 
 This function returns a Lua number for the process ID (PID) of the current Nginx worker process. This API is more efficient than `ngx.var.pid` and can be used in contexts where the [ngx.var.VARIABLE](#ngxvarvariable) API cannot be used (like [init_worker_by_lua](#init_worker_by_lua)).
 
@@ -8437,7 +8482,7 @@ ngx.worker.count
 
 **syntax:** *count = ngx.worker.count()*
 
-**context:** *set_by_lua&#42;, rewrite_by_lua&#42;, access_by_lua&#42;, content_by_lua&#42;, header_filter_by_lua&#42;, body_filter_by_lua&#42;, log_by_lua&#42;, ngx.timer.&#42;, init_by_lua&#42;, init_worker_by_lua&#42;*
+**context:** *set_by_lua&#42;, rewrite_by_lua&#42;, access_by_lua&#42;, content_by_lua&#42;, header_filter_by_lua&#42;, body_filter_by_lua&#42;, log_by_lua&#42;, ngx.timer.&#42;, init_by_lua&#42;, init_worker_by_lua&#42;, exit_worker_by_lua&#42;*
 
 Returns the total number of the Nginx worker processes (i.e., the value configured
 by the [worker_processes](https://nginx.org/en/docs/ngx_core_module.html#worker_processes)
@@ -8452,7 +8497,7 @@ ngx.worker.id
 
 **syntax:** *id = ngx.worker.id()*
 
-**context:** *set_by_lua&#42;, rewrite_by_lua&#42;, access_by_lua&#42;, content_by_lua&#42;, header_filter_by_lua&#42;, body_filter_by_lua&#42;, log_by_lua&#42;, ngx.timer.&#42;, init_worker_by_lua&#42;*
+**context:** *set_by_lua&#42;, rewrite_by_lua&#42;, access_by_lua&#42;, content_by_lua&#42;, header_filter_by_lua&#42;, body_filter_by_lua&#42;, log_by_lua&#42;, ngx.timer.&#42;, init_worker_by_lua&#42;, exit_worker_by_lua&#42;*
 
 Returns the ordinal number of the current Nginx worker processes (starting from number 0).
 
@@ -8557,7 +8602,7 @@ ndk.set_var.DIRECTIVE
 
 **syntax:** *res = ndk.set_var.DIRECTIVE_NAME*
 
-**context:** *init_worker_by_lua&#42;, set_by_lua&#42;, rewrite_by_lua&#42;, access_by_lua&#42;, content_by_lua&#42;, header_filter_by_lua&#42;, body_filter_by_lua&#42;, log_by_lua&#42;, ngx.timer.&#42;, balancer_by_lua&#42;, ssl_certificate_by_lua&#42;, ssl_session_fetch_by_lua&#42;, ssl_session_store_by_lua&#42;*
+**context:** *init_worker_by_lua&#42;, set_by_lua&#42;, rewrite_by_lua&#42;, access_by_lua&#42;, content_by_lua&#42;, header_filter_by_lua&#42;, body_filter_by_lua&#42;, log_by_lua&#42;, ngx.timer.&#42;, balancer_by_lua&#42;, ssl_certificate_by_lua&#42;, ssl_session_fetch_by_lua&#42;, ssl_session_store_by_lua&#42;, exit_worker_by_lua&#42;*
 
 This mechanism allows calling other Nginx C modules' directives that are implemented by [Nginx Devel Kit](https://github.com/simplresty/ngx_devel_kit) (NDK)'s set_var submodule's `ndk_set_var_value`.
 
diff --git a/config b/config
index 18014aa9..6cb951bb 100644
--- a/config
+++ b/config
@@ -278,6 +278,7 @@ HTTP_LUA_SRCS=" \
             $ngx_addon_dir/src/ngx_http_lua_bodyfilterby.c \
             $ngx_addon_dir/src/ngx_http_lua_initby.c \
             $ngx_addon_dir/src/ngx_http_lua_initworkerby.c \
+            $ngx_addon_dir/src/ngx_http_lua_exitworkerby.c \
             $ngx_addon_dir/src/ngx_http_lua_socket_udp.c \
             $ngx_addon_dir/src/ngx_http_lua_req_method.c \
             $ngx_addon_dir/src/ngx_http_lua_phase.c \
@@ -339,6 +340,7 @@ HTTP_LUA_DEPS=" \
             $ngx_addon_dir/src/ngx_http_lua_bodyfilterby.h \
             $ngx_addon_dir/src/ngx_http_lua_initby.h \
             $ngx_addon_dir/src/ngx_http_lua_initworkerby.h \
+            $ngx_addon_dir/src/ngx_http_lua_exitworkerby.h \
             $ngx_addon_dir/src/ngx_http_lua_socket_udp.h \
             $ngx_addon_dir/src/ngx_http_lua_probe.h \
             $ngx_addon_dir/src/ngx_http_lua_uthread.h \
diff --git a/doc/HttpLuaModule.wiki b/doc/HttpLuaModule.wiki
index 37d8a136..04a26949 100644
--- a/doc/HttpLuaModule.wiki
+++ b/doc/HttpLuaModule.wiki
@@ -1281,6 +1281,40 @@ This directive was first introduced in the <code>v0.9.5</code> release.
 
 This hook no longer runs in the cache manager and cache loader processes since the <code>v0.10.12</code> release.
 
+== exit_worker_by_lua_block ==
+
+'''syntax:''' ''exit_worker_by_lua_block { lua-script }''
+
+'''context:''' ''http''
+
+'''phase:''' ''exiting-worker''
+
+Runs the specified Lua code upon every Nginx worker process's exit when the master process is enabled. When the master process is disabled, this hook will run before the Nginx process exits.
+
+This hook is often used to release resources allocated by each worker (e.g. resources allocated by [[#init_worker_by_lua|init_worker_by_lua*]]), or to prevent workers from exiting abnormally.
+
+For example,
+
+<geshi lang="nginx">
+    exit_worker_by_lua_block {
+        print("log from exit_worker_by_lua_block")
+    }
+</geshi>
+
+This directive was first introduced in the <code>v0.10.18</code> release.
+
+== exit_worker_by_lua_file ==
+
+'''syntax:''' ''exit_worker_by_lua_file <path-to-lua-script-file>''
+
+'''context:''' ''http''
+
+'''phase:''' ''exiting-worker''
+
+Similar to [[#exit_worker_by_lua_block|exit_worker_by_lua_block]], but accepts the file path to a Lua source file or Lua bytecode file.
+
+This directive was first introduced in the <code>v0.10.18</code> release.
+
 == set_by_lua ==
 
 '''syntax:''' ''set_by_lua $res <lua-script-str> [$arg1 $arg2 ...]''
@@ -2913,7 +2947,7 @@ These constants are usually used in [[#ngx.location.capture|ngx.location.capture
 
 == Nginx log level constants ==
 
-'''context:''' ''init_by_lua*, init_worker_by_lua*, set_by_lua*, rewrite_by_lua*, access_by_lua*, content_by_lua*, header_filter_by_lua*, body_filter_by_lua*, log_by_lua*, ngx.timer.*, balancer_by_lua*, ssl_certificate_by_lua*, ssl_session_fetch_by_lua*, ssl_session_store_by_lua*''
+'''context:''' ''init_by_lua*, init_worker_by_lua*, set_by_lua*, rewrite_by_lua*, access_by_lua*, content_by_lua*, header_filter_by_lua*, body_filter_by_lua*, log_by_lua*, ngx.timer.*, balancer_by_lua*, ssl_certificate_by_lua*, ssl_session_fetch_by_lua*, ssl_session_store_by_lua*, exit_worker_by_lua*''
 
 <geshi lang="lua">
   ngx.STDERR
@@ -2933,7 +2967,7 @@ These constants are usually used by the [[#ngx.log|ngx.log]] method.
 
 '''syntax:''' ''print(...)''
 
-'''context:''' ''init_by_lua*, init_worker_by_lua*, set_by_lua*, rewrite_by_lua*, access_by_lua*, content_by_lua*, header_filter_by_lua*, body_filter_by_lua*, log_by_lua*, ngx.timer.*, balancer_by_lua*, ssl_certificate_by_lua*, ssl_session_fetch_by_lua*, ssl_session_store_by_lua*''
+'''context:''' ''init_by_lua*, init_worker_by_lua*, set_by_lua*, rewrite_by_lua*, access_by_lua*, content_by_lua*, header_filter_by_lua*, body_filter_by_lua*, log_by_lua*, ngx.timer.*, balancer_by_lua*, ssl_certificate_by_lua*, ssl_session_fetch_by_lua*, ssl_session_store_by_lua*, exit_worker_by_lua*''
 
 Writes argument values into the Nginx <code>error.log</code> file with the <code>ngx.NOTICE</code> log level.
 
@@ -2949,7 +2983,7 @@ There is a hard coded <code>2048</code> byte limitation on error message lengths
 
 == ngx.ctx ==
 
-'''context:''' ''init_worker_by_lua*, set_by_lua*, rewrite_by_lua*, access_by_lua*, content_by_lua*, header_filter_by_lua*, body_filter_by_lua*, log_by_lua*, ngx.timer.*, balancer_by_lua*''
+'''context:''' ''init_worker_by_lua*, set_by_lua*, rewrite_by_lua*, access_by_lua*, content_by_lua*, header_filter_by_lua*, body_filter_by_lua*, log_by_lua*, ngx.timer.*, balancer_by_lua*, exit_worker_by_lua*''
 
 This table can be used to store per-request Lua context data and has a life time identical to the current request (as with the Nginx variables).
 
@@ -4573,7 +4607,7 @@ Just as [[#ngx.print|ngx.print]] but also emit a trailing newline.
 
 '''syntax:''' ''ngx.log(log_level, ...)''
 
-'''context:''' ''init_by_lua*, init_worker_by_lua*, set_by_lua*, rewrite_by_lua*, access_by_lua*, content_by_lua*, header_filter_by_lua*, body_filter_by_lua*, log_by_lua*, ngx.timer.*, balancer_by_lua*, ssl_certificate_by_lua*, ssl_session_fetch_by_lua*, ssl_session_store_by_lua*''
+'''context:''' ''init_by_lua*, init_worker_by_lua*, set_by_lua*, rewrite_by_lua*, access_by_lua*, content_by_lua*, header_filter_by_lua*, body_filter_by_lua*, log_by_lua*, ngx.timer.*, balancer_by_lua*, ssl_certificate_by_lua*, ssl_session_fetch_by_lua*, ssl_session_store_by_lua*, exit_worker_by_lua*''
 
 Log arguments concatenated to error.log with the given logging level.
 
@@ -4700,7 +4734,7 @@ This method was introduced in the <code>0.5.0rc30</code> release.
 
 '''syntax:''' ''newstr = ngx.escape_uri(str, type?)''
 
-'''context:''' ''init_by_lua*, init_worker_by_lua*, set_by_lua*, rewrite_by_lua*, access_by_lua*, content_by_lua*, header_filter_by_lua*, body_filter_by_lua*, log_by_lua*, ngx.timer.*, balancer_by_lua*, ssl_certificate_by_lua*, ssl_session_fetch_by_lua*, ssl_session_store_by_lua*''
+'''context:''' ''init_by_lua*, init_worker_by_lua*, set_by_lua*, rewrite_by_lua*, access_by_lua*, content_by_lua*, header_filter_by_lua*, body_filter_by_lua*, log_by_lua*, ngx.timer.*, balancer_by_lua*, ssl_certificate_by_lua*, ssl_session_fetch_by_lua*, ssl_session_store_by_lua*, exit_worker_by_lua*''
 
 Since `v0.10.16`, this function accepts an optional <code>type</code> argument.
 It accepts the following values (defaults to `2`):
@@ -4716,7 +4750,7 @@ alphabetic characters, digits, <code>-</code>, <code>.</code>, <code>_</code>,
 
 '''syntax:''' ''newstr = ngx.unescape_uri(str)''
 
-'''context:''' ''init_by_lua*, init_worker_by_lua*, set_by_lua*, rewrite_by_lua*, access_by_lua*, content_by_lua*, header_filter_by_lua*, body_filter_by_lua*, log_by_lua*, ngx.timer.*, balancer_by_lua*, ssl_certificate_by_lua*''
+'''context:''' ''init_by_lua*, init_worker_by_lua*, set_by_lua*, rewrite_by_lua*, access_by_lua*, content_by_lua*, header_filter_by_lua*, body_filter_by_lua*, log_by_lua*, ngx.timer.*, balancer_by_lua*, ssl_certificate_by_lua*, exit_worker_by_lua*''
 
 Unescape <code>str</code> as an escaped URI component.
 
@@ -4937,7 +4971,7 @@ Returns a quoted SQL string literal according to the MySQL quoting rules.
 
 '''syntax:''' ''str = ngx.today()''
 
-'''context:''' ''init_worker_by_lua*, set_by_lua*, rewrite_by_lua*, access_by_lua*, content_by_lua*, header_filter_by_lua*, body_filter_by_lua*, log_by_lua*, ngx.timer.*, balancer_by_lua*, ssl_certificate_by_lua*, ssl_session_fetch_by_lua*, ssl_session_store_by_lua*''
+'''context:''' ''init_worker_by_lua*, set_by_lua*, rewrite_by_lua*, access_by_lua*, content_by_lua*, header_filter_by_lua*, body_filter_by_lua*, log_by_lua*, ngx.timer.*, balancer_by_lua*, ssl_certificate_by_lua*, ssl_session_fetch_by_lua*, ssl_session_store_by_lua*, exit_worker_by_lua*''
 
 Returns current date (in the format <code>yyyy-mm-dd</code>) from the Nginx cached time (no syscall involved unlike Lua's date library).
 
@@ -4947,7 +4981,7 @@ This is the local time.
 
 '''syntax:''' ''secs = ngx.time()''
 
-'''context:''' ''init_worker_by_lua*, set_by_lua*, rewrite_by_lua*, access_by_lua*, content_by_lua*, header_filter_by_lua*, body_filter_by_lua*, log_by_lua*, ngx.timer.*, balancer_by_lua*, ssl_certificate_by_lua*, ssl_session_fetch_by_lua*, ssl_session_store_by_lua*''
+'''context:''' ''init_worker_by_lua*, set_by_lua*, rewrite_by_lua*, access_by_lua*, content_by_lua*, header_filter_by_lua*, body_filter_by_lua*, log_by_lua*, ngx.timer.*, balancer_by_lua*, ssl_certificate_by_lua*, ssl_session_fetch_by_lua*, ssl_session_store_by_lua*, exit_worker_by_lua*''
 
 Returns the elapsed seconds from the epoch for the current time stamp from the Nginx cached time (no syscall involved unlike Lua's date library).
 
@@ -4957,7 +4991,7 @@ Updates of the Nginx time cache can be forced by calling [[#ngx.update_time|ngx.
 
 '''syntax:''' ''secs = ngx.now()''
 
-'''context:''' ''init_worker_by_lua*, set_by_lua*, rewrite_by_lua*, access_by_lua*, content_by_lua*, header_filter_by_lua*, body_filter_by_lua*, log_by_lua*, ngx.timer.*, balancer_by_lua*, ssl_certificate_by_lua*, ssl_session_fetch_by_lua*, ssl_session_store_by_lua*''
+'''context:''' ''init_worker_by_lua*, set_by_lua*, rewrite_by_lua*, access_by_lua*, content_by_lua*, header_filter_by_lua*, body_filter_by_lua*, log_by_lua*, ngx.timer.*, balancer_by_lua*, ssl_certificate_by_lua*, ssl_session_fetch_by_lua*, ssl_session_store_by_lua*, exit_worker_by_lua*''
 
 Returns a floating-point number for the elapsed time in seconds (including milliseconds as the decimal part) from the epoch for the current time stamp from the Nginx cached time (no syscall involved unlike Lua's date library).
 
@@ -4969,7 +5003,7 @@ This API was first introduced in <code>v0.3.1rc32</code>.
 
 '''syntax:''' ''ngx.update_time()''
 
-'''context:''' ''init_worker_by_lua*, set_by_lua*, rewrite_by_lua*, access_by_lua*, content_by_lua*, header_filter_by_lua*, body_filter_by_lua*, log_by_lua*, ngx.timer.*, balancer_by_lua*, ssl_certificate_by_lua*, ssl_session_fetch_by_lua*, ssl_session_store_by_lua*''
+'''context:''' ''init_worker_by_lua*, set_by_lua*, rewrite_by_lua*, access_by_lua*, content_by_lua*, header_filter_by_lua*, body_filter_by_lua*, log_by_lua*, ngx.timer.*, balancer_by_lua*, ssl_certificate_by_lua*, ssl_session_fetch_by_lua*, ssl_session_store_by_lua*, exit_worker_by_lua*''
 
 Forcibly updates the Nginx current time cache. This call involves a syscall and thus has some overhead, so do not abuse it.
 
@@ -4979,7 +5013,7 @@ This API was first introduced in <code>v0.3.1rc32</code>.
 
 '''syntax:''' ''str = ngx.localtime()''
 
-'''context:''' ''init_worker_by_lua*, set_by_lua*, rewrite_by_lua*, access_by_lua*, content_by_lua*, header_filter_by_lua*, body_filter_by_lua*, log_by_lua*, ngx.timer.*, balancer_by_lua*, ssl_certificate_by_lua*, ssl_session_fetch_by_lua*, ssl_session_store_by_lua*''
+'''context:''' ''init_worker_by_lua*, set_by_lua*, rewrite_by_lua*, access_by_lua*, content_by_lua*, header_filter_by_lua*, body_filter_by_lua*, log_by_lua*, ngx.timer.*, balancer_by_lua*, ssl_certificate_by_lua*, ssl_session_fetch_by_lua*, ssl_session_store_by_lua*, exit_worker_by_lua*''
 
 Returns the current time stamp (in the format <code>yyyy-mm-dd hh:mm:ss</code>) of the Nginx cached time (no syscall involved unlike Lua's [https://www.lua.org/manual/5.1/manual.html#pdf-os.date os.date] function).
 
@@ -4989,7 +5023,7 @@ This is the local time.
 
 '''syntax:''' ''str = ngx.utctime()''
 
-'''context:''' ''init_worker_by_lua*, set_by_lua*, rewrite_by_lua*, access_by_lua*, content_by_lua*, header_filter_by_lua*, body_filter_by_lua*, log_by_lua*, ngx.timer.*, balancer_by_lua*, ssl_certificate_by_lua*, ssl_session_fetch_by_lua*, ssl_session_store_by_lua*''
+'''context:''' ''init_worker_by_lua*, set_by_lua*, rewrite_by_lua*, access_by_lua*, content_by_lua*, header_filter_by_lua*, body_filter_by_lua*, log_by_lua*, ngx.timer.*, balancer_by_lua*, ssl_certificate_by_lua*, ssl_session_fetch_by_lua*, ssl_session_store_by_lua*, exit_worker_by_lua*''
 
 Returns the current time stamp (in the format <code>yyyy-mm-dd hh:mm:ss</code>) of the Nginx cached time (no syscall involved unlike Lua's [https://www.lua.org/manual/5.1/manual.html#pdf-os.date os.date] function).
 
@@ -4999,7 +5033,7 @@ This is the UTC time.
 
 '''syntax:''' ''str = ngx.cookie_time(sec)''
 
-'''context:''' ''init_worker_by_lua*, set_by_lua*, rewrite_by_lua*, access_by_lua*, content_by_lua*, header_filter_by_lua*, body_filter_by_lua*, log_by_lua*, ngx.timer.*, balancer_by_lua*, ssl_certificate_by_lua*, ssl_session_fetch_by_lua*, ssl_session_store_by_lua*''
+'''context:''' ''init_worker_by_lua*, set_by_lua*, rewrite_by_lua*, access_by_lua*, content_by_lua*, header_filter_by_lua*, body_filter_by_lua*, log_by_lua*, ngx.timer.*, balancer_by_lua*, ssl_certificate_by_lua*, ssl_session_fetch_by_lua*, ssl_session_store_by_lua*, exit_worker_by_lua*''
 
 Returns a formatted string can be used as the cookie expiration time. The parameter <code>sec</code> is the time stamp in seconds (like those returned from [[#ngx.time|ngx.time]]).
 
@@ -5012,7 +5046,7 @@ Returns a formatted string can be used as the cookie expiration time. The parame
 
 '''syntax:''' ''str = ngx.http_time(sec)''
 
-'''context:''' ''init_worker_by_lua*, set_by_lua*, rewrite_by_lua*, access_by_lua*, content_by_lua*, header_filter_by_lua*, body_filter_by_lua*, log_by_lua*, ngx.timer.*, balancer_by_lua*, ssl_certificate_by_lua*, ssl_session_fetch_by_lua*, ssl_session_store_by_lua*''
+'''context:''' ''init_worker_by_lua*, set_by_lua*, rewrite_by_lua*, access_by_lua*, content_by_lua*, header_filter_by_lua*, body_filter_by_lua*, log_by_lua*, ngx.timer.*, balancer_by_lua*, ssl_certificate_by_lua*, ssl_session_fetch_by_lua*, ssl_session_store_by_lua*, exit_worker_by_lua*''
 
 Returns a formated string can be used as the http header time (for example, being used in <code>Last-Modified</code> header). The parameter <code>sec</code> is the time stamp in seconds (like those returned from [[#ngx.time|ngx.time]]).
 
@@ -5025,7 +5059,7 @@ Returns a formated string can be used as the http header time (for example, bein
 
 '''syntax:''' ''sec = ngx.parse_http_time(str)''
 
-'''context:''' ''init_worker_by_lua*, set_by_lua*, rewrite_by_lua*, access_by_lua*, content_by_lua*, header_filter_by_lua*, body_filter_by_lua*, log_by_lua*, ngx.timer.*, balancer_by_lua*, ssl_certificate_by_lua*, ssl_session_fetch_by_lua*, ssl_session_store_by_lua*''
+'''context:''' ''init_worker_by_lua*, set_by_lua*, rewrite_by_lua*, access_by_lua*, content_by_lua*, header_filter_by_lua*, body_filter_by_lua*, log_by_lua*, ngx.timer.*, balancer_by_lua*, ssl_certificate_by_lua*, ssl_session_fetch_by_lua*, ssl_session_store_by_lua*, exit_worker_by_lua*''
 
 Parse the http time string (as returned by [[#ngx.http_time|ngx.http_time]]) into seconds. Returns the seconds or <code>nil</code> if the input string is in bad forms.
 
@@ -5048,7 +5082,7 @@ Returns <code>true</code> if the current request is an Nginx subrequest, or <cod
 
 '''syntax:''' ''captures, err = ngx.re.match(subject, regex, options?, ctx?, res_table?)''
 
-'''context:''' ''init_worker_by_lua*, set_by_lua*, rewrite_by_lua*, access_by_lua*, content_by_lua*, header_filter_by_lua*, body_filter_by_lua*, log_by_lua*, ngx.timer.*, balancer_by_lua*, ssl_certificate_by_lua*, ssl_session_fetch_by_lua*, ssl_session_store_by_lua*''
+'''context:''' ''init_worker_by_lua*, set_by_lua*, rewrite_by_lua*, access_by_lua*, content_by_lua*, header_filter_by_lua*, body_filter_by_lua*, log_by_lua*, ngx.timer.*, balancer_by_lua*, ssl_certificate_by_lua*, ssl_session_fetch_by_lua*, ssl_session_store_by_lua*, exit_worker_by_lua*''
 
 Matches the <code>subject</code> string using the Perl compatible regular expression <code>regex</code> with the optional <code>options</code>.
 
@@ -5196,7 +5230,7 @@ This feature was introduced in the <code>v0.2.1rc11</code> release.
 
 '''syntax:''' ''from, to, err = ngx.re.find(subject, regex, options?, ctx?, nth?)''
 
-'''context:''' ''init_worker_by_lua*, set_by_lua*, rewrite_by_lua*, access_by_lua*, content_by_lua*, header_filter_by_lua*, body_filter_by_lua*, log_by_lua*, ngx.timer.*, balancer_by_lua*, ssl_certificate_by_lua*, ssl_session_fetch_by_lua*, ssl_session_store_by_lua*''
+'''context:''' ''init_worker_by_lua*, set_by_lua*, rewrite_by_lua*, access_by_lua*, content_by_lua*, header_filter_by_lua*, body_filter_by_lua*, log_by_lua*, ngx.timer.*, balancer_by_lua*, ssl_certificate_by_lua*, ssl_session_fetch_by_lua*, ssl_session_store_by_lua*, exit_worker_by_lua*''
 
 Similar to [[#ngx.re.match|ngx.re.match]] but only returns the beginning index (<code>from</code>) and end index (<code>to</code>) of the matched substring. The returned indexes are 1-based and can be fed directly into the [https://www.lua.org/manual/5.1/manual.html#pdf-string.sub string.sub] API function to obtain the matched substring.
 
@@ -5246,7 +5280,7 @@ This API function was first introduced in the <code>v0.9.2</code> release.
 
 '''syntax:''' ''iterator, err = ngx.re.gmatch(subject, regex, options?)''
 
-'''context:''' ''init_worker_by_lua*, set_by_lua*, rewrite_by_lua*, access_by_lua*, content_by_lua*, header_filter_by_lua*, body_filter_by_lua*, log_by_lua*, ngx.timer.*, balancer_by_lua*, ssl_certificate_by_lua*, ssl_session_fetch_by_lua*, ssl_session_store_by_lua*''
+'''context:''' ''init_worker_by_lua*, set_by_lua*, rewrite_by_lua*, access_by_lua*, content_by_lua*, header_filter_by_lua*, body_filter_by_lua*, log_by_lua*, ngx.timer.*, balancer_by_lua*, ssl_certificate_by_lua*, ssl_session_fetch_by_lua*, ssl_session_store_by_lua*, exit_worker_by_lua*''
 
 Similar to [[#ngx.re.match|ngx.re.match]], but returns a Lua iterator instead, so as to let the user programmer iterate all the matches over the <code><subject></code> string argument with the PCRE <code>regex</code>.
 
@@ -5320,7 +5354,7 @@ This feature was first introduced in the <code>v0.2.1rc12</code> release.
 
 '''syntax:''' ''newstr, n, err = ngx.re.sub(subject, regex, replace, options?)''
 
-'''context:''' ''init_worker_by_lua*, set_by_lua*, rewrite_by_lua*, access_by_lua*, content_by_lua*, header_filter_by_lua*, body_filter_by_lua*, log_by_lua*, ngx.timer.*, balancer_by_lua*, ssl_certificate_by_lua*, ssl_session_fetch_by_lua*, ssl_session_store_by_lua*''
+'''context:''' ''init_worker_by_lua*, set_by_lua*, rewrite_by_lua*, access_by_lua*, content_by_lua*, header_filter_by_lua*, body_filter_by_lua*, log_by_lua*, ngx.timer.*, balancer_by_lua*, ssl_certificate_by_lua*, ssl_session_fetch_by_lua*, ssl_session_store_by_lua*, exit_worker_by_lua*''
 
 Substitutes the first match of the Perl compatible regular expression <code>regex</code> on the <code>subject</code> argument string with the string or function argument <code>replace</code>. The optional <code>options</code> argument has exactly the same meaning as in [[#ngx.re.match|ngx.re.match]].
 
@@ -5381,7 +5415,7 @@ This feature was first introduced in the <code>v0.2.1rc13</code> release.
 
 '''syntax:''' ''newstr, n, err = ngx.re.gsub(subject, regex, replace, options?)''
 
-'''context:''' ''init_worker_by_lua*, set_by_lua*, rewrite_by_lua*, access_by_lua*, content_by_lua*, header_filter_by_lua*, body_filter_by_lua*, log_by_lua*, ngx.timer.*, balancer_by_lua*, ssl_certificate_by_lua*, ssl_session_fetch_by_lua*, ssl_session_store_by_lua*''
+'''context:''' ''init_worker_by_lua*, set_by_lua*, rewrite_by_lua*, access_by_lua*, content_by_lua*, header_filter_by_lua*, body_filter_by_lua*, log_by_lua*, ngx.timer.*, balancer_by_lua*, ssl_certificate_by_lua*, ssl_session_fetch_by_lua*, ssl_session_store_by_lua*, exit_worker_by_lua*''
 
 Just like [[#ngx.re.sub|ngx.re.sub]], but does global substitution.
 
@@ -5417,7 +5451,7 @@ This feature was first introduced in the <code>v0.2.1rc15</code> release.
 
 '''syntax:''' ''dict = ngx.shared[name_var]''
 
-'''context:''' ''init_by_lua*, init_worker_by_lua*, set_by_lua*, rewrite_by_lua*, access_by_lua*, content_by_lua*, header_filter_by_lua*, body_filter_by_lua*, log_by_lua*, ngx.timer.*, balancer_by_lua*, ssl_certificate_by_lua*, ssl_session_fetch_by_lua*, ssl_session_store_by_lua*''
+'''context:''' ''init_by_lua*, init_worker_by_lua*, set_by_lua*, rewrite_by_lua*, access_by_lua*, content_by_lua*, header_filter_by_lua*, body_filter_by_lua*, log_by_lua*, ngx.timer.*, balancer_by_lua*, ssl_certificate_by_lua*, ssl_session_fetch_by_lua*, ssl_session_store_by_lua*, exit_worker_by_lua*''
 
 Fetching the shm-based Lua dictionary object for the shared memory zone named <code>DICT</code> defined by the [[#lua_shared_dict|lua_shared_dict]] directive.
 
@@ -6643,7 +6677,7 @@ This feature was first introduced in the <code>v0.5.0rc1</code> release.
 
 '''syntax:''' ''str = ngx.get_phase()''
 
-'''context:''' ''init_by_lua*, init_worker_by_lua*, set_by_lua*, rewrite_by_lua*, access_by_lua*, content_by_lua*, header_filter_by_lua*, body_filter_by_lua*, log_by_lua*, ngx.timer.*, balancer_by_lua*, ssl_certificate_by_lua*, ssl_session_fetch_by_lua*, ssl_session_store_by_lua*''
+'''context:''' ''init_by_lua*, init_worker_by_lua*, set_by_lua*, rewrite_by_lua*, access_by_lua*, content_by_lua*, header_filter_by_lua*, body_filter_by_lua*, log_by_lua*, ngx.timer.*, balancer_by_lua*, ssl_certificate_by_lua*, ssl_session_fetch_by_lua*, ssl_session_store_by_lua*, exit_worker_by_lua*''
 
 Retrieves the current running phase name. Possible return values are
 
@@ -6675,6 +6709,8 @@ Retrieves the current running phase name. Possible return values are
 : for the context of [[#log_by_lua|log_by_lua*]].
 * <code>timer</code>
 : for the context of user callback functions for [[#ngx.timer.at|ngx.timer.*]].
+* <code>exit_worker</code>
+: for the context of [[#exit_worker_by_lua|exit_worker_by_lua*]].
 
 This API was first introduced in the <code>v0.5.10</code> release.
 
@@ -6964,7 +7000,7 @@ See also [[#lua_check_client_abort|lua_check_client_abort]].
 
 '''syntax:''' ''hdl, err = ngx.timer.at(delay, callback, user_arg1, user_arg2, ...)''
 
-'''context:''' ''init_worker_by_lua*, set_by_lua*, rewrite_by_lua*, access_by_lua*, content_by_lua*, header_filter_by_lua*, body_filter_by_lua*, log_by_lua*, ngx.timer.*, balancer_by_lua*, ssl_certificate_by_lua*, ssl_session_fetch_by_lua*, ssl_session_store_by_lua*''
+'''context:''' ''init_worker_by_lua*, set_by_lua*, rewrite_by_lua*, access_by_lua*, content_by_lua*, header_filter_by_lua*, body_filter_by_lua*, log_by_lua*, ngx.timer.*, balancer_by_lua*, ssl_certificate_by_lua*, ssl_session_fetch_by_lua*, ssl_session_store_by_lua*, exit_worker_by_lua*''
 
 Creates an Nginx timer with a user callback function as well as optional user arguments.
 
@@ -7095,7 +7131,7 @@ This API was first introduced in the <code>v0.8.0</code> release.
 
 '''syntax:''' ''hdl, err = ngx.timer.every(delay, callback, user_arg1, user_arg2, ...)''
 
-'''context:''' ''init_worker_by_lua*, set_by_lua*, rewrite_by_lua*, access_by_lua*, content_by_lua*, header_filter_by_lua*, body_filter_by_lua*, log_by_lua*, ngx.timer.*, balancer_by_lua*, ssl_certificate_by_lua*, ssl_session_fetch_by_lua*, ssl_session_store_by_lua*''
+'''context:''' ''init_worker_by_lua*, set_by_lua*, rewrite_by_lua*, access_by_lua*, content_by_lua*, header_filter_by_lua*, body_filter_by_lua*, log_by_lua*, ngx.timer.*, balancer_by_lua*, ssl_certificate_by_lua*, ssl_session_fetch_by_lua*, ssl_session_store_by_lua*, exit_worker_by_lua*''
 
 Similar to the [[#ngx.timer.at|ngx.timer.at]] API function, but
 
@@ -7115,7 +7151,7 @@ This API was first introduced in the <code>v0.10.9</code> release.
 
 '''syntax:''' ''count = ngx.timer.running_count()''
 
-'''context:''' ''init_worker_by_lua*, set_by_lua*, rewrite_by_lua*, access_by_lua*, content_by_lua*, header_filter_by_lua*, body_filter_by_lua*, log_by_lua*, ngx.timer.*, balancer_by_lua*, ssl_certificate_by_lua*, ssl_session_fetch_by_lua*, ssl_session_store_by_lua*''
+'''context:''' ''init_worker_by_lua*, set_by_lua*, rewrite_by_lua*, access_by_lua*, content_by_lua*, header_filter_by_lua*, body_filter_by_lua*, log_by_lua*, ngx.timer.*, balancer_by_lua*, ssl_certificate_by_lua*, ssl_session_fetch_by_lua*, ssl_session_store_by_lua*, exit_worker_by_lua*''
 
 Returns the number of timers currently running.
 
@@ -7125,7 +7161,7 @@ This directive was first introduced in the <code>v0.9.20</code> release.
 
 '''syntax:''' ''count = ngx.timer.pending_count()''
 
-'''context:''' ''init_worker_by_lua*, set_by_lua*, rewrite_by_lua*, access_by_lua*, content_by_lua*, header_filter_by_lua*, body_filter_by_lua*, log_by_lua*, ngx.timer.*, balancer_by_lua*, ssl_certificate_by_lua*, ssl_session_fetch_by_lua*, ssl_session_store_by_lua*''
+'''context:''' ''init_worker_by_lua*, set_by_lua*, rewrite_by_lua*, access_by_lua*, content_by_lua*, header_filter_by_lua*, body_filter_by_lua*, log_by_lua*, ngx.timer.*, balancer_by_lua*, ssl_certificate_by_lua*, ssl_session_fetch_by_lua*, ssl_session_store_by_lua*, exit_worker_by_lua*''
 
 Returns the number of pending timers.
 
@@ -7135,7 +7171,7 @@ This directive was first introduced in the <code>v0.9.20</code> release.
 
 '''syntax:''' ''subsystem = ngx.config.subsystem''
 
-'''context:''' ''set_by_lua*, rewrite_by_lua*, access_by_lua*, content_by_lua*, header_filter_by_lua*, body_filter_by_lua*, log_by_lua*, ngx.timer.*, init_by_lua*, init_worker_by_lua*''
+'''context:''' ''set_by_lua*, rewrite_by_lua*, access_by_lua*, content_by_lua*, header_filter_by_lua*, body_filter_by_lua*, log_by_lua*, ngx.timer.*, init_by_lua*, init_worker_by_lua*, exit_worker_by_lua*''
 
 This string field indicates the Nginx subsystem the current Lua environment is based on. For this module, this field always takes the string value <code>"http"</code>. For
 [https://github.com/openresty/stream-lua-nginx-module#readme ngx_stream_lua_module], however, this field takes the value <code>"stream"</code>.
@@ -7146,7 +7182,7 @@ This field was first introduced in the <code>0.10.1</code>.
 
 '''syntax:''' ''debug = ngx.config.debug''
 
-'''context:''' ''set_by_lua*, rewrite_by_lua*, access_by_lua*, content_by_lua*, header_filter_by_lua*, body_filter_by_lua*, log_by_lua*, ngx.timer.*, init_by_lua*, init_worker_by_lua*''
+'''context:''' ''set_by_lua*, rewrite_by_lua*, access_by_lua*, content_by_lua*, header_filter_by_lua*, body_filter_by_lua*, log_by_lua*, ngx.timer.*, init_by_lua*, init_worker_by_lua*, exit_worker_by_lua*''
 
 This boolean field indicates whether the current Nginx is a debug build, i.e., being built by the <code>./configure</code> option <code>--with-debug</code>.
 
@@ -7156,7 +7192,7 @@ This field was first introduced in the <code>0.8.7</code>.
 
 '''syntax:''' ''prefix = ngx.config.prefix()''
 
-'''context:''' ''set_by_lua*, rewrite_by_lua*, access_by_lua*, content_by_lua*, header_filter_by_lua*, body_filter_by_lua*, log_by_lua*, ngx.timer.*, init_by_lua*, init_worker_by_lua*''
+'''context:''' ''set_by_lua*, rewrite_by_lua*, access_by_lua*, content_by_lua*, header_filter_by_lua*, body_filter_by_lua*, log_by_lua*, ngx.timer.*, init_by_lua*, init_worker_by_lua*, exit_worker_by_lua*''
 
 Returns the Nginx server "prefix" path, as determined by the <code>-p</code> command-line option when running the Nginx executable, or the path specified by the <code>--prefix</code> command-line option when building Nginx with the <code>./configure</code> script.
 
@@ -7166,7 +7202,7 @@ This function was first introduced in the <code>0.9.2</code>.
 
 '''syntax:''' ''ver = ngx.config.nginx_version''
 
-'''context:''' ''set_by_lua*, rewrite_by_lua*, access_by_lua*, content_by_lua*, header_filter_by_lua*, body_filter_by_lua*, log_by_lua*, ngx.timer.*, init_by_lua*, init_worker_by_lua*''
+'''context:''' ''set_by_lua*, rewrite_by_lua*, access_by_lua*, content_by_lua*, header_filter_by_lua*, body_filter_by_lua*, log_by_lua*, ngx.timer.*, init_by_lua*, init_worker_by_lua*, exit_worker_by_lua*''
 
 This field take an integral value indicating the version number of the current Nginx core being used. For example, the version number <code>1.4.3</code> results in the Lua number 1004003.
 
@@ -7196,7 +7232,7 @@ This API was first introduced in the <code>0.9.3</code> release.
 
 '''syntax:''' ''exiting = ngx.worker.exiting()''
 
-'''context:''' ''set_by_lua*, rewrite_by_lua*, access_by_lua*, content_by_lua*, header_filter_by_lua*, body_filter_by_lua*, log_by_lua*, ngx.timer.*, init_by_lua*, init_worker_by_lua*''
+'''context:''' ''set_by_lua*, rewrite_by_lua*, access_by_lua*, content_by_lua*, header_filter_by_lua*, body_filter_by_lua*, log_by_lua*, ngx.timer.*, init_by_lua*, init_worker_by_lua*, exit_worker_by_lua*''
 
 This function returns a boolean value indicating whether the current Nginx worker process already starts exiting. Nginx worker process exiting happens on Nginx server quit or configuration reload (aka HUP reload).
 
@@ -7206,7 +7242,7 @@ This API was first introduced in the <code>0.9.3</code> release.
 
 '''syntax:''' ''pid = ngx.worker.pid()''
 
-'''context:''' ''set_by_lua*, rewrite_by_lua*, access_by_lua*, content_by_lua*, header_filter_by_lua*, body_filter_by_lua*, log_by_lua*, ngx.timer.*, init_by_lua*, init_worker_by_lua*''
+'''context:''' ''set_by_lua*, rewrite_by_lua*, access_by_lua*, content_by_lua*, header_filter_by_lua*, body_filter_by_lua*, log_by_lua*, ngx.timer.*, init_by_lua*, init_worker_by_lua*, exit_worker_by_lua*''
 
 This function returns a Lua number for the process ID (PID) of the current Nginx worker process. This API is more efficient than <code>ngx.var.pid</code> and can be used in contexts where the [[#ngx.var.VARIABLE|ngx.var.VARIABLE]] API cannot be used (like [[#init_worker_by_lua|init_worker_by_lua]]).
 
@@ -7216,7 +7252,7 @@ This API was first introduced in the <code>0.9.5</code> release.
 
 '''syntax:''' ''count = ngx.worker.count()''
 
-'''context:''' ''set_by_lua*, rewrite_by_lua*, access_by_lua*, content_by_lua*, header_filter_by_lua*, body_filter_by_lua*, log_by_lua*, ngx.timer.*, init_by_lua*, init_worker_by_lua*''
+'''context:''' ''set_by_lua*, rewrite_by_lua*, access_by_lua*, content_by_lua*, header_filter_by_lua*, body_filter_by_lua*, log_by_lua*, ngx.timer.*, init_by_lua*, init_worker_by_lua*, exit_worker_by_lua*''
 
 Returns the total number of the Nginx worker processes (i.e., the value configured
 by the [https://nginx.org/en/docs/ngx_core_module.html#worker_processes worker_processes]
@@ -7228,7 +7264,7 @@ This API was first introduced in the <code>0.9.20</code> release.
 
 '''syntax:''' ''id = ngx.worker.id()''
 
-'''context:''' ''set_by_lua*, rewrite_by_lua*, access_by_lua*, content_by_lua*, header_filter_by_lua*, body_filter_by_lua*, log_by_lua*, ngx.timer.*, init_worker_by_lua*''
+'''context:''' ''set_by_lua*, rewrite_by_lua*, access_by_lua*, content_by_lua*, header_filter_by_lua*, body_filter_by_lua*, log_by_lua*, ngx.timer.*, init_worker_by_lua*, exit_worker_by_lua*''
 
 Returns the ordinal number of the current Nginx worker processes (starting from number 0).
 
@@ -7318,7 +7354,7 @@ This feature requires at least ngx_lua <code>v0.10.0</code>.
 
 '''syntax:''' ''res = ndk.set_var.DIRECTIVE_NAME''
 
-'''context:''' ''init_worker_by_lua*, set_by_lua*, rewrite_by_lua*, access_by_lua*, content_by_lua*, header_filter_by_lua*, body_filter_by_lua*, log_by_lua*, ngx.timer.*, balancer_by_lua*, ssl_certificate_by_lua*, ssl_session_fetch_by_lua*, ssl_session_store_by_lua*''
+'''context:''' ''init_worker_by_lua*, set_by_lua*, rewrite_by_lua*, access_by_lua*, content_by_lua*, header_filter_by_lua*, body_filter_by_lua*, log_by_lua*, ngx.timer.*, balancer_by_lua*, ssl_certificate_by_lua*, ssl_session_fetch_by_lua*, ssl_session_store_by_lua*, exit_worker_by_lua*''
 
 This mechanism allows calling other Nginx C modules' directives that are implemented by [https://github.com/simplresty/ngx_devel_kit Nginx Devel Kit] (NDK)'s set_var submodule's <code>ndk_set_var_value</code>.
 
diff --git a/src/ngx_http_lua_common.h b/src/ngx_http_lua_common.h
index 12329849..57c031f2 100644
--- a/src/ngx_http_lua_common.h
+++ b/src/ngx_http_lua_common.h
@@ -138,6 +138,7 @@ typedef struct {
 #define NGX_HTTP_LUA_CONTEXT_SSL_CERT       0x0400
 #define NGX_HTTP_LUA_CONTEXT_SSL_SESS_STORE 0x0800
 #define NGX_HTTP_LUA_CONTEXT_SSL_SESS_FETCH 0x1000
+#define NGX_HTTP_LUA_CONTEXT_EXIT_WORKER    0x2000
 
 
 #define NGX_HTTP_LUA_FFI_NO_REQ_CTX         -100
@@ -226,6 +227,9 @@ struct ngx_http_lua_main_conf_s {
     ngx_http_lua_main_conf_handler_pt    init_worker_handler;
     ngx_str_t                            init_worker_src;
 
+    ngx_http_lua_main_conf_handler_pt    exit_worker_handler;
+    ngx_str_t                            exit_worker_src;
+
     ngx_http_lua_balancer_peer_data_t      *balancer_peer_data;
                     /* neither yielding nor recursion is possible in
                      * balancer_by_lua*, so there cannot be any races among
diff --git a/src/ngx_http_lua_directive.c b/src/ngx_http_lua_directive.c
index 6b7ccc7c..1ec641e0 100644
--- a/src/ngx_http_lua_directive.c
+++ b/src/ngx_http_lua_directive.c
@@ -23,6 +23,7 @@
 #include "ngx_http_lua_bodyfilterby.h"
 #include "ngx_http_lua_initby.h"
 #include "ngx_http_lua_initworkerby.h"
+#include "ngx_http_lua_exitworkerby.h"
 #include "ngx_http_lua_shdict.h"
 #include "ngx_http_lua_ssl_certby.h"
 #include "ngx_http_lua_lex.h"
@@ -1200,6 +1201,64 @@ ngx_http_lua_init_worker_by_lua(ngx_conf_t *cf, ngx_command_t *cmd,
 }
 
 
+char *
+ngx_http_lua_exit_worker_by_lua_block(ngx_conf_t *cf, ngx_command_t *cmd,
+    void *conf)
+{
+    char        *rv;
+    ngx_conf_t   save;
+
+    save = *cf;
+    cf->handler = ngx_http_lua_exit_worker_by_lua;
+    cf->handler_conf = conf;
+
+    rv = ngx_http_lua_conf_lua_block_parse(cf, cmd);
+
+    *cf = save;
+
+    return rv;
+}
+
+
+char *
+ngx_http_lua_exit_worker_by_lua(ngx_conf_t *cf, ngx_command_t *cmd,
+    void *conf)
+{
+    u_char                      *name;
+    ngx_str_t                   *value;
+    ngx_http_lua_main_conf_t    *lmcf = conf;
+
+    /*  must specify a content handler */
+    if (cmd->post == NULL) {
+        return NGX_CONF_ERROR;
+    }
+
+    if (lmcf->exit_worker_handler) {
+        return "is duplicate";
+    }
+
+    value = cf->args->elts;
+
+    lmcf->exit_worker_handler = (ngx_http_lua_main_conf_handler_pt) cmd->post;
+
+    if (cmd->post == ngx_http_lua_exit_worker_by_file) {
+        name = ngx_http_lua_rebase_path(cf->pool, value[1].data,
+                                        value[1].len);
+        if (name == NULL) {
+            return NGX_CONF_ERROR;
+        }
+
+        lmcf->exit_worker_src.data = name;
+        lmcf->exit_worker_src.len = ngx_strlen(name);
+
+    } else {
+        lmcf->exit_worker_src = value[1];
+    }
+
+    return NGX_CONF_OK;
+}
+
+
 #if defined(NDK) && NDK
 static ngx_int_t
 ngx_http_lua_set_by_lua_init(ngx_http_request_t *r)
diff --git a/src/ngx_http_lua_directive.h b/src/ngx_http_lua_directive.h
index 8555e2f3..adfba127 100644
--- a/src/ngx_http_lua_directive.h
+++ b/src/ngx_http_lua_directive.h
@@ -53,6 +53,10 @@ char *ngx_http_lua_init_worker_by_lua_block(ngx_conf_t *cf,
     ngx_command_t *cmd, void *conf);
 char *ngx_http_lua_init_worker_by_lua(ngx_conf_t *cf, ngx_command_t *cmd,
     void *conf);
+char *ngx_http_lua_exit_worker_by_lua_block(ngx_conf_t *cf,
+    ngx_command_t *cmd, void *conf);
+char *ngx_http_lua_exit_worker_by_lua(ngx_conf_t *cf, ngx_command_t *cmd,
+    void *conf);
 char *ngx_http_lua_code_cache(ngx_conf_t *cf, ngx_command_t *cmd, void *conf);
 char *ngx_http_lua_load_resty_core(ngx_conf_t *cf, ngx_command_t *cmd,
     void *conf);
diff --git a/src/ngx_http_lua_exitworkerby.c b/src/ngx_http_lua_exitworkerby.c
new file mode 100644
index 00000000..cd59dc4b
--- /dev/null
+++ b/src/ngx_http_lua_exitworkerby.c
@@ -0,0 +1,111 @@
+
+/*
+ * Copyright (C) Yichun Zhang (agentzh)
+ */
+
+
+#ifndef DDEBUG
+#define DDEBUG 0
+#endif
+#include "ddebug.h"
+
+
+#include "ngx_http_lua_exitworkerby.h"
+#include "ngx_http_lua_util.h"
+
+
+void
+ngx_http_lua_exit_worker(ngx_cycle_t *cycle)
+{
+    ngx_http_lua_main_conf_t    *lmcf;
+    ngx_connection_t            *c = NULL;
+    ngx_http_request_t          *r = NULL;
+    ngx_http_lua_ctx_t          *ctx;
+    ngx_http_conf_ctx_t         *conf_ctx;
+
+    lmcf = ngx_http_cycle_get_module_main_conf(cycle, ngx_http_lua_module);
+    if (lmcf == NULL
+        || lmcf->exit_worker_handler == NULL
+        || lmcf->lua == NULL
+#if !(NGX_WIN32)
+        || (ngx_process == NGX_PROCESS_HELPER
+#   ifdef HAVE_PRIVILEGED_PROCESS_PATCH
+            && !ngx_is_privileged_agent
+#   endif
+           )
+#endif  /* NGX_WIN32 */
+       )
+    {
+        return;
+    }
+
+    conf_ctx = ((ngx_http_conf_ctx_t *) cycle->conf_ctx[ngx_http_module.index]);
+
+    c = ngx_http_lua_create_fake_connection(NULL);
+    if (c == NULL) {
+        goto failed;
+    }
+
+    c->log = ngx_cycle->log;
+
+    r = ngx_http_lua_create_fake_request(c);
+    if (r == NULL) {
+        goto failed;
+    }
+
+    r->main_conf = conf_ctx->main_conf;
+    r->srv_conf = conf_ctx->srv_conf;
+    r->loc_conf = conf_ctx->loc_conf;
+
+    ctx = ngx_http_lua_create_ctx(r);
+    if (ctx == NULL) {
+        goto failed;
+    }
+
+    ctx->context = NGX_HTTP_LUA_CONTEXT_EXIT_WORKER;
+    ctx->cur_co_ctx = NULL;
+
+    ngx_http_lua_set_req(lmcf->lua, r);
+
+    (void) lmcf->exit_worker_handler(cycle->log, lmcf, lmcf->lua);
+
+    ngx_destroy_pool(c->pool);
+    return;
+
+failed:
+
+    if (c) {
+        ngx_http_lua_close_fake_connection(c);
+    }
+
+    return;
+}
+
+
+ngx_int_t
+ngx_http_lua_exit_worker_by_inline(ngx_log_t *log,
+    ngx_http_lua_main_conf_t *lmcf, lua_State *L)
+{
+    int         status;
+
+    status = luaL_loadbuffer(L, (char *) lmcf->exit_worker_src.data,
+                             lmcf->exit_worker_src.len, "=exit_worker_by_lua")
+             || ngx_http_lua_do_call(log, L);
+
+    return ngx_http_lua_report(log, L, status, "exit_worker_by_lua");
+}
+
+
+ngx_int_t
+ngx_http_lua_exit_worker_by_file(ngx_log_t *log, ngx_http_lua_main_conf_t *lmcf,
+    lua_State *L)
+{
+    int         status;
+
+    status = luaL_loadfile(L, (char *) lmcf->exit_worker_src.data)
+             || ngx_http_lua_do_call(log, L);
+
+    return ngx_http_lua_report(log, L, status, "exit_worker_by_lua_file");
+}
+
+/* vi:set ft=c ts=4 sw=4 et fdm=marker: */
diff --git a/src/ngx_http_lua_exitworkerby.h b/src/ngx_http_lua_exitworkerby.h
new file mode 100644
index 00000000..3a4274c0
--- /dev/null
+++ b/src/ngx_http_lua_exitworkerby.h
@@ -0,0 +1,25 @@
+
+/*
+ * Copyright (C) Yichun Zhang (agentzh)
+ */
+
+
+#ifndef _NGX_HTTP_LUA_EXITWORKERBY_H_INCLUDED_
+#define _NGX_HTTP_LUA_EXITWORKERBY_H_INCLUDED_
+
+
+#include "ngx_http_lua_common.h"
+
+
+ngx_int_t ngx_http_lua_exit_worker_by_inline(ngx_log_t *log,
+    ngx_http_lua_main_conf_t *lmcf, lua_State *L);
+
+ngx_int_t ngx_http_lua_exit_worker_by_file(ngx_log_t *log,
+    ngx_http_lua_main_conf_t *lmcf, lua_State *L);
+
+void ngx_http_lua_exit_worker(ngx_cycle_t *cycle);
+
+
+#endif /* _NGX_HTTP_LUA_EXITWORKERBY_H_INCLUDED_ */
+
+/* vi:set ft=c ts=4 sw=4 et fdm=marker: */
diff --git a/src/ngx_http_lua_module.c b/src/ngx_http_lua_module.c
index 9816d864..098fe87a 100644
--- a/src/ngx_http_lua_module.c
+++ b/src/ngx_http_lua_module.c
@@ -22,6 +22,7 @@
 #include "ngx_http_lua_bodyfilterby.h"
 #include "ngx_http_lua_initby.h"
 #include "ngx_http_lua_initworkerby.h"
+#include "ngx_http_lua_exitworkerby.h"
 #include "ngx_http_lua_probe.h"
 #include "ngx_http_lua_semaphore.h"
 #include "ngx_http_lua_balancer.h"
@@ -229,6 +230,20 @@ static ngx_command_t ngx_http_lua_cmds[] = {
       0,
       (void *) ngx_http_lua_init_worker_by_file },
 
+    { ngx_string("exit_worker_by_lua_block"),
+      NGX_HTTP_MAIN_CONF|NGX_CONF_BLOCK|NGX_CONF_NOARGS,
+      ngx_http_lua_exit_worker_by_lua_block,
+      NGX_HTTP_MAIN_CONF_OFFSET,
+      0,
+      (void *) ngx_http_lua_exit_worker_by_inline },
+
+    { ngx_string("exit_worker_by_lua_file"),
+      NGX_HTTP_MAIN_CONF|NGX_CONF_TAKE1,
+      ngx_http_lua_exit_worker_by_lua,
+      NGX_HTTP_MAIN_CONF_OFFSET,
+      0,
+      (void *) ngx_http_lua_exit_worker_by_file },
+
 #if defined(NDK) && NDK
     /* set_by_lua_block $res { inline Lua code } */
     { ngx_string("set_by_lua_block"),
@@ -636,7 +651,7 @@ ngx_module_t ngx_http_lua_module = {
     ngx_http_lua_init_worker,   /*  init process */
     NULL,                       /*  init thread */
     NULL,                       /*  exit thread */
-    NULL,                       /*  exit process */
+    ngx_http_lua_exit_worker,   /*  exit process */
     NULL,                       /*  exit master */
     NGX_MODULE_V1_PADDING
 };
diff --git a/src/ngx_http_lua_util.h b/src/ngx_http_lua_util.h
index 57c0814b..52d804bf 100644
--- a/src/ngx_http_lua_util.h
+++ b/src/ngx_http_lua_util.h
@@ -53,6 +53,7 @@
      : (c) == NGX_HTTP_LUA_CONTEXT_BODY_FILTER ? "body_filter_by_lua*"       \
      : (c) == NGX_HTTP_LUA_CONTEXT_TIMER ? "ngx.timer"                       \
      : (c) == NGX_HTTP_LUA_CONTEXT_INIT_WORKER ? "init_worker_by_lua*"       \
+     : (c) == NGX_HTTP_LUA_CONTEXT_EXIT_WORKER ? "exit_worker_by_lua*"       \
      : (c) == NGX_HTTP_LUA_CONTEXT_BALANCER ? "balancer_by_lua*"             \
      : (c) == NGX_HTTP_LUA_CONTEXT_SSL_CERT ? "ssl_certificate_by_lua*"      \
      : (c) == NGX_HTTP_LUA_CONTEXT_SSL_SESS_STORE ?                          \
diff --git a/t/089-phase.t b/t/089-phase.t
index 94b7619e..538dff87 100644
--- a/t/089-phase.t
+++ b/t/089-phase.t
@@ -8,7 +8,7 @@ log_level('warn');
 
 repeat_each(2);
 
-plan tests => repeat_each() * (blocks() * 2 + 1);
+plan tests => repeat_each() * (blocks() * 2 + 2);
 
 #no_diff();
 #no_long_string();
@@ -176,3 +176,28 @@ GET /lua
 init_worker
 --- no_error_log
 [error]
+
+
+
+=== TEST 11: get_phase in exit_worker_by_lua
+--- http_config
+    exit_worker_by_lua_block {
+        local phase = ngx.get_phase()
+        ngx.log(ngx.ERR, phase)
+        ngx.log(ngx.ERR, "exiting now")
+    }
+--- config
+    location /lua {
+        content_by_lua_block {
+            ngx.say("ok")
+        }
+    }
+--- request
+GET /lua
+--- response_body
+ok
+--- shutdown_error_log eval
+[
+qr/exit_worker_by_lua:\d+: exit_worker/,
+qr/exiting now$/,
+]
diff --git a/t/162-exit-worker.t b/t/162-exit-worker.t
new file mode 100644
index 00000000..cb0edf70
--- /dev/null
+++ b/t/162-exit-worker.t
@@ -0,0 +1,195 @@
+# vim:set ft= ts=4 sw=4 et fdm=marker:
+
+use Test::Nginx::Socket::Lua;
+
+master_on();
+repeat_each(2);
+
+plan tests => repeat_each() * (blocks() * 2 + 8);
+
+#log_level("warn");
+no_long_string();
+our $HtmlDir = html_dir;
+
+run_tests();
+
+__DATA__
+
+=== TEST 1: simple exit_worker_by_lua_block
+--- http_config
+    exit_worker_by_lua_block {
+        ngx.log(ngx.NOTICE, "log from exit_worker_by_lua_block")
+    }
+--- config
+    location /t {
+        echo "ok";
+    }
+--- request
+GET /t
+--- response_body
+ok
+--- shutdown_error_log
+log from exit_worker_by_lua_block
+
+
+
+=== TEST 2: simple exit_worker_by_lua_file
+--- http_config
+    exit_worker_by_lua_file html/exit_worker.lua;
+--- config
+    location /t {
+        echo "ok";
+    }
+--- user_files
+>>> exit_worker.lua
+ngx.log(ngx.NOTICE, "log from exit_worker_by_lua_file")
+--- request
+GET /t
+--- response_body
+ok
+--- shutdown_error_log
+log from exit_worker_by_lua_file
+
+
+
+=== TEST 3: exit_worker_by_lua (require a global table)
+--- http_config eval
+    qq{lua_package_path '$::HtmlDir/?.lua;;';
+        exit_worker_by_lua_block {
+            foo = require("foo")
+            ngx.log(ngx.NOTICE, foo.bar)
+        }}
+--- config
+    location /t {
+        content_by_lua_block {
+            foo = require("foo")
+            foo.bar = "hello, world"
+            ngx.say("ok")
+        }
+    }
+--- user_files
+>>> foo.lua
+return {}
+--- request
+GET /t
+--- response_body
+ok
+--- shutdown_error_log
+hello, world
+
+
+
+=== TEST 4: exit_worker_by_lua single process ngx.timer not work
+--- http_config
+    exit_worker_by_lua_block {
+        local function bar()
+            ngx.log(ngx.ERR, "run the timer!"
+        end
+
+        local ok, err = ngx.timer.at(0, bar)
+        if not ok then
+            ngx.log(ngx.ERR, "failed to create timer: ", err)
+        else
+            ngx.log(ngx.NOTICE, "success")
+        end
+    }
+--- config
+    location /t {
+        echo "ok";
+    }
+--- request
+GET /t
+--- response_body
+ok
+--- no_error_log
+[error]
+
+
+
+=== TEST 5: exit_worker_by_lua use shdict
+--- http_config
+    lua_shared_dict dog 1m;
+    exit_worker_by_lua_block {
+        local dog = ngx.shared.dog
+        local val, err = dog:get("foo")
+        if not val then
+            ngx.log(ngx.ERR, "failed get shdict: ", err)
+        else
+            ngx.log(ngx.NOTICE, "get val: ", val)
+        end
+    }
+--- config
+    location /t {
+        content_by_lua_block {
+            local dog = ngx.shared.dog
+            dog:set("foo", 100)
+            ngx.say("ok")
+        }
+    }
+--- request
+GET /t
+--- response_body
+ok
+--- shutdown_error_log
+get val: 100
+
+
+
+=== TEST 6: skip in cache processes (with exit worker and privileged agent)
+--- http_config
+    lua_package_path "../lua-resty-core/lib/?.lua;../lua-resty-lrucache/lib/?.lua;;";
+
+    proxy_cache_path /tmp/cache levels=1:2 keys_zone=cache:1m;
+
+    init_by_lua_block {
+        assert(require "ngx.process".enable_privileged_agent())
+    }
+
+    exit_worker_by_lua_block {
+        local process = require "ngx.process"
+        ngx.log(ngx.INFO, "hello from exit worker by lua, process type: ", process.type())
+    }
+--- config
+    location = /t {
+        return 200;
+    }
+--- request
+    GET /t
+--- no_error_log
+[error]
+--- shutdown_error_log eval
+[
+qr/cache loader process \d+ exited/,
+qr/cache manager process \d+ exited/,
+qr/hello from exit worker by lua, process type: worker/,
+qr/hello from exit worker by lua, process type: privileged agent/,
+qr/privileged agent process \d+ exited/,
+]
+
+
+
+=== TEST 7: skipin cache processes (with init worker but without privileged agent)
+--- http_config
+    lua_package_path "../lua-resty-core/lib/?.lua;../lua-resty-lrucache/lib/?.lua;;";
+
+    proxy_cache_path /tmp/cache levels=1:2 keys_zone=cache:1m;
+
+    exit_worker_by_lua_block {
+        local process = require "ngx.process"
+        ngx.log(ngx.INFO, "hello from exit worker by lua, process type: ", process.type())
+    }
+--- config
+    location = /t {
+        return 200;
+    }
+--- request
+    GET /t
+--- no_error_log
+[error]
+start privileged agent process
+--- shutdown_error_log eval
+[
+qr/cache loader process \d+ exited/,
+qr/cache manager process \d+ exited/,
+qr/hello from exit worker by lua, process type: worker/,
+]
diff --git a/t/163-exit-worker-hup.t b/t/163-exit-worker-hup.t
new file mode 100644
index 00000000..3f516aba
--- /dev/null
+++ b/t/163-exit-worker-hup.t
@@ -0,0 +1,86 @@
+# vim:set ft= ts=4 sw=4 et fdm=marker:
+
+our $SkipReason;
+
+BEGIN {
+    if ($ENV{TEST_NGINX_CHECK_LEAK}) {
+        $SkipReason = "unavailable for the hup tests";
+
+    } else {
+        $ENV{TEST_NGINX_USE_HUP} = 1;
+        undef $ENV{TEST_NGINX_USE_STAP};
+    }
+}
+
+use Test::Nginx::Socket::Lua $SkipReason ? (skip_all => $SkipReason) : ();
+
+repeat_each(2);
+
+plan tests => repeat_each() * (blocks() * 2 + 2);
+
+no_long_string();
+
+worker_connections(1024);
+run_tests();
+
+__DATA__
+
+=== TEST 1: simple exit_worker_by_lua_block with hup
+--- http_config
+    exit_worker_by_lua_block {
+        ngx.log(ngx.NOTICE, "log from exit_worker_by_lua_block")
+    }
+--- config
+    location /t {
+        content_by_lua_block {
+            ngx.say("ok")
+        }
+    }
+--- request
+GET /t
+--- response_body
+ok
+--- shutdown_error_log
+log from exit_worker_by_lua_block
+
+
+
+=== TEST 2: exit after worker_shutdown_timeout
+--- main_config
+    worker_shutdown_timeout 1;
+--- http_config
+    exit_worker_by_lua_block {
+        ngx.log(ngx.NOTICE, "log from exit_worker_by_lua_block")
+    }
+
+    server {
+        listen 12345;
+
+        location = /t {
+            echo 'hello world';
+        }
+    }
+--- config
+    location /t {
+        content_by_lua_block {
+            ngx.timer.at(0, function ()
+                local sock = ngx.socket.tcp()
+                sock:connect("127.0.0.1", 12345)
+                local reader = sock:receiveuntil("unknow")
+                ngx.log(ngx.NOTICE, "reading to block the exiting")
+                reader()
+            end)
+
+            ngx.sleep(0)
+
+            ngx.say("ok")
+        }
+    }
+--- request
+GET /t
+--- response_body
+ok
+--- error_log
+reading to block the exiting
+--- shutdown_error_log
+log from exit_worker_by_lua_block

commit 1669904d53e03762604defdd97db7e7d357dd7a3
Author: lijunlong <lijunlong@openresty.com>
Date:   Mon Jul 20 12:34:07 2020 +0800

    * optimize: avoided use of lua_tolstring in ngx_http_lua_calc_strlen_in_table, ngx_http_lua_copy_str_in_table, ngx_http_lua_socket_udp_send, log_wrapper and ngx_http_lua_ngx_echo.

diff --git a/src/ngx_http_lua_common.h b/src/ngx_http_lua_common.h
index 781a2454..12329849 100644
--- a/src/ngx_http_lua_common.h
+++ b/src/ngx_http_lua_common.h
@@ -44,6 +44,15 @@ typedef struct {
 #endif
 
 
+/**
+ * max positive +1.7976931348623158e+308
+ * min positive +2.2250738585072014e-308
+ */
+#ifndef NGX_DOUBLE_LEN
+#define NGX_DOUBLE_LEN  25
+#endif
+
+
 #if (NGX_PCRE)
 #include <pcre.h>
 #   if (PCRE_MAJOR > 8) || (PCRE_MAJOR == 8 && PCRE_MINOR >= 21)
diff --git a/src/ngx_http_lua_log.c b/src/ngx_http_lua_log.c
index e56b9e59..43ab8209 100644
--- a/src/ngx_http_lua_log.c
+++ b/src/ngx_http_lua_log.c
@@ -14,6 +14,7 @@
 #include "ngx_http_lua_log.h"
 #include "ngx_http_lua_util.h"
 #include "ngx_http_lua_log_ringbuf.h"
+#include "ngx_http_lua_output.h"
 
 
 static int ngx_http_lua_print(lua_State *L);
@@ -143,6 +144,9 @@ log_wrapper(ngx_log_t *log, const char *ident, ngx_uint_t level,
         type = lua_type(L, i);
         switch (type) {
             case LUA_TNUMBER:
+                size += ngx_http_lua_get_num_len(L, i);
+                break;
+
             case LUA_TSTRING:
                 lua_tolstring(L, i, &len);
                 size += len;
@@ -211,6 +215,9 @@ log_wrapper(ngx_log_t *log, const char *ident, ngx_uint_t level,
         type = lua_type(L, i);
         switch (type) {
             case LUA_TNUMBER:
+                p = ngx_http_lua_write_num(L, i, p);
+                break;
+
             case LUA_TSTRING:
                 q = (u_char *) lua_tolstring(L, i, &len);
                 p = ngx_copy(p, q, len);
diff --git a/src/ngx_http_lua_output.c b/src/ngx_http_lua_output.c
index 0fe8840f..7c7403f6 100644
--- a/src/ngx_http_lua_output.c
+++ b/src/ngx_http_lua_output.c
@@ -93,6 +93,9 @@ ngx_http_lua_ngx_echo(lua_State *L, unsigned newline)
 
         switch (type) {
             case LUA_TNUMBER:
+                size += ngx_http_lua_get_num_len(L, i);
+                break;
+
             case LUA_TSTRING:
 
                 lua_tolstring(L, i, &len);
@@ -173,6 +176,9 @@ ngx_http_lua_ngx_echo(lua_State *L, unsigned newline)
         type = lua_type(L, i);
         switch (type) {
             case LUA_TNUMBER:
+                b->last = ngx_http_lua_write_num(L, i, b->last);
+                break;
+
             case LUA_TSTRING:
                 p = lua_tolstring(L, i, &len);
                 b->last = ngx_copy(b->last, (u_char *) p, len);
@@ -301,8 +307,10 @@ ngx_http_lua_calc_strlen_in_table(lua_State *L, int index, int arg_i,
 
         switch (type) {
             case LUA_TNUMBER:
-            case LUA_TSTRING:
+                size += ngx_http_lua_get_num_len(L, -1);
+                break;
 
+            case LUA_TSTRING:
                 lua_tolstring(L, -1, &len);
                 size += len;
                 break;
@@ -396,6 +404,9 @@ ngx_http_lua_copy_str_in_table(lua_State *L, int index, u_char *dst)
         type = lua_type(L, -1);
         switch (type) {
             case LUA_TNUMBER:
+                dst = ngx_http_lua_write_num(L, -1, dst);
+                break;
+
             case LUA_TSTRING:
                 p = (u_char *) lua_tolstring(L, -1, &len);
                 dst = ngx_copy(dst, p, len);
diff --git a/src/ngx_http_lua_output.h b/src/ngx_http_lua_output.h
index 109a4b44..ec1db6d0 100644
--- a/src/ngx_http_lua_output.h
+++ b/src/ngx_http_lua_output.h
@@ -23,6 +23,50 @@ ngx_int_t ngx_http_lua_flush_resume_helper(ngx_http_request_t *r,
     ngx_http_lua_ctx_t *ctx);
 
 
+/* Get the maximum possible length, not the actual length */
+static ngx_inline size_t
+ngx_http_lua_get_num_len(lua_State *L, int idx)
+{
+    double     num;
+
+    num = (double) lua_tonumber(L, idx);
+    if (num == (double) (long) num) {
+        return NGX_INT64_LEN;
+    }
+
+    return NGX_DOUBLE_LEN;
+}
+
+
+static ngx_inline u_char *
+ngx_http_lua_write_num(lua_State *L, int idx, u_char *dst)
+{
+    double     num;
+    int        n;
+
+    num = (double) lua_tonumber(L, idx);
+    if (num == (double) (long) num) {
+        dst = ngx_snprintf(dst, NGX_INT64_LEN, "%l", (long) num);
+
+    } else {
+        /**
+         * The maximum number of significant digits is 14 in lua.
+         * Please refer to lj_strfmt.c for more details.
+         */
+        n = snprintf((char *) dst, NGX_DOUBLE_LEN, "%.14g", num);
+        if (n < 0) {
+            ngx_log_error(NGX_LOG_ERR, ngx_cycle->log, ngx_errno,
+                          "snprintf(\"%f\") failed");
+
+        } else {
+            dst += n;
+        }
+    }
+
+    return dst;
+}
+
+
 #endif /* _NGX_HTTP_LUA_OUTPUT_H_INCLUDED_ */
 
 /* vi:set ft=c ts=4 sw=4 et fdm=marker: */
diff --git a/src/ngx_http_lua_socket_tcp.c b/src/ngx_http_lua_socket_tcp.c
index c99551a9..96477404 100644
--- a/src/ngx_http_lua_socket_tcp.c
+++ b/src/ngx_http_lua_socket_tcp.c
@@ -2741,11 +2741,15 @@ ngx_http_lua_socket_tcp_send(lua_State *L)
     type = lua_type(L, 2);
     switch (type) {
         case LUA_TNUMBER:
+            len = ngx_http_lua_get_num_len(L, 2);
+            break;
+
         case LUA_TSTRING:
             lua_tolstring(L, 2, &len);
             break;
 
         case LUA_TTABLE:
+            /* The maximum possible length, not the actual length */
             len = ngx_http_lua_calc_strlen_in_table(L, 2, 2, 1 /* strict */);
             break;
 
@@ -2789,13 +2793,16 @@ ngx_http_lua_socket_tcp_send(lua_State *L)
 
     switch (type) {
         case LUA_TNUMBER:
+            b->last  = ngx_http_lua_write_num(L, 2, b->last);
+            break;
+
         case LUA_TSTRING:
-            p = (u_char *) lua_tolstring(L, -1, &len);
+            p = (u_char *) lua_tolstring(L, 2, &len);
             b->last = ngx_copy(b->last, (u_char *) p, len);
             break;
 
         case LUA_TTABLE:
-            b->last = ngx_http_lua_copy_str_in_table(L, -1, b->last);
+            b->last = ngx_http_lua_copy_str_in_table(L, 2, b->last);
             break;
 
         case LUA_TNIL:
@@ -2827,6 +2834,10 @@ ngx_http_lua_socket_tcp_send(lua_State *L)
 
     u->request_bufs = cl;
 
+    lua_assert(b->last - b->start <= len);
+
+    len = b->last - b->start;
+
     u->request_len = len;
 
     /* mimic ngx_http_upstream_init_request here */
diff --git a/src/ngx_http_lua_socket_udp.c b/src/ngx_http_lua_socket_udp.c
index f9d8fc03..fd3e0742 100644
--- a/src/ngx_http_lua_socket_udp.c
+++ b/src/ngx_http_lua_socket_udp.c
@@ -727,6 +727,7 @@ ngx_http_lua_socket_udp_send(lua_State *L)
     ssize_t                              n;
     ngx_http_request_t                  *r;
     u_char                              *p;
+    u_char                              *str;
     size_t                               len;
     ngx_http_lua_socket_udp_upstream_t  *u;
     int                                  type;
@@ -781,11 +782,15 @@ ngx_http_lua_socket_udp_send(lua_State *L)
     type = lua_type(L, 2);
     switch (type) {
         case LUA_TNUMBER:
+            len = ngx_http_lua_get_num_len(L, 2);
+            break;
+
         case LUA_TSTRING:
             lua_tolstring(L, 2, &len);
             break;
 
         case LUA_TTABLE:
+            /* The maximum possible length, not the actual length */
             len = ngx_http_lua_calc_strlen_in_table(L, 2, 2, 1 /* strict */);
             break;
 
@@ -812,29 +817,29 @@ ngx_http_lua_socket_udp_send(lua_State *L)
     }
 
     query.data = lua_newuserdata(L, len);
-    query.len = len;
+    p = query.data;
 
     switch (type) {
         case LUA_TNUMBER:
+            p = ngx_http_lua_write_num(L, 2, p);
+            break;
+
         case LUA_TSTRING:
-            p = (u_char *) lua_tolstring(L, 2, &len);
-            ngx_memcpy(query.data, (u_char *) p, len);
+            str = (u_char *) lua_tolstring(L, 2, &len);
+            p = ngx_cpymem(p, (u_char *) str, len);
             break;
 
         case LUA_TTABLE:
-            (void) ngx_http_lua_copy_str_in_table(L, 2, query.data);
+            p = ngx_http_lua_copy_str_in_table(L, 2, p);
             break;
 
         case LUA_TNIL:
-            p = query.data;
             *p++ = 'n';
             *p++ = 'i';
             *p++ = 'l';
             break;
 
         case LUA_TBOOLEAN:
-            p = query.data;
-
             if (lua_toboolean(L, 2)) {
                 *p++ = 't';
                 *p++ = 'r';
@@ -855,6 +860,9 @@ ngx_http_lua_socket_udp_send(lua_State *L)
             return luaL_error(L, "impossible to reach here");
     }
 
+    query.len = p - query.data;
+    ngx_http_lua_assert(query.len <= len);
+
     u->ft_type = 0;
 
     /* mimic ngx_http_upstream_init_request here */
diff --git a/t/009-log.t b/t/009-log.t
index cb3895b8..c4597698 100644
--- a/t/009-log.t
+++ b/t/009-log.t
@@ -548,3 +548,23 @@ ok
 [error]
 --- error_log eval
 "2: hello\0world, client: "
+
+
+
+=== TEST 27: test log-level STDERR
+Note: maximum number of digits after the decimal-point character is 13
+--- config
+    location /log {
+        content_by_lua_block {
+            ngx.say("before log")
+            ngx.log(ngx.STDERR, 3.14159265357939723846)
+            ngx.say("after log")
+        }
+    }
+--- request
+GET /log
+--- response_body
+before log
+after log
+--- error_log eval
+qr/\[\] \S+: \S+ \[lua\] content_by_lua\(nginx\.conf:\d+\):3: 3.1415926535794/
diff --git a/t/058-tcp-socket.t b/t/058-tcp-socket.t
index 6ac67e08..cac464d8 100644
--- a/t/058-tcp-socket.t
+++ b/t/058-tcp-socket.t
@@ -4,7 +4,7 @@ use Test::Nginx::Socket::Lua;
 
 repeat_each(2);
 
-plan tests => repeat_each() * 222;
+plan tests => repeat_each() * 228;
 
 our $HtmlDir = html_dir;
 
@@ -1493,7 +1493,7 @@ GET /t
 
 
 
-=== TEST 25: send tables of string fragments
+=== TEST 25: send tables of string fragments (with integers too)
 --- config
     server_tokens off;
     location /t {
@@ -4158,3 +4158,172 @@ orld
 [error]
 --- error_log
 lua tcp socket calling receiveany() method to read at most 7 bytes
+
+
+
+=== TEST 70: send tables of string fragments (with floating point number too)
+--- config
+    server_tokens off;
+    location /t {
+        #set $port 5000;
+        set $port $TEST_NGINX_SERVER_PORT;
+
+        content_by_lua_block {
+            local sock = ngx.socket.tcp()
+            local port = ngx.var.port
+            local ok, err = sock:connect("127.0.0.1", port)
+            if not ok then
+                ngx.say("failed to connect: ", err)
+                return
+            end
+
+            ngx.say("connected: ", ok)
+
+            local req = {"GET", " ", "/foo", " HTTP/", 1, ".", 0, "\r\n",
+                         "Host: localhost\r\n", "Connection: close\r\n",
+                         "Foo: ", 3.1415926, "\r\n",
+                         "\r\n"}
+            -- req = "OK"
+
+            local bytes, err = sock:send(req)
+            if not bytes then
+                ngx.say("failed to send request: ", err)
+                return
+            end
+
+            ngx.say("request sent: ", bytes)
+
+            while true do
+                local line, err, part = sock:receive()
+                if line then
+                    ngx.say("received: ", line)
+
+                else
+                    ngx.say("failed to receive a line: ", err, " [", part, "]")
+                    break
+                end
+            end
+
+            ok, err = sock:close()
+            ngx.say("close: ", ok, " ", err)
+        }
+    }
+
+    location /foo {
+        content_by_lua_block {
+            ngx.say(ngx.req.get_headers()["Foo"])
+        }
+        more_clear_headers Date;
+    }
+--- request
+GET /t
+--- response_body
+connected: 1
+request sent: 73
+received: HTTP/1.1 200 OK
+received: Server: nginx
+received: Content-Type: text/plain
+received: Content-Length: 10
+received: Connection: close
+received: 
+received: 3.1415926
+failed to receive a line: closed []
+close: 1 nil
+--- no_error_log
+[error]
+
+
+
+=== TEST 71: send numbers
+the maximum number of significant digits is 14 in lua
+--- config
+    server_tokens off;
+    location /t {
+        #set $port 5000;
+        set $port $TEST_NGINX_SERVER_PORT;
+
+        content_by_lua_block {
+            local sock = ngx.socket.tcp()
+            local port = ngx.var.port
+            local ok, err = sock:connect("127.0.0.1", port)
+            if not ok then
+                ngx.say("failed to connect: ", err)
+                return
+            end
+
+            ngx.say("connected: ", ok)
+
+            local req = {"GET", " ", "/foo", " HTTP/", 1, ".", 0, "\r\n",
+                         "Host: localhost\r\n", "Connection: close\r\n",
+                         "Foo: "}
+            -- req = "OK"
+
+            local total_bytes = 0;
+            local bytes, err = sock:send(req)
+            if not bytes then
+                ngx.say("failed to send request: ", err)
+                return
+            end
+            total_bytes = total_bytes + bytes;
+
+            bytes, err = sock:send(3.14159265357939723846)
+            if not bytes then
+                ngx.say("failed to send request: ", err)
+                return
+            end
+            total_bytes = total_bytes + bytes;
+
+            bytes, err = sock:send(31415926)
+            if not bytes then
+                ngx.say("failed to send request: ", err)
+                return
+            end
+            total_bytes = total_bytes + bytes;
+
+            bytes, err = sock:send("\r\n\r\n")
+            if not bytes then
+                ngx.say("failed to send request: ", err)
+                return
+            end
+            total_bytes = total_bytes + bytes;
+
+            ngx.say("request sent: ", total_bytes)
+
+            while true do
+                local line, err, part = sock:receive()
+                if line then
+                    ngx.say("received: ", line)
+
+                else
+                    ngx.say("failed to receive a line: ", err, " [", part, "]")
+                    break
+                end
+            end
+
+            ok, err = sock:close()
+            ngx.say("close: ", ok, " ", err)
+        }
+    }
+
+    location /foo {
+        content_by_lua_block {
+            ngx.say(ngx.req.get_headers()["Foo"])
+        }
+        more_clear_headers Date;
+    }
+--- request
+GET /t
+--- response_body
+connected: 1
+request sent: 87
+received: HTTP/1.1 200 OK
+received: Server: nginx
+received: Content-Type: text/plain
+received: Content-Length: 24
+received: Connection: close
+received: 
+received: 3.141592653579431415926
+failed to receive a line: closed []
+close: 1 nil
+--- no_error_log
+[error]
diff --git a/t/087-udp-socket.t b/t/087-udp-socket.t
index b3d5e824..fc467d76 100644
--- a/t/087-udp-socket.t
+++ b/t/087-udp-socket.t
@@ -4,7 +4,7 @@ use Test::Nginx::Socket::Lua;
 
 repeat_each(2);
 
-plan tests => repeat_each() * (3 * blocks() + 13);
+plan tests => repeat_each() * (3 * blocks() + 15);
 
 our $HtmlDir = html_dir;
 
@@ -1117,3 +1117,105 @@ qr/send: fd:\d+ 4 of 4
 send: fd:\d+ 5 of 5
 send: fd:\d+ 3 of 3/
 --- log_level: debug
+
+
+
+=== TEST 21: send numbers
+Note: maximum number of digits after the decimal-point character is 13
+--- config
+    server_tokens off;
+    location /t {
+        set $port $TEST_NGINX_MEMCACHED_PORT;
+
+        content_by_lua_block {
+            local socket = ngx.socket
+            local udp = socket.udp()
+            local port = ngx.var.port
+            udp:settimeout(1000) -- 1 sec
+
+            local ok, err = udp:setpeername("127.0.0.1", ngx.var.port)
+            if not ok then
+                ngx.say("failed to connect: ", err)
+                return
+            end
+
+            local function send(data)
+                local bytes, err = udp:send(data)
+                if not bytes then
+                    ngx.say("failed to send: ", err)
+                    return
+                end
+                ngx.say("sent ok")
+            end
+
+            send(123456)
+            send(3.141926)
+            send(3.141592653579397238)
+        }
+    }
+--- request
+GET /t
+--- response_body
+sent ok
+sent ok
+sent ok
+--- no_error_log
+[error]
+--- grep_error_log eval
+qr/send: fd:\d+ \d+ of \d+/
+--- grep_error_log_out eval
+qr/send: fd:\d+ 6 of 6
+send: fd:\d+ 8 of 8
+send: fd:\d+ 15 of 15/
+--- log_level: debug
+
+
+
+=== TEST 22: send tables of string framents (with numbers too)
+the maximum number of significant digits is 14 in lua
+--- config
+    server_tokens off;
+    location /t {
+        set $port $TEST_NGINX_MEMCACHED_PORT;
+
+        content_by_lua_block {
+            local socket = ngx.socket
+            local udp = socket.udp()
+            local port = ngx.var.port
+            udp:settimeout(1000) -- 1 sec
+
+            local ok, err = udp:setpeername("127.0.0.1", ngx.var.port)
+            if not ok then
+                ngx.say("failed to connect: ", err)
+                return
+            end
+
+            local function send(data)
+                local bytes, err = udp:send(data)
+                if not bytes then
+                    ngx.say("failed to send: ", err)
+                    return
+                end
+                ngx.say("sent ok")
+            end
+
+            send({"integer: ", 1234567890123})
+            send({"float: ", 3.1419265})
+            send({"float: ", 3.141592653579397238})
+        }
+    }
+--- request
+GET /t
+--- response_body
+sent ok
+sent ok
+sent ok
+--- no_error_log
+[error]
+--- grep_error_log eval
+qr/send: fd:\d+ \d+ of \d+/
+--- grep_error_log_out eval
+qr/send: fd:\d+ 22 of 22
+send: fd:\d+ 16 of 16
+send: fd:\d+ 22 of 22/
+--- log_level: debug
diff --git a/t/164-say.t b/t/164-say.t
new file mode 100644
index 00000000..6114d245
--- /dev/null
+++ b/t/164-say.t
@@ -0,0 +1,55 @@
+# vim:set ft= ts=4 sw=4 et fdm=marker:
+
+use Test::Nginx::Socket::Lua;
+
+repeat_each(2);
+
+plan tests => blocks() * repeat_each() * 2;
+
+run_tests();
+
+__DATA__
+
+=== TEST 1: ngx.say (integer)
+--- config
+    location /lua {
+        content_by_lua_block {
+            ngx.say(2)
+        }
+    }
+--- request
+GET /lua
+--- response_body
+2
+
+
+
+=== TEST 2: ngx.say (floating point number)
+the maximum number of significant digits is 14 in lua
+--- config
+    location /lua {
+        content_by_lua_block {
+            ngx.say(3.1415926)
+            ngx.say(3.14159265357939723846)
+        }
+    }
+--- request
+GET /lua
+--- response_body
+3.1415926
+3.1415926535794
+
+
+
+=== TEST 3: ngx.say (table with number)
+--- config
+    location /lua {
+        content_by_lua_block {
+            local data = {123," ", 3.1415926}
+            ngx.say(data)
+        }
+    }
+--- request
+GET /lua
+--- response_body
+123 3.1415926

commit b050e1c944d38e0956da851b2c40ce9381a63e88
Author: lijunlong <lijunlong@openresty.com>
Date:   Sun Jul 19 17:17:51 2020 +0800

    sytle: added blank line after code block. (#1752)

diff --git a/src/ngx_http_lua_args.c b/src/ngx_http_lua_args.c
index 7b7d5eae..12808465 100644
--- a/src/ngx_http_lua_args.c
+++ b/src/ngx_http_lua_args.c
@@ -55,6 +55,7 @@ ngx_http_lua_escape_args(u_char *dst, u_char *src, size_t size)
             if (escape[*src >> 5] & (1 << (*src & 0x1f))) {
                 n++;
             }
+
             src++;
             size--;
         }
@@ -72,6 +73,7 @@ ngx_http_lua_escape_args(u_char *dst, u_char *src, size_t size)
         } else {
             *dst++ = *src++;
         }
+
         size--;
     }
 
diff --git a/src/ngx_http_lua_directive.c b/src/ngx_http_lua_directive.c
index 8f7e7fbe..6b7ccc7c 100644
--- a/src/ngx_http_lua_directive.c
+++ b/src/ngx_http_lua_directive.c
@@ -1378,6 +1378,7 @@ ngx_http_lua_conf_lua_block_parse(ngx_conf_t *cf, ngx_command_t *cmd)
                 if (dst == NULL) {
                     return NGX_CONF_ERROR;
                 }
+
                 dst->len = len;
                 dst->len--;  /* skip the trailing '}' block terminator */
 
@@ -1385,6 +1386,7 @@ ngx_http_lua_conf_lua_block_parse(ngx_conf_t *cf, ngx_command_t *cmd)
                 if (p == NULL) {
                     return NGX_CONF_ERROR;
                 }
+
                 dst->data = p;
 
                 for (i = 0; i < cf->args->nelts; i++) {
diff --git a/src/ngx_http_lua_headers.c b/src/ngx_http_lua_headers.c
index b638277b..75985a11 100644
--- a/src/ngx_http_lua_headers.c
+++ b/src/ngx_http_lua_headers.c
@@ -500,6 +500,7 @@ ngx_http_lua_ngx_resp_get_headers(lua_State *L)
     } else {
         lua_pushliteral(L, "close");
     }
+
     lua_rawset(L, -3);
 
     if (r->chunked) {
diff --git a/src/ngx_http_lua_headers_in.c b/src/ngx_http_lua_headers_in.c
index 713818ef..fff8bafb 100644
--- a/src/ngx_http_lua_headers_in.c
+++ b/src/ngx_http_lua_headers_in.c
@@ -359,6 +359,7 @@ ngx_http_lua_validate_host(ngx_str_t *host, ngx_pool_t *pool, ngx_uint_t alloc)
             if (dot_pos == i - 1) {
                 return NGX_DECLINED;
             }
+
             dot_pos = i;
             break;
 
@@ -754,6 +755,7 @@ ngx_http_lua_rm_header_helper(ngx_list_t *l, ngx_list_part_t *cur,
                         if (part->next == NULL) {
                             return NGX_ERROR;
                         }
+
                         part = part->next;
                     }
 
@@ -798,6 +800,7 @@ ngx_http_lua_rm_header_helper(ngx_list_t *l, ngx_list_part_t *cur,
                     if (part->next == NULL) {
                         return NGX_ERROR;
                     }
+
                     part = part->next;
                 }
 
diff --git a/src/ngx_http_lua_initworkerby.c b/src/ngx_http_lua_initworkerby.c
index fa094a2e..94de796a 100644
--- a/src/ngx_http_lua_initworkerby.c
+++ b/src/ngx_http_lua_initworkerby.c
@@ -148,6 +148,7 @@ ngx_http_lua_init_worker(ngx_cycle_t *cycle)
             if (part->next == NULL) {
                 break;
             }
+
             part = part->next;
             ofile = part->elts;
             i = 0;
diff --git a/src/ngx_http_lua_log.c b/src/ngx_http_lua_log.c
index 5411831a..e56b9e59 100644
--- a/src/ngx_http_lua_log.c
+++ b/src/ngx_http_lua_log.c
@@ -121,6 +121,7 @@ log_wrapper(ngx_log_t *log, const char *ident, ngx_uint_t level,
             if (*p == '/' || *p == '\\') {
                 name.data = p + 1;
             }
+
             p++;
         }
 
diff --git a/src/ngx_http_lua_req_body.c b/src/ngx_http_lua_req_body.c
index 5fe4564e..d6e5640a 100644
--- a/src/ngx_http_lua_req_body.c
+++ b/src/ngx_http_lua_req_body.c
@@ -443,6 +443,7 @@ ngx_http_lua_ngx_req_set_body_data(lua_State *L)
         if (b->start == NULL) {
             return luaL_error(L, "no memory");
         }
+
         b->end = b->start + body.len;
 
         b->pos = b->start;
@@ -454,6 +455,7 @@ ngx_http_lua_ngx_req_set_body_data(lua_State *L)
         if (rb->bufs == NULL) {
             return luaL_error(L, "no memory");
         }
+
         rb->bufs->next = NULL;
 
         b = ngx_create_temp_buf(r->pool, body.len);
@@ -899,6 +901,7 @@ ngx_http_lua_ngx_req_set_body_file(lua_State *L)
         if (rb->bufs == NULL) {
             return luaL_error(L, "no memory");
         }
+
         rb->bufs->next = NULL;
 
         b = ngx_calloc_buf(r->pool);
diff --git a/src/ngx_http_lua_socket_tcp.c b/src/ngx_http_lua_socket_tcp.c
index c2776d83..c99551a9 100644
--- a/src/ngx_http_lua_socket_tcp.c
+++ b/src/ngx_http_lua_socket_tcp.c
@@ -4890,6 +4890,7 @@ ngx_http_lua_req_socket(lua_State *L)
             if (rb == NULL) {
                 return luaL_error(L, "no memory");
             }
+
             r->request_body = rb;
         }
 
diff --git a/src/ngx_http_lua_string.c b/src/ngx_http_lua_string.c
index a94e1817..4c755f67 100644
--- a/src/ngx_http_lua_string.c
+++ b/src/ngx_http_lua_string.c
@@ -133,6 +133,7 @@ ngx_http_lua_ngx_escape_sql_str(u_char *dst, u_char *src, size_t size)
                         break;
                 }
             }
+
             src++;
             size--;
         }
@@ -192,9 +193,11 @@ ngx_http_lua_ngx_escape_sql_str(u_char *dst, u_char *src, size_t size)
                     *dst++ = *src;
                     break;
             }
+
         } else {
             *dst++ = *src;
         }
+
         src++;
         size--;
     } /* while (size) */
diff --git a/src/ngx_http_lua_util.c b/src/ngx_http_lua_util.c
index 272906cb..4b4f2c7c 100644
--- a/src/ngx_http_lua_util.c
+++ b/src/ngx_http_lua_util.c
@@ -2067,6 +2067,7 @@ ngx_http_lua_escape_uri(u_char *dst, u_char *src, size_t size, ngx_uint_t type)
             if (escape[*src >> 5] & (1 << (*src & 0x1f))) {
                 n++;
             }
+
             src++;
             size--;
         }
@@ -2084,6 +2085,7 @@ ngx_http_lua_escape_uri(u_char *dst, u_char *src, size_t size, ngx_uint_t type)
         } else {
             *dst++ = *src++;
         }
+
         size--;
     }
 
@@ -3886,6 +3888,7 @@ ngx_http_lua_init_vm(lua_State **new_vm, lua_State *parent_vm,
     if (state == NULL) {
         return NGX_ERROR;
     }
+
     state->vm = L;
     state->count = 1;
 

commit af748420195c6fbe05e991d4d97b91eb08af120e
Author: Jinhua Tan <312841925@qq.com>
Date:   Thu Jul 16 14:36:19 2020 +0800

    test: fix: add lua-resty-string to lua_package_path (#1748)

diff --git a/.travis.yml b/.travis.yml
index fc2e4c20..bf433bef 100644
--- a/.travis.yml
+++ b/.travis.yml
@@ -86,6 +86,7 @@ install:
   - git clone https://github.com/openresty/lua-resty-core.git ../lua-resty-core
   - git clone https://github.com/openresty/lua-resty-lrucache.git ../lua-resty-lrucache
   - git clone https://github.com/openresty/lua-resty-mysql.git ../lua-resty-mysql
+  - git clone https://github.com/openresty/lua-resty-string.git ../lua-resty-string
   - git clone https://github.com/openresty/stream-lua-nginx-module.git ../stream-lua-nginx-module
   - git clone -b v2.1-agentzh https://github.com/openresty/luajit2.git luajit2
 
diff --git a/t/000--init.t b/t/000--init.t
index 58657553..0dd08fe1 100644
--- a/t/000--init.t
+++ b/t/000--init.t
@@ -10,7 +10,8 @@ $ENV{TEST_NGINX_MEMCACHED_PORT} ||= 11211;
 $ENV{TEST_NGINX_MYSQL_PORT} ||= 3306;
 
 our $http_config = <<'_EOC_';
-    lua_package_path "../lua-resty-mysql/lib/?.lua;;";
+    # lua-resty-string is required for lua-resty-mysql
+    lua_package_path "../lua-resty-mysql/lib/?.lua;../lua-resty-string/lib/?.lua;;";
 _EOC_
 
 no_shuffle();

commit 4368a8ea2723e4d55d9ea362e758dc9bf0111ebe
Author: 罗泽轩 <spacewanderlzx@gmail.com>
Date:   Fri Jul 10 17:20:02 2020 +0800

    bugfix: macro contains operator should be wrapped inside a bracket.
    
    The bracket is missing in the previous refactor.

diff --git a/src/ngx_http_lua_util.h b/src/ngx_http_lua_util.h
index 2d928f96..57c0814b 100644
--- a/src/ngx_http_lua_util.h
+++ b/src/ngx_http_lua_util.h
@@ -31,12 +31,12 @@
 
 #define NGX_HTTP_LUA_ESCAPE_HEADER_VALUE  8
 
-#define NGX_HTTP_LUA_CONTEXT_YIELDABLE  NGX_HTTP_LUA_CONTEXT_REWRITE         \
+#define NGX_HTTP_LUA_CONTEXT_YIELDABLE (NGX_HTTP_LUA_CONTEXT_REWRITE         \
                                         | NGX_HTTP_LUA_CONTEXT_ACCESS        \
                                         | NGX_HTTP_LUA_CONTEXT_CONTENT       \
                                         | NGX_HTTP_LUA_CONTEXT_TIMER         \
                                         | NGX_HTTP_LUA_CONTEXT_SSL_CERT      \
-                                        | NGX_HTTP_LUA_CONTEXT_SSL_SESS_FETCH
+                                        | NGX_HTTP_LUA_CONTEXT_SSL_SESS_FETCH)
 
 
 /* key in Lua vm registry for all the "ngx.ctx" tables */

commit 635b6e864c385bc16125bd43a2ffe8b4560ca9fa
Author: Guy Lewin <Guy@lewin.co.il>
Date:   Tue Jul 7 04:11:53 2020 -0400

    feature: supported receiveany on ngx.req.socket(true?) socks (#1623)

diff --git a/README.markdown b/README.markdown
index ecaec83a..4046dfe1 100644
--- a/README.markdown
+++ b/README.markdown
@@ -5181,7 +5181,7 @@ ngx.req.socket
 
 **context:** *rewrite_by_lua&#42;, access_by_lua&#42;, content_by_lua&#42;*
 
-Returns a read-only cosocket object that wraps the downstream connection. Only [receive](#tcpsockreceive) and [receiveuntil](#tcpsockreceiveuntil) methods are supported on this object.
+Returns a read-only cosocket object that wraps the downstream connection. Only [receive](#tcpsockreceive), [receiveany](#tcpsockreceiveany) and [receiveuntil](#tcpsockreceiveuntil) methods are supported on this object.
 
 In case of error, `nil` will be returned as well as a string describing the error.
 
@@ -5190,7 +5190,7 @@ The socket object returned by this method is usually used to read the current re
 If any request body data has been pre-read into the Nginx core request header buffer, the resulting cosocket object will take care of this to avoid potential data loss resulting from such pre-reading.
 Chunked request bodies are not yet supported in this API.
 
-Since the `v0.9.0` release, this function accepts an optional boolean `raw` argument. When this argument is `true`, this function returns a full-duplex cosocket object wrapping around the raw downstream connection socket, upon which you can call the [receive](#tcpsockreceive), [receiveuntil](#tcpsockreceiveuntil), and [send](#tcpsocksend) methods.
+Since the `v0.9.0` release, this function accepts an optional boolean `raw` argument. When this argument is `true`, this function returns a full-duplex cosocket object wrapping around the raw downstream connection socket, upon which you can call the [receive](#tcpsockreceive), [receiveany](#tcpsockreceiveany), [receiveuntil](#tcpsockreceiveuntil), and [send](#tcpsocksend) methods.
 
 When the `raw` argument is `true`, it is required that no pending data from any previous [ngx.say](#ngxsay), [ngx.print](#ngxprint), or [ngx.send_headers](#ngxsend_headers) calls exists. So if you have these downstream output calls previously, you should call [ngx.flush(true)](#ngxflush) before calling `ngx.req.socket(true)` to ensure that there is no pending output data. If the request body has not been read yet, then this "raw socket" can also be used to read the request body.
 
diff --git a/doc/HttpLuaModule.wiki b/doc/HttpLuaModule.wiki
index 215a5d51..37d8a136 100644
--- a/doc/HttpLuaModule.wiki
+++ b/doc/HttpLuaModule.wiki
@@ -4342,7 +4342,7 @@ See also [[#ngx.req.init_body|ngx.req.init_body]].
 
 '''context:''' ''rewrite_by_lua*, access_by_lua*, content_by_lua*''
 
-Returns a read-only cosocket object that wraps the downstream connection. Only [[#tcpsock:receive|receive]] and [[#tcpsock:receiveuntil|receiveuntil]] methods are supported on this object.
+Returns a read-only cosocket object that wraps the downstream connection. Only [[#tcpsock:receive|receive]], [[#tcpsock:receiveany|receiveany]] and [[#tcpsock:receiveuntil|receiveuntil]] methods are supported on this object.
 
 In case of error, <code>nil</code> will be returned as well as a string describing the error.
 
@@ -4351,7 +4351,7 @@ The socket object returned by this method is usually used to read the current re
 If any request body data has been pre-read into the Nginx core request header buffer, the resulting cosocket object will take care of this to avoid potential data loss resulting from such pre-reading.
 Chunked request bodies are not yet supported in this API.
 
-Since the <code>v0.9.0</code> release, this function accepts an optional boolean <code>raw</code> argument. When this argument is <code>true</code>, this function returns a full-duplex cosocket object wrapping around the raw downstream connection socket, upon which you can call the [[#tcpsock:receive|receive]], [[#tcpsock:receiveuntil|receiveuntil]], and [[#tcpsock:send|send]] methods.
+Since the <code>v0.9.0</code> release, this function accepts an optional boolean <code>raw</code> argument. When this argument is <code>true</code>, this function returns a full-duplex cosocket object wrapping around the raw downstream connection socket, upon which you can call the [[#tcpsock:receive|receive]], [[#tcpsock:receiveany|receiveany]], [[#tcpsock:receiveuntil|receiveuntil]], and [[#tcpsock:send|send]] methods.
 
 When the <code>raw</code> argument is <code>true</code>, it is required that no pending data from any previous [[#ngx.say|ngx.say]], [[#ngx.print|ngx.print]], or [[#ngx.send_headers|ngx.send_headers]] calls exists. So if you have these downstream output calls previously, you should call [[#ngx.flush|ngx.flush(true)]] before calling <code>ngx.req.socket(true)</code> to ensure that there is no pending output data. If the request body has not been read yet, then this "raw socket" can also be used to read the request body.
 
diff --git a/src/ngx_http_lua_socket_tcp.c b/src/ngx_http_lua_socket_tcp.c
index 472fff0f..c2776d83 100644
--- a/src/ngx_http_lua_socket_tcp.c
+++ b/src/ngx_http_lua_socket_tcp.c
@@ -255,11 +255,14 @@ ngx_http_lua_inject_socket_tcp_api(ngx_log_t *log, lua_State *L)
     /* {{{req socket object metatable */
     lua_pushlightuserdata(L, ngx_http_lua_lightudata_mask(
                           req_socket_metatable_key));
-    lua_createtable(L, 0 /* narr */, 5 /* nrec */);
+    lua_createtable(L, 0 /* narr */, 6 /* nrec */);
 
     lua_pushcfunction(L, ngx_http_lua_socket_tcp_receive);
     lua_setfield(L, -2, "receive");
 
+    lua_pushcfunction(L, ngx_http_lua_socket_tcp_receiveany);
+    lua_setfield(L, -2, "receiveany");
+
     lua_pushcfunction(L, ngx_http_lua_socket_tcp_receiveuntil);
     lua_setfield(L, -2, "receiveuntil");
 
@@ -278,11 +281,14 @@ ngx_http_lua_inject_socket_tcp_api(ngx_log_t *log, lua_State *L)
     /* {{{raw req socket object metatable */
     lua_pushlightuserdata(L, ngx_http_lua_lightudata_mask(
                           raw_req_socket_metatable_key));
-    lua_createtable(L, 0 /* narr */, 6 /* nrec */);
+    lua_createtable(L, 0 /* narr */, 7 /* nrec */);
 
     lua_pushcfunction(L, ngx_http_lua_socket_tcp_receive);
     lua_setfield(L, -2, "receive");
 
+    lua_pushcfunction(L, ngx_http_lua_socket_tcp_receiveany);
+    lua_setfield(L, -2, "receiveany");
+
     lua_pushcfunction(L, ngx_http_lua_socket_tcp_receiveuntil);
     lua_setfield(L, -2, "receiveuntil");
 
diff --git a/t/062-count.t b/t/062-count.t
index ffb769a5..841923b8 100644
--- a/t/062-count.t
+++ b/t/062-count.t
@@ -259,7 +259,7 @@ n = 10
 POST /test
 hello world
 --- response_body
-n = 5
+n = 6
 --- no_error_log
 [error]
 
@@ -512,7 +512,7 @@ n = 6
 --- request
 GET /test
 --- response_body
-n = 6
+n = 7
 --- no_error_log
 [error]
 
diff --git a/t/067-req-socket.t b/t/067-req-socket.t
index 6593360e..c5b2631e 100644
--- a/t/067-req-socket.t
+++ b/t/067-req-socket.t
@@ -1096,3 +1096,73 @@ done
 --- grep_error_log_out
 lua finalize socket
 GC cycle done
+
+
+
+=== TEST 18: receiveany
+--- config
+    location = /t {
+        content_by_lua_block {
+            local sock = ngx.socket.tcp()
+            local ok, err = sock:connect("127.0.0.1", ngx.var.server_port)
+            if not ok then
+                ngx.say("failed to connect: ", err)
+                return
+            end
+
+            local bytes, err = sock:send("POST /back HTTP/1.0\r\nHost: localhost\r\nContent-Length: 1024\r\n\r\nabc")
+            if not bytes then
+                ngx.say("failed to send: ", err)
+            end
+
+            ngx.sleep(0.2)
+
+            local bytes, err = sock:send("hello world\n")
+            if not bytes then
+                ngx.say("failed to send: ", err)
+            end
+
+            local reader = sock:receiveuntil("\r\n\r\n")
+            local header, err = reader()
+            if not header then
+                ngx.say("failed to receive header: ", err)
+                return
+            end
+
+            local line, err = sock:receive()
+            if not line then
+                ngx.say("failed to receive line: ", err)
+                return
+            end
+            ngx.say("received: ", line)
+        }
+    }
+
+    location = /back {
+        content_by_lua_block {
+            ngx.send_headers()
+            ngx.flush(true)
+
+            local sock, err = ngx.req.socket()
+
+            if not sock then
+               ngx.say("failed to get socket: ", err)
+               return nil
+            end
+
+            local data, err = sock:receiveany(4096)
+            if not data then
+               ngx.say("err: ", err)
+               return nil
+            end
+
+            ngx.say("received: ", data)
+        }
+    }
+
+--- request
+GET /t
+--- response_body
+received: received: abc
+--- no_error_log
+[error]
diff --git a/t/116-raw-req-socket.t b/t/116-raw-req-socket.t
index ab06ee4a..4dfb9266 100644
--- a/t/116-raw-req-socket.t
+++ b/t/116-raw-req-socket.t
@@ -4,7 +4,7 @@ use Test::Nginx::Socket::Lua;
 
 repeat_each(2);
 
-plan tests => repeat_each() * 40;
+plan tests => repeat_each() * 43;
 
 our $HtmlDir = html_dir;
 
@@ -876,3 +876,96 @@ request body: hey, hello world
 --- no_error_log
 [error]
 [alert]
+
+
+
+=== TEST 16: receiveany
+--- config
+    server_tokens off;
+    location = /t {
+        #set $port 5000;
+        set $port $TEST_NGINX_SERVER_PORT;
+
+        content_by_lua_block {
+            local sock = ngx.socket.tcp()
+            local port = ngx.var.port
+            local ok, err = sock:connect("127.0.0.1", port)
+            if not ok then
+                ngx.say("failed to connect: ", err)
+                return
+            end
+
+            local req = "GET /mysock HTTP/1.1\r\nUpgrade: mysock\r\nHost: localhost\r\nConnection: close\r\n\r\nhello"
+            -- req = "OK"
+
+            local bytes, err = sock:send(req)
+            if not bytes then
+                ngx.say("failed to send request: ", err)
+                return
+            end
+
+            -- Will return to I/O loop, causing receiveany() in /mysock location to be called
+            ngx.sleep(1)
+
+            local bytes, err = sock:send(", world")
+            if not bytes then
+                ngx.say("failed to send packet 1: ", err)
+                return
+            end
+
+            local reader = sock:receiveuntil("\r\n\r\n")
+            local data, err, partial = reader()
+            if not data then
+                ngx.say("no response header found")
+                return
+            end
+
+            local msg, err = sock:receive()
+            if not msg then
+                ngx.say("failed to receive: ", err)
+                return
+            end
+
+            ngx.say("msg: ", msg)
+
+            ok, err = sock:close()
+            if not ok then
+                ngx.say("failed to close socket: ", err)
+                return
+            end
+        }
+    }
+
+    location = /mysock {
+        content_by_lua_block {
+            ngx.status = 101
+            ngx.send_headers()
+            ngx.flush(true)
+            ngx.req.read_body()
+            local sock, err = ngx.req.socket(true)
+            if not sock then
+                ngx.log(ngx.ERR, "server: failed to get raw req socket: ", err)
+                return
+            end
+
+            local data, err = sock:receiveany(1024)
+            if not data then
+                ngx.log(ngx.ERR, "server: failed to receive: ", err)
+                return
+            end
+
+            local bytes, err = sock:send("1: received: " .. data .. "\n")
+            if not bytes then
+                ngx.log(ngx.ERR, "server: failed to send: ", err)
+                return
+            end
+        }
+        more_clear_headers Date;
+    }
+
+--- request
+GET /t
+--- response_body
+msg: 1: received: hello
+--- no_error_log
+[error]

commit a4d63f7f7fbfb6f5397d750aa968bd490f43776e
Author: spacewander <spacewanderlzx@gmail.com>
Date:   Tue Jun 30 15:15:07 2020 +0800

    refactor: used 'yieldable context' to simpify the context list.

diff --git a/src/ngx_http_lua_coroutine.c b/src/ngx_http_lua_coroutine.c
index 5c469c0f..3a43b511 100644
--- a/src/ngx_http_lua_coroutine.c
+++ b/src/ngx_http_lua_coroutine.c
@@ -113,12 +113,7 @@ ngx_http_lua_coroutine_create_helper(lua_State *L, ngx_http_request_t *r,
     luaL_argcheck(L, lua_isfunction(L, 1) && !lua_iscfunction(L, 1), 1,
                   "Lua function expected");
 
-    ngx_http_lua_check_context(L, ctx, NGX_HTTP_LUA_CONTEXT_REWRITE
-                               | NGX_HTTP_LUA_CONTEXT_ACCESS
-                               | NGX_HTTP_LUA_CONTEXT_CONTENT
-                               | NGX_HTTP_LUA_CONTEXT_TIMER
-                               | NGX_HTTP_LUA_CONTEXT_SSL_CERT
-                               | NGX_HTTP_LUA_CONTEXT_SSL_SESS_FETCH);
+    ngx_http_lua_check_context(L, ctx, NGX_HTTP_LUA_CONTEXT_YIELDABLE);
 
     vm = ngx_http_lua_get_lua_vm(r, ctx);
 
@@ -194,12 +189,7 @@ ngx_http_lua_coroutine_resume(lua_State *L)
         return luaL_error(L, "no request ctx found");
     }
 
-    ngx_http_lua_check_context(L, ctx, NGX_HTTP_LUA_CONTEXT_REWRITE
-                               | NGX_HTTP_LUA_CONTEXT_ACCESS
-                               | NGX_HTTP_LUA_CONTEXT_CONTENT
-                               | NGX_HTTP_LUA_CONTEXT_TIMER
-                               | NGX_HTTP_LUA_CONTEXT_SSL_CERT
-                               | NGX_HTTP_LUA_CONTEXT_SSL_SESS_FETCH);
+    ngx_http_lua_check_context(L, ctx, NGX_HTTP_LUA_CONTEXT_YIELDABLE);
 
     p_coctx = ctx->cur_co_ctx;
     if (p_coctx == NULL) {
@@ -255,12 +245,7 @@ ngx_http_lua_coroutine_yield(lua_State *L)
         return luaL_error(L, "no request ctx found");
     }
 
-    ngx_http_lua_check_context(L, ctx, NGX_HTTP_LUA_CONTEXT_REWRITE
-                               | NGX_HTTP_LUA_CONTEXT_ACCESS
-                               | NGX_HTTP_LUA_CONTEXT_CONTENT
-                               | NGX_HTTP_LUA_CONTEXT_TIMER
-                               | NGX_HTTP_LUA_CONTEXT_SSL_CERT
-                               | NGX_HTTP_LUA_CONTEXT_SSL_SESS_FETCH);
+    ngx_http_lua_check_context(L, ctx, NGX_HTTP_LUA_CONTEXT_YIELDABLE);
 
     coctx = ctx->cur_co_ctx;
 
@@ -417,12 +402,7 @@ ngx_http_lua_coroutine_status(lua_State *L)
         return luaL_error(L, "no request ctx found");
     }
 
-    ngx_http_lua_check_context(L, ctx, NGX_HTTP_LUA_CONTEXT_REWRITE
-                               | NGX_HTTP_LUA_CONTEXT_ACCESS
-                               | NGX_HTTP_LUA_CONTEXT_CONTENT
-                               | NGX_HTTP_LUA_CONTEXT_TIMER
-                               | NGX_HTTP_LUA_CONTEXT_SSL_CERT
-                               | NGX_HTTP_LUA_CONTEXT_SSL_SESS_FETCH);
+    ngx_http_lua_check_context(L, ctx, NGX_HTTP_LUA_CONTEXT_YIELDABLE);
 
     coctx = ngx_http_lua_get_co_ctx(co, ctx);
     if (coctx == NULL) {
diff --git a/src/ngx_http_lua_pipe.c b/src/ngx_http_lua_pipe.c
index 1a91b951..c0be9c9e 100644
--- a/src/ngx_http_lua_pipe.c
+++ b/src/ngx_http_lua_pipe.c
@@ -1134,12 +1134,7 @@ ngx_http_lua_pipe_get_lua_ctx(ngx_http_request_t *r,
         return NGX_HTTP_LUA_FFI_NO_REQ_CTX;
     }
 
-    rc = ngx_http_lua_ffi_check_context(*ctx, NGX_HTTP_LUA_CONTEXT_REWRITE
-                                        | NGX_HTTP_LUA_CONTEXT_ACCESS
-                                        | NGX_HTTP_LUA_CONTEXT_CONTENT
-                                        | NGX_HTTP_LUA_CONTEXT_TIMER
-                                        | NGX_HTTP_LUA_CONTEXT_SSL_CERT
-                                        | NGX_HTTP_LUA_CONTEXT_SSL_SESS_FETCH,
+    rc = ngx_http_lua_ffi_check_context(*ctx, NGX_HTTP_LUA_CONTEXT_YIELDABLE,
                                         errbuf, errbuf_size);
     if (rc != NGX_OK) {
         return NGX_HTTP_LUA_FFI_BAD_CONTEXT;
diff --git a/src/ngx_http_lua_semaphore.c b/src/ngx_http_lua_semaphore.c
index a3b79398..8ca6efb3 100644
--- a/src/ngx_http_lua_semaphore.c
+++ b/src/ngx_http_lua_semaphore.c
@@ -379,11 +379,7 @@ ngx_http_lua_ffi_sema_wait(ngx_http_request_t *r,
         return NGX_ERROR;
     }
 
-    rc = ngx_http_lua_ffi_check_context(ctx, NGX_HTTP_LUA_CONTEXT_REWRITE
-                                        | NGX_HTTP_LUA_CONTEXT_ACCESS
-                                        | NGX_HTTP_LUA_CONTEXT_CONTENT
-                                        | NGX_HTTP_LUA_CONTEXT_TIMER
-                                        | NGX_HTTP_LUA_CONTEXT_SSL_CERT,
+    rc = ngx_http_lua_ffi_check_context(ctx, NGX_HTTP_LUA_CONTEXT_YIELDABLE,
                                         err, errlen);
 
     if (rc != NGX_OK) {
diff --git a/src/ngx_http_lua_sleep.c b/src/ngx_http_lua_sleep.c
index 09ea0f6d..b8601fee 100644
--- a/src/ngx_http_lua_sleep.c
+++ b/src/ngx_http_lua_sleep.c
@@ -52,12 +52,7 @@ ngx_http_lua_ngx_sleep(lua_State *L)
         return luaL_error(L, "no request ctx found");
     }
 
-    ngx_http_lua_check_context(L, ctx, NGX_HTTP_LUA_CONTEXT_REWRITE
-                               | NGX_HTTP_LUA_CONTEXT_ACCESS
-                               | NGX_HTTP_LUA_CONTEXT_CONTENT
-                               | NGX_HTTP_LUA_CONTEXT_TIMER
-                               | NGX_HTTP_LUA_CONTEXT_SSL_CERT
-                               | NGX_HTTP_LUA_CONTEXT_SSL_SESS_FETCH);
+    ngx_http_lua_check_context(L, ctx, NGX_HTTP_LUA_CONTEXT_YIELDABLE);
 
     coctx = ctx->cur_co_ctx;
     if (coctx == NULL) {
diff --git a/src/ngx_http_lua_socket_tcp.c b/src/ngx_http_lua_socket_tcp.c
index 30a4e7b2..472fff0f 100644
--- a/src/ngx_http_lua_socket_tcp.c
+++ b/src/ngx_http_lua_socket_tcp.c
@@ -431,12 +431,7 @@ ngx_http_lua_socket_tcp(lua_State *L)
         return luaL_error(L, "no ctx found");
     }
 
-    ngx_http_lua_check_context(L, ctx, NGX_HTTP_LUA_CONTEXT_REWRITE
-                               | NGX_HTTP_LUA_CONTEXT_ACCESS
-                               | NGX_HTTP_LUA_CONTEXT_CONTENT
-                               | NGX_HTTP_LUA_CONTEXT_TIMER
-                               | NGX_HTTP_LUA_CONTEXT_SSL_CERT
-                               | NGX_HTTP_LUA_CONTEXT_SSL_SESS_FETCH);
+    ngx_http_lua_check_context(L, ctx, NGX_HTTP_LUA_CONTEXT_YIELDABLE);
 
     lua_createtable(L, 5 /* narr */, 1 /* nrec */);
     lua_pushlightuserdata(L, ngx_http_lua_lightudata_mask(
@@ -878,12 +873,7 @@ ngx_http_lua_socket_tcp_connect(lua_State *L)
         return luaL_error(L, "no ctx found");
     }
 
-    ngx_http_lua_check_context(L, ctx, NGX_HTTP_LUA_CONTEXT_REWRITE
-                               | NGX_HTTP_LUA_CONTEXT_ACCESS
-                               | NGX_HTTP_LUA_CONTEXT_CONTENT
-                               | NGX_HTTP_LUA_CONTEXT_TIMER
-                               | NGX_HTTP_LUA_CONTEXT_SSL_CERT
-                               | NGX_HTTP_LUA_CONTEXT_SSL_SESS_FETCH);
+    ngx_http_lua_check_context(L, ctx, NGX_HTTP_LUA_CONTEXT_YIELDABLE);
 
     luaL_checktype(L, 1, LUA_TTABLE);
 
diff --git a/src/ngx_http_lua_socket_udp.c b/src/ngx_http_lua_socket_udp.c
index 3a0d2043..f9d8fc03 100644
--- a/src/ngx_http_lua_socket_udp.c
+++ b/src/ngx_http_lua_socket_udp.c
@@ -139,12 +139,7 @@ ngx_http_lua_socket_udp(lua_State *L)
         return luaL_error(L, "no ctx found");
     }
 
-    ngx_http_lua_check_context(L, ctx, NGX_HTTP_LUA_CONTEXT_REWRITE
-                               | NGX_HTTP_LUA_CONTEXT_ACCESS
-                               | NGX_HTTP_LUA_CONTEXT_CONTENT
-                               | NGX_HTTP_LUA_CONTEXT_TIMER
-                               | NGX_HTTP_LUA_CONTEXT_SSL_CERT
-                               | NGX_HTTP_LUA_CONTEXT_SSL_SESS_FETCH);
+    ngx_http_lua_check_context(L, ctx, NGX_HTTP_LUA_CONTEXT_YIELDABLE);
 
     lua_createtable(L, 3 /* narr */, 1 /* nrec */);
     lua_pushlightuserdata(L, ngx_http_lua_lightudata_mask(
@@ -202,12 +197,7 @@ ngx_http_lua_socket_udp_setpeername(lua_State *L)
         return luaL_error(L, "no ctx found");
     }
 
-    ngx_http_lua_check_context(L, ctx, NGX_HTTP_LUA_CONTEXT_REWRITE
-                               | NGX_HTTP_LUA_CONTEXT_ACCESS
-                               | NGX_HTTP_LUA_CONTEXT_CONTENT
-                               | NGX_HTTP_LUA_CONTEXT_TIMER
-                               | NGX_HTTP_LUA_CONTEXT_SSL_CERT
-                               | NGX_HTTP_LUA_CONTEXT_SSL_SESS_FETCH);
+    ngx_http_lua_check_context(L, ctx, NGX_HTTP_LUA_CONTEXT_YIELDABLE);
 
     luaL_checktype(L, 1, LUA_TTABLE);
 
diff --git a/src/ngx_http_lua_uthread.c b/src/ngx_http_lua_uthread.c
index 2e0c3d86..68babc08 100644
--- a/src/ngx_http_lua_uthread.c
+++ b/src/ngx_http_lua_uthread.c
@@ -124,12 +124,7 @@ ngx_http_lua_uthread_wait(lua_State *L)
         return luaL_error(L, "no request ctx found");
     }
 
-    ngx_http_lua_check_context(L, ctx, NGX_HTTP_LUA_CONTEXT_REWRITE
-                               | NGX_HTTP_LUA_CONTEXT_ACCESS
-                               | NGX_HTTP_LUA_CONTEXT_CONTENT
-                               | NGX_HTTP_LUA_CONTEXT_TIMER
-                               | NGX_HTTP_LUA_CONTEXT_SSL_CERT
-                               | NGX_HTTP_LUA_CONTEXT_SSL_SESS_FETCH);
+    ngx_http_lua_check_context(L, ctx, NGX_HTTP_LUA_CONTEXT_YIELDABLE);
 
     coctx = ctx->cur_co_ctx;
 
@@ -223,12 +218,7 @@ ngx_http_lua_uthread_kill(lua_State *L)
         return luaL_error(L, "no request ctx found");
     }
 
-    ngx_http_lua_check_context(L, ctx, NGX_HTTP_LUA_CONTEXT_REWRITE
-                               | NGX_HTTP_LUA_CONTEXT_ACCESS
-                               | NGX_HTTP_LUA_CONTEXT_CONTENT
-                               | NGX_HTTP_LUA_CONTEXT_TIMER
-                               | NGX_HTTP_LUA_CONTEXT_SSL_CERT
-                               | NGX_HTTP_LUA_CONTEXT_SSL_SESS_FETCH);
+    ngx_http_lua_check_context(L, ctx, NGX_HTTP_LUA_CONTEXT_YIELDABLE);
 
     coctx = ctx->cur_co_ctx;
 
diff --git a/src/ngx_http_lua_util.h b/src/ngx_http_lua_util.h
index 15e19853..2d928f96 100644
--- a/src/ngx_http_lua_util.h
+++ b/src/ngx_http_lua_util.h
@@ -31,6 +31,14 @@
 
 #define NGX_HTTP_LUA_ESCAPE_HEADER_VALUE  8
 
+#define NGX_HTTP_LUA_CONTEXT_YIELDABLE  NGX_HTTP_LUA_CONTEXT_REWRITE         \
+                                        | NGX_HTTP_LUA_CONTEXT_ACCESS        \
+                                        | NGX_HTTP_LUA_CONTEXT_CONTENT       \
+                                        | NGX_HTTP_LUA_CONTEXT_TIMER         \
+                                        | NGX_HTTP_LUA_CONTEXT_SSL_CERT      \
+                                        | NGX_HTTP_LUA_CONTEXT_SSL_SESS_FETCH
+
+
 /* key in Lua vm registry for all the "ngx.ctx" tables */
 #define ngx_http_lua_ctx_tables_key  "ngx_lua_ctx_tables"
 

commit c366f3a9bdd5a838b562d85c33cd33f0fdb23c82
Author: Dmitry Meyer <un.def@ya.ru>
Date:   Sun Jul 5 21:48:04 2020 +0300

    doc: fixed an unclosed <code> tag breaking the markup.

diff --git a/README.markdown b/README.markdown
index c629fe02..ecaec83a 100644
--- a/README.markdown
+++ b/README.markdown
@@ -5604,7 +5604,7 @@ It accepts the following values (defaults to `2`):
 ` ` (space), `#`, `%`,
 `?`, 0x00 ~ 0x1F, 0x7F ~ 0xFF will be escaped.
 * `2`: escape `str` as a URI component. All characters except
-alphabetic characters, digits, `-`, `.`, <code>_<code>,
+alphabetic characters, digits, `-`, `.`, `_`,
 `~` will be encoded as `%XX`.
 
 [Back to TOC](#nginx-api-for-lua)
diff --git a/doc/HttpLuaModule.wiki b/doc/HttpLuaModule.wiki
index 4030ee89..215a5d51 100644
--- a/doc/HttpLuaModule.wiki
+++ b/doc/HttpLuaModule.wiki
@@ -4709,7 +4709,7 @@ It accepts the following values (defaults to `2`):
 <code> </code> (space), <code>#</code>, <code>%</code>,
 `?`, 0x00 ~ 0x1F, 0x7F ~ 0xFF will be escaped.
 * `2`: escape <code>str</code> as a URI component. All characters except
-alphabetic characters, digits, <code>-</code>, <code>.</code>, <code>_<code>,
+alphabetic characters, digits, <code>-</code>, <code>.</code>, <code>_</code>,
 <code>~</code> will be encoded as `%XX`.
 
 == ngx.unescape_uri ==

commit c48eeed50927df85766c84e92c44eec2a7b99bb0
Author: Yichun Zhang (agentzh) <yichun@openresty.com>
Date:   Fri Jul 3 16:19:33 2020 -0700

    tests: 161-load-resty-core.t: added vim mode line.

diff --git a/t/161-load-resty-core.t b/t/161-load-resty-core.t
index e6a4d047..2c264306 100644
--- a/t/161-load-resty-core.t
+++ b/t/161-load-resty-core.t
@@ -1,3 +1,5 @@
+# vim:set ft= ts=4 sw=4 et fdm=marker:
+
 use Test::Nginx::Socket::Lua;
 
 repeat_each(2);
------ diff log end --------
** Summary: check here https://github.com/openresty/lua-nginx-module
===================== END lua-nginx-module =================================
New Commit	: lua-upstream-nginx-module: 15 commits since 'v0.07'
------ diff log --------
commit 2f012de74710da7750ed56ed3cb53ded2d62fc12
Author: Thibault Charbonnier <thibaultcha@me.com>
Date:   Wed Jan 22 15:12:35 2020 -0800

    travis-ci: bumped the NGINX core to 1.17.8.

diff --git a/.travis.yml b/.travis.yml
index 84b801b..101240c 100644
--- a/.travis.yml
+++ b/.travis.yml
@@ -38,7 +38,7 @@ env:
     - NGX_BUILD_JOBS=$JOBS
   matrix:
     - NGINX_VERSION=1.11.2
-    - NGINX_VERSION=1.17.4
+    - NGINX_VERSION=1.17.8
 
 services:
  - redis-server

commit 6080f51f2a76b8ce5ee11e6e799442c0284fc442
Author: Thibault Charbonnier <thibaultcha@me.com>
Date:   Mon Sep 30 11:58:32 2019 -0700

    travis-ci: bumped the NGINX core to 1.17.4.

diff --git a/.travis.yml b/.travis.yml
index 74a8db9..84b801b 100644
--- a/.travis.yml
+++ b/.travis.yml
@@ -38,7 +38,7 @@ env:
     - NGX_BUILD_JOBS=$JOBS
   matrix:
     - NGINX_VERSION=1.11.2
-    - NGINX_VERSION=1.17.1
+    - NGINX_VERSION=1.17.4
 
 services:
  - redis-server

commit 0ddfba570fbce0e9a1374dba9e8fa35c7c1741c3
Author: Thibault Charbonnier <thibaultcha@me.com>
Date:   Thu Jul 11 13:51:25 2019 -0700

    travis: bumped the nginx core version to 1.17.1.

diff --git a/.travis.yml b/.travis.yml
index 794f05a..74a8db9 100644
--- a/.travis.yml
+++ b/.travis.yml
@@ -38,7 +38,7 @@ env:
     - NGX_BUILD_JOBS=$JOBS
   matrix:
     - NGINX_VERSION=1.11.2
-    - NGINX_VERSION=1.15.8
+    - NGINX_VERSION=1.17.1
 
 services:
  - redis-server

commit 6266791641050937c8fccdf25115c8e48a062870
Author: Thibault Charbonnier <thibaultcha@me.com>
Date:   Wed May 29 14:14:04 2019 -0700

    travis-ci: added lua-resty-core and lua-resty-lrucache to cloned repositories.

diff --git a/.travis.yml b/.travis.yml
index 55bf859..794f05a 100644
--- a/.travis.yml
+++ b/.travis.yml
@@ -55,6 +55,8 @@ install:
   - git clone https://github.com/openresty/test-nginx.git
   - git clone -b v2.1-agentzh https://github.com/openresty/luajit2.git
   - git clone https://github.com/openresty/lua-nginx-module.git ../lua-nginx-module
+  - git clone https://github.com/openresty/lua-resty-core.git ../lua-resty-core
+  - git clone https://github.com/openresty/lua-resty-lrucache.git ../lua-resty-lrucache
   - git clone https://github.com/openresty/nginx-eval-module.git ../eval-nginx-module
   - git clone https://github.com/openresty/echo-nginx-module.git ../echo-nginx-module
   - git clone https://github.com/openresty/set-misc-nginx-module.git ../set-misc-nginx-module

commit 71ef74fc864e5703239f32c24da50b94d3e5cf17
Author: Thibault Charbonnier <thibaultcha@me.com>
Date:   Wed May 1 13:46:18 2019 -0700

    tests: t/sanity.t: made tests more resilient to potential CDN changes.

diff --git a/t/sanity.t b/t/sanity.t
index 9370fc5..b913f21 100644
--- a/t/sanity.t
+++ b/t/sanity.t
@@ -105,11 +105,11 @@ done
     }
 --- request
     GET /t
---- response_body
-foo.com:1234: [{"addr":"127.0.0.1:80","fail_timeout":53,"max_fails":100,"name":"127.0.0.1","weight":4},{"addr":"138.68.231.133:81","backup":true,"fail_timeout":10,"max_fails":1,"name":"agentzh.org:81","weight":1}]
-bar: [{"addr":"127.0.0.2:80","fail_timeout":10,"max_fails":1,"name":"127.0.0.2","weight":1}]
+--- response_body_like chomp
+\Afoo\.com:1234: \[\{"addr":"127\.0\.0\.1:80","fail_timeout":53,"max_fails":100,"name":"127\.0\.0\.1","weight":4\},\{"addr":(?:\[?"\d+\.\d+\.\d+\.\d+:81",?\]?)+,"backup":true,"fail_timeout":10,"max_fails":1,"name":"agentzh\.org:81","weight":1\}\]
+bar: \[\{"addr":"127\.0\.0\.2:80","fail_timeout":10,"max_fails":1,"name":"127\.0\.0\.2","weight":1\}\]
 failed to get servers: upstream not found
-
+\z
 --- no_error_log
 [error]
 
@@ -173,12 +173,13 @@ failed to get servers: upstream not found
     }
 --- request
     GET /upstreams
---- response_body
-upstream foo.com:
-    addr = 127.0.0.1:80, fail_timeout = 53, max_fails = 100, name = 127.0.0.1, weight = 4
-    addr = 138.68.231.133:81, fail_timeout = 10, max_fails = 1, name = agentzh.org:81, weight = 1
+--- response_body_like chomp
+\Aupstream foo\.com:
+    addr = 127\.0\.0\.1:80, fail_timeout = 53, max_fails = 100, name = 127\.0\.0\.1, weight = 4
+    addr = \{?(?:\d+\.\d+\.\d+\.\d+:81(?:,\s)?)+\}?, fail_timeout = 10, max_fails = 1, name = agentzh\.org:81, weight = 1
 upstream bar:
-    addr = 127.0.0.2:80, fail_timeout = 10, max_fails = 1, name = 127.0.0.2, weight = 1
+    addr = 127\.0\.0\.2:80, fail_timeout = 10, max_fails = 1, name = 127\.0\.0\.2, weight = 1
+\z
 --- no_error_log
 [error]
 
@@ -274,9 +275,10 @@ upstream bar:
     }
 --- request
     GET /t
---- response_body
-[{"conns":0,"current_weight":0,"effective_weight":4,"fail_timeout":53,"fails":0,"id":0,"max_fails":100,"name":"127.0.0.1:80","weight":4},{"conns":0,"current_weight":0,"effective_weight":1,"fail_timeout":10,"fails":0,"id":1,"max_fails":1,"name":"138.68.231.133:81","weight":1}]
-[{"conns":0,"current_weight":0,"effective_weight":1,"fail_timeout":10,"fails":0,"id":0,"max_fails":1,"name":"127.0.0.2:80","weight":1}]
+--- response_body_like chomp
+\A\[\{"conns":0,"current_weight":0,"effective_weight":4,"fail_timeout":53,"fails":0,"id":0,"max_fails":100,"name":"127\.0\.0\.1:80","weight":4\},(?:\{"conns":0,"current_weight":0,"effective_weight":1,"fail_timeout":10,"fails":0,"id":\d+,"max_fails":1,"name":"\d+\.\d+\.\d+\.\d+:81","weight":1\},?)+\]
+\[\{"conns":0,"current_weight":0,"effective_weight":1,"fail_timeout":10,"fails":0,"id":0,"max_fails":1,"name":"127\.0\.0\.2:80","weight":1\}\]
+\z
 --- no_error_log
 [error]
 

commit 58ed89ba7f481332bacd829bee2a97d8fd0fbd62
Author: Thibault Charbonnier <thibaultcha@me.com>
Date:   Mon Apr 22 14:54:50 2019 -0700

    tests: fixed failures due to recent CDN changes.

diff --git a/t/sanity.t b/t/sanity.t
index c428071..9370fc5 100644
--- a/t/sanity.t
+++ b/t/sanity.t
@@ -106,7 +106,7 @@ done
 --- request
     GET /t
 --- response_body
-foo.com:1234: [{"addr":"127.0.0.1:80","fail_timeout":53,"max_fails":100,"name":"127.0.0.1","weight":4},{"addr":"172.105.207.225:81","backup":true,"fail_timeout":10,"max_fails":1,"name":"agentzh.org:81","weight":1}]
+foo.com:1234: [{"addr":"127.0.0.1:80","fail_timeout":53,"max_fails":100,"name":"127.0.0.1","weight":4},{"addr":"138.68.231.133:81","backup":true,"fail_timeout":10,"max_fails":1,"name":"agentzh.org:81","weight":1}]
 bar: [{"addr":"127.0.0.2:80","fail_timeout":10,"max_fails":1,"name":"127.0.0.2","weight":1}]
 failed to get servers: upstream not found
 
@@ -176,7 +176,7 @@ failed to get servers: upstream not found
 --- response_body
 upstream foo.com:
     addr = 127.0.0.1:80, fail_timeout = 53, max_fails = 100, name = 127.0.0.1, weight = 4
-    addr = 172.105.207.225:81, fail_timeout = 10, max_fails = 1, name = agentzh.org:81, weight = 1
+    addr = 138.68.231.133:81, fail_timeout = 10, max_fails = 1, name = agentzh.org:81, weight = 1
 upstream bar:
     addr = 127.0.0.2:80, fail_timeout = 10, max_fails = 1, name = 127.0.0.2, weight = 1
 --- no_error_log
@@ -275,7 +275,7 @@ upstream bar:
 --- request
     GET /t
 --- response_body
-[{"conns":0,"current_weight":0,"effective_weight":4,"fail_timeout":53,"fails":0,"id":0,"max_fails":100,"name":"127.0.0.1:80","weight":4},{"conns":0,"current_weight":0,"effective_weight":1,"fail_timeout":10,"fails":0,"id":1,"max_fails":1,"name":"172.105.207.225:81","weight":1}]
+[{"conns":0,"current_weight":0,"effective_weight":4,"fail_timeout":53,"fails":0,"id":0,"max_fails":100,"name":"127.0.0.1:80","weight":4},{"conns":0,"current_weight":0,"effective_weight":1,"fail_timeout":10,"fails":0,"id":1,"max_fails":1,"name":"138.68.231.133:81","weight":1}]
 [{"conns":0,"current_weight":0,"effective_weight":1,"fail_timeout":10,"fails":0,"id":0,"max_fails":1,"name":"127.0.0.2:80","weight":1}]
 --- no_error_log
 [error]

commit 6e31bed3220b3083c6029f9f7043ab3651b23f78
Author: Thibault Charbonnier <thibaultcha@me.com>
Date:   Tue Jan 29 19:36:15 2019 -0800

    travis: bumped the nginx core version to 1.15.8.

diff --git a/.travis.yml b/.travis.yml
index 0f7b211..55bf859 100644
--- a/.travis.yml
+++ b/.travis.yml
@@ -38,7 +38,7 @@ env:
     - NGX_BUILD_JOBS=$JOBS
   matrix:
     - NGINX_VERSION=1.11.2
-    - NGINX_VERSION=1.13.6
+    - NGINX_VERSION=1.15.8
 
 services:
  - redis-server

commit 6ebcda3c1ee56a73ba73f3a36f5faa7821657115
Author: Yichun Zhang (agentzh) <agentzh@gmail.com>
Date:   Mon Mar 12 18:45:38 2018 -0700

    tests: fixed test cases to reflect recent changes in the agentzh.org domain resolving results.

diff --git a/t/sanity.t b/t/sanity.t
index dbace15..c428071 100644
--- a/t/sanity.t
+++ b/t/sanity.t
@@ -106,7 +106,7 @@ done
 --- request
     GET /t
 --- response_body
-foo.com:1234: [{"addr":"127.0.0.1:80","fail_timeout":53,"max_fails":100,"name":"127.0.0.1","weight":4},{"addr":"106.184.1.99:81","backup":true,"fail_timeout":10,"max_fails":1,"name":"agentzh.org:81","weight":1}]
+foo.com:1234: [{"addr":"127.0.0.1:80","fail_timeout":53,"max_fails":100,"name":"127.0.0.1","weight":4},{"addr":"172.105.207.225:81","backup":true,"fail_timeout":10,"max_fails":1,"name":"agentzh.org:81","weight":1}]
 bar: [{"addr":"127.0.0.2:80","fail_timeout":10,"max_fails":1,"name":"127.0.0.2","weight":1}]
 failed to get servers: upstream not found
 
@@ -176,7 +176,7 @@ failed to get servers: upstream not found
 --- response_body
 upstream foo.com:
     addr = 127.0.0.1:80, fail_timeout = 53, max_fails = 100, name = 127.0.0.1, weight = 4
-    addr = 106.184.1.99:81, fail_timeout = 10, max_fails = 1, name = agentzh.org:81, weight = 1
+    addr = 172.105.207.225:81, fail_timeout = 10, max_fails = 1, name = agentzh.org:81, weight = 1
 upstream bar:
     addr = 127.0.0.2:80, fail_timeout = 10, max_fails = 1, name = 127.0.0.2, weight = 1
 --- no_error_log
@@ -275,7 +275,7 @@ upstream bar:
 --- request
     GET /t
 --- response_body
-[{"conns":0,"current_weight":0,"effective_weight":4,"fail_timeout":53,"fails":0,"id":0,"max_fails":100,"name":"127.0.0.1:80","weight":4},{"conns":0,"current_weight":0,"effective_weight":1,"fail_timeout":10,"fails":0,"id":1,"max_fails":1,"name":"106.184.1.99:81","weight":1}]
+[{"conns":0,"current_weight":0,"effective_weight":4,"fail_timeout":53,"fails":0,"id":0,"max_fails":100,"name":"127.0.0.1:80","weight":4},{"conns":0,"current_weight":0,"effective_weight":1,"fail_timeout":10,"fails":0,"id":1,"max_fails":1,"name":"172.105.207.225:81","weight":1}]
 [{"conns":0,"current_weight":0,"effective_weight":1,"fail_timeout":10,"fails":0,"id":0,"max_fails":1,"name":"127.0.0.2:80","weight":1}]
 --- no_error_log
 [error]

commit 5b618b9790e5d79bd7edb73d3c5301aa4cbef74e
Author: chronolaw <chronolaw@gmail.com>
Date:   Mon Mar 12 09:23:26 2018 +0800

    doc: small typo fixes in the docs for get_servers.
    
    Signed-off-by: Yichun Zhang (agentzh) <agentzh@gmail.com>

diff --git a/README.md b/README.md
index 32f66c7..d6383c3 100644
--- a/README.md
+++ b/README.md
@@ -111,7 +111,7 @@ get_servers
 -----------
 `syntax: servers = upstream.get_servers(upstream_name)`
 
-Get configurations for all the servers in the specified upstream group. Please one server may take multiple addresses when its server name can be resolved to multiple addresses.
+Get configurations for all the servers in the specified upstream group. Please note that one server may take multiple addresses when its server name can be resolved to multiple addresses.
 
 The return value is an array-like Lua table. Each table entry is a hash-like Lua table that takes the following keys:
 

commit 9610123819cf324fcdad7b907187d5a4f70bb07a
Author: Yichun Zhang (agentzh) <agentzh@gmail.com>
Date:   Fri Oct 27 13:53:26 2017 -0700

    tests: added new valgrind false positives in the latest nginx core.

diff --git a/valgrind.suppress b/valgrind.suppress
index 3da2c85..9832c30 100644
--- a/valgrind.suppress
+++ b/valgrind.suppress
@@ -139,3 +139,13 @@
    fun:ngx_set_environment
    fun:ngx_single_process_cycle
 }
+{
+   <insert_a_suppression_name_here>
+   Memcheck:Leak
+   match-leak-kinds: definite
+   fun:malloc
+   fun:ngx_alloc
+   fun:ngx_set_environment
+   fun:ngx_worker_process_init
+   fun:ngx_worker_process_cycle
+}

commit 8ebf3e51f1eaa36ee932b393ebc71a91449c7980
Author: Yichun Zhang (agentzh) <agentzh@gmail.com>
Date:   Fri Oct 27 13:13:35 2017 -0700

    tests: valgrind.suppress: removed too aggressive suppressions in nginx mem pools and luajit lj_str_new.

diff --git a/valgrind.suppress b/valgrind.suppress
index 4720298..3da2c85 100644
--- a/valgrind.suppress
+++ b/valgrind.suppress
@@ -1,16 +1,16 @@
 {
-<insert_a_suppression_name_here>
-Memcheck:Addr1
-fun:ngx_init_cycle
-fun:ngx_master_process_cycle
-fun:main
+   <insert_a_suppression_name_here>
+   Memcheck:Addr1
+   fun:ngx_init_cycle
+   fun:ngx_master_process_cycle
+   fun:main
 }
 {
-<insert_a_suppression_name_here>
-Memcheck:Addr4
-fun:ngx_init_cycle
-fun:ngx_master_process_cycle
-fun:main
+   <insert_a_suppression_name_here>
+   Memcheck:Addr4
+   fun:ngx_init_cycle
+   fun:ngx_master_process_cycle
+   fun:main
 }
 {
    <insert_a_suppression_name_here>
@@ -113,11 +113,11 @@ fun:main
    fun:ngx_start_cache_manager_processes
 }
 {
-    <insert_a_suppression_name_here>
-    Memcheck:Cond
-    fun:ngx_init_cycle
-    fun:ngx_master_process_cycle
-    fun:main
+   <insert_a_suppression_name_here>
+   Memcheck:Cond
+   fun:ngx_init_cycle
+   fun:ngx_master_process_cycle
+   fun:main
 }
 {
    <insert_a_suppression_name_here>

commit 8ffe3cf3832d4da67cb11d31d492942c3addb110
Author: Yichun Zhang (agentzh) <agentzh@gmail.com>
Date:   Fri Oct 27 09:54:23 2017 -0700

    tests: suppressed a valgrind false positive in the latest nginx core.

diff --git a/valgrind.suppress b/valgrind.suppress
index 5b1a07d..4720298 100644
--- a/valgrind.suppress
+++ b/valgrind.suppress
@@ -130,3 +130,12 @@ fun:main
    fun:do_preload
    fun:dl_main
 }
+{
+   <insert_a_suppression_name_here>
+   Memcheck:Leak
+   match-leak-kinds: definite
+   fun:malloc
+   fun:ngx_alloc
+   fun:ngx_set_environment
+   fun:ngx_single_process_cycle
+}

commit c9cc3d48a169744204b40cf99f6ab22372f899ef
Author: Yichun Zhang (agentzh) <agentzh@gmail.com>
Date:   Thu Oct 26 20:11:03 2017 -0700

    travis: added nginx 1.13.6 to the test matrix.

diff --git a/.travis.yml b/.travis.yml
index 0003977..0f7b211 100644
--- a/.travis.yml
+++ b/.travis.yml
@@ -37,8 +37,8 @@ env:
     - JOBS=3
     - NGX_BUILD_JOBS=$JOBS
   matrix:
-    - NGINX_VERSION=1.9.15
     - NGINX_VERSION=1.11.2
+    - NGINX_VERSION=1.13.6
 
 services:
  - redis-server

commit e3989e51088cd53b59009a028c56881b093e4d2e
Author: Yichun Zhang (agentzh) <agentzh@gmail.com>
Date:   Thu Oct 26 20:09:42 2017 -0700

    travis: fixed build.

diff --git a/.travis.yml b/.travis.yml
index e731ae3..0003977 100644
--- a/.travis.yml
+++ b/.travis.yml
@@ -47,7 +47,7 @@ install:
   - echo $HOME
   - if [ ! -d download-cache ]; then mkdir download-cache; fi
   - if [ ! -f download-cache/ngx_http_redis-0.3.7.tar.gz ]; then wget -O download-cache/ngx_http_redis-0.3.7.tar.gz http://people.freebsd.org/~osa/ngx_http_redis-0.3.7.tar.gz; fi
-  - mkdir -p ~/work/nginx && tar -xf download-cache/ngx_http_redis-0.3.7.tar.gz -C ~/work/nginx
+  - mkdir -p ~/work/nginx && cp download-cache/ngx_http_redis-0.3.7.tar.gz ~/work/nginx/
   - git clone https://github.com/openresty/nginx-devel-utils.git
   - git clone https://github.com/openresty/openresty.git ../openresty
   - git clone https://github.com/openresty/no-pool-nginx.git ../no-pool-nginx

commit 24edac6c8a5819fd59126a5c8bd84d8b67a7791a
Author: Yichun Zhang (agentzh) <agentzh@gmail.com>
Date:   Thu Oct 26 18:07:35 2017 -0700

    dev: make sure we pass tests with nginx 1.13.6.

diff --git a/util/build.sh b/util/build.sh
index ef76591..eae43a7 100755
--- a/util/build.sh
+++ b/util/build.sh
@@ -2,22 +2,39 @@
 
 # this file is mostly meant to be used by the author himself.
 
+#set -x
+
 root=`pwd`
 version=$1
 home=~
 force=$2
 
 ngx_redis_version=0.3.7
+cd $home/work/nginx/ || exit 1
 ngx_redis_path=$home/work/nginx/ngx_http_redis-$ngx_redis_version
+rm -rf $ngx_redis_path || exit 1
+tar -xzvf ngx_http_redis-$ngx_redis_version.tar.gz || exit 1
 
 cd $ngx_redis_path || exit 1
+
 patch_file=$root/../openresty/patches/ngx_http_redis-$ngx_redis_version-variables_in_redis_pass.patch
 if [ ! -f $patch_file ]; then
     echo "$patch_file: No such file" > /dev/stderr
     exit 1
 fi
 # we ignore any errors here since the target directory might have already been patched.
-patch --forward -p1 < $patch_file
+patch -p1 < $patch_file || exit 1
+
+cd $ngx_redis_path || exit 1
+
+patch_file=$root/../openresty/patches/ngx_http_redis-$ngx_redis_version-default_port_fix.patch
+if [ ! -f $patch_file ]; then
+    echo "$patch_file: No such file" > /dev/stderr
+    exit 1
+fi
+# we ignore any errors here since the target directory might have already been patched.
+patch -p1 < $patch_file || exit 1
+
 cd $root || exit 1
 
             #--without-http_memcached_module \
------ diff log end --------
** Summary: check here https://github.com/openresty/lua-upstream-nginx-module
===================== END lua-upstream-nginx-m =================================
New Commit	: stream-lua-nginx-module: 8 commits since 'v0.0.8'
------ diff log --------
commit 77f82d60963d96488dfbdf9756d2a67bb7902191
Author: 罗泽轩 <spacewanderlzx@gmail.com>
Date:   Mon Aug 31 10:20:36 2020 +0800

    bugfix: added missing SSL feature macro (#211)
    
    Sync from https://github.com/openresty/meta-lua-nginx-module/pull/83

diff --git a/src/ngx_stream_lua_ctx.c b/src/ngx_stream_lua_ctx.c
index 9c4468e..ba8c8a2 100644
--- a/src/ngx_stream_lua_ctx.c
+++ b/src/ngx_stream_lua_ctx.c
@@ -82,7 +82,9 @@ ngx_stream_lua_ffi_get_ctx_ref(ngx_stream_lua_request_t *r, int *in_ssl_phase,
     int *ssl_ctx_ref)
 {
     ngx_stream_lua_ctx_t                    *ctx;
+#if (NGX_STREAM_SSL)
     ngx_stream_lua_ssl_ctx_t                *ssl_ctx;
+#endif
 
     ctx = ngx_stream_lua_get_module_ctx(r, ngx_stream_lua_module);
     if (ctx == NULL) {
@@ -96,6 +98,7 @@ ngx_stream_lua_ffi_get_ctx_ref(ngx_stream_lua_request_t *r, int *in_ssl_phase,
     *in_ssl_phase = ctx->context & NGX_STREAM_LUA_CONTEXT_SSL_CERT;
     *ssl_ctx_ref = LUA_NOREF;
 
+#if (NGX_STREAM_SSL)
     if (r->connection->ssl != NULL) {
         ssl_ctx = ngx_stream_lua_ssl_get_ctx(r->connection->ssl->connection);
 
@@ -103,6 +106,7 @@ ngx_stream_lua_ffi_get_ctx_ref(ngx_stream_lua_request_t *r, int *in_ssl_phase,
             *ssl_ctx_ref = ssl_ctx->ctx_ref;
         }
     }
+#endif
 
     return LUA_NOREF;
 }
@@ -112,15 +116,18 @@ int
 ngx_stream_lua_ffi_set_ctx_ref(ngx_stream_lua_request_t *r, int ref)
 {
     ngx_pool_t                      *pool;
-    ngx_connection_t                *c;
     ngx_stream_lua_ctx_t            *ctx;
+#if (NGX_STREAM_SSL)
+    ngx_connection_t                *c;
     ngx_stream_lua_ssl_ctx_t        *ssl_ctx;
+#endif
 
     ctx = ngx_stream_lua_get_module_ctx(r, ngx_stream_lua_module);
     if (ctx == NULL) {
         return NGX_STREAM_LUA_FFI_NO_REQ_CTX;
     }
 
+#if (NGX_STREAM_SSL)
     if (ctx->context & NGX_STREAM_LUA_CONTEXT_SSL_CERT) {
         ssl_ctx = ngx_stream_lua_ssl_get_ctx(r->connection->ssl->connection);
         if (ssl_ctx == NULL) {
@@ -135,6 +142,10 @@ ngx_stream_lua_ffi_set_ctx_ref(ngx_stream_lua_request_t *r, int ref)
         pool = r->pool;
     }
 
+#else
+    pool = r->pool;
+#endif
+
     ctx->ctx_ref = ref;
 
     if (ngx_stream_lua_ngx_ctx_add_cleanup(r, pool, ref) != NGX_OK) {

commit f94afe2ffc17b371fdd36d88aa2cd86281056ce4
Author: 罗泽轩 <spacewanderlzx@gmail.com>
Date:   Fri Aug 21 20:47:56 2020 +0800

    feature: shared ngx.ctx among SSL_* phases and the following phases. (#208)

diff --git a/src/ngx_stream_lua_ctx.c b/src/ngx_stream_lua_ctx.c
index 365404e..9c4468e 100644
--- a/src/ngx_stream_lua_ctx.c
+++ b/src/ngx_stream_lua_ctx.c
@@ -19,6 +19,7 @@
 
 
 #include "ngx_stream_lua_util.h"
+#include "ngx_stream_lua_ssl.h"
 #include "ngx_stream_lua_ctx.h"
 
 
@@ -29,7 +30,7 @@ typedef struct {
 
 
 static ngx_int_t ngx_stream_lua_ngx_ctx_add_cleanup(ngx_stream_lua_request_t *r,
-    int ref);
+    ngx_pool_t *pool, int ref);
 static void ngx_stream_lua_ngx_ctx_cleanup(void *data);
 
 
@@ -37,6 +38,8 @@ int
 ngx_stream_lua_ngx_set_ctx_helper(lua_State *L, ngx_stream_lua_request_t *r,
     ngx_stream_lua_ctx_t *ctx, int index)
 {
+    ngx_pool_t              *pool;
+
     if (index < 0) {
         index = lua_gettop(L) + index + 1;
     }
@@ -51,7 +54,8 @@ ngx_stream_lua_ngx_set_ctx_helper(lua_State *L, ngx_stream_lua_request_t *r,
         ctx->ctx_ref = luaL_ref(L, -2);
         lua_pop(L, 1);
 
-        if (ngx_stream_lua_ngx_ctx_add_cleanup(r, ctx->ctx_ref) != NGX_OK) {
+        pool = r->pool;
+        if (ngx_stream_lua_ngx_ctx_add_cleanup(r, pool, ctx->ctx_ref) != NGX_OK) {
             return luaL_error(L, "no memory");
         }
 
@@ -74,32 +78,66 @@ ngx_stream_lua_ngx_set_ctx_helper(lua_State *L, ngx_stream_lua_request_t *r,
 
 
 int
-ngx_stream_lua_ffi_get_ctx_ref(ngx_stream_lua_request_t *r)
+ngx_stream_lua_ffi_get_ctx_ref(ngx_stream_lua_request_t *r, int *in_ssl_phase,
+    int *ssl_ctx_ref)
 {
-    ngx_stream_lua_ctx_t        *ctx;
+    ngx_stream_lua_ctx_t                    *ctx;
+    ngx_stream_lua_ssl_ctx_t                *ssl_ctx;
 
     ctx = ngx_stream_lua_get_module_ctx(r, ngx_stream_lua_module);
     if (ctx == NULL) {
         return NGX_STREAM_LUA_FFI_NO_REQ_CTX;
     }
 
-    return ctx->ctx_ref;
+    if (ctx->ctx_ref >= 0 || in_ssl_phase == NULL) {
+        return ctx->ctx_ref;
+    }
+
+    *in_ssl_phase = ctx->context & NGX_STREAM_LUA_CONTEXT_SSL_CERT;
+    *ssl_ctx_ref = LUA_NOREF;
+
+    if (r->connection->ssl != NULL) {
+        ssl_ctx = ngx_stream_lua_ssl_get_ctx(r->connection->ssl->connection);
+
+        if (ssl_ctx != NULL) {
+            *ssl_ctx_ref = ssl_ctx->ctx_ref;
+        }
+    }
+
+    return LUA_NOREF;
 }
 
 
 int
 ngx_stream_lua_ffi_set_ctx_ref(ngx_stream_lua_request_t *r, int ref)
 {
-    ngx_stream_lua_ctx_t        *ctx;
+    ngx_pool_t                      *pool;
+    ngx_connection_t                *c;
+    ngx_stream_lua_ctx_t            *ctx;
+    ngx_stream_lua_ssl_ctx_t        *ssl_ctx;
 
     ctx = ngx_stream_lua_get_module_ctx(r, ngx_stream_lua_module);
     if (ctx == NULL) {
         return NGX_STREAM_LUA_FFI_NO_REQ_CTX;
     }
 
+    if (ctx->context & NGX_STREAM_LUA_CONTEXT_SSL_CERT) {
+        ssl_ctx = ngx_stream_lua_ssl_get_ctx(r->connection->ssl->connection);
+        if (ssl_ctx == NULL) {
+            return NGX_ERROR;
+        }
+
+        ssl_ctx->ctx_ref = ref;
+        c = ngx_ssl_get_connection(r->connection->ssl->connection);
+        pool = c->pool;
+
+    } else {
+        pool = r->pool;
+    }
+
     ctx->ctx_ref = ref;
 
-    if (ngx_stream_lua_ngx_ctx_add_cleanup(r, ref) != NGX_OK) {
+    if (ngx_stream_lua_ngx_ctx_add_cleanup(r, pool, ref) != NGX_OK) {
         return NGX_ERROR;
     }
 
@@ -108,7 +146,8 @@ ngx_stream_lua_ffi_set_ctx_ref(ngx_stream_lua_request_t *r, int ref)
 
 
 static ngx_int_t
-ngx_stream_lua_ngx_ctx_add_cleanup(ngx_stream_lua_request_t *r, int ref)
+ngx_stream_lua_ngx_ctx_add_cleanup(ngx_stream_lua_request_t *r, ngx_pool_t *pool,
+    int ref)
 {
     lua_State                   *L;
     ngx_pool_cleanup_t          *cln;
@@ -119,7 +158,7 @@ ngx_stream_lua_ngx_ctx_add_cleanup(ngx_stream_lua_request_t *r, int ref)
     ctx = ngx_stream_lua_get_module_ctx(r, ngx_stream_lua_module);
     L = ngx_stream_lua_get_lua_vm(r, ctx);
 
-    cln = ngx_pool_cleanup_add(r->pool,
+    cln = ngx_pool_cleanup_add(pool,
                                sizeof(ngx_stream_lua_ngx_ctx_cleanup_data_t));
     if (cln == NULL) {
         return NGX_ERROR;
diff --git a/src/ngx_stream_lua_ssl.h b/src/ngx_stream_lua_ssl.h
index 485ccbc..d263548 100644
--- a/src/ngx_stream_lua_ssl.h
+++ b/src/ngx_stream_lua_ssl.h
@@ -35,6 +35,10 @@ typedef struct {
     int                      exit_code;  /* exit code for openssl's
                                             set_cert_cb callback */
 
+    int                      ctx_ref;    /* reference to anchor
+                                            request ctx data in lua
+                                            registry */
+
     unsigned                 done:1;
     unsigned                 aborted:1;
 
diff --git a/src/ngx_stream_lua_ssl_certby.c b/src/ngx_stream_lua_ssl_certby.c
index 7b374ce..4b25ecf 100644
--- a/src/ngx_stream_lua_ssl_certby.c
+++ b/src/ngx_stream_lua_ssl_certby.c
@@ -279,6 +279,8 @@ ngx_stream_lua_ssl_cert_handler(ngx_ssl_conn_t *ssl_conn, void *data)
         if (cctx == NULL) {
             goto failed;  /* error */
         }
+
+        cctx->ctx_ref = LUA_NOREF;
     }
 
     cctx->exit_code = 1;  /* successful by default */
diff --git a/src/ngx_stream_lua_util.h b/src/ngx_stream_lua_util.h
index 232f10e..deb255f 100644
--- a/src/ngx_stream_lua_util.h
+++ b/src/ngx_stream_lua_util.h
@@ -23,6 +23,7 @@
 
 
 #include "ngx_stream_lua_common.h"
+#include "ngx_stream_lua_ssl.h"
 #include "ngx_stream_lua_api.h"
 
 

commit 6ffcfdb691a36603f63c5a2002b528334635f28d
Author: 罗泽轩 <spacewanderlzx@gmail.com>
Date:   Wed Aug 12 12:23:33 2020 +0800

    chore: removed unwanted CC_TEST_FLAGS when checking LuaJIT's FFI feature. (#192)
    
    We don't need the modified CC_TEST_FLAGS to pass the feature check.
    And sometimes this change causes the configure script to fail.

diff --git a/config b/config
index 4b02b83..07240ea 100644
--- a/config
+++ b/config
@@ -212,7 +212,6 @@ fi
 # ----------------------------------------
 
 ngx_feature="LuaJIT has FFI"
-CC_TEST_FLAGS="$ngx_lua_opt_I $CFLAGS"
 ngx_feature_libs="$ngx_module_libs"
 ngx_feature_run=no
 ngx_feature_incs="#include <lualib.h>

commit 6eb31d265b1ba3707188709db0a141831dc7fd40
Author: 罗泽轩 <spacewanderlzx@gmail.com>
Date:   Thu Aug 6 14:43:32 2020 +0800

    bugfix: the stream subsystem was built incorrectly in debug mode. (#207)
    
    Fix #205, #206.

diff --git a/src/ngx_stream_lua_contentby.c b/src/ngx_stream_lua_contentby.c
index 0e6a68c..0e86351 100644
--- a/src/ngx_stream_lua_contentby.c
+++ b/src/ngx_stream_lua_contentby.c
@@ -145,7 +145,7 @@ ngx_stream_lua_content_wev_handler(ngx_stream_lua_request_t *r)
         return;
     }
 
-    ngx_log_debug0(NGX_LOG_DEBUG_HTTP, r->connection->log, 0,
+    ngx_log_debug0(NGX_LOG_DEBUG_STREAM, r->connection->log, 0,
                    "lua ngx_stream_lua_content_wev_handler");
 
     (void) ctx->resume_handler(r);
diff --git a/src/ngx_stream_lua_socket_tcp.c b/src/ngx_stream_lua_socket_tcp.c
index 241e974..5d2c8c1 100644
--- a/src/ngx_stream_lua_socket_tcp.c
+++ b/src/ngx_stream_lua_socket_tcp.c
@@ -2180,8 +2180,6 @@ ngx_stream_lua_socket_tcp_peek_resume(ngx_stream_lua_request_t *r)
         return NGX_ERROR;
     }
 
-    dd("coctx: %p", coctx);
-
     u = ctx->downstream;
     c = r->connection;
     vm = ngx_stream_lua_get_lua_vm(r, ctx);

commit a445407723e7e5075a6458c725961358d911fdbf
Author: 罗泽轩 <spacewanderlzx@gmail.com>
Date:   Wed Aug 5 09:18:37 2020 +0800

    bugfix: hide get_request API in stream subsystem (#201)
    
    As the req_type in stream subsystem is unexported.
    Fix https://github.com/openresty/stream-lua-nginx-module/issues/180.

diff --git a/src/api/ngx_stream_lua_api.h b/src/api/ngx_stream_lua_api.h
index 0e5a18f..43e1683 100644
--- a/src/api/ngx_stream_lua_api.h
+++ b/src/api/ngx_stream_lua_api.h
@@ -53,7 +53,6 @@ typedef struct {
 
 lua_State *ngx_stream_lua_get_global_state(ngx_conf_t *cf);
 
-ngx_stream_lua_request_t *ngx_stream_lua_get_request(lua_State *L);
 
 ngx_int_t ngx_stream_lua_add_package_preload(ngx_conf_t *cf,
     const char *package, lua_CFunction func);
diff --git a/src/ngx_stream_lua_api.c b/src/ngx_stream_lua_api.c
index 622367f..cf01b36 100644
--- a/src/ngx_stream_lua_api.c
+++ b/src/ngx_stream_lua_api.c
@@ -35,11 +35,6 @@ ngx_stream_lua_get_global_state(ngx_conf_t *cf)
 }
 
 
-ngx_stream_lua_request_t *
-ngx_stream_lua_get_request(lua_State *L)
-{
-    return ngx_stream_lua_get_req(L);
-}
 
 
 static ngx_int_t ngx_stream_lua_shared_memory_init(ngx_shm_zone_t *shm_zone,

commit 402e861a67c56d52de746a6aa415f90991122c9c
Author: 罗泽轩 <spacewanderlzx@gmail.com>
Date:   Wed Aug 5 09:06:02 2020 +0800

    tests: fix ngx.req field count (#202)

diff --git a/t/062-count.t b/t/062-count.t
index a1e753d..ebefc2e 100644
--- a/t/062-count.t
+++ b/t/062-count.t
@@ -43,10 +43,12 @@ ngx: 53
         for k, v in pairs(ngx.req) do
             n = n + 1
         end
+        -- ngx.req.socket
+        -- ngx.req.start_time
         ngx.say("n = ", n)
     }
 --- stream_response
-n = 1
+n = 2
 --- no_error_log
 [error]
 

commit 5d8f675a6ae448db0cb713829d2a2c9092cf921e
Author: ArchangelSDY <Archangel.SDY@gmail.com>
Date:   Mon Aug 3 14:40:14 2020 +0800

    feature: add FFI interface to verify SSL client certificate (#190)

diff --git a/src/ngx_stream_lua_ssl_certby.c b/src/ngx_stream_lua_ssl_certby.c
index 13fb366..7b374ce 100644
--- a/src/ngx_stream_lua_ssl_certby.c
+++ b/src/ngx_stream_lua_ssl_certby.c
@@ -1317,4 +1317,142 @@ failed:
 }
 
 
+static int
+ngx_stream_lua_ssl_verify_callback(int ok, X509_STORE_CTX *x509_store)
+{
+    /*
+     * we never terminate handshake here and user can later use
+     * $ssl_client_verify to check verification result.
+     *
+     * this is consistent with Nginx behavior.
+     */
+    return 1;
+}
+
+
+int
+ngx_stream_lua_ffi_ssl_verify_client(ngx_stream_lua_request_t *r,
+    void *ca_certs, int depth, char **err)
+{
+    ngx_stream_lua_ctx_t        *ctx;
+    ngx_ssl_conn_t              *ssl_conn;
+    ngx_stream_ssl_conf_t       *sscf;
+    STACK_OF(X509)              *chain = ca_certs;
+    STACK_OF(X509_NAME)         *name_chain = NULL;
+    X509                        *x509 = NULL;
+    X509_NAME                   *subject = NULL;
+    X509_STORE                  *ca_store = NULL;
+#ifdef OPENSSL_IS_BORINGSSL
+    size_t                      i;
+#else
+    int                         i;
+#endif
+
+    ctx = ngx_stream_get_module_ctx(r->session, ngx_stream_lua_module);
+    if (ctx == NULL) {
+        *err = "no request ctx found";
+        return NGX_ERROR;
+    }
+
+    if (!(ctx->context & NGX_STREAM_LUA_CONTEXT_SSL_CERT)) {
+        *err = "API disabled in the current context";
+        return NGX_ERROR;
+    }
+
+    if (r->connection == NULL || r->connection->ssl == NULL) {
+        *err = "bad request";
+        return NGX_ERROR;
+    }
+
+    ssl_conn = r->connection->ssl->connection;
+    if (ssl_conn == NULL) {
+        *err = "bad ssl conn";
+        return NGX_ERROR;
+    }
+
+    /* enable verify */
+
+    SSL_set_verify(ssl_conn, SSL_VERIFY_PEER,
+                   ngx_stream_lua_ssl_verify_callback);
+
+    /* set depth */
+
+    if (depth < 0) {
+        sscf = ngx_stream_get_module_srv_conf(r->session,
+            ngx_stream_ssl_module);
+        if (sscf != NULL) {
+            depth = sscf->verify_depth;
+
+        } else {
+            /* same as the default value of ssl_verify_depth */
+            depth = 1;
+        }
+    }
+
+    SSL_set_verify_depth(ssl_conn, depth);
+
+    /* set CA chain */
+
+    if (chain != NULL) {
+        ca_store = X509_STORE_new();
+        if (ca_store == NULL) {
+            *err = "X509_STORE_new() failed";
+            return NGX_ERROR;
+        }
+
+        /* construct name chain */
+
+        name_chain = sk_X509_NAME_new_null();
+        if (name_chain == NULL) {
+            *err = "sk_X509_NAME_new_null() failed";
+            goto failed;
+        }
+
+        for (i = 0; i < sk_X509_num(chain); i++) {
+            x509 = sk_X509_value(chain, i);
+            if (x509 == NULL) {
+                *err = "sk_X509_value() failed";
+                goto failed;
+            }
+
+            /* add subject to name chain, which will be sent to client */
+            subject = X509_NAME_dup(X509_get_subject_name(x509));
+            if (subject == NULL) {
+                *err = "X509_get_subject_name() failed";
+                goto failed;
+            }
+
+            if (!sk_X509_NAME_push(name_chain, subject)) {
+                *err = "sk_X509_NAME_push() failed";
+                X509_NAME_free(subject);
+                goto failed;
+            }
+
+            /* add to trusted CA store */
+            if (X509_STORE_add_cert(ca_store, x509) == 0) {
+                *err = "X509_STORE_add_cert() failed";
+                goto failed;
+            }
+        }
+
+        if (SSL_set0_verify_cert_store(ssl_conn, ca_store) == 0) {
+            *err = "SSL_set0_verify_cert_store() failed";
+            goto failed;
+        }
+
+        SSL_set_client_CA_list(ssl_conn, name_chain);
+    }
+
+    return NGX_OK;
+
+failed:
+
+    sk_X509_NAME_free(name_chain);
+
+    X509_STORE_free(ca_store);
+
+    return NGX_ERROR;
+}
+
+
 #endif /* NGX_STREAM_SSL */
diff --git a/t/140-ssl-c-api.t b/t/140-ssl-c-api.t
index 88ab42d..5ab0dcc 100644
--- a/t/140-ssl-c-api.t
+++ b/t/140-ssl-c-api.t
@@ -61,6 +61,9 @@ ffi.cdef[[
     void ngx_stream_lua_ffi_free_priv_key(void *cdata);
 
     int ngx_stream_lua_ffi_ssl_clear_certs(void *r, char **err);
+
+    int ngx_stream_lua_ffi_ssl_verify_client(void *r, void *cdata, int depth, char **err);
+
 ]]
 _EOC_
     }
@@ -675,3 +678,189 @@ lua ssl server name: "test.com"
 --- no_error_log
 [error]
 [alert]
+
+
+
+=== TEST 6: verify client with CA certificates
+--- stream_config
+    server {
+        listen unix:$TEST_NGINX_HTML_DIR/nginx.sock ssl;
+
+        ssl_certificate ../../cert/test2.crt;
+        ssl_certificate_key ../../cert/test2.key;
+
+        ssl_certificate_by_lua_block {
+            collectgarbage()
+
+            local ffi = require "ffi"
+            require "defines"
+
+            local errmsg = ffi.new("char *[1]")
+
+            local r = require "resty.core.base" .get_request()
+            if not r then
+                ngx.log(ngx.ERR, "no request found")
+                return
+            end
+
+            local f = assert(io.open("t/cert/test.crt", "rb"))
+            local cert_data = f:read("*all")
+            f:close()
+
+            local cert = ffi.C.ngx_stream_lua_ffi_parse_pem_cert(cert_data, #cert_data, errmsg)
+            if not cert then
+                ngx.log(ngx.ERR, "failed to parse PEM cert: ",
+                        ffi.string(errmsg[0]))
+                return
+            end
+
+            local rc = ffi.C.ngx_stream_lua_ffi_ssl_verify_client(r, cert, -1, errmsg)
+            if rc ~= 0 then
+                ngx.log(ngx.ERR, "failed to set cdata cert: ",
+                        ffi.string(errmsg[0]))
+                return
+            end
+
+            ffi.C.ngx_stream_lua_ffi_free_cert(cert)
+        }
+
+        content_by_lua_block {
+            print('client certificate subject: ', ngx.var.ssl_client_s_dn)
+            ngx.say(ngx.var.ssl_client_verify)
+        }
+    }
+--- stream_server_config
+    proxy_pass                  unix:$TEST_NGINX_HTML_DIR/nginx.sock;
+    proxy_ssl                   on;
+    proxy_ssl_certificate       ../../cert/test.crt;
+    proxy_ssl_certificate_key   ../../cert/test.key;
+    proxy_ssl_session_reuse     off;
+
+--- stream_response
+SUCCESS
+
+--- error_log
+client certificate subject: emailAddress=agentzh@gmail.com,CN=test.com
+
+--- no_error_log
+[error]
+[alert]
+
+
+
+=== TEST 7: verify client without CA certificates
+--- stream_config
+    server {
+        listen unix:$TEST_NGINX_HTML_DIR/nginx.sock ssl;
+
+        ssl_certificate ../../cert/test2.crt;
+        ssl_certificate_key ../../cert/test2.key;
+
+        ssl_certificate_by_lua_block {
+            collectgarbage()
+
+            local ffi = require "ffi"
+            require "defines"
+
+            local errmsg = ffi.new("char *[1]")
+
+            local r = require "resty.core.base" .get_request()
+            if not r then
+                ngx.log(ngx.ERR, "no request found")
+                return
+            end
+
+            local rc = ffi.C.ngx_stream_lua_ffi_ssl_verify_client(r, nil, -1, errmsg)
+            if rc ~= 0 then
+                ngx.log(ngx.ERR, "failed to set cdata cert: ",
+                        ffi.string(errmsg[0]))
+                return
+            end
+        }
+
+        content_by_lua_block {
+            print('client certificate subject: ', ngx.var.ssl_client_s_dn)
+            ngx.say(ngx.var.ssl_client_verify)
+        }
+    }
+--- stream_server_config
+    proxy_pass                  unix:$TEST_NGINX_HTML_DIR/nginx.sock;
+    proxy_ssl                   on;
+    proxy_ssl_certificate       ../../cert/test.crt;
+    proxy_ssl_certificate_key   ../../cert/test.key;
+    proxy_ssl_session_reuse     off;
+
+--- stream_response
+FAILED:self signed certificate
+
+--- error_log
+client certificate subject: emailAddress=agentzh@gmail.com,CN=test.com
+
+--- no_error_log
+[error]
+[alert]
+
+
+
+=== TEST 8: verify client but client provides no certificate
+--- stream_config
+    server {
+        listen unix:$TEST_NGINX_HTML_DIR/nginx.sock ssl;
+
+        ssl_certificate ../../cert/test2.crt;
+        ssl_certificate_key ../../cert/test2.key;
+
+        ssl_certificate_by_lua_block {
+            collectgarbage()
+
+            local ffi = require "ffi"
+            require "defines"
+
+            local errmsg = ffi.new("char *[1]")
+
+            local r = require "resty.core.base" .get_request()
+            if not r then
+                ngx.log(ngx.ERR, "no request found")
+                return
+            end
+
+            local f = assert(io.open("t/cert/test.crt", "rb"))
+            local cert_data = f:read("*all")
+            f:close()
+
+            local cert = ffi.C.ngx_stream_lua_ffi_parse_pem_cert(cert_data, #cert_data, errmsg)
+            if not cert then
+                ngx.log(ngx.ERR, "failed to parse PEM cert: ",
+                        ffi.string(errmsg[0]))
+                return
+            end
+
+            local rc = ffi.C.ngx_stream_lua_ffi_ssl_verify_client(r, cert, 1, errmsg)
+            if rc ~= 0 then
+                ngx.log(ngx.ERR, "failed to set cdata cert: ",
+                        ffi.string(errmsg[0]))
+                return
+            end
+
+            ffi.C.ngx_stream_lua_ffi_free_cert(cert)
+        }
+
+        content_by_lua_block {
+            print('client certificate subject: ', ngx.var.ssl_client_s_dn)
+            ngx.say(ngx.var.ssl_client_verify)
+        }
+    }
+--- stream_server_config
+    proxy_pass                  unix:$TEST_NGINX_HTML_DIR/nginx.sock;
+    proxy_ssl                   on;
+    proxy_ssl_session_reuse     off;
+
+--- stream_response
+NONE
+
+--- error_log
+client certificate subject: nil
+
+--- no_error_log
+[error]
+[alert]

commit 5a8bc299acf365f9511537895482cc29c161482a
Author: Meathill <meathill@gmail.com>
Date:   Fri Jul 3 16:17:48 2020 +0800

    doc: updated the Version section to reflect the release date

diff --git a/README.md b/README.md
index f29c97d..bc521b2 100644
--- a/README.md
+++ b/README.md
@@ -41,8 +41,8 @@ Version
 =======
 
 This document describes ngx_stream_lua
-[v0.0.8](https://github.com/openresty/stream-lua-nginx-module/tags), which is not
-released yet.
+[v0.0.8](https://github.com/openresty/stream-lua-nginx-module/tags), which was released
+on 2 July, 2020.
 
 Synopsis
 ========
------ diff log end --------
** Summary: check here https://github.com/openresty/stream-lua-nginx-module
===================== END stream-lua-nginx-mod =================================
New Commit	: array-var-nginx-module: 6 commits since 'v0.05'
------ diff log --------
commit 89ecdb0bd03bb3af4554796e70590e683fa79210
Author: Yichun Zhang (agentzh) <agentzh@gmail.com>
Date:   Sat May 26 11:00:48 2018 -0700

    doc: installation: added missing dependency, ngx_devel_kit.

diff --git a/README.md b/README.md
index 443c5c3..d6c888c 100644
--- a/README.md
+++ b/README.md
@@ -263,23 +263,23 @@ You're recommended to install this module (as well as the Nginx core and many ot
 Alternatively, you can install this module manually with the Nginx source:
 
 Grab the nginx source code from [nginx.org](http://nginx.org/), for example,
-the version 1.9.7 (see [nginx compatibility](#compatibility)), and then build the source with this module:
+the version 1.13.6 (see [nginx compatibility](#compatibility)), and then build the source with this module:
 
 ```bash
+wget 'http://nginx.org/download/nginx-1.13.6.tar.gz'
+tar -xzvf nginx-1.13.6.tar.gz
+cd nginx-1.13.6/
 
- $ wget 'http://nginx.org/download/nginx-1.9.7.tar.gz'
- $ tar -xzvf nginx-1.9.7.tar.gz
- $ cd nginx-1.9.7/
+# Here we assume you would install you nginx under /opt/nginx/.
+./configure --prefix=/opt/nginx \
+  --add-module=/path/to/ngx_devel_kit \
+  --add-module=/path/to/array-var-nginx-module
 
- # Here we assume you would install you nginx under /opt/nginx/.
- $ ./configure --prefix=/opt/nginx \
-     --add-module=/path/to/array-var-nginx-module
-
- $ make -j2
- $ make install
+make -j2
+make install
 ```
 
-Download the latest version of the release tarball of this module from [array-var-nginx-module file list](https://github.com/openresty/array-var-nginx-module/tags).
+Download the latest version of the release tarball of this module from [array-var-nginx-module file list](https://github.com/openresty/array-var-nginx-module/tags), and the latest tarball for [ngx_devel_kit](https://github.com/simplresty/ngx_devel_kit) from its [file list](https://github.com/simplresty/ngx_devel_kit/tags).
 
 Also, this module is included and enabled by default in the [OpenResty bundle](http://openresty.org).
 
@@ -304,6 +304,10 @@ Compatibility
 
 The following versions of Nginx should work with this module:
 
+* **1.13.x** (last tested: 1.13.6)
+* **1.12.x**
+* **1.11.x** (last tested: 1.11.2)
+* **1.10.x**
 * **1.9.x** (last tested: 1.9.7)
 * **1.8.x**
 * **1.7.x** (last tested: 1.7.10)

commit 927e1e114a316a50497d7222114378304f31a5ee
Author: Yichun Zhang (agentzh) <agentzh@gmail.com>
Date:   Fri Oct 27 13:53:21 2017 -0700

    tests: added new valgrind false positives in the latest nginx core.

diff --git a/valgrind.suppress b/valgrind.suppress
index fe102b8..50011ab 100644
--- a/valgrind.suppress
+++ b/valgrind.suppress
@@ -159,3 +159,13 @@
    fun:ngx_set_environment
    fun:ngx_single_process_cycle
 }
+{
+   <insert_a_suppression_name_here>
+   Memcheck:Leak
+   match-leak-kinds: definite
+   fun:malloc
+   fun:ngx_alloc
+   fun:ngx_set_environment
+   fun:ngx_worker_process_init
+   fun:ngx_worker_process_cycle
+}

commit a5e8ba1d4a051ace4328ffc15bb3f27a3af031e3
Author: Yichun Zhang (agentzh) <agentzh@gmail.com>
Date:   Fri Oct 27 13:13:30 2017 -0700

    tests: valgrind.suppress: removed too aggressive suppressions in nginx mem pools and luajit lj_str_new.

diff --git a/valgrind.suppress b/valgrind.suppress
index 9027123..fe102b8 100644
--- a/valgrind.suppress
+++ b/valgrind.suppress
@@ -1,29 +1,29 @@
 {
-<insert_a_suppression_name_here>
-Memcheck:Param
-socketcall.sendmsg(msg.msg_iov[i])
-fun:sendmsg
-fun:ngx_write_channel
-fun:ngx_signal_worker_processes
-fun:ngx_master_process_cycle
-fun:main
+   <insert_a_suppression_name_here>
+   Memcheck:Param
+   socketcall.sendmsg(msg.msg_iov[i])
+   fun:sendmsg
+   fun:ngx_write_channel
+   fun:ngx_signal_worker_processes
+   fun:ngx_master_process_cycle
+   fun:main
 }
 {
-<insert_a_suppression_name_here>
-Memcheck:Addr4
-fun:ngx_init_cycle
-fun:ngx_master_process_cycle
-fun:main
+   <insert_a_suppression_name_here>
+   Memcheck:Addr4
+   fun:ngx_init_cycle
+   fun:ngx_master_process_cycle
+   fun:main
 }
 {
-<insert_a_suppression_name_here>
-Memcheck:Param
-socketcall.sendmsg(msg.msg_iov[i])
-fun:__sendmsg_nocancel
-fun:ngx_write_channel
-fun:ngx_signal_worker_processes
-fun:ngx_master_process_cycle
-fun:main
+   <insert_a_suppression_name_here>
+   Memcheck:Param
+   socketcall.sendmsg(msg.msg_iov[i])
+   fun:__sendmsg_nocancel
+   fun:ngx_write_channel
+   fun:ngx_signal_worker_processes
+   fun:ngx_master_process_cycle
+   fun:main
 }
 {
    <insert_a_suppression_name_here>
@@ -34,45 +34,39 @@ fun:main
 }
 {
    <insert_a_suppression_name_here>
-   Memcheck:Leak
-   fun:malloc
-   fun:ngx_alloc
+   Memcheck:Param
+   socketcall.sendmsg(msg.msg_iov[i])
+   fun:__sendmsg_nocancel
+   fun:ngx_write_channel
+   fun:ngx_signal_worker_processes
+   fun:ngx_master_process_cycle
+   fun:main
 }
 {
-<insert_a_suppression_name_here>
-Memcheck:Param
-socketcall.sendmsg(msg.msg_iov[i])
-fun:__sendmsg_nocancel
-fun:ngx_write_channel
-fun:ngx_signal_worker_processes
-fun:ngx_master_process_cycle
-fun:main
-}
-{
-<insert_a_suppression_name_here>
-Memcheck:Param
-socketcall.sendmsg(msg.msg_iov[i])
-fun:__sendmsg_nocancel
-fun:ngx_write_channel
-fun:ngx_master_process_cycle
-fun:main
-}
-{
-<insert_a_suppression_name_here>
-Memcheck:Param
-socketcall.sendmsg(msg.msg_iov[i])
-fun:__sendmsg_nocancel
-fun:ngx_write_channel
-fun:ngx_pass_open_channel
-fun:ngx_start_worker_processes
-fun:ngx_master_process_cycle
-fun:main
-}
-{
-<insert_a_suppression_name_here>
-Memcheck:Param
-epoll_ctl(event)
-fun:epoll_ctl
+   <insert_a_suppression_name_here>
+   Memcheck:Param
+   socketcall.sendmsg(msg.msg_iov[i])
+   fun:__sendmsg_nocancel
+   fun:ngx_write_channel
+   fun:ngx_master_process_cycle
+   fun:main
+}
+{
+   <insert_a_suppression_name_here>
+   Memcheck:Param
+   socketcall.sendmsg(msg.msg_iov[i])
+   fun:__sendmsg_nocancel
+   fun:ngx_write_channel
+   fun:ngx_pass_open_channel
+   fun:ngx_start_worker_processes
+   fun:ngx_master_process_cycle
+   fun:main
+}
+{
+   <insert_a_suppression_name_here>
+   Memcheck:Param
+   epoll_ctl(event)
+   fun:epoll_ctl
 }
 {
    nginx-core-process-init

commit b572087c65a53deb15aee3aedd64e5a5d5f89d0a
Author: Yichun Zhang (agentzh) <agentzh@gmail.com>
Date:   Fri Oct 27 12:02:15 2017 -0700

    tests: minor tweaks in valgrind.suppress.

diff --git a/valgrind.suppress b/valgrind.suppress
index 946e534..9027123 100644
--- a/valgrind.suppress
+++ b/valgrind.suppress
@@ -37,7 +37,6 @@ fun:main
    Memcheck:Leak
    fun:malloc
    fun:ngx_alloc
-   fun:(below main)
 }
 {
 <insert_a_suppression_name_here>

commit 2b7ab11003f41a332fa0d04c902c0dd2aad1a220
Author: Yichun Zhang (agentzh) <agentzh@gmail.com>
Date:   Fri Oct 27 09:32:52 2017 -0700

    tests: suppressed a valgrind false positive in the latest nginx core.

diff --git a/valgrind.suppress b/valgrind.suppress
index ab1e4bb..946e534 100644
--- a/valgrind.suppress
+++ b/valgrind.suppress
@@ -157,3 +157,12 @@ fun:epoll_ctl
    fun:do_preload
    fun:dl_main
 }
+{
+   <insert_a_suppression_name_here>
+   Memcheck:Leak
+   match-leak-kinds: definite
+   fun:malloc
+   fun:ngx_alloc
+   fun:ngx_set_environment
+   fun:ngx_single_process_cycle
+}

commit 844ccce047c104b1c47d464292cf01c926e8a6c4
Author: Yichun Zhang (agentzh) <agentzh@gmail.com>
Date:   Tue Jul 26 16:47:03 2016 -0700

    feature: added Travis CI support.

diff --git a/.travis.yml b/.travis.yml
new file mode 100644
index 0000000..086ab81
--- /dev/null
+++ b/.travis.yml
@@ -0,0 +1,65 @@
+sudo: required
+dist: trusty
+
+os: linux
+
+language: c
+
+compiler:
+  - gcc
+  - clang
+
+env:
+  global:
+    - LUAJIT_PREFIX=/opt/luajit21
+    - LUAJIT_LIB=$LUAJIT_PREFIX/lib
+    - LD_LIBRARY_PATH=$LUAJIT_LIB:$LD_LIBRARY_PATH
+    - LUAJIT_INC=$LUAJIT_PREFIX/include/luajit-2.1
+    - LUA_INCLUDE_DIR=$LUAJIT_INC
+    - LUA_CMODULE_DIR=/lib
+    - JOBS=3
+    - NGX_BUILD_JOBS=$JOBS
+    - TEST_NGINX_SLEEP=0.006
+  matrix:
+    - NGINX_VERSION=1.9.15
+    - NGINX_VERSION=1.11.2
+
+addons:
+  apt:
+    packages:
+    - axel
+    - cpanminus
+    - libtest-base-perl
+    - libtext-diff-perl
+    - liburi-perl
+    - libwww-perl
+    - libtest-longstring-perl
+    - liblist-moreutils-perl
+    - libgd-dev
+
+cache:
+  apt: true
+  directories:
+  - download-cache
+
+install:
+  - git clone https://github.com/openresty/nginx-devel-utils.git
+  - git clone https://github.com/openresty/openresty.git ../openresty
+  - git clone https://github.com/openresty/no-pool-nginx.git ../no-pool-nginx
+  - git clone https://github.com/simpl/ngx_devel_kit.git ../ndk-nginx-module
+  - git clone https://github.com/openresty/test-nginx.git
+  - git clone -b v2.1-agentzh https://github.com/openresty/luajit2.git
+  - git clone https://github.com/openresty/lua-nginx-module.git ../lua-nginx-module
+  - git clone https://github.com/openresty/echo-nginx-module.git ../echo-nginx-module
+  - git clone https://github.com/openresty/set-misc-nginx-module.git ../set-misc-nginx-module
+
+script:
+  - cd luajit2
+  - make -j$JOBS CCDEBUG=-g Q= PREFIX=$LUAJIT_PREFIX CC=$CC XCFLAGS='-DLUA_USE_APICHECK -DLUA_USE_ASSERT' > build.log 2>&1 || (cat build.log && exit 1)
+  - sudo make install PREFIX=$LUAJIT_PREFIX > build.log 2>&1 || (cat build.log && exit 1)
+  - cd ../test-nginx && sudo cpanm . && cd ..
+  - export PATH=$PWD/work/nginx/sbin:$PWD/nginx-devel-utils:$PATH
+  - export NGX_BUILD_CC=$CC
+  - sh util/build.sh $NGINX_VERSION > build.log 2>&1 || (cat build.log && exit 1)
+  - nginx -V
+  - prove -r t
------ diff log end --------
** Summary: check here https://github.com/openresty/array-var-nginx-module
===================== END array-var-nginx-modu =================================
New Commit	: memc-nginx-module: 7 commits since 'v0.19'
------ diff log --------
commit dfbed06016b73e3e84cd961735a352e4f5477865
Author: Thibault Charbonnier <thibaultcha@me.com>
Date:   Wed Jan 22 15:12:52 2020 -0800

    travis-ci: bumped the NGINX core to 1.17.8.

diff --git a/.travis.yml b/.travis.yml
index 1125a32..7febe45 100644
--- a/.travis.yml
+++ b/.travis.yml
@@ -28,7 +28,7 @@ env:
     - NGX_BUILD_JOBS=$JOBS
   matrix:
     - NGINX_VERSION=1.11.2
-    - NGINX_VERSION=1.17.4
+    - NGINX_VERSION=1.17.8
 
 services:
  - memcache

commit 32124a5454238ca5ae78a8df9298445293e8d73c
Author: Thibault Charbonnier <thibaultcha@me.com>
Date:   Mon Sep 30 11:56:12 2019 -0700

    doc: updated the nginx compatibility list.

diff --git a/README.markdown b/README.markdown
index f5a3873..7f82bd1 100644
--- a/README.markdown
+++ b/README.markdown
@@ -645,6 +645,8 @@ Compatibility
 
 The following versions of Nginx should work with this module:
 
+
+* **1.17.x**                      (last tested: 1.17.4)
 * **1.16.x**
 * **1.15.x**                      (last tested: 1.15.8)
 * **1.14.x**

commit ed0aa3ffb1860516a8bbcf1ea996fe59eca42a56
Author: Thibault Charbonnier <thibaultcha@me.com>
Date:   Mon Sep 30 11:55:18 2019 -0700

    travis-ci: bumped the NGINX core to 1.17.4.

diff --git a/.travis.yml b/.travis.yml
index be84d0d..1125a32 100644
--- a/.travis.yml
+++ b/.travis.yml
@@ -28,7 +28,7 @@ env:
     - NGX_BUILD_JOBS=$JOBS
   matrix:
     - NGINX_VERSION=1.11.2
-    - NGINX_VERSION=1.17.1
+    - NGINX_VERSION=1.17.4
 
 services:
  - memcache

commit 9a2f32f6fd39acd860bef903ad8811d0fb5d89b4
Author: Yichun Zhang (agentzh) <yichun@openresty.com>
Date:   Thu Aug 1 11:17:36 2019 -0700

    doc: updated the nginx compatibility list.

diff --git a/README.markdown b/README.markdown
index 99e135f..f5a3873 100644
--- a/README.markdown
+++ b/README.markdown
@@ -645,6 +645,9 @@ Compatibility
 
 The following versions of Nginx should work with this module:
 
+* **1.16.x**
+* **1.15.x**                      (last tested: 1.15.8)
+* **1.14.x**
 * **1.13.x**                      (last tested: 1.13.6)
 * **1.12.x**
 * **1.11.x**                      (last tested: 1.11.2)

commit 7b40bdcd7b8d9015ab6f3db9348548a6f210f1ee
Author: Thibault Charbonnier <thibaultcha@me.com>
Date:   Thu Jul 11 14:38:13 2019 -0700

    travis: bumped the nginx core version to 1.17.1.

diff --git a/.travis.yml b/.travis.yml
index aadaea8..be84d0d 100644
--- a/.travis.yml
+++ b/.travis.yml
@@ -28,7 +28,7 @@ env:
     - NGX_BUILD_JOBS=$JOBS
   matrix:
     - NGINX_VERSION=1.11.2
-    - NGINX_VERSION=1.15.8
+    - NGINX_VERSION=1.17.1
 
 services:
  - memcache

commit 767da831ab16dfc1235555ace35d0c293cd3bc7b
Author: Thibault Charbonnier <thibaultcha@me.com>
Date:   Thu Jul 11 14:37:45 2019 -0700

    travis: clone the lua-resty-core and lua-resty-lrucache repositories.
    
    Those are required with recent versions of ngx_lua.

diff --git a/.travis.yml b/.travis.yml
index 1d10967..aadaea8 100644
--- a/.travis.yml
+++ b/.travis.yml
@@ -41,6 +41,8 @@ install:
   - git clone https://github.com/openresty/test-nginx.git
   - git clone -b v2.1-agentzh https://github.com/openresty/luajit2.git
   - git clone https://github.com/openresty/lua-nginx-module.git ../lua-nginx-module
+  - git clone https://github.com/openresty/lua-resty-core.git ../lua-resty-core
+  - git clone https://github.com/openresty/lua-resty-lrucache.git ../lua-resty-lrucache
   - git clone https://github.com/openresty/nginx-eval-module.git ../eval-nginx-module
   - git clone https://github.com/openresty/echo-nginx-module.git ../echo-nginx-module
   - git clone https://github.com/openresty/set-misc-nginx-module.git ../set-misc-nginx-module

commit 133aac6cca0c9228062924cd1770a2408af515a2
Author: Thibault Charbonnier <thibaultcha@me.com>
Date:   Tue Jan 29 19:41:35 2019 -0800

    travis: bumped the nginx core version to 1.15.8.

diff --git a/.travis.yml b/.travis.yml
index 956225f..1d10967 100644
--- a/.travis.yml
+++ b/.travis.yml
@@ -28,7 +28,7 @@ env:
     - NGX_BUILD_JOBS=$JOBS
   matrix:
     - NGINX_VERSION=1.11.2
-    - NGINX_VERSION=1.13.6
+    - NGINX_VERSION=1.15.8
 
 services:
  - memcache
------ diff log end --------
** Summary: check here https://github.com/openresty/memc-nginx-module
===================== END memc-nginx-module =================================
New Commit	: srcache-nginx-module: 1 commits since 'v0.32'
------ diff log --------
commit ab46d947e2fda591de06dac3ba6c9c6f0e8f6b61
Author: Meathill <meathill@openresty.com>
Date:   Fri Jul 3 16:33:43 2020 +0800

    doc: updated the Version section to reflect the release date.

diff --git a/README.markdown b/README.markdown
index f155106..aa6abca 100644
--- a/README.markdown
+++ b/README.markdown
@@ -66,7 +66,7 @@ This module is production ready.
 Version
 =======
 
-This document describes srcache-nginx-module [v0.31](https://github.com/openresty/srcache-nginx-module/tags) released on 15 May 2016.
+This document describes srcache-nginx-module [v0.32](https://github.com/openresty/srcache-nginx-module/tags) released on 2 July 2020.
 
 Synopsis
 ========
@@ -476,7 +476,7 @@ Since the `v0.12rc7` release, both the response status line, response headers, a
 
 You can use the [srcache_store_pass_header](#srcache_store_pass_header) and/or [srcache_store_hide_header](#srcache_store_hide_header) directives to control what headers to cache and what not.
 
-The original response's data chunks get emitted as soon as 
+The original response's data chunks get emitted as soon as
 they arrive. `srcache_store` just copies and collects the data in an output filter without postponing them from being sent downstream.
 
 But please note that even though all the response data will be sent immediately, the current Nginx request lifetime will not finish until the srcache_store subrequest completes. That means a delay in closing the TCP connection on the server side (when HTTP keepalive is disabled, but proper HTTP clients should close the connection actively on the client side, which adds no extra delay or other issues at all) or serving the next request sent on the same TCP connection (when HTTP keepalive is in action).
------ diff log end --------
** Summary: check here https://github.com/openresty/srcache-nginx-module
===================== END srcache-nginx-module =================================
New Commit	: form-input-nginx-module: 3 commits since 'v0.12'
------ diff log --------
commit 2c94e74671f006d1897de062b5c774f7e0e5ff74
Author: Yichun Zhang (agentzh) <agentzh@gmail.com>
Date:   Fri Oct 27 13:53:24 2017 -0700

    tests: added new valgrind false positives in the latest nginx core.

diff --git a/valgrind.suppress b/valgrind.suppress
index 31a62f8..6c7467e 100644
--- a/valgrind.suppress
+++ b/valgrind.suppress
@@ -38,3 +38,13 @@
    fun:ngx_set_environment
    fun:ngx_single_process_cycle
 }
+{
+   <insert_a_suppression_name_here>
+   Memcheck:Leak
+   match-leak-kinds: definite
+   fun:malloc
+   fun:ngx_alloc
+   fun:ngx_set_environment
+   fun:ngx_worker_process_init
+   fun:ngx_worker_process_cycle
+}

commit b1096f6e7793d937f8f3061e317b838735f6f85c
Author: Yichun Zhang (agentzh) <agentzh@gmail.com>
Date:   Fri Oct 27 09:52:33 2017 -0700

    tests: suppressed a valgrind false positive in the latest nginx core.

diff --git a/valgrind.suppress b/valgrind.suppress
index 724034e..31a62f8 100644
--- a/valgrind.suppress
+++ b/valgrind.suppress
@@ -29,3 +29,12 @@
    fun:_dl_sysdep_start
    fun:_dl_start
 }
+{
+   <insert_a_suppression_name_here>
+   Memcheck:Leak
+   match-leak-kinds: definite
+   fun:malloc
+   fun:ngx_alloc
+   fun:ngx_set_environment
+   fun:ngx_single_process_cycle
+}

commit 39e62ccf1f35c02cd97cbcc2cdf67c599d6ab1bd
Author: Yichun Zhang (agentzh) <agentzh@gmail.com>
Date:   Sun May 15 21:51:55 2016 -0700

    doc: nginx compatibility as far as 1.9.15.

diff --git a/README.md b/README.md
index dcd6e35..f7ba70a 100644
--- a/README.md
+++ b/README.md
@@ -28,12 +28,12 @@ Installation
 ============
 
 Grab the nginx source code from [nginx.org](http://nginx.org/), for example,
-the version 1.9.7 (see [nginx compatibility](#compatibility)), and then build the source with this module:
+the version 1.9.15 (see [nginx compatibility](#compatibility)), and then build the source with this module:
 
 ```bash
-wget 'http://nginx.org/download/nginx-1.9.7.tar.gz'
-tar -xzvf nginx-1.9.7.tar.gz
-cd nginx-1.9.7/
+wget 'http://nginx.org/download/nginx-1.9.15.tar.gz'
+tar -xzvf nginx-1.9.15.tar.gz
+cd nginx-1.9.15/
 
 ./configure --add-module=/path/to/ngx_devel_kit \
     --add-module=/path/to/form-input-nginx-module
@@ -116,7 +116,7 @@ Compatibility
 
 The following versions of Nginx should work with this module:
 
-* 1.9.x (last tested: 1.9.7)
+* 1.9.x (last tested: 1.9.15)
 * 1.8.x
 * 1.7.x (last tested: 1.7.4)
 * 1.6.x
------ diff log end --------
** Summary: check here https://github.com/calio/form-input-nginx-module
===================== END form-input-nginx-mod =================================
New Commit	: iconv-nginx-module: 3 commits since 'v0.14'
------ diff log --------
commit 9d5d79d9de2d4630ac8f328270aa8cc8ff2c0c66
Author: Yichun Zhang (agentzh) <agentzh@gmail.com>
Date:   Fri Oct 27 13:53:25 2017 -0700

    tests: added new valgrind false positives in the latest nginx core.

diff --git a/valgrind.suppress b/valgrind.suppress
index 2c191aa..9df8e58 100644
--- a/valgrind.suppress
+++ b/valgrind.suppress
@@ -110,3 +110,22 @@
    fun:do_preload
    fun:dl_main
 }
+{
+   <insert_a_suppression_name_here>
+   Memcheck:Leak
+   match-leak-kinds: definite
+   fun:malloc
+   fun:ngx_alloc
+   fun:ngx_set_environment
+   fun:ngx_single_process_cycle
+}
+{
+   <insert_a_suppression_name_here>
+   Memcheck:Leak
+   match-leak-kinds: definite
+   fun:malloc
+   fun:ngx_alloc
+   fun:ngx_set_environment
+   fun:ngx_worker_process_init
+   fun:ngx_worker_process_cycle
+}

commit 766d58ad32da0fe94beee0fd52d04001b9951125
Author: Yichun Zhang (agentzh) <agentzh@gmail.com>
Date:   Fri Oct 27 13:13:34 2017 -0700

    tests: valgrind.suppress: removed too aggressive suppressions in nginx mem pools and luajit lj_str_new.

diff --git a/valgrind.suppress b/valgrind.suppress
index ad0ea8c..2c191aa 100644
--- a/valgrind.suppress
+++ b/valgrind.suppress
@@ -1,64 +1,34 @@
-{
-<insert_a_suppression_name_here>
-Memcheck:Leak
-fun:malloc
-fun:ngx_alloc
-obj:*
-}
-{
-<insert_a_suppression_name_here>
-Memcheck:Addr4
-fun:lj_str_new
-fun:lua_getfield
-fun:ngx_http_lua_cache_load_code
-}
-{
-<insert_a_suppression_name_here>
-Memcheck:Leak
-fun:malloc
-fun:ngx_alloc
-fun:ngx_event_process_init
-}
-{
-<insert_a_suppression_name_here>
-Memcheck:Leak
-fun:malloc
-fun:ngx_alloc
-}
 {
    <insert_a_suppression_name_here>
    Memcheck:Leak
    fun:malloc
    fun:ngx_alloc
-   fun:ngx_calloc
-   fun:ngx_event_process_init
+   obj:*
 }
 {
    <insert_a_suppression_name_here>
    Memcheck:Leak
    fun:malloc
    fun:ngx_alloc
-   fun:ngx_create_pool
-   fun:ngx_http_init_request
-   fun:ngx_epoll_process_events
-   fun:ngx_process_events_and_timers
+   fun:ngx_event_process_init
 }
 {
    <insert_a_suppression_name_here>
    Memcheck:Leak
    fun:malloc
    fun:ngx_alloc
-   fun:ngx_malloc
-   fun:ngx_pnalloc
+   fun:ngx_calloc
+   fun:ngx_event_process_init
 }
 {
    <insert_a_suppression_name_here>
    Memcheck:Leak
    fun:malloc
    fun:ngx_alloc
-   fun:ngx_malloc
-   fun:ngx_palloc_large
-   fun:ngx_palloc
+   fun:ngx_create_pool
+   fun:ngx_http_init_request
+   fun:ngx_epoll_process_events
+   fun:ngx_process_events_and_timers
 }
 {
    <insert_a_suppression_name_here>
@@ -70,29 +40,6 @@ fun:ngx_alloc
    fun:ngx_epoll_process_events
    fun:ngx_process_events_and_timers
 }
-{
-   <insert_a_suppression_name_here>
-   Memcheck:Leak
-   fun:malloc
-   fun:ngx_alloc
-   fun:ngx_malloc
-   fun:ngx_palloc
-}
-{
-   <insert_a_suppression_name_here>
-   Memcheck:Leak
-   fun:malloc
-   fun:ngx_alloc
-   fun:ngx_palloc_large
-   fun:ngx_palloc
-}
-{
-   <insert_a_suppression_name_here>
-   Memcheck:Addr4
-   fun:lj_str_new
-   fun:lua_setfield
-   fun:ngx_http_lua_cache_store_code
-}
 {
    <insert_a_suppression_name_here>
    Memcheck:Leak
@@ -106,7 +53,7 @@ fun:ngx_alloc
    fun:ngx_conf_flush_files
 }
 {
-   a1 
+   a1
    Memcheck:Leak
    fun:_vgrZU_libcZdsoZa_malloc
    fun:ngx_strerror_init

commit ec0243e3b02e74c88fd0a978839e8ffa07230bb7
Author: Yichun Zhang (agentzh) <agentzh@gmail.com>
Date:   Fri Oct 27 12:02:15 2017 -0700

    tests: minor tweaks in valgrind.suppress.

diff --git a/valgrind.suppress b/valgrind.suppress
index 3ac1380..ad0ea8c 100644
--- a/valgrind.suppress
+++ b/valgrind.suppress
@@ -24,7 +24,6 @@ fun:ngx_event_process_init
 Memcheck:Leak
 fun:malloc
 fun:ngx_alloc
-fun:(below main)
 }
 {
    <insert_a_suppression_name_here>
@@ -148,7 +147,7 @@ fun:(below main)
    fun:main
 }
 {
-   /lib/libc-2.12.so
+   libc-2.12.so
    Memcheck:Param
    epoll_ctl(event)
    fun:epoll_ctl
------ diff log end --------
** Summary: check here https://github.com/calio/iconv-nginx-module
===================== END iconv-nginx-module =================================
New Commit	: encrypted-session-nginx-module: 1 commits since 'v0.08'
------ diff log --------
commit a42c37118588833723935aa460b2dc2e3234f0b0
Author: Yichun Zhang (agentzh) <yichun@openresty.com>
Date:   Sun Feb 3 22:32:01 2019 -0800

    doc: use 3600 sec in the example to help manual testing.
    
    Fix #18.

diff --git a/README.md b/README.md
index c32e498..890222f 100644
--- a/README.md
+++ b/README.md
@@ -46,7 +46,7 @@ encrypted_session_key "abcdefghijklmnopqrstuvwxyz123456";
 encrypted_session_iv "1234567812345678";
 
 # default: 1d (1 day)
-encrypted_session_expires 2; # in sec
+encrypted_session_expires 3600; # in sec
 
 location /encrypt {
     set $raw 'text to encrypted'; # from the ngx_rewrite module
------ diff log end --------
** Summary: check here https://github.com/openresty/encrypted-session-nginx-module
===================== END encrypted-session-ng =================================
New Commit	: ngx_postgres: 5 commits since '1.0'
------ diff log --------
commit 1b95970bb3bd317b7a041961341012f4e4081c40
Author: Yichun Zhang (agentzh) <agentzh@gmail.com>
Date:   Sat Jan 20 16:42:33 2018 -0800

    style: fixed minor coding style issues found by ngx-releng.

diff --git a/src/ngx_postgres_ddebug.h b/src/ngx_postgres_ddebug.h
index 38253fc..504c444 100644
--- a/src/ngx_postgres_ddebug.h
+++ b/src/ngx_postgres_ddebug.h
@@ -36,8 +36,8 @@
 
 #   if (NGX_HAVE_VARIADIC_MACROS)
 
-#       define dd(...) fprintf(stderr, "postgres *** %s: ", __func__); \
-            fprintf(stderr, __VA_ARGS__); \
+#       define dd(...) fprintf(stderr, "postgres *** %s: ", __func__);       \
+            fprintf(stderr, __VA_ARGS__);                                    \
             fprintf(stderr, " *** %s line %d.\n", __FILE__, __LINE__)
 
 #   else
diff --git a/src/ngx_postgres_handler.c b/src/ngx_postgres_handler.c
index cf8c1bb..747a375 100644
--- a/src/ngx_postgres_handler.c
+++ b/src/ngx_postgres_handler.c
@@ -88,8 +88,8 @@ ngx_postgres_handler(ngx_http_request_t *r)
         return rc;
     }
 
-#if defined(nginx_version) \
-    && (((nginx_version >= 7063) && (nginx_version < 8000)) \
+#if defined(nginx_version)                                                   \
+    && (((nginx_version >= 7063) && (nginx_version < 8000))                  \
         || (nginx_version >= 8007))
 
     if (ngx_http_upstream_create(r) != NGX_OK) {
diff --git a/src/ngx_postgres_handler.h b/src/ngx_postgres_handler.h
index 1b6715b..bbce47c 100644
--- a/src/ngx_postgres_handler.h
+++ b/src/ngx_postgres_handler.h
@@ -33,17 +33,18 @@
 #include <ngx_http.h>
 
 
-ngx_int_t  ngx_postgres_handler(ngx_http_request_t *);
-void       ngx_postgres_wev_handler(ngx_http_request_t *,
-               ngx_http_upstream_t *);
-void       ngx_postgres_rev_handler(ngx_http_request_t *,
-               ngx_http_upstream_t *);
-ngx_int_t  ngx_postgres_create_request(ngx_http_request_t *);
-ngx_int_t  ngx_postgres_reinit_request(ngx_http_request_t *);
-void       ngx_postgres_abort_request(ngx_http_request_t *);
-void       ngx_postgres_finalize_request(ngx_http_request_t *, ngx_int_t);
-ngx_int_t  ngx_postgres_process_header(ngx_http_request_t *);
-ngx_int_t  ngx_postgres_input_filter_init(void *);
-ngx_int_t  ngx_postgres_input_filter(void *, ssize_t);
+ngx_int_t ngx_postgres_handler(ngx_http_request_t *);
+void ngx_postgres_wev_handler(ngx_http_request_t *,
+    ngx_http_upstream_t *);
+void ngx_postgres_rev_handler(ngx_http_request_t *,
+    ngx_http_upstream_t *);
+ngx_int_t ngx_postgres_create_request(ngx_http_request_t *);
+ngx_int_t ngx_postgres_reinit_request(ngx_http_request_t *);
+void ngx_postgres_abort_request(ngx_http_request_t *);
+void ngx_postgres_finalize_request(ngx_http_request_t *, ngx_int_t);
+ngx_int_t ngx_postgres_process_header(ngx_http_request_t *);
+ngx_int_t ngx_postgres_input_filter_init(void *);
+ngx_int_t ngx_postgres_input_filter(void *, ssize_t);
+
 
 #endif /* _NGX_POSTGRES_HANDLER_H_ */
diff --git a/src/ngx_postgres_keepalive.h b/src/ngx_postgres_keepalive.h
index 31e024a..52a4a7e 100644
--- a/src/ngx_postgres_keepalive.h
+++ b/src/ngx_postgres_keepalive.h
@@ -47,19 +47,20 @@ typedef struct {
 } ngx_postgres_keepalive_cache_t;
 
 
-ngx_int_t   ngx_postgres_keepalive_init(ngx_pool_t *,
-                ngx_postgres_upstream_srv_conf_t *);
+ngx_int_t ngx_postgres_keepalive_init(ngx_pool_t *,
+    ngx_postgres_upstream_srv_conf_t *);
 ngx_int_t   ngx_postgres_keepalive_get_peer_single(ngx_peer_connection_t *,
-                ngx_postgres_upstream_peer_data_t *,
-                ngx_postgres_upstream_srv_conf_t *);
+    ngx_postgres_upstream_peer_data_t *,
+    ngx_postgres_upstream_srv_conf_t *);
 ngx_int_t   ngx_postgres_keepalive_get_peer_multi(ngx_peer_connection_t *,
-                ngx_postgres_upstream_peer_data_t *,
-                ngx_postgres_upstream_srv_conf_t *);
-void        ngx_postgres_keepalive_free_peer(ngx_peer_connection_t *,
-                ngx_postgres_upstream_peer_data_t *,
-                ngx_postgres_upstream_srv_conf_t *, ngx_uint_t);
-void        ngx_postgres_keepalive_dummy_handler(ngx_event_t *);
-void        ngx_postgres_keepalive_close_handler(ngx_event_t *);
-void        ngx_postgres_keepalive_cleanup(void *);
+    ngx_postgres_upstream_peer_data_t *,
+    ngx_postgres_upstream_srv_conf_t *);
+void ngx_postgres_keepalive_free_peer(ngx_peer_connection_t *,
+    ngx_postgres_upstream_peer_data_t *,
+    ngx_postgres_upstream_srv_conf_t *, ngx_uint_t);
+void ngx_postgres_keepalive_dummy_handler(ngx_event_t *);
+void ngx_postgres_keepalive_close_handler(ngx_event_t *);
+void ngx_postgres_keepalive_cleanup(void *);
+
 
 #endif /* _NGX_POSTGRES_KEEPALIVE_H_ */
diff --git a/src/ngx_postgres_module.c b/src/ngx_postgres_module.c
index 407a366..5c04b35 100644
--- a/src/ngx_postgres_module.c
+++ b/src/ngx_postgres_module.c
@@ -174,21 +174,21 @@ ngx_module_t ngx_postgres_module = {
 };
 
 ngx_conf_bitmask_t ngx_postgres_http_methods[] = {
-   { ngx_string("GET"),       NGX_HTTP_GET },
-   { ngx_string("HEAD"),      NGX_HTTP_HEAD },
-   { ngx_string("POST"),      NGX_HTTP_POST },
-   { ngx_string("PUT"),       NGX_HTTP_PUT },
-   { ngx_string("DELETE"),    NGX_HTTP_DELETE },
-   { ngx_string("MKCOL"),     NGX_HTTP_MKCOL },
-   { ngx_string("COPY"),      NGX_HTTP_COPY },
-   { ngx_string("MOVE"),      NGX_HTTP_MOVE },
-   { ngx_string("OPTIONS"),   NGX_HTTP_OPTIONS },
-   { ngx_string("PROPFIND"),  NGX_HTTP_PROPFIND },
-   { ngx_string("PROPPATCH"), NGX_HTTP_PROPPATCH },
-   { ngx_string("LOCK"),      NGX_HTTP_LOCK },
-   { ngx_string("UNLOCK"),    NGX_HTTP_UNLOCK },
+    { ngx_string("GET"),       NGX_HTTP_GET },
+    { ngx_string("HEAD"),      NGX_HTTP_HEAD },
+    { ngx_string("POST"),      NGX_HTTP_POST },
+    { ngx_string("PUT"),       NGX_HTTP_PUT },
+    { ngx_string("DELETE"),    NGX_HTTP_DELETE },
+    { ngx_string("MKCOL"),     NGX_HTTP_MKCOL },
+    { ngx_string("COPY"),      NGX_HTTP_COPY },
+    { ngx_string("MOVE"),      NGX_HTTP_MOVE },
+    { ngx_string("OPTIONS"),   NGX_HTTP_OPTIONS },
+    { ngx_string("PROPFIND"),  NGX_HTTP_PROPFIND },
+    { ngx_string("PROPPATCH"), NGX_HTTP_PROPPATCH },
+    { ngx_string("LOCK"),      NGX_HTTP_LOCK },
+    { ngx_string("UNLOCK"),    NGX_HTTP_UNLOCK },
 #if defined(nginx_version) && (nginx_version >= 8041)
-   { ngx_string("PATCH"),     NGX_HTTP_PATCH },
+    { ngx_string("PATCH"),     NGX_HTTP_PATCH },
 #endif
     { ngx_null_string, 0 }
 };
@@ -448,7 +448,7 @@ ngx_postgres_conf_server(ngx_conf_t *cf, ngx_command_t *cmd, void *conf)
     for (i = 2; i < cf->args->nelts; i++) {
 
         if (ngx_strncmp(value[i].data, "dbname=", sizeof("dbname=") - 1)
-                == 0)
+            == 0)
         {
             pgs->dbname.len = value[i].len - (sizeof("dbname=") - 1);
             pgs->dbname.data = &value[i].data[sizeof("dbname=") - 1];
@@ -456,7 +456,7 @@ ngx_postgres_conf_server(ngx_conf_t *cf, ngx_command_t *cmd, void *conf)
         }
 
         if (ngx_strncmp(value[i].data, "user=", sizeof("user=") - 1)
-                == 0)
+            == 0)
         {
             pgs->user.len = value[i].len - (sizeof("user=") - 1);
             pgs->user.data = &value[i].data[sizeof("user=") - 1];
@@ -464,7 +464,7 @@ ngx_postgres_conf_server(ngx_conf_t *cf, ngx_command_t *cmd, void *conf)
         }
 
         if (ngx_strncmp(value[i].data, "password=", sizeof("password=") - 1)
-                == 0)
+            == 0)
         {
             pgs->password.len = value[i].len - (sizeof("password=") - 1);
             pgs->password.data = &value[i].data[sizeof("password=") - 1];
@@ -511,7 +511,7 @@ ngx_postgres_conf_keepalive(ngx_conf_t *cf, ngx_command_t *cmd, void *conf)
     for (i = 1; i < cf->args->nelts; i++) {
 
         if (ngx_strncmp(value[i].data, "max=", sizeof("max=") - 1)
-                == 0)
+            == 0)
         {
             value[i].len = value[i].len - (sizeof("max=") - 1);
             value[i].data = &value[i].data[sizeof("max=") - 1];
@@ -533,7 +533,7 @@ ngx_postgres_conf_keepalive(ngx_conf_t *cf, ngx_command_t *cmd, void *conf)
         }
 
         if (ngx_strncmp(value[i].data, "mode=", sizeof("mode=") - 1)
-                == 0)
+            == 0)
         {
             value[i].len = value[i].len - (sizeof("mode=") - 1);
             value[i].data = &value[i].data[sizeof("mode=") - 1];
@@ -562,7 +562,7 @@ ngx_postgres_conf_keepalive(ngx_conf_t *cf, ngx_command_t *cmd, void *conf)
         }
 
         if (ngx_strncmp(value[i].data, "overflow=", sizeof("overflow=") - 1)
-                == 0)
+            == 0)
         {
             value[i].len = value[i].len - (sizeof("overflow=") - 1);
             value[i].data = &value[i].data[sizeof("overflow=") - 1];
diff --git a/src/ngx_postgres_module.h b/src/ngx_postgres_module.h
index 03f49fd..b0a6378 100644
--- a/src/ngx_postgres_module.h
+++ b/src/ngx_postgres_module.h
@@ -43,17 +43,20 @@ typedef struct {
     ngx_uint_t                          empty;
 } ngx_postgres_escape_t;
 
+
 typedef struct {
     ngx_uint_t                          key;
     ngx_str_t                           sv;
     ngx_http_complex_value_t           *cv;
 } ngx_postgres_mixed_t;
 
+
 typedef struct {
     ngx_uint_t                          key;
     ngx_int_t                           status;
 } ngx_postgres_rewrite_t;
 
+
 typedef struct {
     ngx_int_t                           row;
     ngx_int_t                           column;
@@ -61,23 +64,27 @@ typedef struct {
     ngx_uint_t                          required;
 } ngx_postgres_value_t;
 
+
 typedef struct {
     ngx_uint_t                          idx;
     ngx_http_variable_t                *var;
     ngx_postgres_value_t                value;
 } ngx_postgres_variable_t;
 
+
 typedef struct {
     ngx_uint_t                          methods_set;
     ngx_array_t                        *methods; /* method-specific */
     ngx_postgres_mixed_t               *def;     /* default */
 } ngx_postgres_query_conf_t;
 
-typedef struct ngx_postgres_rewrite_conf_s ngx_postgres_rewrite_conf_t;
+
+typedef struct ngx_postgres_rewrite_conf_s  ngx_postgres_rewrite_conf_t;
 
 typedef ngx_int_t (*ngx_postgres_rewrite_handler_pt)
     (ngx_http_request_t *, ngx_postgres_rewrite_conf_t *);
 
+
 struct ngx_postgres_rewrite_conf_s {
     /* condition */
     ngx_uint_t                          key;
@@ -88,21 +95,25 @@ struct ngx_postgres_rewrite_conf_s {
     ngx_postgres_rewrite_t             *def;     /* default */
 };
 
+
 typedef struct {
     ngx_str_t                           name;
     ngx_uint_t                          key;
     ngx_postgres_rewrite_handler_pt     handler;
 } ngx_postgres_rewrite_enum_t;
 
+
 typedef ngx_int_t (*ngx_postgres_output_handler_pt)
     (ngx_http_request_t *, PGresult *);
 
+
 typedef struct {
     ngx_str_t                           name;
     unsigned                            binary:1;
     ngx_postgres_output_handler_pt      handler;
 } ngx_postgres_output_enum_t;
 
+
 typedef struct {
 #if defined(nginx_version) && (nginx_version >= 8022)
     ngx_addr_t                         *addrs;
@@ -116,6 +127,7 @@ typedef struct {
     ngx_str_t                           password;
 } ngx_postgres_upstream_server_t;
 
+
 typedef struct {
     struct sockaddr                    *sockaddr;
     socklen_t                           socklen;
@@ -127,6 +139,7 @@ typedef struct {
     ngx_str_t                           password;
 } ngx_postgres_upstream_peer_t;
 
+
 typedef struct {
     ngx_uint_t                          single;
     ngx_uint_t                          number;
@@ -134,6 +147,7 @@ typedef struct {
     ngx_postgres_upstream_peer_t        peer[1];
 } ngx_postgres_upstream_peers_t;
 
+
 typedef struct {
     ngx_postgres_upstream_peers_t      *peers;
     ngx_uint_t                          current;
@@ -148,6 +162,7 @@ typedef struct {
     ngx_uint_t                          reject;
 } ngx_postgres_upstream_srv_conf_t;
 
+
 typedef struct {
     /* upstream */
     ngx_http_upstream_conf_t            upstream;
@@ -163,6 +178,7 @@ typedef struct {
     ngx_array_t                        *variables;
 } ngx_postgres_loc_conf_t;
 
+
 typedef struct {
     ngx_chain_t                        *response;
     ngx_int_t                           var_cols;
@@ -174,20 +190,21 @@ typedef struct {
 } ngx_postgres_ctx_t;
 
 
-ngx_int_t   ngx_postgres_add_variables(ngx_conf_t *);
-void       *ngx_postgres_create_upstream_srv_conf(ngx_conf_t *);
-void       *ngx_postgres_create_loc_conf(ngx_conf_t *);
-char       *ngx_postgres_merge_loc_conf(ngx_conf_t *, void *, void *);
-char       *ngx_postgres_conf_server(ngx_conf_t *, ngx_command_t *, void *);
-char       *ngx_postgres_conf_keepalive(ngx_conf_t *, ngx_command_t *, void *);
-char       *ngx_postgres_conf_pass(ngx_conf_t *, ngx_command_t *, void *);
-char       *ngx_postgres_conf_query(ngx_conf_t *, ngx_command_t *, void *);
-char       *ngx_postgres_conf_rewrite(ngx_conf_t *, ngx_command_t *, void *);
-char       *ngx_postgres_conf_output(ngx_conf_t *, ngx_command_t *, void *);
-char       *ngx_postgres_conf_set(ngx_conf_t *, ngx_command_t *, void *);
-char       *ngx_postgres_conf_escape(ngx_conf_t *, ngx_command_t *, void *);
-
-ngx_http_upstream_srv_conf_t  *ngx_postgres_find_upstream(ngx_http_request_t *,
-                                   ngx_url_t *);
+ngx_int_t ngx_postgres_add_variables(ngx_conf_t *);
+void *ngx_postgres_create_upstream_srv_conf(ngx_conf_t *);
+void *ngx_postgres_create_loc_conf(ngx_conf_t *);
+char *ngx_postgres_merge_loc_conf(ngx_conf_t *, void *, void *);
+char *ngx_postgres_conf_server(ngx_conf_t *, ngx_command_t *, void *);
+char *ngx_postgres_conf_keepalive(ngx_conf_t *, ngx_command_t *, void *);
+char *ngx_postgres_conf_pass(ngx_conf_t *, ngx_command_t *, void *);
+char *ngx_postgres_conf_query(ngx_conf_t *, ngx_command_t *, void *);
+char *ngx_postgres_conf_rewrite(ngx_conf_t *, ngx_command_t *, void *);
+char *ngx_postgres_conf_output(ngx_conf_t *, ngx_command_t *, void *);
+char *ngx_postgres_conf_set(ngx_conf_t *, ngx_command_t *, void *);
+char *ngx_postgres_conf_escape(ngx_conf_t *, ngx_command_t *, void *);
+
+ngx_http_upstream_srv_conf_t *ngx_postgres_find_upstream(ngx_http_request_t *,
+    ngx_url_t *);
+
 
 #endif /* _NGX_POSTGRES_MODULE_H_ */
diff --git a/src/ngx_postgres_output.h b/src/ngx_postgres_output.h
index a5115c2..16240fd 100644
--- a/src/ngx_postgres_output.h
+++ b/src/ngx_postgres_output.h
@@ -37,18 +37,19 @@
 #include "resty_dbd_stream.h"
 
 
-ngx_int_t        ngx_postgres_output_value(ngx_http_request_t *, PGresult *);
-ngx_int_t        ngx_postgres_output_text(ngx_http_request_t *, PGresult *);
-ngx_int_t        ngx_postgres_output_rds(ngx_http_request_t *, PGresult *);
-ngx_chain_t     *ngx_postgres_render_rds_header(ngx_http_request_t *,
-                     ngx_pool_t *, PGresult *, ngx_int_t, ngx_int_t);
+ngx_int_t ngx_postgres_output_value(ngx_http_request_t *, PGresult *);
+ngx_int_t ngx_postgres_output_text(ngx_http_request_t *, PGresult *);
+ngx_int_t ngx_postgres_output_rds(ngx_http_request_t *, PGresult *);
+ngx_chain_t *ngx_postgres_render_rds_header(ngx_http_request_t *,
+    ngx_pool_t *, PGresult *, ngx_int_t, ngx_int_t);
 ngx_chain_t     *ngx_postgres_render_rds_columns(ngx_http_request_t *,
-                     ngx_pool_t *, PGresult *, ngx_int_t);
+    ngx_pool_t *, PGresult *, ngx_int_t);
 ngx_chain_t     *ngx_postgres_render_rds_row(ngx_http_request_t *, ngx_pool_t *,
-                     PGresult *, ngx_int_t, ngx_int_t, ngx_int_t);
+    PGresult *, ngx_int_t, ngx_int_t, ngx_int_t);
 ngx_chain_t     *ngx_postgres_render_rds_row_terminator(ngx_http_request_t *,
-                     ngx_pool_t *);
-ngx_int_t        ngx_postgres_output_chain(ngx_http_request_t *, ngx_chain_t *);
-rds_col_type_t   ngx_postgres_rds_col_type(Oid);
+    ngx_pool_t *);
+ngx_int_t ngx_postgres_output_chain(ngx_http_request_t *, ngx_chain_t *);
+rds_col_type_t ngx_postgres_rds_col_type(Oid);
+
 
 #endif /* _NGX_POSTGRES_OUTPUT_H_ */
diff --git a/src/ngx_postgres_processor.c b/src/ngx_postgres_processor.c
index d25c054..60ca36d 100644
--- a/src/ngx_postgres_processor.c
+++ b/src/ngx_postgres_processor.c
@@ -145,7 +145,8 @@ ngx_postgres_upstream_connect(ngx_http_request_t *r, ngx_connection_t *pgxc,
                            "postgres: re-polling while connecting, rc:%d",
                            (int) pgrc);
 
-            if (pgrc == PGRES_POLLING_READING || pgrc == PGRES_POLLING_WRITING)
+            if (pgrc == PGRES_POLLING_READING
+                || pgrc == PGRES_POLLING_WRITING)
             {
                 ngx_log_debug1(NGX_LOG_DEBUG_HTTP, pgxc->log, 0,
                                "postgres: busy while connecting, rc:%d",
diff --git a/src/ngx_postgres_rewrite.h b/src/ngx_postgres_rewrite.h
index 54afa6c..ec11847 100644
--- a/src/ngx_postgres_rewrite.h
+++ b/src/ngx_postgres_rewrite.h
@@ -33,11 +33,12 @@
 #include "ngx_postgres_module.h"
 
 
-ngx_int_t  ngx_postgres_rewrite(ngx_http_request_t *,
-               ngx_postgres_rewrite_conf_t *);
-ngx_int_t  ngx_postgres_rewrite_changes(ngx_http_request_t *,
-               ngx_postgres_rewrite_conf_t *);
+ngx_int_t ngx_postgres_rewrite(ngx_http_request_t *,
+    ngx_postgres_rewrite_conf_t *);
+ngx_int_t ngx_postgres_rewrite_changes(ngx_http_request_t *,
+    ngx_postgres_rewrite_conf_t *);
 ngx_int_t  ngx_postgres_rewrite_rows(ngx_http_request_t *,
-               ngx_postgres_rewrite_conf_t *);
+    ngx_postgres_rewrite_conf_t *);
+
 
 #endif /* _NGX_POSTGRES_REWRITE_H_ */
diff --git a/src/ngx_postgres_upstream.c b/src/ngx_postgres_upstream.c
index 919029b..957f517 100644
--- a/src/ngx_postgres_upstream.c
+++ b/src/ngx_postgres_upstream.c
@@ -72,7 +72,7 @@ ngx_postgres_upstream_init(ngx_conf_t *cf, ngx_http_upstream_srv_conf_t *uscf)
     }
 
     peers = ngx_pcalloc(cf->pool, sizeof(ngx_postgres_upstream_peers_t)
-            + sizeof(ngx_postgres_upstream_peer_t) * (n - 1));
+                        + sizeof(ngx_postgres_upstream_peer_t) * (n - 1));
 
     if (peers == NULL) {
         dd("returning NGX_ERROR");
@@ -511,7 +511,7 @@ ngx_postgres_upstream_free_peer(ngx_peer_connection_t *pc,
         dd("free connection to PostgreSQL database");
 
         ngx_postgres_upstream_free_connection(pc->log, pc->connection,
-                pgdt->pgconn, pgscf);
+                                              pgdt->pgconn, pgscf);
 
         pgdt->pgconn = NULL;
         pc->connection = NULL;
@@ -550,7 +550,8 @@ ngx_postgres_upstream_free_connection(ngx_log_t *log, ngx_connection_t *c,
         }
 
         if (ngx_del_conn) {
-           ngx_del_conn(c, NGX_CLOSE_EVENT);
+            ngx_del_conn(c, NGX_CLOSE_EVENT);
+
         } else {
             if (rev->active || rev->disabled) {
                 ngx_del_event(rev, NGX_READ_EVENT, NGX_CLOSE_EVENT);
diff --git a/src/ngx_postgres_upstream.h b/src/ngx_postgres_upstream.h
index 9ad46ed..7c5f875 100644
--- a/src/ngx_postgres_upstream.h
+++ b/src/ngx_postgres_upstream.h
@@ -44,6 +44,7 @@ typedef enum {
     state_db_idle
 } ngx_postgres_state_t;
 
+
 typedef struct {
     ngx_postgres_upstream_srv_conf_t  *srv_conf;
     ngx_postgres_loc_conf_t           *loc_conf;
@@ -58,17 +59,17 @@ typedef struct {
 } ngx_postgres_upstream_peer_data_t;
 
 
-ngx_int_t   ngx_postgres_upstream_init(ngx_conf_t *,
-                ngx_http_upstream_srv_conf_t *);
+ngx_int_t ngx_postgres_upstream_init(ngx_conf_t *,
+    ngx_http_upstream_srv_conf_t *);
 ngx_int_t   ngx_postgres_upstream_init_peer(ngx_http_request_t *,
-                ngx_http_upstream_srv_conf_t *);
+    ngx_http_upstream_srv_conf_t *);
 ngx_int_t   ngx_postgres_upstream_get_peer(ngx_peer_connection_t *, void *);
-void        ngx_postgres_upstream_free_peer(ngx_peer_connection_t *, void *,
-                ngx_uint_t);
-ngx_flag_t  ngx_postgres_upstream_is_my_peer(const ngx_peer_connection_t *);
-void        ngx_postgres_upstream_free_connection(ngx_log_t *,
-                ngx_connection_t *, PGconn *,
-                ngx_postgres_upstream_srv_conf_t *);
+void ngx_postgres_upstream_free_peer(ngx_peer_connection_t *, void *,
+    ngx_uint_t);
+ngx_flag_t ngx_postgres_upstream_is_my_peer(const ngx_peer_connection_t *);
+void ngx_postgres_upstream_free_connection(ngx_log_t *,
+    ngx_connection_t *, PGconn *,
+    ngx_postgres_upstream_srv_conf_t *);
 
 
 #endif /* _NGX_HTTP_UPSTREAM_POSTGRES_H_ */
diff --git a/src/ngx_postgres_util.c b/src/ngx_postgres_util.c
index ae7de38..4e4c77f 100644
--- a/src/ngx_postgres_util.c
+++ b/src/ngx_postgres_util.c
@@ -183,7 +183,7 @@ ngx_postgres_upstream_next(ngx_http_request_t *r,
         status = 0;
 
     } else {
-        switch(ft_type) {
+        switch (ft_type) {
 
         case NGX_HTTP_UPSTREAM_FT_TIMEOUT:
             status = NGX_HTTP_GATEWAY_TIME_OUT;
diff --git a/src/ngx_postgres_util.h b/src/ngx_postgres_util.h
index 02938a9..fb0e7ff 100644
--- a/src/ngx_postgres_util.h
+++ b/src/ngx_postgres_util.h
@@ -45,15 +45,16 @@ typedef struct {
 } ngx_postgres_rewrite_loc_conf_t;
 
 
-void       ngx_postgres_upstream_finalize_request(ngx_http_request_t *,
-               ngx_http_upstream_t *, ngx_int_t);
-void       ngx_postgres_upstream_next(ngx_http_request_t *,
-               ngx_http_upstream_t *, ngx_int_t);
+void ngx_postgres_upstream_finalize_request(ngx_http_request_t *,
+    ngx_http_upstream_t *, ngx_int_t);
+void ngx_postgres_upstream_next(ngx_http_request_t *,
+    ngx_http_upstream_t *, ngx_int_t);
 ngx_int_t  ngx_postgres_upstream_test_connect(ngx_connection_t *);
 
 ngx_int_t  ngx_postgres_rewrite_var(ngx_http_request_t *,
-               ngx_http_variable_value_t *, uintptr_t);
-char      *ngx_postgres_rewrite_value(ngx_conf_t *,
-               ngx_postgres_rewrite_loc_conf_t *, ngx_str_t *);
+    ngx_http_variable_value_t *, uintptr_t);
+char *ngx_postgres_rewrite_value(ngx_conf_t *,
+    ngx_postgres_rewrite_loc_conf_t *, ngx_str_t *);
+
 
 #endif /* _NGX_POSTGRES_UTIL_H_ */
diff --git a/src/ngx_postgres_variable.c b/src/ngx_postgres_variable.c
index e7f4f38..8a613c4 100644
--- a/src/ngx_postgres_variable.c
+++ b/src/ngx_postgres_variable.c
@@ -64,6 +64,7 @@ ngx_postgres_variable_columns(ngx_http_request_t *r,
     return NGX_OK;
 }
 
+
 ngx_int_t
 ngx_postgres_variable_rows(ngx_http_request_t *r,
     ngx_http_variable_value_t *v, uintptr_t data)
@@ -95,6 +96,7 @@ ngx_postgres_variable_rows(ngx_http_request_t *r,
     return NGX_OK;
 }
 
+
 ngx_int_t
 ngx_postgres_variable_affected(ngx_http_request_t *r,
     ngx_http_variable_value_t *v, uintptr_t data)
@@ -126,6 +128,7 @@ ngx_postgres_variable_affected(ngx_http_request_t *r,
     return NGX_OK;
 }
 
+
 ngx_int_t
 ngx_postgres_variable_query(ngx_http_request_t *r,
     ngx_http_variable_value_t *v, uintptr_t data)
@@ -152,6 +155,7 @@ ngx_postgres_variable_query(ngx_http_request_t *r,
     return NGX_OK;
 }
 
+
 ngx_int_t
 ngx_postgres_variable_get_custom(ngx_http_request_t *r,
     ngx_http_variable_value_t *v, uintptr_t data)
@@ -161,7 +165,7 @@ ngx_postgres_variable_get_custom(ngx_http_request_t *r,
     ngx_str_t                *store;
 
     dd("entering: \"$%.*s\"", (int) pgvar->var->name.len,
-                              pgvar->var->name.data);
+       pgvar->var->name.data);
 
     pgctx = ngx_http_get_module_ctx(r, ngx_postgres_module);
 
@@ -190,6 +194,7 @@ ngx_postgres_variable_get_custom(ngx_http_request_t *r,
     return NGX_OK;
 }
 
+
 ngx_str_t
 ngx_postgres_variable_set_custom(ngx_http_request_t *r, PGresult *res,
     ngx_postgres_variable_t *pgvar)
@@ -200,7 +205,7 @@ ngx_postgres_variable_set_custom(ngx_http_request_t *r, PGresult *res,
     ngx_str_t                  value = ngx_null_string;
 
     dd("entering: \"$%.*s\"", (int) pgvar->var->name.len,
-                              pgvar->var->name.data);
+       pgvar->var->name.data);
 
     col_count = PQnfields(res);
     row_count = PQntuples(res);
diff --git a/src/ngx_postgres_variable.h b/src/ngx_postgres_variable.h
index abdb199..f0613a7 100644
--- a/src/ngx_postgres_variable.h
+++ b/src/ngx_postgres_variable.h
@@ -34,17 +34,18 @@
 #include "ngx_postgres_module.h"
 
 
-ngx_int_t  ngx_postgres_variable_columns(ngx_http_request_t *,
-               ngx_http_variable_value_t *, uintptr_t);
-ngx_int_t  ngx_postgres_variable_rows(ngx_http_request_t *,
-               ngx_http_variable_value_t *, uintptr_t);
-ngx_int_t  ngx_postgres_variable_affected(ngx_http_request_t *,
-               ngx_http_variable_value_t *, uintptr_t);
-ngx_int_t  ngx_postgres_variable_query(ngx_http_request_t *,
-               ngx_http_variable_value_t *, uintptr_t);
-ngx_int_t  ngx_postgres_variable_get_custom(ngx_http_request_t *,
-               ngx_http_variable_value_t *, uintptr_t);
-ngx_str_t  ngx_postgres_variable_set_custom(ngx_http_request_t *r,
-               PGresult *, ngx_postgres_variable_t *);
+ngx_int_t ngx_postgres_variable_columns(ngx_http_request_t *,
+    ngx_http_variable_value_t *, uintptr_t);
+ngx_int_t ngx_postgres_variable_rows(ngx_http_request_t *,
+    ngx_http_variable_value_t *, uintptr_t);
+ngx_int_t ngx_postgres_variable_affected(ngx_http_request_t *,
+    ngx_http_variable_value_t *, uintptr_t);
+ngx_int_t ngx_postgres_variable_query(ngx_http_request_t *,
+    ngx_http_variable_value_t *, uintptr_t);
+ngx_int_t ngx_postgres_variable_get_custom(ngx_http_request_t *,
+    ngx_http_variable_value_t *, uintptr_t);
+ngx_str_t ngx_postgres_variable_set_custom(ngx_http_request_t *r,
+    PGresult *, ngx_postgres_variable_t *);
+
 
 #endif /* _NGX_POSTGRES_VARIABLE_H_ */

commit 20ed1556ddbca85286cb2960df2098fed15c1311
Author: Yichun Zhang (agentzh) <agentzh@gmail.com>
Date:   Fri Oct 27 22:03:49 2017 -0700

    dev: checked in util/build.sh.

diff --git a/util/build.sh b/util/build.sh
new file mode 100755
index 0000000..3f9f0e1
--- /dev/null
+++ b/util/build.sh
@@ -0,0 +1,36 @@
+#!/bin/bash
+
+# this file is mostly meant to be used by the author himself.
+
+root=`pwd`
+version=$1
+home=~
+force=$2
+
+        #--with-cc=gcc46 \
+
+ngx-build $force $version \
+            --with-cc-opt="-I$PCRE_INC -I$OPENSSL_INC" \
+            --with-ld-opt="-L$PCRE_LIB -L$OPENSSL_LIB -Wl,-rpath,$PCRE_LIB:$LIBDRIZZLE_LIB:$OPENSSL_LIB" \
+            --with-http_ssl_module \
+            --with-ipv6 \
+          --add-module=$root/../echo-nginx-module \
+          --add-module=$root/../lua-nginx-module \
+          --add-module=$root/../eval-nginx-module \
+          --add-module=$root/../rds-json-nginx-module \
+          --add-module=$root/../ndk-nginx-module \
+          --add-module=$root/../set-misc-nginx-module \
+          --add-module=$root/../form-input-nginx-module \
+          --add-module=$root/../coolkit-nginx-module \
+          --add-module=$home/work/nginx/ngx_http_auth_request_module-0.2/ \
+          --add-module=$root $opts \
+          --with-select_module \
+          --with-poll_module \
+          --with-threads \
+          --with-debug
+          #--add-module=$home/work/ngx_http_auth_request-0.1 #\
+          #--with-rtsig_module
+          #--with-cc-opt="-g3 -O0"
+          #--add-module=$root/../echo-nginx-module \
+  #--without-http_ssi_module  # we cannot disable ssi because echo_location_async depends on it (i dunno why?!)
+

commit 995a9c2f6f46cb2418c0c2436128207294d9179b
Author: Yichun Zhang (agentzh) <agentzh@gmail.com>
Date:   Fri Oct 27 13:53:27 2017 -0700

    tests: added new valgrind false positives in the latest nginx core.

diff --git a/valgrind.suppress b/valgrind.suppress
index eab3a96..db326e8 100644
--- a/valgrind.suppress
+++ b/valgrind.suppress
@@ -297,3 +297,22 @@
    fun:do_preload
    fun:dl_main
 }
+{
+   <insert_a_suppression_name_here>
+   Memcheck:Leak
+   match-leak-kinds: definite
+   fun:malloc
+   fun:ngx_alloc
+   fun:ngx_set_environment
+   fun:ngx_single_process_cycle
+}
+{
+   <insert_a_suppression_name_here>
+   Memcheck:Leak
+   match-leak-kinds: definite
+   fun:malloc
+   fun:ngx_alloc
+   fun:ngx_set_environment
+   fun:ngx_worker_process_init
+   fun:ngx_worker_process_cycle
+}

commit cb4e6f11bef48d114e1cf51f5bda58b49aab7ab8
Author: Yichun Zhang (agentzh) <agentzh@gmail.com>
Date:   Fri Oct 27 13:13:36 2017 -0700

    tests: valgrind.suppress: removed too aggressive suppressions in nginx mem pools and luajit lj_str_new.

diff --git a/valgrind.suppress b/valgrind.suppress
index af1ca4d..eab3a96 100644
--- a/valgrind.suppress
+++ b/valgrind.suppress
@@ -1,9 +1,3 @@
-{
-<insert_a_suppression_name_here>
-Memcheck:Leak
-fun:malloc
-fun:ngx_alloc
-}
 {
    <insert_a_suppression_name_here>
    Memcheck:Leak
@@ -15,14 +9,14 @@ fun:ngx_alloc
    fun:ngx_process_events_and_timers
 }
 {
-<insert_a_suppression_name_here>
-Memcheck:Leak
-fun:malloc
-fun:ngx_alloc
-fun:ngx_create_pool
-fun:ngx_http_init_request
-fun:ngx_event_process_posted
-fun:ngx_process_events_and_timers
+   <insert_a_suppression_name_here>
+   Memcheck:Leak
+   fun:malloc
+   fun:ngx_alloc
+   fun:ngx_create_pool
+   fun:ngx_http_init_request
+   fun:ngx_event_process_posted
+   fun:ngx_process_events_and_timers
 }
 {
    <insert_a_suppression_name_here>
@@ -45,27 +39,11 @@ fun:ngx_process_events_and_timers
    fun:ngx_process_events_and_timers
 }
 {
-<insert_a_suppression_name_here>
-Memcheck:Leak
-fun:malloc
-fun:ngx_alloc
-fun:ngx_malloc
-fun:ngx_pnalloc
-}
-{
-<insert_a_suppression_name_here>
-Memcheck:Leak
-fun:malloc
-fun:ngx_alloc
-fun:ngx_malloc
-fun:ngx_palloc
-}
-{
-<insert_a_suppression_name_here>
-Memcheck:Addr4
-fun:ngx_init_cycle
-fun:ngx_master_process_cycle
-fun:main
+   <insert_a_suppression_name_here>
+   Memcheck:Addr4
+   fun:ngx_init_cycle
+   fun:ngx_master_process_cycle
+   fun:main
 }
 {
    <insert_a_suppression_name_here>
@@ -80,12 +58,6 @@ fun:main
    fun:ngx_alloc
    fun:ngx_event_process_init
 }
-{
-   <insert_a_suppression_name_here>
-   Memcheck:Leak
-   fun:malloc
-   fun:ngx_alloc
-}
 {
    <insert_a_suppression_name_here>
    Memcheck:Leak
@@ -214,7 +186,6 @@ fun:main
    fun:ngx_init_cycle
    fun:main
 }
-
 {
    <insert_a_suppression_name_here>
    Memcheck:Leak
@@ -229,7 +200,6 @@ fun:main
    fun:ngx_init_cycle
    fun:main
 }
-
 {
    nginx-core-process-init
    Memcheck:Leak
@@ -300,7 +270,6 @@ fun:main
    fun:ngx_create_pool
    fun:main
 }
-
 {
    <insert_a_suppression_name_here>
    Memcheck:Leak

commit 2820fb7efbea1c6cc2bf782b3d541112b26f95ba
Author: Yichun Zhang (agentzh) <agentzh@gmail.com>
Date:   Fri Oct 27 12:02:15 2017 -0700

    tests: minor tweaks in valgrind.suppress.

diff --git a/valgrind.suppress b/valgrind.suppress
index e0b8e89..af1ca4d 100644
--- a/valgrind.suppress
+++ b/valgrind.suppress
@@ -85,7 +85,6 @@ fun:main
    Memcheck:Leak
    fun:malloc
    fun:ngx_alloc
-   fun:(below main)
 }
 {
    <insert_a_suppression_name_here>
------ diff log end --------
** Summary: check here https://github.com/openresty/ngx_postgres
===================== END ngx_postgres =================================
Pass		: ngx_coolkit: latest!
===================== END ngx_coolkit =================================
New Commit	: redis2-nginx-module: 6 commits since 'v0.15'
------ diff log --------
commit cc146f37440f798ffc41c3cb792eca3c60bc62d3
Author: Thibault Charbonnier <thibaultcha@me.com>
Date:   Wed Jan 22 15:14:07 2020 -0800

    travis-ci: bumped the NGINX core to 1.17.8.

diff --git a/.travis.yml b/.travis.yml
index 8b7ce64..c635512 100644
--- a/.travis.yml
+++ b/.travis.yml
@@ -36,7 +36,7 @@ env:
     - NGX_BUILD_JOBS=$JOBS
   matrix:
     - NGINX_VERSION=1.9.15
-    - NGINX_VERSION=1.17.4
+    - NGINX_VERSION=1.17.8
 
 services:
  - redis-server

commit 15b0c454c987599689c369c2dd4ef07f3d2bcaca
Author: Thibault Charbonnier <thibaultcha@me.com>
Date:   Mon Sep 30 11:56:41 2019 -0700

    travis-ci: bumped the NGINX core to 1.17.4.

diff --git a/.travis.yml b/.travis.yml
index 55bf2ab..8b7ce64 100644
--- a/.travis.yml
+++ b/.travis.yml
@@ -36,7 +36,7 @@ env:
     - NGX_BUILD_JOBS=$JOBS
   matrix:
     - NGINX_VERSION=1.9.15
-    - NGINX_VERSION=1.17.1
+    - NGINX_VERSION=1.17.4
 
 services:
  - redis-server
diff --git a/README.markdown b/README.markdown
index 6691432..bc634c3 100644
--- a/README.markdown
+++ b/README.markdown
@@ -653,6 +653,7 @@ Redis 2.0, 2.2, 2.4, and above should work with this module without any issues.
 
 The following versions of Nginx should work with this module:
 
+* **1.17.x**                      (last tested: 1.17.4)
 * **1.16.x**
 * **1.15.x**                      (last tested: 1.15.8)
 * **1.14.x**

commit 82ee1c2891d9455908219e8dd2d57f187f8878f2
Author: Yichun Zhang (agentzh) <yichun@openresty.com>
Date:   Thu Aug 1 11:18:11 2019 -0700

    doc: updated the nginx compatibility list.

diff --git a/README.markdown b/README.markdown
index dfefb81..6691432 100644
--- a/README.markdown
+++ b/README.markdown
@@ -653,6 +653,11 @@ Redis 2.0, 2.2, 2.4, and above should work with this module without any issues.
 
 The following versions of Nginx should work with this module:
 
+* **1.16.x**
+* **1.15.x**                      (last tested: 1.15.8)
+* **1.14.x**
+* **1.13.x**                      (last tested: 1.13.6)
+* **1.12.x**
 * 1.11.x (last tested: 1.11.2)
 * 1.10.x
 * 1.9.x (last tested: 1.9.15)

commit b1d34dd1b6d8d8a14acacab7e346e7942a03cbec
Author: Thibault Charbonnier <thibaultcha@me.com>
Date:   Thu Jul 11 14:58:56 2019 -0700

    travis: bumped the nginx core version to 1.17.1.

diff --git a/.travis.yml b/.travis.yml
index 3fb755d..55bf2ab 100644
--- a/.travis.yml
+++ b/.travis.yml
@@ -36,7 +36,7 @@ env:
     - NGX_BUILD_JOBS=$JOBS
   matrix:
     - NGINX_VERSION=1.9.15
-    - NGINX_VERSION=1.15.8
+    - NGINX_VERSION=1.17.1
 
 services:
  - redis-server

commit 58cfdeacd9c54e16836d1e7eb80bd9418ff23907
Author: Thibault Charbonnier <thibaultcha@me.com>
Date:   Thu Jul 11 14:58:29 2019 -0700

    travis: clone the lua-resty-core and lua-resty-lrucache repositories.
    
    Those are required with recent versions of ngx_lua.

diff --git a/.travis.yml b/.travis.yml
index c16c242..3fb755d 100644
--- a/.travis.yml
+++ b/.travis.yml
@@ -49,6 +49,8 @@ install:
   - git clone https://github.com/openresty/test-nginx.git
   - git clone -b v2.1-agentzh https://github.com/openresty/luajit2.git
   - git clone https://github.com/openresty/lua-nginx-module.git ../lua-nginx-module
+  - git clone https://github.com/openresty/lua-resty-core.git ../lua-resty-core
+  - git clone https://github.com/openresty/lua-resty-lrucache.git ../lua-resty-lrucache
   - git clone https://github.com/openresty/nginx-eval-module.git ../eval-nginx-module
   - git clone https://github.com/openresty/echo-nginx-module.git ../echo-nginx-module
   - git clone https://github.com/openresty/set-misc-nginx-module.git ../set-misc-nginx-module

commit a0b4cf012b27ba0d9a55fe17af18f154e49b7dae
Author: Thibault Charbonnier <thibaultcha@me.com>
Date:   Tue Jan 29 19:44:09 2019 -0800

    travis: bumped the nginx core version to 1.15.8.

diff --git a/.travis.yml b/.travis.yml
index 3dbe2e1..c16c242 100644
--- a/.travis.yml
+++ b/.travis.yml
@@ -36,7 +36,7 @@ env:
     - NGX_BUILD_JOBS=$JOBS
   matrix:
     - NGINX_VERSION=1.9.15
-    - NGINX_VERSION=1.11.2
+    - NGINX_VERSION=1.15.8
 
 services:
  - redis-server
------ diff log end --------
** Summary: check here https://github.com/openresty/redis2-nginx-module
===================== END redis2-nginx-module =================================
New Tag		: resty-cli: v0.27rc1(new) vs 0.25
New Commit	: resty-cli: 1 commits since 'v0.27rc1'
------ diff log --------
commit e90b2d978962e190c3b2cc3be90d600c4dacb592
Author: syz <eagle-china@hotmail.com>
Date:   Mon Sep 14 10:23:36 2020 +0800

    bugfix: fixed the CI failure.

diff --git a/.travis.yml b/.travis.yml
index c65034d..5138f94 100644
--- a/.travis.yml
+++ b/.travis.yml
@@ -32,6 +32,10 @@ env:
     - LUAJIT_INC=$LUAJIT_PREFIX/include/luajit-2.1
     - LD_LIBRARY_PATH=$LUAJIT_LIB:$LD_LIBRARY_PATH
     - TEST_NGINX_SLEEP=0.003
+    - OPENSSL_PREFIX=/opt/ssl
+    - OPENSSL_LIB=$OPENSSL_PREFIX/lib
+    - OPENSSL_INC=$OPENSSL_PREFIX/include
+    - OPENSSL_VER=1.1.1g
   matrix:
     - NGINX_VERSION=1.17.8
 
@@ -40,20 +44,29 @@ before_install:
   - sudo cpanm --notest Test::Base
 
 install:
+  - if [ ! -d download-cache ]; then mkdir download-cache; fi
+  - if [ ! -f download-cache/openssl-$OPENSSL_VER.tar.gz ]; then wget -O download-cache/openssl-$OPENSSL_VER.tar.gz https://www.openssl.org/source/openssl-$OPENSSL_VER.tar.gz; fi
   - git clone https://github.com/openresty/openresty.git ../openresty
   - git clone https://github.com/openresty/lua-resty-core.git ../lua-resty-core
   - git clone https://github.com/openresty/lua-resty-lrucache.git ../lua-resty-lrucache
   - git clone https://github.com/openresty/nginx-devel-utils.git
   - git clone https://github.com/openresty/lua-nginx-module.git ../lua-nginx-module
   - git clone https://github.com/openresty/no-pool-nginx.git ../no-pool-nginx
+  - git clone https://github.com/openresty/stream-lua-nginx-module.git ../stream-lua-nginx-module
   - git clone -b v2.1-agentzh https://github.com/openresty/luajit2.git
 
 script:
+  - tar zxf download-cache/openssl-$OPENSSL_VER.tar.gz
+  - cd openssl-$OPENSSL_VER/
+  - ./config shared --prefix=$OPENSSL_PREFIX -DPURIFY > build.log 2>&1 || (cat build.log && exit 1)
+  - make -j$JOBS > build.log 2>&1 || (cat build.log && exit 1)
+  - sudo make PATH=$PATH install_sw > build.log 2>&1 || (cat build.log && exit 1)
+  - cd ..
   - cd luajit2/
   - make -j$JOBS CCDEBUG=-g Q= PREFIX=$LUAJIT_PREFIX CC=$CC XCFLAGS='-DLUA_USE_APICHECK -DLUA_USE_ASSERT -msse4.2'
   - sudo make install PREFIX=$LUAJIT_PREFIX
   - cd ..
   - export PATH=$PATH:`pwd`/nginx-devel-utils
-  - ngx-build $NGINX_VERSION --with-ipv6 --with-http_realip_module --with-http_ssl_module --add-module=../lua-nginx-module --with-debug
+  - ngx-build $NGINX_VERSION --with-ipv6 --with-cc-opt="-I$OPENSSL_INC" --with-ld-opt="-L$OPENSSL_LIB -Wl,-rpath,$OPENSSL_LIB" --with-http_realip_module --with-http_ssl_module --add-module=../lua-nginx-module --add-module=../stream-lua-nginx-module --with-debug --with-stream --with-stream_ssl_module
   - export PATH=$PATH:`pwd`/work/nginx/sbin
   - prove -r t

commit 05b88744584e9f49f49b81f45a86efec607f22b4
Author: Johnny <johnnywang1991@msn.com>
Date:   Wed Sep 2 16:12:40 2020 +0800

    change: resty & restydoc: change the version to 0.27. (#59)

diff --git a/bin/resty b/bin/resty
index 988ee78..82653f3 100755
--- a/bin/resty
+++ b/bin/resty
@@ -14,7 +14,7 @@ sub split_sh_args ($);
 sub join_sh_args ($);
 sub resolve_includes ($$);
 
-our $VERSION = '0.25';
+our $VERSION = '0.27';
 
 # OpenResty's build system would patch the following line to initialize
 # the $nginx_path variable to point to the path of its own nginx binary
diff --git a/bin/restydoc b/bin/restydoc
index eaaa6f0..a7b5afc 100755
--- a/bin/restydoc
+++ b/bin/restydoc
@@ -3,7 +3,7 @@
 use strict;
 use warnings;
 
-our $VERSION = '0.25';
+our $VERSION = '0.27';
 
 use Getopt::Std qw( getopts );
 use File::Spec ();

commit 22e531f2422f6f56d9cb192f71173563b6af05c4
Author: Johnny <johnnywang1991@msn.com>
Date:   Wed Sep 2 09:55:18 2020 +0800

    bugfix: resty: the tmp directory has not been deleted. (#58)

diff --git a/bin/resty b/bin/resty
index fddfa3c..988ee78 100755
--- a/bin/resty
+++ b/bin/resty
@@ -639,7 +639,7 @@ if ($^O eq 'msys') {
 my $child_pid;
 
 END {
-    if (!$is_win32 && !defined($child_pid) && defined $prefix_dir) {
+    if (!$is_win32 && defined($child_pid) && defined $prefix_dir) {
         my $saved_status = $?;
         system("rm -rf $prefix_dir") == 0
             or warn "failed to remove temp directory $prefix_dir: $!";

commit 06c0205907b26379d38baf40d74b38dbfe93eb5e
Author: Yichun Zhang (agentzh) <yichun@openresty.com>
Date:   Fri Jul 10 17:34:18 2020 -0700

    feature: resty: now we cache the original ngx.say/ngx.print functions into ngx.orig_say and ngx.orig_print since some times the user would need them.
    
    feature: resty: added new option '--stream-conf CONF'.

diff --git a/bin/resty b/bin/resty
index 1b4da7d..fddfa3c 100755
--- a/bin/resty
+++ b/bin/resty
@@ -30,7 +30,8 @@ my $cwd;
 
 my @all_args = @ARGV;
 
-my (@http_confs, @http_includes, @main_confs, @main_includes, @shdicts, @ns, @src_a);
+my (@http_confs, @stream_confs, @http_includes, @main_confs, @main_includes,
+    @shdicts, @ns, @src_a);
 
 my $errlog_level = "warn";
 my ($use_gdb, $use_valgrind, $use_rr, $version, $gdb_opts, $user_runner);
@@ -188,6 +189,11 @@ my $lua_shared_dicts = '';
                 next;
             }
 
+            if ($arg =~ /^--stream-conf=(.*)/) {
+                push @stream_confs, $1;
+                next;
+            }
+
             if ($arg =~ /^--main-conf=(.*)/) {
                 push @main_confs, $1;
                 next;
@@ -203,6 +209,16 @@ my $lua_shared_dicts = '';
                 next;
             }
 
+            if ($arg eq '--stream-conf') {
+                my $v = shift @args;
+                if (!defined $v) {
+                    die "option --stream-conf takes an argument but ",
+                        "found none.\n";
+                }
+                push @stream_confs, $v;
+                next;
+            }
+
             if ($arg eq '--main-conf') {
                 my $v = shift @args;
                 if (!defined $v) {
@@ -718,6 +734,7 @@ my $main_include_directives = resolve_includes 'main', \@main_includes;
 my $http_include_directives = resolve_includes 'http', \@http_includes;
 
 my $http_conf_lines = join "", map { "    $_\n" } @http_confs;
+my $stream_conf_lines = join "", map { "    $_\n" } @stream_confs;
 my $main_conf_lines = join "", map { "    $_\n" } @main_confs;
 
 my $conf_file;
@@ -749,6 +766,15 @@ events {
 $main_conf_lines
 $main_include_directives
 
+stream {
+    access_log off;
+    lua_socket_log_errors off;
+    resolver @nameservers;
+    lua_regex_cache_max_entries 40960;
+$lua_package_path_config
+$stream_conf_lines
+}
+
 http {
     access_log off;
     lua_socket_log_errors off;
@@ -806,7 +832,10 @@ $http_conf_lines
             return stdout:write(expand_table(args, true))
         end
 
+        ngx.orig_print = ngx.print
         ngx.print = output
+
+        ngx.orig_say = ngx.say
         ngx.say = function (...)
                 local ok, err = output(...)
                 if ok then
------ diff log end --------
** Summary: check here https://github.com/openresty/resty-cli
===================== END resty-cli =================================
New Commit	: opm: 3 commits since 'v0.0.5'
------ diff log --------
commit 7079c9a577ceabbad57c91a670772cfcfd4b447f
Author: xlibor <357799172@qq.com>
Date:   Thu Aug 6 19:35:00 2020 +0800

    feature: web: support displaying and searching package docs. (#81)

diff --git a/init.sql b/init.sql
index 5d8dcd4..fcf9a2f 100644
--- a/init.sql
+++ b/init.sql
@@ -90,6 +90,7 @@ create table uploads (
     size integer not null,
     package_name varchar(256) not null,
     abstract text,
+    doc text,
 
     version_v integer[] not null,
     version_s varchar(128) not null,
@@ -119,7 +120,8 @@ create function uploads_trigger() returns trigger as $$
 begin
       new.ts_idx :=
          setweight(to_tsvector('pg_catalog.english', coalesce(new.package_name,'')), 'A')
-         || setweight(to_tsvector('pg_catalog.english', coalesce(new.abstract,'')), 'D');
+         || setweight(to_tsvector('pg_catalog.english', coalesce(new.abstract,'')), 'B')
+         || setweight(to_tsvector('pg_catalog.english', coalesce(new.doc,'')), 'D');
       return new;
 end
 $$ language plpgsql;
diff --git a/util/opm-pkg-indexer.pl b/util/opm-pkg-indexer.pl
index 292a644..28cbf10 100755
--- a/util/opm-pkg-indexer.pl
+++ b/util/opm-pkg-indexer.pl
@@ -26,6 +26,7 @@ sub gen_backup_file_prefix ();
 sub shell (@);
 sub read_ini ($);
 sub err_log;
+sub shell_quote ($);
 
 my $json_xs = JSON::XS->new;
 
@@ -253,6 +254,7 @@ sub process_cycle () {
         my $dir = $dist_basename;
         if (!-d $dir) {
             $errstr = "directory $dir not found after unpacking $fname";
+            err_log $errstr;
             goto FAIL_UPLOAD;
         }
 
@@ -302,6 +304,7 @@ sub process_cycle () {
                 if ($@) {
                     # failed
                     $errstr = $@;
+                    err_log $errstr;
                     goto FAIL_UPLOAD;
                 }
             }
@@ -310,6 +313,7 @@ sub process_cycle () {
 
             if (!copy($final_file, $dstfile)) {
                 $errstr = "failed to copy $path to $dstfile: $!";
+                err_log $errstr;
                 goto FAIL_UPLOAD;
             }
         }
@@ -415,6 +419,7 @@ sub process_cycle () {
             my $ndeps = @$deps;
             if ($ndeps > $MAX_DEPS) {
                 $errstr = "$inifile: too many dependencies: $ndeps";
+                err_log $errstr;
                 goto FAIL_UPLOAD;
             }
 
@@ -475,6 +480,20 @@ sub process_cycle () {
             }
         }
 
+        my $podfile = "$name-$ver.opm/pod/$name-$ver/$name-$ver.pod";
+        my $quoted_podfile = shell_quote $podfile;
+        my $htmlfile = "/opm/tmp/$final_md5.html";
+        my $quoted_htmlfile = shell_quote $htmlfile;
+
+        # warn "pod2html --noindex $quoted_podfile > $quoted_htmlfile";
+        if (!shell "pod2html --noindex $quoted_podfile > $quoted_htmlfile") {
+            $errstr = "failed to run pod2html for $quoted_podfile";
+            err_log $errstr;
+            goto FAIL_UPLOAD;
+        }
+
+        $htmlfile = File::Spec->rel2abs($quoted_htmlfile);
+
         $dir = "../..";
         chdir $dir or err_log "cannot chdir $dir: $!";
 
@@ -520,6 +539,7 @@ sub process_cycle () {
             dep_operators => \@dep_ops,
             dep_versions => \@dep_vers,
             file => $path,
+            doc_file => $htmlfile,
         };
 
         {
@@ -776,3 +796,19 @@ sub err_log {
     my $ts = gen_timestamp();
     warn "[$ts] ", @args;
 }
+
+sub shell_quote ($) {
+    my $ret = shift;
+
+    if (!defined $ret or $ret eq '') {
+        return "''";
+    }
+
+    if ($ret =~ /[[:cntrl:]]/) {
+        die "shell_quote(): No way to quote string containing control characters\n";
+    }
+
+    $ret =~ s/([#&;`'"|*?~!<>^()\[\]{}\$\\, ])/\\$1/g;
+
+    return $ret;
+}
diff --git a/web/lua/opmserver.lua b/web/lua/opmserver.lua
index 22a48bb..adb9585 100644
--- a/web/lua/opmserver.lua
+++ b/web/lua/opmserver.lua
@@ -1086,7 +1086,18 @@ do
                 return log_and_out_err(ctx, 400, "no dep_versions defined")
             end
 
-            -- ngx.log(ngx.WARN, "abstract: ", abstract)
+            local doc_file = data.doc_file
+            local doc, err
+            if doc_file then
+                doc, err = read_file(doc_file)
+                if not doc then
+                    ngx.log(ngx.WARN, "read doc file failed: ", err)
+                end
+            end
+
+            if not doc then
+                doc = 'unknown'
+            end
 
             sql = "update uploads set indexed = true"
                   .. ", updated_at = now(), authors = "
@@ -1098,7 +1109,8 @@ do
                   .. quote_sql_str(final_md5) .. ", dep_packages = "
                   .. tab2pg_array(dep_pkgs) .. ", dep_operators = "
                   .. tab2pg_array(dep_ops) .. ", dep_versions = "
-                  .. tab2pg_array(dep_vers)
+                  .. tab2pg_array(dep_vers) .. ", doc = "
+                  .. quote_sql_str(doc)
                   .. " where id = " .. quote_sql_str(id)
         end
 
@@ -1746,7 +1758,7 @@ function _M.do_show_package(account, pkg_name)
         condition = " uploads.org_account = " .. org_id
     end
 
-    sql = [[select package_name, version_s, abstract, indexed, authors, ]]
+    sql = [[select package_name, doc, version_s, abstract, indexed, authors, ]]
           .. [[licenses, is_original, dep_packages, dep_operators, ]]
           .. [[dep_versions, failed, users.login as uploader_name, ]]
           .. [[orgs.login as org_name, repo_link, ]]
@@ -1795,12 +1807,25 @@ function _M.do_show_package(account, pkg_name)
         pkg_info.dep_info = tab_concat(dep_info, ", ")
     end
 
+    local pkg_doc = pkg_info.doc
+
+    if pkg_doc then
+        local m, err = re_match(pkg_doc, [[<body>(.+)</body>, 'jo']])
+        if m then
+            pkg_doc = m[1]
+
+        else
+            pkg_doc = nil
+        end
+    end
+
     view.show("package_info", {
         pkg_info = pkg_info,
         account = account,
         pkg_name = pkg_name,
         packages = rows,
         packages_count = #rows,
+        pkg_doc = pkg_doc,
     })
 end
 
diff --git a/web/lua/opmserver/templates.lua b/web/lua/opmserver/templates.lua
index 983c165..66f0c92 100644
--- a/web/lua/opmserver/templates.lua
+++ b/web/lua/opmserver/templates.lua
@@ -450,8 +450,11 @@ i = i + 1 output[i] = stash_get(stash, {'pkg_info', 0, 'repo_link', 0})
 i = i + 1 output[i] = '" target="_blank">'
 -- line 19 "package_info.tt2"
 i = i + 1 output[i] = stash_get(stash, {'pkg_info', 0, 'repo_link', 0})
-i = i + 1 output[i] = '</a>\n        </div>\n    </div>\n</div>\n\n<h3>License</h3>\n<div class="description">\n    <p>\n    '
--- line 27 "package_info.tt2"
+i = i + 1 output[i] = '</a>\n        </div>\n    </div>\n</div>\n\n<div>\n'
+-- line 25 "package_info.tt2"
+i = i + 1 output[i] = stash_get(stash, 'pkg_doc')
+i = i + 1 output[i] = '\n</div>\n\n<h3>Authors</h3>\n<div class="description">\n    <p>\n    '
+-- line 31 "package_info.tt2"
 
 -- FILTER
 local value
@@ -459,14 +462,14 @@ do
     local output = {}
     local i = 0
 
-i = i + 1 output[i] = stash_get(stash, {'pkg_info', 0, 'licenses', 0})
+i = i + 1 output[i] = stash_get(stash, {'pkg_info', 0, 'authors', 0})
 
     value = context.filter(output, 'html', {})
 end
 i = i + 1 output[i] = value
 
-i = i + 1 output[i] = '\n    </p>\n</div>\n\n<h3>Authors</h3>\n<div class="description">\n    <p>\n    '
--- line 34 "package_info.tt2"
+i = i + 1 output[i] = '\n    </p>\n<div>\n\n<h3>License</h3>\n<div class="description">\n    <p>\n    '
+-- line 38 "package_info.tt2"
 
 -- FILTER
 local value
@@ -474,23 +477,23 @@ do
     local output = {}
     local i = 0
 
-i = i + 1 output[i] = stash_get(stash, {'pkg_info', 0, 'authors', 0})
+i = i + 1 output[i] = stash_get(stash, {'pkg_info', 0, 'licenses', 0})
 
     value = context.filter(output, 'html', {})
 end
 i = i + 1 output[i] = value
 
-i = i + 1 output[i] = '\n    </p>\n</div>\n'
--- line 45 "package_info.tt2"
+i = i + 1 output[i] = '\n    </p>\n<div>\n'
+-- line 49 "package_info.tt2"
 if tt2_true(stash_get(stash, {'pkg_info', 0, 'dep_info', 0})) then
 i = i + 1 output[i] = '\n<h3>Dependencies</h3>\n<div class="description">\n    <p>\n    '
--- line 42 "package_info.tt2"
+-- line 46 "package_info.tt2"
 i = i + 1 output[i] = stash_get(stash, {'pkg_info', 0, 'dep_info', 0})
 i = i + 1 output[i] = '\n    </p>\n</div>'
 end
 
 i = i + 1 output[i] = '\n\n<h3>Versions</h3>\n\n<section>\n'
--- line 50 "package_info.tt2"
+-- line 54 "package_info.tt2"
 i = i + 1 output[i] = context.process(context, 'package_list.tt2')
 i = i + 1 output[i] = '\n</section>\n</div>\n'
 
diff --git a/web/templates/package_info.tt2 b/web/templates/package_info.tt2
index 4a33f06..ad5ac93 100644
--- a/web/templates/package_info.tt2
+++ b/web/templates/package_info.tt2
@@ -21,11 +21,8 @@
     </div>
 </div>
 
-<h3>License</h3>
-<div class="description">
-    <p>
-    [% pkg_info.licenses | html %]
-    </p>
+<div>
+[% pkg_doc %]
 </div>
 
 <h3>Authors</h3>
@@ -33,7 +30,14 @@
     <p>
     [% pkg_info.authors | html %]
     </p>
-</div>
+<div>
+
+<h3>License</h3>
+<div class="description">
+    <p>
+    [% pkg_info.licenses | html %]
+    </p>
+<div>
 
 [%- IF pkg_info.dep_info %]
 <h3>Dependencies</h3>

commit 7f387bae8f6ded78f9a305d310c202bfa0283e78
Author: tison <wander4096@gmail.com>
Date:   Thu Apr 16 23:04:26 2020 +0800

    Print usage if no command specified
    
    It seems more desirable to print usage when user doesn't specify command instead of a error message without hint.

diff --git a/bin/opm b/bin/opm
index 46de342..fd8cd4b 100755
--- a/bin/opm
+++ b/bin/opm
@@ -89,8 +89,7 @@ if (defined $user_install_dir && defined $install_into_cwd) {
     err "conflicting options: --cwd and --install-dir=PATH cannot coexist.\n";
 }
 
-my $cmd = shift or
-    err "no command specified.\n";
+my $cmd = shift or usage(1);
 
 if ($cmd eq '-v') {
     print "opm $Version ($Config::Config{archname}, perl $^V)\n";

commit fbaab4c3333a5b8644c4fbccf44ea05712295546
Author: xlibor <357799172@qq.com>
Date:   Wed May 6 21:54:47 2020 +0800

    improvements for the website UI (#65)

diff --git a/.gitignore b/.gitignore
index 8491be6..dc46627 100644
--- a/.gitignore
+++ b/.gitignore
@@ -2,6 +2,13 @@
 *.bak
 *.swp
 *.swo
+.DS_Store
 web/logs/
+web/docs/html/
 ebooks.sh
 web/email.ini
+node_modules
+package-lock.json
+
+# rpm
+buildroot
\ No newline at end of file
diff --git a/Makefile b/Makefile
index 51c3f3e..e5e6640 100644
--- a/Makefile
+++ b/Makefile
@@ -5,16 +5,33 @@ opm = $(abspath bin/opm) --cwd
 opm_pkg_indexer = $(abspath util/opm-pkg-indexer.pl) -i 1
 tt2_files := $(sort $(wildcard web/templates/*.tt2))
 templates_lua = web/lua/opmserver/templates.lua
+md2html = ./util/fmtMd.js
+md_files := $(wildcard web/docs/md/*.md) 
+html_files := $(patsubst web/docs/md/%.md,web/docs/html/%.html,$(md_files))
 
+INSTALL ?= install
+CP ?= cp
+
+VERSION ?= 0.1
+RELEASE ?= 1
+
+.PRECIOUS: $(md_files)
 .DELETE_ON_ERRORS: $(templates_lua)
 
 .PHONY: all
-all: $(templates_lua)
+all: $(templates_lua) $(html_files)
 
 $(templates_lua): $(tt2_files)
 	mkdir -p web/lua/opmserver/
 	lemplate --compile $^ > $@
 
+.PHONY: html
+html: $(html_files)
+
+web/docs/html/%.html: web/docs/md/%.md
+	@mkdir -p web/docs/html
+	$(md2html) $< > $@
+
 .PHONY: test
 test: | initdb restart
 	#./bin/opm build
@@ -61,10 +78,41 @@ restart:
 	sleep 0.01
 	$(MAKE) run
 
-.PHONY: clean
-clean:
-	rm -f $(webpath)/logs/*
+.PHONY: check
+check: clean
+	find . -name "*.lua" | lj-releng -L
 
 .PHONY: initdb
 initdb: $(tsv_files)
 	psql -Uopm opm -f init.sql
+
+.PHONY: install
+install:
+	$(MAKE) all
+	$(INSTALL) -d $(DESTDIR)
+	$(INSTALL) -d $(DESTDIR)web/
+	$(CP) -r bin $(DESTDIR)bin
+	$(CP) -r util $(DESTDIR)util
+	$(CP) -r web/conf $(DESTDIR)web/conf
+	$(CP) -r web/css $(DESTDIR)web/css
+	$(CP) -r web/images $(DESTDIR)web/images
+	$(CP) -r web/docs/ $(DESTDIR)web/docs/
+	$(CP) -r web/lua $(DESTDIR)web/lua
+
+.PHONY: rpm
+rpm:
+	rm -rf buildroot
+	$(MAKE) install DESTDIR=$$PWD/buildroot/usr/local/opm/
+	fpm -f -s dir -t rpm -v "$(VERSION)" --iteration "$(RELEASE)" \
+		-n opm-server \
+		-C $$PWD/buildroot/ -p ./buildroot \
+		--vendor "OpenResty.org" --license Proprietary \
+		--description 'opm server' --url 'https://www.openresty.org/' \
+		-m 'OpenResty <admin@openresty.org>' \
+		--license proprietary -a all \
+		usr/local/opm
+
+.PHONY: clean
+clean:
+	rm -f $(webpath)/lua/opmserver/templates.lua
+	rm -f $(html_files)
diff --git a/README.md b/README.md
index 875a721..c873784 100644
--- a/README.md
+++ b/README.md
@@ -920,7 +920,7 @@ Copyright and License
 
 This module is licensed under the BSD license.
 
-Copyright (C) 2016-2018, by Yichun "agentzh" Zhang (章亦春) <agentzh@gmail.com>, OpenResty Inc.
+Copyright (C) 2016-2020, by Yichun "agentzh" Zhang (章亦春) <agentzh@gmail.com>, OpenResty Inc.
 
 All rights reserved.
 
diff --git a/util/fmtMd.js b/util/fmtMd.js
new file mode 100755
index 0000000..b72cb3c
--- /dev/null
+++ b/util/fmtMd.js
@@ -0,0 +1,103 @@
+#!/usr/bin/env node
+
+var fs = require('fs');
+var marked = require('marked');
+var renderer = new marked.Renderer();
+var matchHtmlRegExp = /["'&<>]/;
+
+function escapeHtml(string) {
+    var str = '' + string;
+    var match = matchHtmlRegExp.exec(str);
+
+    if (!match) {
+        return str;
+    }
+
+    var escape;
+    var html = '';
+    var index = 0;
+    var lastIndex = 0;
+
+    for (index = match.index; index < str.length; index++) {
+        switch (str.charCodeAt(index)) {
+            case 34: // "
+                escape = '&quot;';
+                break;
+            case 38: // &
+                escape = '&amp;';
+                break;
+            case 39: // '
+                escape = '&#39;';
+                break;
+            case 60: // <
+                escape = '&lt;';
+                break;
+            case 62: // >
+                escape = '&gt;';
+                break;
+            default:
+                continue;
+        }
+
+        if (lastIndex !== index) {
+            html += str.substring(lastIndex, index);
+        }
+
+        lastIndex = index + 1;
+        html += escape;
+    }
+
+    return lastIndex !== index ?
+        html + str.substring(lastIndex, index) :
+        html;
+}
+
+marked.setOptions({
+    gfm: true,
+});
+
+// create internal links for ()[#]
+renderer.link = function (href, title, text) {
+    title = title || text;
+    if (href === '#') {
+        var slugger = new marked.Slugger();
+        href = '#' + slugger.slug(text);
+    }
+    title = escapeHtml(title);
+    return '<a href="' + href + '" title="' + title + '">' + text + '</a>';
+}
+
+// add link icon for each heading, just like github
+renderer.heading = function (text, level, raw, slugger) {
+    var anchorId = renderer.options.headerPrefix + slugger.slug(raw);
+    return '<h' + level + '>'
+        + '<a id="' + anchorId + '" class="header-anchor" href="#' + anchorId + '" title="copy permalink to clipboard">'
+        + '<svg class="icon" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="feather feather-link"><path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71"></path><path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71"></path></svg>'
+        + '</a>' + text
+        + '</h' + level + '>\n';
+};
+
+var args = process.argv.slice(2);
+if (args.length === 0) {
+    console.log('please provide input file');
+    process.exit(0);
+}
+
+var infile = args[0];
+fs.open(infile, 'r', function (err, fd) {
+    if (err) {
+        if (err.code === 'ENOENT') {
+            console.error(infile + ' does not exist');
+            return;
+        }
+
+        throw err;
+    }
+
+    fs.readFile(infile, 'utf8', function (err, data) {
+        if (err) throw err;
+        console.log(marked(data, {
+            renderer: renderer
+        }));
+    });
+});
diff --git a/web/conf/nginx.conf b/web/conf/nginx.conf
index 4b9a49b..1af3275 100644
--- a/web/conf/nginx.conf
+++ b/web/conf/nginx.conf
@@ -6,6 +6,10 @@ error_log logs/error.log warn;
 #error_log logs/error.log debug;
 
 http {
+    log_format main '$http_x_forwarded_for - $remote_addr - $remote_user [$time_local] $http_host "$request" $status $body_bytes_sent $request_time "$http_referer" "$http_user_agent"';
+
+    access_log logs/access.log main;
+
     lua_package_path "$prefix/lua/?.lua;$prefix/lua/vendor/?.lua;;";
 
     lua_socket_connect_timeout 10s;
@@ -45,6 +49,12 @@ http {
         include mime.types;
         charset utf-8;
 
+        location = /robots.txt {
+            content_by_lua_block {
+                ngx.say('User-agent: *\nDisallow: /api/');
+            }
+        }
+
         location = /api/pkg/upload {
             client_max_body_size 256k;
             client_body_in_file_only on;
@@ -145,12 +155,17 @@ http {
             alias css;
         }
 
+        location /images {
+            expires 1d;
+            alias images;
+        }
+
         location / {
             default_type text/html;
             expires 10s;
 
             content_by_lua_block {
-                require("opmserver").do_index_page()
+                require("opmserver").do_web()
             }
         }
     }
diff --git a/web/css/main.css b/web/css/main.css
index 3de15b0..d9ac196 100644
--- a/web/css/main.css
+++ b/web/css/main.css
@@ -1,48 +1,311 @@
-.indexed {
-    color: green;
-}
-
-.pending {
-    color: purple;
-}
-
-.failed {
-    color: red;
-}
-
-table.recent {
-    border: 1px solid black;
-}
-
-td {
-   padding: 10px;
-}
-
-.content-footer {
-  clear: both;
-}
-
-.content-footer:after {
-  content: '.';
-  display: block;
-  height: 0;
-  clear: both;
-  visibility: hidden;
-  font-size: 0;
-}
-
-div.footer {
-  font-size: 90%;
-  color: #888;
+body {
+  color: #3e423e;
+  font-size: 16px;
+  font-family: "Open Sans", sans-serif;
+  margin: 0; }
+
+a {
+  color: #4d8d89;
+  text-decoration:none }
+  a:hover {
+    color: #325c59;
+    text-decoration:underline; }
+
+h1, h2, h3 {
+  margin: 40px 0 20px 0; }
+
+h2 {
+  font-size: 24px; }
+
+h3 {
+  font-size: 18px; }
+
+p {
+  line-height: 1.2;
+  margin: 10px 0; }
+  p > code {
+    background: #f5f4f4;
+    padding: 2px 4px;
+    border-radius: 6px; }
+
+b {
+  color: #5E5E5E;
+  font-weight: bold; }
+
+hr {
+  height: 1px;
+  background: #C1CCE4;
+  border: 0;
+  margin: 20px 0; }
+
+input {
+  font-family: 'Open Sans', sans-serif;
+  font-size: 16px; }
+
+.header {
+  background: #446D44;
+  height: 55px;
+  color: white; }
+  .header .header_inner {
+    max-width: 960px;
+    min-width: 800px;
+    margin: 0 auto;
+    height: 100%;
+    display: flex;
+    align-items: center; }
+    .header .header_inner > * {
+      margin: 0 10px; }
+      .header .header_inner > *:last-child {
+        margin-right: 0; }
+      .header .header_inner > *:first-child {
+        margin-left: 0; }
+  .header .header_search {
+    flex: 1;
+    max-width: 400px; }
+    .header .header_search input[type=text] {
+      border: 0;
+      font-size: 14px;
+      padding: 8px 10px;
+      border-radius: 16px;
+      background: #eff4ff;
+      color: #666;
+      width: 100%;
+      box-sizing: border-box; }
+      .header .header_search input[type=text]:focus {
+        outline: none;
+        box-shadow: 0 0 5px rgba(0, 0, 0, 0.4); }
+  .header .logo_panel {
+    font-size: 20px;
+
+    text-align: left;
+    display: flex;
+
+    align-content: left; }
+    .header .logo_panel a {
+      color: #edf1ed;
+      text-decoration: none;
+      font-weight: bold; }
+      .header .logo_panel a:hover {
+        color: #eef8ff; }
+
+  .header .nav_panel {
+    font-size: 15px;
+    flex: 1;
+    text-align: right;
+    display: flex;
+    justify-content: flex-end;
+    align-content: center; }
+    .header .nav_panel > * {
+      margin-left: 12px; }
+      .header .nav_panel > *:first-child {
+        margin-left: 0; }
+    .header .nav_panel a {
+      color: #E8E8E8;
+      text-decoration: none;
+      font-weight: bold; }
+      .header .nav_panel a:hover {
+        color: #8CE3FF; }
+  .header .text_logo {
+    width: 150px;
+    vertical-align: top; }
+  .header .icon_logo {
+    width: 45px;
+    height: 45px;
+    margin-top: 2px; }
+
+.content {
+  background: #f9fcf9;
+  border-bottom: 1px solid #d3dbec; }
+
+.main_col {
+  max-width: 960px;
+  min-width: 800px;
+  margin: 0 auto;
+  padding-bottom: 40px; }
+
+.footer {
+  color: #9E9E9E;
+  width: 960px;
+  margin: 0 auto;
+  margin-top: 20px;
+  margin-bottom: 40px;
+  text-align: center;
+  font-size: 14px; }
+  .footer a {
+    text-decoration: underline; }
+  .footer .right {
+    float: right; }
+
+pre {
+  background: #f5f4f4;
+  color: #24292e;
+  font-size: 16px;
+  padding: 16px 24px;
+  border-radius: 2px; }
+  pre.term_snippet {
+    font-size: 14px; }
+
+.pager {
   text-align: center;
-}
+  font-size: 14px;
+  padding: 10px 0;
+  display: inline-block }
+
+  .pager a,.pager span {
+    display: inline-block;
+    padding: 0 10px;
+    height: 28px;
+    line-height: 28px;
+    border: 1px solid #ddd;
+    border-radius: 3px;
+    text-decoration: none;
+    color: #999;
+    cursor: pointer;
+    margin-right:2px; }
+  .pager a:hover:not(.disabled):not(.current), .pager span:hover:not(.disabled):not(.current) {
+    color: #fff;
+    background: #4d8d89; }
+  .pager a.disabled,.pager span.disabled {
+    color: #bfbfbf;
+    background: #f5f5f5;
+    cursor: no-drop;
+    border: 1px solid #ddd; }
+  .pager a.current,.pager span.current {
+    color: #fff;
+    background: #4d8d89;
+    border: 1px solid #fff; }
+ 
+.main_page .split_header {
+
+  align-items: center;
+  margin: 20px 0 20px 0; }
+  .main_page .split_header h2 {
+    display: inline;
+    margin-top: 0;
+    margin-bottom: 0; }
+  .main_page .split_header > * {
+    margin-right: 10px; }
+    .main_page .split_header .right {
+      margin-top: 8px;
+      margin-right: 2px;
+      float: right;
+      font-size: 18px;
+     }
+    .main_page .split_header .user_github {
+      margin-top: 2px;
+      margin-right: 2px;
+      float: right;
+      font-size: 18px;
+     }
+
+.main_page .header_sub {
+  font-size: 14px;
+  margin-left: 5px;
+  color: #919294;
+ }
+  .main_page .header_sub a {
+    color: #757779; }
+
+.main_page .intro_banner {
+  background: white;
+  border-bottom: 1px solid #d3dbec;
+  margin-bottom: 30px;
+  padding: 25px 0; }
+  .main_page .intro_banner .intro_banner_inner {
+    width: 960px;
+    margin: 0 auto; }
+  .main_page .intro_banner img {
+    float: left;
+    width: 130px;
+    height: 124px; }
+  .main_page .intro_banner .intro_text {
+    margin-left: 15px; }
+  .main_page .intro_banner p {
+    margin: 10px 0; }
+    .main_page .intro_banner p:first-child {
+      margin-top: 0; }
+    .main_page .intro_banner p:last-child {
+      margin-bottom: 0; }
+
+.package_list {
+  list-style: none;
+  margin: 0;
+  padding: 0; }
+  .package_list .package_row {
+    margin: 10px 0;
+    background: white;
+    padding: 5px 10px;
+    border-radius: 2px;
+    border: 1px solid #C1CCE4;
+    line-height: 1.5; }
+    .package_list .package_row .title {
+      font-size: 18px; }
+    .package_list .package_row .author {
+      color: gray;
+      float: right; }
+      .package_list .package_row .author a {
+        color: #444; }
+        .package_list .package_row .author a:hover {
+          color: #666; }
+    .package_list .package_row .main, .package_list .package_row .summary {
+      white-space: nowrap;
+      overflow: hidden;
+      text-overflow: ellipsis; }
+    .package_list .package_row .summary {
+      color: gray;
+      margin-top: 5px;
+      font-size: 15px; }
+    .package_list .package_row .version_name {
+      color: gray;
+      margin-left: 2px;
+      font-size: 16px; }
+    .package_list .package_row .failed {
+      color: red;
+      margin-left: 2px;
+      font-size: 16px; }
+    .package_list .package_row .pending {
+      color: purple;
+      margin-left: 2px;
+      font-size: 16px; }
+    .package_list .package_row .updated_at {
+      color: gray;
+      float: right;
+      margin-right: 5px;
+      font-size: 14px; }
+
+.metadata_columns {
+  margin-top: 25px;
+  border: 1px solid #d3dbec;
+  white-space: nowrap; }
+  .metadata_columns .metadata_columns_inner {
+      max-width: 960px;
+      min-width: 800px;
+      margin: 0 auto; }
+  .metadata_columns .column {
+      box-sizing: border-box;
+      white-space: normal;
+      height: 75px;
+      margin-right: 40px;
+      border-left: 1px solid #d3dbec;
+      display: inline-block;
+      vertical-align: top;
+      font-size: 18px;
+      padding: 15px 0 15px 20px; }
+    .metadata_columns .column h3 {
+        margin-top: 0;
+        margin-bottom: 3px;
+        font-size: 12px;
+        color: #919294;
+        font-weight: bold;
+        text-transform: uppercase; }
+
+.package_page h3 {
+  font-weight: bold; }
 
-div.content-footer {
-  margin-top: 3em;
-  margin-bottom: 2em;
-}
+.package_page .description {
+  margin-top: 30px; }
 
-hr.footer-sep {
-  margin-bottom: 20px;
-  margin-top: 10px;
-}
+.error_info {
+  color: red;
+  margin-left: 2px;
+  font-size: 18px; }
diff --git a/web/docs/md/docs.md b/web/docs/md/docs.md
new file mode 100644
index 0000000..4a9ed87
--- /dev/null
+++ b/web/docs/md/docs.md
@@ -0,0 +1,936 @@
+Name
+====
+
+opm - OpenResty Package Manager
+
+Table of Contents
+=================
+
+* [Name](#name)
+* [Status](#status)
+* [Synopsis](#synopsis)
+* [Description](#description)
+* [Usage](#usage)
+    * [Global Installation](#global-installation)
+    * [Local Installation](#local-installation)
+* [HTTP Proxy Support](#http-proxy-support)
+* [Author Workflow](#author-workflow)
+* [File dist.ini](#file-distini)
+    * [name](#name)
+    * [abstract](#abstract)
+    * [version](#version)
+    * [author](#author)
+    * [license](#license)
+    * [requires](#requires)
+    * [repo_link](#repo_link)
+    * [is_original](#is_original)
+    * [lib_dir](#lib_dir)
+    * [exclude_files](#exclude_files)
+    * [main_module](#main_module)
+    * [doc_dir](#doc_dir)
+* [File .opmrc](#file-opmrc)
+    * [github_account](#github_account)
+    * [github_token](#github_token)
+    * [upload_server](#upload_server)
+    * [download_server](#download_server)
+* [Version Number Handling](#version-number-handling)
+* [Installation](#installation)
+    * [For opm](#for-opm)
+* [Security Considerations](#security-considerations)
+* [Credit](#credit)
+* [TODO](#todo)
+* [Author](#author)
+* [Copyright and License](#copyright-and-license)
+
+Status
+======
+
+Experimental.
+
+Synopsis
+========
+
+For library users:
+
+```bash
+# show usage
+opm --help
+
+# search package names and abstracts with the user pattern "lock".
+opm search lock
+
+# search package names and abstracts with multiple patterns "lru" and "cache".
+opm search lru cache
+
+# install a package named lua-resty-foo under the name of some_author
+opm get some_author/lua-resty-foo
+
+# get a list of lua-resty-foo packages under all authors.
+opm get lua-resty-foo
+
+# show the details of the installed package specified by name.
+opm info lua-resty-foo
+
+# show all the installed packages.
+opm list
+
+# upgrade package lua-resty-foo to the latest version.
+opm upgrade lua-resty-foo
+
+# update all the installed packages to their latest version.
+opm update
+
+# uninstall the newly installed package
+opm remove lua-resty-foo
+```
+
+All the commands can follow the `--cwd` option to work in the current working
+directory (under ./resty/modules/) instead of the system-wide location.
+
+```bash
+# install into ./resty_modules/ instead of the system-wide location:
+opm --cwd get foo/lua-resty-bar
+
+# check the locally installed packages under ./resty_modules/
+opm --cwd list
+
+# remove the locally installed packages under ./resty_modules/
+opm --cwd remove lua-resty-bar
+```
+
+For library authors:
+
+```bash
+cd /path/to/lua-resty-foo/
+
+opm build
+
+# optional:
+#     cd lua-resty-foo-VERSION/ && opm server-build
+
+# you may need to edit the ~/.opmrc file to set up your github
+# personal access tokens. the first run of "opm upload" will create
+# a boilerplate ~/.opmrc file for you.
+opm upload
+
+# cleaning up the leftovers of the opm build command.
+opm clean dist
+```
+
+Description
+===========
+
+`opm` is the official OpenResty package manager, similar to
+Perl's CPAN and NodeJS's npm in rationale.
+
+We provide both the `opm` client-side command-line utility and
+the server-side application for the central package repository in this
+GitHub code repository.
+
+The `opm` command-line utility can be used by OpenResty users to download
+packages published on the central `opm` server (i.e., `opm.openresty.org`).
+It can also be used to package and upload the OpenResty package to the server
+for package authors and maintainers. You can find the source of `opm` under
+the `bin/` directory. It is currently implemented as a standalone Perl script.
+
+The server side web application is built upon OpenResty and written in Lua.
+You can find the server code under the `web/` directory.
+
+Unlike many other package management systems like `cpan`, `luarocks`, `npm`,
+or `pip`. Our `opm` adopts a package naming discipline similar to `github`, that
+is, every package name should be qualified by a publisher ID, as in
+`agentzh/lua-resty-foo` where `agentzh` is the publisher ID while `lua-resty-foo`
+is the package name itself. This naming requirement voids the temptation of
+occupying good package names and also allows multiple same-name libraries to
+coexist in the same central server repository. It is up to the user to decide
+which library to install (or even install multiple forks of the same library
+in different projects of hers). For simplicity, we simply map the GitHub
+user IDs and organization IDs to the publisher IDs for `opm`. For this reason,
+we use the GitHub personal access tokens (or oauth tokens) to authenticate
+our package publishers. This also eliminates the sign-up process for `opm`
+package authors altogether.
+
+`opm` has built-in support for the `restydoc` tool, that is, the documentation
+of the packages installed via `opm` is already indexed by `restydoc` and can
+be viewed directly on the terminal with the `restydoc` tool.
+
+`opm` currently only supports pure Lua libraries but we will add support for
+Lua libraries in pure C or with some C components very soon. The vision is
+to also add support for redistributing 3rd-party NGINX C modules as dynamic
+NGINX modules via `opm` in the future. The OpenResty world consists of various
+different kinds of "modules" after all.
+
+We also have plans to allow the user to install LuaRocks packages via `opm`
+through the special user ID `luarocks`. It poses a risk of installing
+an OpenResty-agnostic Lua module which blocks the NGINX worker processes
+horribly on network I/O, nevertheless, as the developers of `opm`, we always like choices,
+especially those given to our users.
+
+[Back to TOC](#table-of-contents)
+
+Usage
+=====
+
+```
+opm [options] command package...
+
+Options:
+    -h
+    --help              Print this help.
+
+
+    --install-dir=PATH  Install into the specified PATH directory instead of the system-wide
+                        OpenResty installation tree containing this tool.
+
+    --cwd               Install into the current working directory under ./resty_modules/
+                        instead of the system-wide OpenResty installation tree containing
+                        this tool.
+
+Commands:
+    build               Build from the current working directory a package tarball ready
+                        for uploading to the server.
+
+    clean ARGUMENT...   Do clean-up work. Currently the valid argument is "dist", which
+                        cleans up the temporary files and directories created by the "build"
+                        command.
+
+    info PACKAGE...     Output the detailed information (or meta data) about the specified
+                        packages.  Short package names like "lua-resty-lock" are acceptable.
+
+    get PACKAGE...      Fetch and install the specified packages. Fully qualified package
+                        names like "openresty/lua-resty-lock" are required. One can also
+                        specify a version constraint like "=0.05" and ">=0.01".
+
+    list                List all the installed packages. Both the package names and versions
+                        are displayed.
+
+    remove PACKAGE...   Remove (or uninstall) the specified packages. Short package names
+                        like "lua-resty-lock" are acceptable.
+
+    search QUERY...     Search on the server for packages matching the user queries in their
+                        names or abstracts. Multiple queries can be specified and they must
+                        fulfilled at the same time.
+
+    server-build        Build a final package tarball ready for distribution on the server.
+                        This command is usually used by the server to verify the uploaded
+                        package tarball.
+
+    update              Update all the installed packages to their latest version from
+                        the server.
+
+    upgrade PACKAGE...  Upgrade the packages specified by names to the latest version from
+                        the server. Short package names like "lua-resty-lock" are acceptable.
+
+    upload              Upload the package tarball to the server. This command always invokes
+                        the build command automatically right before uploading.
+```
+
+[Back to TOC](#table-of-contents)
+
+Global Installation
+-------------------
+
+To globally install opm packages, just use the `sudo opm get foo/bar` command.
+
+[Back to TOC](#table-of-contents)
+
+Local Installation
+------------------
+
+When you use `--cwd` option to install packages to the `./resty_modules/` directory, then you should
+put the following lines to your `nginx.conf`, inside the `http {}` block:
+
+```nginx
+lua_package_path "$prefix/resty_modules/lualib/?.lua;;";
+lua_package_cpath "$prefix/resty_modules/lualib/?.so;;";
+```
+
+Do NOT change `$prefix` to a hard-coded absolute path yourself! OpenResty will automatically resolve the
+special `$prefix` variable in the directive values at startup. The `$prefix` value will be resolved
+to the server prefix, which will later be specified via the `-p` option of the `openresty` command
+line.
+
+And then you should start your OpenResty application from the current working directory like this:
+
+```bash
+openresty -p $PWD/
+```
+
+assuming you have the following OpenResty application directory layout in the current directory:
+
+```
+logs/
+conf/
+conf/nginx.conf
+resty_modules/
+```
+
+Alternatively, if you just want to use the `resty` command line utility with the opm modules installed
+into the `./resty_modules` directory, then you should just use the `-I ./resty_modules/lualib` option, as in
+
+```bash
+resty -I ./resty_modules/lualib -e 'require "foo.bar".go()'
+```
+
+[Back to TOC](#table-of-contents)
+
+HTTP Proxy Support
+==================
+
+HTTP proxies are supported via the `http_proxy` and `https_proxy` system environment variables, as in
+
+```
+http_proxy [protocol://]<host>[:port]
+      Sets the proxy server to use for HTTP.
+
+https_proxy [protocol://]<host>[:port]
+      Sets the proxy server to use for HTTPS.
+```
+
+[Back to TOC](#table-of-contents)
+
+Author Workflow
+===============
+
+The package author should put a meta-data file named `dist.ini` on the top-level of the Lua library source tree.
+This file is used by the `opm build` command to build and package up your library into a tarball file which can be
+later uploaded to the central package server via the `opm upload` command.
+
+One example `dist.ini` file looks like below for OpenResty's
+[lua-resty-core](https://github.com/openresty/lua-resty-core) library:
+
+```ini
+# distribution config for opm packaging
+name = lua-resty-core
+abstract = New FFI-based Lua API for the ngx_lua module
+author = Yichun "agentzh" Zhang (agentzh)
+is_original = yes
+license = 2bsd
+lib_dir = lib
+doc_dir = lib
+repo_link = https://github.com/openresty/lua-resty-core
+main_module = lib/resty/core/base.lua
+requires = luajit, openresty/lua-resty-lrucache >= 0.04
+```
+
+As we can see, the `dist.ini` file is using the popular [INI file format](https://en.wikipedia.org/wiki/INI_file).
+Most of the fields in this example should be self-explanatory. For detailed documentation for the fields available
+in `dist.ini`, please check out the [File dist.ini](#file-distini) section.
+
+The `opm build` command also reads and extracts information from the configuration file `.opmrc` under the current
+system user's home directory (i.e., with the file path `~/.opmrc`). If the file does not exist, `opm build` will
+automatically generates a boilerplate file in that path. One sample `~/.opmrc` file looks like this.
+
+```ini
+# your github account name (either your github user name or github organization that you owns)
+github_account=agentzh
+
+# you can generate a github personal access token from the web UI: https://github.com/settings/tokens
+# IMPORTANT! you are required to assign the scopes "user:email" and "read:org" to your github token.
+# you should NOT assign any other scopes to your token due to security considerations.
+github_token=0123456789abcdef0123456789abcdef01234567
+
+# the opm central servers for uploading openresty packages.
+upload_server=https://opm.openresty.org
+download_server=https://opm.openresty.org
+```
+
+Basically, the `opm build` command just needs the `github_account` setting from this file. Other fields are needed
+by the `opm upload` command that tries to upload the packaged tarball onto the remote package server. You can either
+use your own GitHub login name (which is `agentzh` in this example), or a GitHub organization name that you owns
+(i.e., having the `admin` permission to it).
+
+After `opm build` successfully generates a `.tar.gz` file under the current working directory, the author can use
+the `opm upload` command to upload that file to the remote server. To ensure consistency, `opm upload` automatically
+runs `opm build` itself right before attempting the uploading operation. The central package server (`opm.openresty.org`
+in this case) calls the GitHub API behind the scene to validate the author's identify. Thus the author needs to
+provide his GitHub personal access token in her `~/.opmrc` file. Only the `user:email` and `read:org` permissions
+(or `scopes` in the GitHub terms) need to be assigned to this access token.
+
+[Back to TOC](#table-of-contents)
+
+File dist.ini
+=============
+
+The `dist.ini` file specifies the meta data of a package and is used by `opm build`
+to generate a tarball that is ready to upload to the remote package server. This
+file should sit at the top of the library or module source tree.
+
+This file uses the [INI file format](https://en.wikipedia.org/wiki/INI_file). It
+contains the following keys (or properties) in the default top-level section:
+
+[Back to TOC](#table-of-contents)
+
+name
+----
+
+Specifies the name of the package (excluding version numbers). For example,
+
+```ini
+name = lua-resty-limit-traffic
+```
+
+The name can only contain letters, digits, and dashes (`-`).
+
+This key is mandatory.
+
+[Back to TOC](#table-of-contents)
+
+abstract
+--------
+
+Abstract for the current package.
+
+```ini
+abstract = New FFI-based Lua API for the ngx_lua module
+```
+
+You can use UTF-8 characters in this field value. Invalid UTF-8 sequences, however,
+will lead to errors in `opm build` or `opm server-build` commands.
+
+This key is mandatory.
+
+[Back to TOC](#table-of-contents)
+
+version
+-------
+
+Version number for the current package.
+
+If this key is specified, then the version number specified here will be automatically compared with
+the version number extracted from the "main module" file (see the [main_module](#main_module) key for more
+details).
+
+Example:
+
+```ini
+version = 1.0.2
+```
+
+See also the [Version Number Handling](#version-number-handling) section for more details on package
+version numbers.
+
+This key is optional.
+
+[Back to TOC](#table-of-contents)
+
+author
+------
+
+Specifies one or more authors of the libraries. For instance,
+
+```ini
+author = Yichun Zhang (agentzh)
+```
+
+The names of multiple authors should
+be separated by a comma, with optional surrounding spaces.
+
+```ini
+author = Yichun Zhang (agentzh), Dejiang Zhu
+```
+
+You can use UTF-8 characters in this field value. Invalid UTF-8 sequences, however,
+will lead to errors in `opm build` or `opm server-build` commands.
+
+This key is mandatory.
+
+[Back to TOC](#table-of-contents)
+
+license
+-------
+
+Specifies the license for the library. For example,
+
+```ini
+license = 3bsd
+```
+
+This assigns the 3-clause BSD license to the current package.
+
+Special IDs for common code licenses are required. For now, the following IDs are supported:
+
+* `2bsd`
+
+BSD 2-Clause "Simplified" or "FreeBSD" license
+* `3bsd`
+
+BSD 3-Clause "New" or "Revised" license
+* `apache2`
+
+Apache License 2.0
+* `artistic`
+
+Artistic License
+* `artistic2`
+
+Artistic License 2.0
+* `ccby`
+
+Creative Commons Attribution 4.0 International Public License
+* `ccbysa`
+
+Creative Commons Attribution-ShareAlike 4.0 International Public License
+* `ccbynd`
+
+Creative Commons Attribution-NoDerivatives 4.0 International Public License
+* `ccbync`
+
+Creative Commons Attribution-NonCommercial 4.0 International Public License
+* `ccbyncsa`
+
+Creative Commons Attribution-NonCommercial-ShareAlike 4.0 International Public License
+* `ccbyncnd`
+
+Creative Commons Attribution-NonCommercial-NoDerivatives 4.0 International Public License
+* `cddl`
+
+Common Development and Distribution License
+* `eclipse`
+
+Eclipse Public License
+* `gpl`
+
+GNU General Public License (GPL)
+* `gpl2`
+
+GNU General Public License (GPL) version 2
+* `gpl3`
+
+GNU General Public License (GPL) version 3
+* `lgpl`
+
+GNU Library or "Lesser" General Public License (LGPL)
+* `mit`
+
+MIT license
+* `mozilla2`
+
+Mozilla Public License 2.0
+* `proprietary`
+
+Proprietary
+* `public`
+
+Public Domain
+
+If you do need an open source license not listed above, please let us know.
+
+It is also possible to specify multiple licenses at the same time, as in
+
+```ini
+license = gpl2, artistic2
+```
+
+This specifies dual licenses: GPLv2 and Artistic 2.0.
+
+To upload the package to the official opm package server, you must at least specify
+an open source license here.
+
+This key is mandatory.
+
+[Back to TOC](#table-of-contents)
+
+requires
+--------
+
+Specifies the runtime dependencies of this package.
+
+Multiple dependencies are separated by commas, with optional surrounding spaces. As in
+
+```ini
+requires = foo/lua-resty-bar, baz/lua-resty-blah
+```
+
+All the dependency constraints specified in this key must be met at the same time when
+the `opm get` or `opm build` command is run.
+
+You can also specify version number requirements, as in
+
+```ini
+requires = foo/lua-resty-bar >= 0.3.5
+```
+
+The version comparison operators supported are `>=`, `=`, and `>`. Their
+semantics is self-explanatory.
+
+You can also specify the following special dependency names:
+
+* `luajit`
+
+Requires the LuaJIT component in the package user's OpenResty installation (and also the package uploader's). When
+version number constraints are specified, the version number of the LuaJIT will also be checked.
+* `nginx`
+
+Requires the NGINX component in the package user's OpenResty installation (and also the package uploader's). When
+version number constraints are specified, the version number of the NGINX core will also be checked.
+* `openresty`
+
+This dependency only makes sense when there is an associated version number constraint specified.
+The version number of the package user's (and also uploader's) OpenResty installation must meet the version
+constraint here.
+* `ngx_http_lua`
+
+Requires the ngx_http_lua_module component in the package user's OpenResty installation (and also the package uploader's).
+When version number constraints are specified, the version of the installed ngx_http_lua_module will also be checked.
+
+Below is such an example:
+
+```ini
+requires = luajit >= 2.1.0, nginx >= 1.11.2, ngx_http_lua = 0.10.6
+```
+
+or you can just specify a single `openresty` version constraint to cover them all in the example above:
+
+```ini
+requires = openresty >= 1.11.2.1
+```
+
+This key is optional.
+
+[Back to TOC](#table-of-contents)
+
+repo_link
+---------
+
+The URL of the code repository (usually on GitHub). For example,
+
+```ini
+repo_link = https://github.com/openresty/lua-resty-core
+```
+
+If the repository is on GitHub, then `opm build` ensures that the name
+specified in the `github_account` in your `~/.opmrc` file *does* match
+the account in your GitHub repository URL. Otherwise `opm build` reports
+an error.
+
+This key is mandatory.
+
+[Back to TOC](#table-of-contents)
+
+is_original
+-----------
+
+Takes the value `yes` or `no` to specify whether this package is an original work
+(that is, not a fork of another package of somebody else).
+
+This key is mandatory.
+
+[Back to TOC](#table-of-contents)
+
+lib_dir
+-------
+
+Specifies the root directory of the library files (`.lua` files, for example).
+
+You must not use absolute directory paths or paths containing `..` as the value.
+
+Default to `lib`.
+
+This key is optional.
+
+[Back to TOC](#table-of-contents)
+
+exclude_files
+-------------
+
+Specifies patterns for files to be excluded during packaging via `opm bulid`.
+Unix shell wildcards like `*` and `?` are supported.
+
+Multiple patterns should be separated by commas, with optional surrounding spaces.
+
+```ini
+exclude_files=foo*.lua, bar/baz/*/*.lua, lint_config.lua
+```
+
+[Back to TOC](#table-of-contents)
+
+main_module
+-----------
+
+This key specifies the PATH of the "main module" file of the current package.
+The `opm build` command reads the "main module" file to extract the version number
+of the current package, for example.
+
+`opm build` uses simple regular expressions to find Lua code patterns like below:
+
+```lua
+_VERSION = '1.0.2'
+```
+
+```lua
+version = "0.5"
+```
+
+```lua
+version = 0.08
+```
+
+When this key is not specified, then `opm build` will try to find the main module
+file automatically (which might be wrong though).
+
+You must not use absolute file paths or paths containing `..` as the value.
+
+This key is optional.
+
+[Back to TOC](#table-of-contents)
+
+doc_dir
+-------
+
+Specifies the root directory of the documentation files. Default to `lib`.
+
+You must not use absolute directory paths or paths containing `..` as the value.
+
+`opm build` always tries to collect the documentation files in either the Markdown (`.md` or `.markdown`)
+or the POD (`.pod`) format.
+
+Regardless of the value of this `doc_dir` key, `opm build` always tries to collect
+the following files in the current working directory (which should be the root of
+the current package):
+
+* `README.md`, `README.markdown`, or `README.pod`
+* `COPYING`
+* `COPYRIGHT`
+* `Changes.md`, `Changes.markdown`, or `Changes.pod`
+
+You can use UTF-8 characters in these documentation files. Other multi-byte character
+encodings must be avoided.
+
+This key is optional.
+
+[Back to TOC](#table-of-contents)
+
+File .opmrc
+===========
+
+The `.opmrc` file under the current system user's home directory configures various important settings
+for the current system user. Only library
+authors should care about this file since commands like `opm get`, `opm search`, or `opm list` do
+not need this file at all.
+
+Like [file dist-ini](#file-distini), this file is also in the [INI file format](https://en.wikipedia.org/wiki/INI_file).
+When this file is absent, the first run of the `opm build` or `opm upload` commands will automatically generate
+a boilerplate file for you to fill out later yourself.
+
+This file recognizes the following keys:
+
+[Back to TOC](#table-of-contents)
+
+github_account
+--------------
+
+Specifies your GitHub account name, either your GitHub user login name or
+github organization that you owns.
+
+For example, the document writer's GitHub login name is `agentzh` while he
+also owns the GitHub organization `openresty`. So he can choose to upload
+his packages either under the `agentzh` or `openresty` with the same GitHub
+access token (defined via the [github_token](#github_token) key) by configuring
+this `github_account` key.
+
+This key is required.
+
+[Back to TOC](#table-of-contents)
+
+github_token
+------------
+
+Specifies your GitHub personal access token used for package uploads.
+
+You can generate a GitHub personal access token from the GitHub [web UI](https://github.com/settings/tokens).
+
+While you are generating your token on GitHub's web site, it is crucial to assign the right permissions (or `scopes`
+in GitHub's terminology) to your token. The `opm` tool chain requires that the token must contain the `user:email`
+scope. Optionally, you can also assign the `read:org` scope at the same time, which is required if you want to
+upload your OpenResty packages under an organization name that you owns.
+
+The GitHub personal access tokens are like passwords, so be very careful when handling it. Never share it with
+the rest of the world otherwise anybody can upload packages to the OPM package server under *your* name.
+
+Due to security considerations, the package server also rejects GitHub personal access tokens that are too permissive
+(that is, having more scopes than needed). The package server caches a sorted hash of your tokens in its own database,
+so that the server does not have to query GitHub upon subsequent uploads. Because the tokens are hashed, the package
+server can only verifies that your token is correct but cannot recover your original token just from the database.
+
+This key is required.
+
+[Back to TOC](#table-of-contents)
+
+upload_server
+-------------
+
+Specifies the OPM server for uploading packages. Defaults to `https://opm.openresty.org`. It is strongly recommended
+to use `https` (which is the default) for communication privacy.
+
+The official OPM package server is `https://opm.openresty.org`. You could, however, point this key to your own or
+any 3rd-party servers (then you are at your own risk).
+
+This key can have a different value than [download_server](#download_server).
+
+[Back to TOC](#table-of-contents)
+
+download_server
+---------------
+
+Specifies the OPM server for downloading packages. Defaults to `https://opm.openresty.org`. It is strongly recommended
+to use `https` (which is the default) for communication privacy.
+
+The official OPM package server is `https://opm.openresty.org`. You could, however, point this key to your own or
+any 3rd-party servers (then you are at your own risk).
+
+This key can have a different value than [upload_server](#upload_server).
+
+[Back to TOC](#table-of-contents)
+
+Version Number Handling
+=======================
+
+OPM requires all package version numbers to only consist of digits, dots, alphabetic letters, and underscores.
+Only the digits part are mandatory.
+
+OPM treats all version numbers as one or more integers separated by dots (`.`) or any other non-digit characters.
+Version number comparisons are performed by comparing each integer part in the order of their appearance.
+For example, the following version number comparisons hold true:
+
+```
+12 > 10
+1.0.3 > 1.0.2
+1.1.0 > 1.0.9
+0.10.0 > 0.9.2
+```
+
+There can be some surprises when your version numbers look like decimal numbers, as in
+
+```
+0.1 < 0.02
+```
+
+This is because `0.1` is parsed as the integer pair `{0, 1}`, while `0.02` is parsed as
+`{0, 2}`, so the latter is greater than the former.
+To avoid such pitfalls, always specify the decimal part of the equal length, that is,
+writing `0.1` as `0.10`, which is of the same length as `0.02`.
+
+OPM does not support special releases like "release candidates" (RC) or "developer releases" yet.
+But we may add such support in the future. For forward-compatibility, the package author
+should avoid version numbers with suffixes like `_2` or `rc1`.
+
+[Back to TOC](#table-of-contents)
+
+Installation
+============
+
+For opm
+-------
+
+[OpenResty releases](https://openresty.org/en/download.html) since `1.11.2.2` already include and
+install `opm` by default. So usually you do *not* need to install `opm` yourself.
+
+It worth noting that if you are using the official OpenResty
+[prebuilt linux packages](https://openresty.org/en/linux-packages.html), you should install the
+[openresty-opm](https://openresty.org/en/rpm-packages.html#openresty-opm) package since the
+[openresty](https://openresty.org/en/rpm-packages.html#openresty) binary package itself does not
+contain `opm`.
+
+If you really want to update to the latest version of
+`opm` in the code repository, then just copy the file `bin/opm` in the repository over to
+`<openresty-prefix>/bin/` where `<openresty-prefix>` is the value of the `--prefix` option of
+`./configure` while you are building your OpenResty (defaults to `/usr/local/openresty/`).
+
+```bash
+# <openresty-prefix> defaults to `/usr/local/openresty/`
+# unless you override it when building OpenResty yourself.
+sudo cp bin/opm <openresty-prefix>/bin/
+```
+
+If you are using an older version of OpenResty that does *not* include `opm` by default, then
+you should also create the following directories:
+
+```bash
+cd <openresty-prefix>
+sudo mkdir -p site/lualib site/manifest site/pod
+```
+
+Note that at least OpenResty 1.11.2.1 is needed for `opm` to work properly.
+
+To run the `opm` tool, you just need `perl`, `tar`, and `curl` to run the `opm` tool. Ensure
+that your perl is not too old (should be at least `5.10.1`), and your curl supports `SNI`.
+
+[Back to TOC](#table-of-contents)
+
+Security Considerations
+=======================
+
+The `opm` client tool always uses HTTPS to talk to the package server, [opm.openresty.org](https://opm.openresty.org/),
+by default. Both for package uploading and package downloading, as well as other web service queries for meta data.
+Although it is possible for the user to manually switch to the HTTP protocol
+by editing the `download_server` and/or `upload_server` keys in her own `~/.opmrc` file.
+The `opm` client tool also always verifies the SSL certificates of the remote OPM package server (via `curl` right now).
+
+Similarly, the OPM package server always uses TLS to talk to remote services provided by GitHub and Mailgun.
+These remote sites' SSL certificates are also always verified on the server side. This cannot be turned off by the user.
+
+The OPM package server uses PostgreSQL's `pgcrypto` extension to encrypt the authors' GitHub personal access tokens
+in the database (we
+cache the tokens in our own database to speed up subsequent uploads and improve site reliability when the GitHub API is down).
+Even the server administrators cannot recover the original access tokens from the database.
+The server also ensures that the author's personal token is not too permissive by rejecting such tokens.
+
+The `opm` tool chain and server also always perform the MD5 checksum verification upon both the
+downloaded and uploaded package files, to ensure data integrity when transferred over the wire.
+
+[Back to TOC](#table-of-contents)
+
+Credit
+======
+
+The design of the `opm` tool gets various inspirations from various existing package management systems, including but not limited to,
+Perl's `cpan` and [Dist::Zilla](http://dzil.org/), RedHat's `yum`, NodeJS's `npm`, and Mac OS X's `homebrew`.
+
+[Back to TOC](#table-of-contents)
+
+TODO
+====
+
+* Add `opm reinstall` command to reinstall an already installed module (at the same version).
+* Add `opm doctor` command to check if there is any inconsistency in the current opm package installation tree.
+* Add `opm files <package>` command to list all the files in the specified package.
+* Add `opm whatprovides <package>` command to find out which package the specified file belongs to.
+* Add plugin mechanisms to `opm build` (similar to Perl's [Dist::Zilla](http://dzil.org/) packaging framework).
+* Turn opm.openresty.org into a full-blown web site similar to search.cpan.org.
+* Add support for Lua C modules and LuaJIT FFI modules with standalone C libraries.
+* Add support for 3rd-party NGINX C modules (which can be compiled as NGINX dynamic modules).
+* Add (limited) support for LuaRocks via the special name space `luarocks`, for example,
+
+```bash
+opm get luarocks/foo
+```
+
+[Back to TOC](#table-of-contents)
+
+Author
+======
+
+Yichun Zhang (agentzh) <agentzh@gmail.com>, OpenResty Inc.
+
+[Back to TOC](#table-of-contents)
+
+Copyright and License
+=====================
+
+This module is licensed under the BSD license.
+
+Copyright (C) 2016-2020, by Yichun "agentzh" Zhang (章亦春) <agentzh@gmail.com>, OpenResty Inc.
+
+All rights reserved.
+
+Redistribution and use in source and binary forms, with or without modification, are permitted provided that the following conditions are met:
+
+* Redistributions of source code must retain the above copyright notice, this list of conditions and the following disclaimer.
+
+* Redistributions in binary form must reproduce the above copyright notice, this list of conditions and the following disclaimer in the documentation and/or other materials provided with the distribution.
+
+THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
+
+[Back to TOC](#table-of-contents)
+
diff --git a/web/images/github.png b/web/images/github.png
new file mode 100644
index 0000000..2c708fb
Binary files /dev/null and b/web/images/github.png differ
diff --git a/web/lua/opmserver.lua b/web/lua/opmserver.lua
index b7f7c62..22a48bb 100644
--- a/web/lua/opmserver.lua
+++ b/web/lua/opmserver.lua
@@ -11,14 +11,19 @@ local ngx = require "ngx"
 local pgmoon = require "pgmoon"
 local tab_clear = require "table.clear"
 local limit_req = require "resty.limit.req"
-local templates = require "opmserver.templates"
 local email = require "opmserver.email"
+local paginator = require "opmserver.paginator"
+local view = require "opmserver.view"
+local utils = require "opmserver.utils"
+local read_file = utils.read_file
 local send_email = email.send_mail
 
 
 local re_find = ngx.re.find
 local re_match = ngx.re.match
+local re_gsub = ngx.re.gsub
 local str_find = string.find
+local str_len = string.len
 local ngx_var = ngx.var
 local say = ngx.say
 local req_read_body = ngx.req.read_body
@@ -27,14 +32,17 @@ local encode_json = cjson.encode
 local req_method = ngx.req.get_method
 local req_body_file = ngx.req.get_body_file
 local os_exec = os.execute
-local io_open = io.open
-local io_close = io.close
 local set_quote_sql_str = ndk.set_var.set_quote_pgsql_str
 local assert = assert
 local sub = string.sub
 local ngx_null = ngx.null
 local tab_concat = table.concat
+local tonumber = tonumber
+local tostring = tostring
+local ipairs = ipairs
+local type = type
 local shdict_bad_users = ngx.shared.bad_users
+local prefix = ngx.config.prefix()
 
 
 local incoming_directory = "/opm/incoming"
@@ -73,6 +81,7 @@ local db_insert_user_verified_email
 local match_table = {}
 local ver2pg_array, tab2pg_array
 local count_bad_users
+local doc_htmls = {}
 
 
 -- an entry point
@@ -1616,23 +1625,220 @@ do
     end
 end
 
+local default_page_size = 15
+
+local function get_req_param(param_name, default, type_convert)
+    local unescape_uri = ngx.unescape_uri
+    local param = unescape_uri(ngx_var['arg_' .. param_name])
+
+    if type_convert then
+        param = type_convert(param)
+    end
+
+    param = param or default
+
+    return param
+end
+
+
+local pkg_base_sql =
+    [[select package_name, version_s, abstract, indexed, uploader,]]
+    .. [[ org_account, to_char(t.updated_at,'YYYY-MM-DD HH24:MI:SS')]]
+    .. [[ as upload_updated_at, users.login as uploader_name,]]
+    .. [[ orgs.login as org_name, repo_link]]
+    .. [[ from (select package_name, uploader, org_account,]]
+    .. [[ max(version_s) as version_s, last(abstract) as abstract,]]
+    .. [[ last(indexed) as indexed, max(updated_at) as updated_at, ]]
+    .. [[ last(repo_link) as repo_link ]]
+    .. [[ from uploads where indexed = true ]]
+    .. [[ group by package_name, uploader, org_account) t]]
+    .. [[ left join users on t.uploader = users.id]]
+    .. [[ left join orgs on t.org_account = orgs.id]]
+
+local routes = {
+    index = 'do_index_page',
+    search = 'do_search_page',
+    packages = 'do_packages_page',
+    uploads = 'do_uploads_page',
+    docs = 'do_docs_page',
+}
+
+
+local function show_error_page(error_info)
+    view.show("error", {
+        error_info = error_info,
+    })
+end
+
+
+function _M.do_web()
+    local uri = ngx.var.uri .. '/'
+
+    local paths = re_match(uri, [[^/(\w+)?/]], 'jo')
+    if not paths then
+        return ngx.exit(404)
+    end
+
+    local path = paths[1] or 'index'
+    local action = routes[path]
+
+    if not action then
+        paths = re_match(uri, [[^/(\w+)/([\w-]+)/([\w-]+)?/?]], 'jo')
+        if paths and #path > 0 then
+            path = paths[1]
+
+            if path == 'uploader' then
+                local uploader = paths[2]
+                return _M.do_show_uploader(uploader)
+
+            elseif path == 'package' then
+                local account, pkg_name = paths[2], paths[3]
+                if not pkg_name then
+                    return show_error_page("no package_name specified")
+                end
+                return _M.do_show_package(account, pkg_name)
+
+            else
+                return show_error_page("invalid path")
+            end
+        end
+    end
+
+    action = _M[action]
+
+    if not action then
+        action = _M.do_404_page
+    end
+
+    return action()
+end
+
+
+function _M.do_show_package(account, pkg_name)
+    local quoted_pkg_name = quote_sql_str(pkg_name)
+    local quoted_account = quote_sql_str(account)
+
+    local user_id, org_id
+
+    local sql = "select id from users where login = " .. quoted_account
+
+    local rows = query_db(sql)
+
+    if #rows == 0 then
+        sql = "select id from orgs where login = " .. quoted_account
+        rows = query_db(sql)
+
+        if #rows == 0 then
+            return show_error_page("account name " .. account .. " not found")
+        end
+
+        org_id = assert(rows[1].id)
+
+    else
+        user_id = assert(rows[1].id)
+    end
+
+    local condition
+    if user_id then
+        condition = " users.id = " .. user_id
+
+    else
+        condition = " uploads.org_account = " .. org_id
+    end
+
+    sql = [[select package_name, version_s, abstract, indexed, authors, ]]
+          .. [[licenses, is_original, dep_packages, dep_operators, ]]
+          .. [[dep_versions, failed, users.login as uploader_name, ]]
+          .. [[orgs.login as org_name, repo_link, ]]
+          .. [[to_char(uploads.created_at,'YYYY-MM-DD HH24:MI:SS')]]
+          .. [[ as upload_updated_at from uploads]]
+          .. [[ left join users on uploads.uploader = users.id]]
+          .. [[ left join orgs on uploads.org_account = orgs.id]]
+          .. [[ where package_name = ]] .. quoted_pkg_name
+          .. [[ and ]] .. condition
+          .. [[ order by uploads.created_at desc]]
+
+    rows = query_db(sql)
+
+    if #rows == 0 then
+        return show_error_page("package " .. pkg_name
+                               .. " not found under account " .. account)
+    end
+
+    local pkg_info = rows[1]
+    if pkg_info.licenses then
+        pkg_info.licenses = tab_concat(pkg_info.licenses, ",")
+    end
+
+    if pkg_info.authors then
+        pkg_info.authors = tab_concat(pkg_info.authors, ",")
+    end
+
+    if pkg_info.dep_packages then
+        local dep_info = {}
+        for i, dep_name in ipairs(pkg_info.dep_packages) do
+            if str_find(dep_name, '/', nil, true) then
+                dep_name = '<a href="/package/' .. dep_name .. '">'
+                           .. dep_name .. '</a>'
+            end
+
+            local dep_op = pkg_info.dep_operators[i]
+            local dep_ver = pkg_info.dep_versions[i]
+            if dep_op and dep_op ~= 'NULL' then
+                dep_info[i] = dep_name .. ' ' .. dep_op .. ' ' .. dep_ver
+
+            else
+                dep_info[i] = dep_name
+            end
+        end
+
+        pkg_info.dep_info = tab_concat(dep_info, ", ")
+    end
+
+    view.show("package_info", {
+        pkg_info = pkg_info,
+        account = account,
+        pkg_name = pkg_name,
+        packages = rows,
+        packages_count = #rows,
+    })
+end
+
+
+function _M.do_show_uploader(uploader_name)
+    local sql
+    sql = "select * from users where login = "
+          .. quote_sql_str(uploader_name) .. " limit 1"
+
+    local rows = query_db(sql)
+
+    if not rows or #rows == 0 then
+        return show_error_page("user not found")
+    end
+
+    local uploader = rows[1]
+    local uploader_id = uploader.id
+
+    sql = pkg_base_sql
+          .. [[ where users.id = ]] .. uploader_id
+          .. [[ order by upload_updated_at DESC]]
+
+    local packages = query_db(sql)
+
+    view.show("uploader", {
+        uploader = uploader,
+        uploader_name = uploader_name,
+        packages = packages,
+        packages_count = #packages,
+    })
+end
+
 
 function _M.do_index_page()
-    local sql = [[select package_name, version_s, abstract, indexed]]
-                .. [[, failed, users.login as uploader_name]]
-                .. [[, orgs.login as org_name, repo_link]]
-                .. [[, uploads.created_at as created_at]]
-                .. [[ from uploads]]
-                .. [[ left join users on uploads.uploader = users.id]]
-                .. [[ left join orgs on uploads.org_account = orgs.id]]
-                .. [[ order by uploads.updated_at desc limit 1000]]
-
-    local recent_uploads = query_db(sql)
-
-    sql = [[select count(*) as total,
-count(distinct uploader) as uploaders,
-count(distinct package_name) as pkg_count
-from uploads where indexed = true]]
+    local sql = [[select count(*) as total,
+                count(distinct uploader) as uploaders,
+                count(distinct package_name) as pkg_count
+                from uploads where indexed = true]]
 
     local rows = query_db(sql)
     assert(#rows == 1)
@@ -1642,13 +1848,184 @@ from uploads where indexed = true]]
     local uploader_count = row.uploaders
     local pkg_count = row.pkg_count
 
-    local html = templates.process("index.tt2", {
-        recent_uploads = recent_uploads,
+    sql = pkg_base_sql
+          .. [[ order by upload_updated_at DESC limit 10]]
+
+    local recent_packages = query_db(sql)
+
+    view.show("index", {
         total_uploads = total_uploads,
         uploader_count = uploader_count,
         package_count = pkg_count,
+        packages = recent_packages
+    })
+end
+
+
+function _M.do_packages_page()
+    local curr_page = get_req_param('page', 1, tonumber)
+    local page_size = default_page_size
+
+    local sql = [[select count(distinct(package_name, uploader, org_account))]]
+                ..  [[ as total_count from uploads where indexed = true]]
+
+    local rows = query_db(sql)
+    local row = rows[1]
+    local total_count = row.total_count
+
+    local packages, page_info
+
+    if total_count > 0 then
+        local limit, offset = paginator.paging(total_count, page_size, curr_page)
+
+        sql = pkg_base_sql
+              .. [[ order by upload_updated_at DESC limit ]] .. limit
+              .. [[ offset ]] .. offset
+
+        packages = query_db(sql)
+
+        page_info = paginator:new(ngx.var.request_uri, total_count,
+                                  page_size, curr_page):show()
+    end
+
+    view.show("packages", {
+        packages = packages,
+        page_info = page_info
     })
-    say(html)
+end
+
+
+function _M.do_uploads_page()
+    local curr_page = get_req_param('page', 1, tonumber)
+    local page_size = default_page_size
+
+    local sql = [[select count(id) as total_count from uploads]]
+
+    local rows = query_db(sql)
+    local row = rows[1]
+    local total_count = row.total_count
+
+    local packages, page_info
+
+    if total_count > 0 then
+        local limit, offset = paginator.paging(total_count, page_size, curr_page)
+
+        sql = [[select package_name, version_s, abstract, indexed]]
+              .. [[, failed, users.login as uploader_name]]
+              .. [[, orgs.login as org_name, repo_link]]
+              .. [[, to_char(uploads.created_at,'YYYY-MM-DD HH24:MI:SS')]]
+              .. [[ as upload_updated_at from uploads]]
+              .. [[ left join users on uploads.uploader = users.id]]
+              .. [[ left join orgs on uploads.org_account = orgs.id]]
+              .. [[ order by uploads.created_at desc limit ]]
+              .. limit .. [[ offset ]] .. offset
+
+        packages = query_db(sql)
+
+        page_info = paginator:new(ngx.var.request_uri, total_count,
+                                  page_size, curr_page):show()
+    end
+
+    view.show("uploads", {
+        packages = packages,
+        page_info = page_info
+    })
+end
+
+
+function _M.do_search_page()
+    local sql
+    local query = get_req_param('q', '')
+    local curr_page = get_req_param('page', 1, tonumber)
+    local page_size = default_page_size
+
+    local search_results, page_info
+
+    if str_len(query) > 0 then
+        local total_count
+        local quoted_query = quote_sql_str(query)
+
+        sql = "select count(id) as total_count"
+              .. " from uploads, plainto_tsquery("
+              .. quoted_query .. ") q"
+              .. " where indexed = true and ts_idx @@ q"
+              .. " group by package_name, uploader, org_account"
+
+        local rows = query_db(sql)
+        total_count = #rows
+
+        if total_count > 0 then
+            local limit, offset = paginator.paging(total_count, page_size, curr_page)
+            local tsquery = "plainto_tsquery(" .. quoted_query .. ")"
+
+            sql = "select ts_headline(abstract, " .. tsquery
+                  .. ", 'MaxFragments=0') as abstract"
+                  .. ", ts_headline(package_name, " .. tsquery
+                  .. ", 'MaxFragments=0') as package_name"
+                  .. ", orgs.login as org_name, version_s"
+                  .. ", users.login as uploader_name, repo_link"
+                  .. ", to_char(upload_updated_at,'YYYY-MM-DD HH24:MI:SS')"
+                  .. " as upload_updated_at"
+                  .. " from (select last(abstract) as abstract"
+                  .. ", package_name, org_account, uploader, repo_link"
+                  .. ", ts_rank_cd(last(ts_idx), last(q), 1) as rank"
+                  .. ", max(updated_at) as upload_updated_at"
+                  .. ", max(version_s) as version_s"
+                  .. " from uploads, " .. tsquery .. " q"
+                  .. " where indexed = true and ts_idx @@ q"
+                  .. " group by package_name, uploader, org_account, repo_link"
+                  .. " order by rank desc limit " .. limit
+                  .. " offset " .. offset .. ") as tmp"
+                  .. " left join users on tmp.uploader = users.id"
+                  .. " left join orgs on tmp.org_account = orgs.id"
+
+            search_results = query_db(sql)
+
+            if search_results and #search_results > 0 then
+                for _, row in ipairs(search_results) do
+                    row.indexed = true
+                    row.raw_package_name = re_gsub(row.package_name, "<[^>]*>",
+                                                   "", "jo")
+                end
+            end
+
+            page_info = paginator:new(ngx.var.request_uri, total_count,
+                                      page_size, curr_page):show()
+
+        end
+    end
+
+    view.show("search", {
+        packages = search_results or {},
+        package_count = 0,
+        query_words = query or '',
+        page_info = page_info
+    })
+
+end
+
+
+function _M.do_docs_page()
+    local doc_name = "docs"
+    local doc_html = doc_htmls[doc_name]
+    local err
+
+    if not doc_html then
+        local doc_path = prefix .. "/docs/html/" .. doc_name .. ".html"
+        doc_html, err = read_file(doc_path)
+        if not doc_html then
+            doc_html = err
+        end
+    end
+
+    view.show("docs", {
+        doc_html = doc_html,
+    })
+end
+
+
+function _M.do_404_page()
+    view.show("404")
 end
 
 
diff --git a/web/lua/opmserver/email.lua b/web/lua/opmserver/email.lua
index 47eb3ae..236cb1c 100644
--- a/web/lua/opmserver/email.lua
+++ b/web/lua/opmserver/email.lua
@@ -1,5 +1,7 @@
 local resty_ini = require "resty.ini"
 
+
+local ngx = ngx
 local find = ngx.re.find
 local gsub = ngx.re.gsub
 local sub = string.sub
@@ -132,7 +134,7 @@ function _M.send_mail(recipient, recipient_name, mail_title, mail_body)
         return nil, err
     end
 
-    sess, err = sock:sslhandshake(nil, host, true)
+    local sess, err = sock:sslhandshake(nil, host, true)
     if not sess then
         return nil, err
     end
diff --git a/web/lua/opmserver/paginator.lua b/web/lua/opmserver/paginator.lua
new file mode 100644
index 0000000..3c3eec8
--- /dev/null
+++ b/web/lua/opmserver/paginator.lua
@@ -0,0 +1,195 @@
+
+local _M = {}
+local mt = { __index = _M }
+
+local select = select
+local setmetatable = setmetatable
+local str_find = string.find
+local str_gsub = string.gsub
+local tab_concat = table.concat
+local modf = math.modf
+local ceil = math.ceil
+
+local function tab_append(t, idx, ...)
+    local n = select("#", ...)
+    for i = 1, n do
+        t[idx + i] = select(i, ...)
+    end
+    return idx + n
+end
+
+function _M:new(url, total, page_size, page)
+    total = total or 1
+    page_size = page_size or 20
+
+    page = page or 1
+    if page < 1 then
+        page = 1
+    end
+
+    local page_count = ceil(total / page_size)
+    if page > page_count then
+        page = page_count
+    end
+
+    local this = {
+        total = total,
+        page_size = page_size,
+        page = page,
+        page_count = page_count,
+        url = url
+    }
+
+    setmetatable(this, mt)
+
+    return this
+end
+
+function _M:set_url(page)
+    local url = self.url
+
+    if str_find(url, '[&%?]page=') then
+        url = str_gsub(url, '([&%?])page=[^&#]*', '%1page=' .. page)
+
+    else
+        if not str_find(url, '%?') then
+            url = url .. '?'
+        end
+
+        if str_find(url, '%w=') then
+            url = url .. '&'
+        end
+
+        url = url .. 'page=' .. page
+    end
+
+    return url
+end
+
+function _M:prev()
+    if self.page == 1 then
+        return "<span class='disabled'>prev</span>"
+    end
+
+    return '<a href="' .. self:set_url(self.page - 1) .. '">prev</a>'
+end
+
+function _M:next()
+    if self.page < self.page_count then
+        return '<a href="' .. self:set_url(self.page + 1) .. '">next</a>'
+    end
+
+    return "<span class='disabled'>next</span>"
+end
+
+function _M:url_range(list, tlen, first, last)
+    last = last or first
+
+    for i = first, last do
+        if i == self.page then
+            tlen = tab_append(list, tlen, ' <span class="current">', 
+                              i, '</span>')
+
+        else
+            tlen = tab_append(list, tlen, '<a href="', self:set_url(i), '">', 
+                              i, '</a>')
+        end
+    end
+
+    return tlen
+end
+
+function _M:slide(each_side)
+    local ret = {}
+    local tlen = 0
+
+    each_side = each_side or 2
+    local window = each_side * 2
+    local left_dot_end
+    local right_dot_begin
+
+    if self.page > each_side + 3 then
+        left_dot_end = self.page - each_side
+        if left_dot_end > self.page_count - window then
+            left_dot_end = self.page_count - window
+        end
+        if left_dot_end <= 3 then
+            left_dot_end = nil
+        end
+    end
+
+    if self.page <= self.page_count - (each_side + 3) 
+       and self.page_count > (each_side + 3)
+    then
+        right_dot_begin = self.page + each_side
+        if right_dot_begin <= window then
+            right_dot_begin = window + 1
+        end
+        if self.page_count - right_dot_begin <= 2 then
+            right_dot_begin = nil
+        end
+    end
+
+    if left_dot_end then
+        tlen = self:url_range(ret, tlen, 1)
+        tlen = tab_append(ret, tlen, " ... ")
+        if right_dot_begin then
+            tlen = self:url_range(ret, tlen, left_dot_end, right_dot_begin)
+            tlen = tab_append(ret, tlen, " ... ")
+            tlen = self:url_range(ret, tlen, self.page_count)
+
+        else
+            tlen = self:url_range(ret, tlen, left_dot_end, self.page_count)
+        end
+
+    else
+        if right_dot_begin then
+            tlen = self:url_range(ret, tlen, 1, right_dot_begin)
+            tlen = tab_append(ret, tlen, " ... ")
+            tlen = self:url_range(ret, tlen, self.page_count)
+
+        else
+            tlen = self:url_range(ret, tlen, 1, self.page_count)
+        end
+    end
+
+    return tab_concat(ret)
+end
+
+function _M:show()
+    local ret = '<div class="pager">'
+                .. ' ' .. self:prev()
+                .. ' ' .. self:slide()
+                .. ' ' .. self:next()
+                ..      '</div>'
+
+    return ret
+end
+
+function _M.paging(total_count, page_size, curr_page)
+    total_count = total_count or 0
+    curr_page = curr_page or 1
+    if curr_page < 1 then
+        curr_page = 1
+    end
+    page_size = page_size or 20
+
+    local page_count, remainder = modf(total_count / page_size)
+    if remainder > 0 then
+        page_count = page_count + 1 
+    end
+    if curr_page > page_count then
+        curr_page = page_count
+    end
+
+    local offset = (curr_page - 1) * page_size
+
+    local limit = page_size
+    if limit > total_count then
+        limit = total_count
+    end
+
+    return limit, offset
+end
+
+return _M
diff --git a/web/lua/opmserver/templates.lua b/web/lua/opmserver/templates.lua
index bcf9c1a..983c165 100644
--- a/web/lua/opmserver/templates.lua
+++ b/web/lua/opmserver/templates.lua
@@ -230,6 +230,80 @@ function _M.process(file, params)
     end
     return f(context)
 end
+-- 404.tt2
+template_map['404.tt2'] = function (context)
+    if not context then
+        return error("Lemplate function called without context\n")
+    end
+    local stash = context.stash
+    local output = {}
+    local i = 0
+
+i = i + 1 output[i] = '\n<h2>\n404 not found!\n</h2>\n'
+
+    return output
+end
+
+-- analytics.tt2
+template_map['analytics.tt2'] = function (context)
+    if not context then
+        return error("Lemplate function called without context\n")
+    end
+    local stash = context.stash
+    local output = {}
+    local i = 0
+
+i = i + 1 output[i] = '\n<script>\nvar ga_func = function () {\n    (function(i,s,o,g,r,a,m){i[\'GoogleAnalyticsObject\']=r;i[r]=i[r]||function(){\n        (i[r].q=i[r].q||[]).push(arguments)},i[r].l=1*new Date();a=s.createElement(o),\n    m=s.getElementsByTagName(o)[0];a.async=1;a.src=g;m.parentNode.insertBefore(a,m)\n    })(window,document,\'script\',\'https://www.google-analytics.com/analytics.js\',\'ga\');\n\n    ga(\'create\', \'UA-24724965-2\', \'auto\');\n    ga(\'send\', \'pageview\');\n}\nsetTimeout(ga_func, 0);\n</script>\n'
+
+    return output
+end
+
+-- docs.tt2
+template_map['docs.tt2'] = function (context)
+    if not context then
+        return error("Lemplate function called without context\n")
+    end
+    local stash = context.stash
+    local output = {}
+    local i = 0
+
+i = i + 1 output[i] = '\n<div class="main_col">\n<div class="split_header">\n    <h2>Docs</h2>\n</div>\n\n'
+-- line 7 "docs.tt2"
+i = i + 1 output[i] = stash_get(stash, 'doc_html')
+i = i + 1 output[i] = '\n</div>\n'
+
+    return output
+end
+
+-- error.tt2
+template_map['error.tt2'] = function (context)
+    if not context then
+        return error("Lemplate function called without context\n")
+    end
+    local stash = context.stash
+    local output = {}
+    local i = 0
+
+i = i + 1 output[i] = '\n<div class="main_col">\n<div class="split_header">\n    <h2>Error</h2>\n</div>\n\n<div class="error_info">\n    '
+-- line 8 "error.tt2"
+
+-- FILTER
+local value
+do
+    local output = {}
+    local i = 0
+
+i = i + 1 output[i] = stash_get(stash, 'error_info')
+
+    value = context.filter(output, 'html', {})
+end
+i = i + 1 output[i] = value
+
+i = i + 1 output[i] = '\n</div>\n\n</div>\n'
+
+    return output
+end
+
 -- footer.tt2
 template_map['footer.tt2'] = function (context)
     if not context then
@@ -239,22 +313,22 @@ template_map['footer.tt2'] = function (context)
     local output = {}
     local i = 0
 
-i = i + 1 output[i] = '<div class="content-footer">\n<!-- <hr class="footer-sep"/> -->\n<div class="footer">\n  <p>'
--- line 4 "footer.tt2"
-i = i + 1 output[i] = 'Copyright © 2016, 2017 Yichun Zhang (agentzh)'
-i = i + 1 output[i] = '</p>\n  <p>'
--- line 5 "footer.tt2"
+i = i + 1 output[i] = '\n<p>'
+-- line 2 "footer.tt2"
+i = i + 1 output[i] = 'Copyright © 2016-2020 Yichun Zhang (agentzh)'
+i = i + 1 output[i] = '</p>\n<p>'
+-- line 3 "footer.tt2"
 i = i + 1 output[i] = '100% Powered by OpenResty and PostgreSQL'
-i = i + 1 output[i] = '\n     '
--- line 6 "footer.tt2"
+i = i + 1 output[i] = '\n '
+-- line 4 "footer.tt2"
 i = i + 1 output[i] = '('
-i = i + 1 output[i] = '<a href="https://github.com/openresty/opm/">\n     '
--- line 7 "footer.tt2"
+i = i + 1 output[i] = '<a href="https://github.com/openresty/opm/">'
+-- line 4 "footer.tt2"
 i = i + 1 output[i] = 'view the source code of this site'
 i = i + 1 output[i] = '</a>'
--- line 7 "footer.tt2"
+-- line 4 "footer.tt2"
 i = i + 1 output[i] = ')'
-i = i + 1 output[i] = '</p>\n  <p>京ICP备16021991号</p>\n</div>\n</div>\n'
+i = i + 1 output[i] = '</p>\n<p>京ICP备16021991号</p>\n'
 
     return output
 end
@@ -268,21 +342,176 @@ template_map['index.tt2'] = function (context)
     local output = {}
     local i = 0
 
-i = i + 1 output[i] = '<!DOCTYPE html>\n<html lang="en">\n<head>\n    <meta charset="utf-8">\n    <title>OPM - OpenResty Package Manager</title>\n    <meta name="viewport" content="width=device-width, initial-scale=1.0, minimum-scale=0.5, maximum-scale=2.0, user-scalable=yes">\n    <link rel="stylesheet" type="text/css" href="/css/main.css">\n</head>\n<body>\n<h1>\n    <span>\n    <a href="https://openresty.org"><img src="https://openresty.org/images/logo.png" width="64"></a>\n    </span>\n    OPM - OpenResty Package Manager</h1>\n<div>\n    <h2>How to Use</h2>\n    <p>Please read the <a href="https://github.com/openresty/opm#readme">opm documentation</a> for more details.</p>\n    <h2>Recent Uploads</h2>\n    <p>We already have '
--- line 19 "index.tt2"
+i = i + 1 output[i] = '\n<div class="intro_banner">\n    <div class="intro_banner_inner">\n        <div class="intro_text">\n        <p><b>opm</b> is the official OpenResty package manager, similar to Perl\'s CPAN and NodeJS\'s npm in rationale.</p>\n        <p>We provide both the opm client-side command-line utility and the server-side application for the central package repository.</p>\n        <p>Please read the <a href="/docs">opm documentation</a> for more details.</p>\n        <p>We already have <b>'
+-- line 8 "index.tt2"
 i = i + 1 output[i] = stash_get(stash, 'total_uploads')
-i = i + 1 output[i] = ' successful uploads\n       across '
--- line 20 "index.tt2"
+i = i + 1 output[i] = '</b> successful uploads across <b>'
+-- line 8 "index.tt2"
 i = i + 1 output[i] = stash_get(stash, 'package_count')
-i = i + 1 output[i] = ' distinct package names from '
--- line 20 "index.tt2"
+i = i + 1 output[i] = '</b> distinct package names from <b>'
+-- line 8 "index.tt2"
 i = i + 1 output[i] = stash_get(stash, 'uploader_count')
-i = i + 1 output[i] = '\n       contributors. Come on, OPM authors!</p>\n    <table class="recent">\n    <tbody>'
--- line 56 "index.tt2"
+i = i + 1 output[i] = '</b> contributors. Come on, OPM authors!</p>\n        </div>\n    </div>\n</div>\n\n<div class="main_col">\n<div class="split_header">\n    <h2>Recent packages</h2>\n    <span class="header_sub">\n        (<a href="/packages">view all</a>)\n    </span>\n    <span class="right">\n        <a href="/uploads">Recent uploads</a>\n    </span>\n</div>\n\n<section>\n'
+-- line 25 "index.tt2"
+i = i + 1 output[i] = context.process(context, 'package_list.tt2')
+i = i + 1 output[i] = '\n</section>\n</div>\n'
+
+    return output
+end
+
+-- layout.tt2
+template_map['layout.tt2'] = function (context)
+    if not context then
+        return error("Lemplate function called without context\n")
+    end
+    local stash = context.stash
+    local output = {}
+    local i = 0
+
+i = i + 1 output[i] = '<!DOCTYPE html>\n<html lang="en">\n<head>\n    <meta charset="utf-8">\n    <title>OPM - OpenResty Package Manager</title>\n    <meta name="viewport" content="width=device-width, initial-scale=1.0, minimum-scale=0.5, maximum-scale=2.0, user-scalable=yes">\n    <link rel="stylesheet" type="text/css" href="/css/main.css">\n</head>\n<body>\n    <div class="content">\n        <header class="header">\n        '
+-- line 12 "layout.tt2"
+i = i + 1 output[i] = context.process(context, 'nav.tt2')
+i = i + 1 output[i] = '\n        </header>\n\n        <main class="main_page">\n            '
+-- line 16 "layout.tt2"
+i = i + 1 output[i] = stash_get(stash, 'main_html')
+i = i + 1 output[i] = '\n        </main>\n    </div>\n\n    <div class="footer">\n    '
+-- line 21 "layout.tt2"
+i = i + 1 output[i] = context.process(context, 'footer.tt2')
+i = i + 1 output[i] = '\n    </div>\n\n</body>\n\n'
+-- line 26 "layout.tt2"
+i = i + 1 output[i] = context.process(context, 'analytics.tt2')
+i = i + 1 output[i] = '\n\n</html>\n'
+
+    return output
+end
+
+-- nav.tt2
+template_map['nav.tt2'] = function (context)
+    if not context then
+        return error("Lemplate function called without context\n")
+    end
+    local stash = context.stash
+    local output = {}
+    local i = 0
+
+i = i + 1 output[i] = '\n<div class="header_inner">\n<a href="https://openresty.org">\n    <img src="https://openresty.org/images/logo.png" width="64">\n</a>\n<nav class="logo_panel">\n<a href="/">\n    OPM\n</a>\n</nav>\n\n<form method="GET" action="/search" class="header_search">\n    <input type="text" placeholder="Search Packages ..." name="q" value="'
+-- line 13 "nav.tt2"
+i = i + 1 output[i] = stash_get(stash, 'query_words')
+i = i + 1 output[i] = '">\n</form>\n<nav class="nav_panel">\n    <a href="/docs">Docs </a>\n\n</nav>\n</div>\n'
+
+    return output
+end
+
+-- package_info.tt2
+template_map['package_info.tt2'] = function (context)
+    if not context then
+        return error("Lemplate function called without context\n")
+    end
+    local stash = context.stash
+    local output = {}
+    local i = 0
+
+i = i + 1 output[i] = '\n<div class="main_col">\n<div class="split_header">\n    <h2>'
+-- line 4 "package_info.tt2"
+
+-- FILTER
+local value
+do
+    local output = {}
+    local i = 0
+
+i = i + 1 output[i] = stash_get(stash, 'pkg_name')
+
+    value = context.filter(output, 'html', {})
+end
+i = i + 1 output[i] = value
+
+i = i + 1 output[i] = '\n    </h2>\n    <div class="description">\n        <p>\n        '
+-- line 8 "package_info.tt2"
+
+-- FILTER
+local value
+do
+    local output = {}
+    local i = 0
+
+i = i + 1 output[i] = stash_get(stash, {'pkg_info', 0, 'abstract', 0})
+
+    value = context.filter(output, 'html', {})
+end
+i = i + 1 output[i] = value
+
+i = i + 1 output[i] = '\n        </p>\n    </div>\n</div>\n\n<div class="metadata_columns">\n    <div class="metadata_columns_inner">\n        <div class="column">\n            <h3>Account</h3>'
+-- line 16 "package_info.tt2"
+i = i + 1 output[i] = stash_get(stash, 'account')
+i = i + 1 output[i] = '\n        </div>\n        <div class="column">\n            <h3>Repo</h3><a href="'
+-- line 19 "package_info.tt2"
+i = i + 1 output[i] = stash_get(stash, {'pkg_info', 0, 'repo_link', 0})
+i = i + 1 output[i] = '" target="_blank">'
+-- line 19 "package_info.tt2"
+i = i + 1 output[i] = stash_get(stash, {'pkg_info', 0, 'repo_link', 0})
+i = i + 1 output[i] = '</a>\n        </div>\n    </div>\n</div>\n\n<h3>License</h3>\n<div class="description">\n    <p>\n    '
+-- line 27 "package_info.tt2"
+
+-- FILTER
+local value
+do
+    local output = {}
+    local i = 0
+
+i = i + 1 output[i] = stash_get(stash, {'pkg_info', 0, 'licenses', 0})
+
+    value = context.filter(output, 'html', {})
+end
+i = i + 1 output[i] = value
+
+i = i + 1 output[i] = '\n    </p>\n</div>\n\n<h3>Authors</h3>\n<div class="description">\n    <p>\n    '
+-- line 34 "package_info.tt2"
+
+-- FILTER
+local value
+do
+    local output = {}
+    local i = 0
+
+i = i + 1 output[i] = stash_get(stash, {'pkg_info', 0, 'authors', 0})
+
+    value = context.filter(output, 'html', {})
+end
+i = i + 1 output[i] = value
+
+i = i + 1 output[i] = '\n    </p>\n</div>\n'
+-- line 45 "package_info.tt2"
+if tt2_true(stash_get(stash, {'pkg_info', 0, 'dep_info', 0})) then
+i = i + 1 output[i] = '\n<h3>Dependencies</h3>\n<div class="description">\n    <p>\n    '
+-- line 42 "package_info.tt2"
+i = i + 1 output[i] = stash_get(stash, {'pkg_info', 0, 'dep_info', 0})
+i = i + 1 output[i] = '\n    </p>\n</div>'
+end
+
+i = i + 1 output[i] = '\n\n<h3>Versions</h3>\n\n<section>\n'
+-- line 50 "package_info.tt2"
+i = i + 1 output[i] = context.process(context, 'package_list.tt2')
+i = i + 1 output[i] = '\n</section>\n</div>\n'
+
+    return output
+end
+
+-- package_list.tt2
+template_map['package_list.tt2'] = function (context)
+    if not context then
+        return error("Lemplate function called without context\n")
+    end
+    local stash = context.stash
+    local output = {}
+    local i = 0
+
+i = i + 1 output[i] = '\n<ul class="package_list">\n'
+-- line 47 "package_list.tt2"
 
 -- FOREACH
 do
-    local list = stash_get(stash, 'recent_uploads')
+    local list = stash_get(stash, 'packages')
     local iterator
     if list.list then
         iterator = list
@@ -305,34 +534,38 @@ do
         iterator.count = idx
         iterator.next = list[idx + 1]
         stash['row'] = value
-i = i + 1 output[i] = '\n    <tr>\n        '
--- line 26 "index.tt2"
+i = i + 1 output[i] = '\n<li class="package_row">\n\n    '
+-- line 7 "package_list.tt2"
 stash_set(stash, 'uploader', stash_get(stash, {'row', 0, 'uploader_name', 0}));
--- line 26 "index.tt2"
+-- line 7 "package_list.tt2"
 stash_set(stash, 'org', stash_get(stash, {'row', 0, 'org_name', 0}));
--- line 26 "index.tt2"
+-- line 7 "package_list.tt2"
 stash_set(stash, 'account', stash_get(stash, 'uploader'));
--- line 26 "index.tt2"
+-- line 7 "package_list.tt2"
 if tt2_true(stash_get(stash, 'org')) then
--- line 26 "index.tt2"
+-- line 7 "package_list.tt2"
 stash_set(stash, 'account', stash_get(stash, 'org'));
 end
 
-i = i + 1 output[i] = '\n        <td>'
--- line 39 "index.tt2"
-if tt2_true(stash_get(stash, {'row', 0, 'indexed', 0})) then
-i = i + 1 output[i] = '\n        <span class="indexed">Indexed</span>'
-elseif tt2_true(stash_get(stash, {'row', 0, 'failed', 0})) then
-i = i + 1 output[i] = '\n        <span class="failed">Failed</span>'
+i = i + 1 output[i] = '\n\n    <div class="main">'
+-- line 19 "package_list.tt2"
+if tt2_true(stash_get(stash, {'row', 0, 'raw_package_name', 0})) then
+i = i + 1 output[i] = '\n        <a href="/package/'
+-- line 16 "package_list.tt2"
+i = i + 1 output[i] = stash_get(stash, 'account') .. '/' .. stash_get(stash, {'row', 0, 'raw_package_name', 0})
+i = i + 1 output[i] = '/" class="title">'
 else
-i = i + 1 output[i] = '\n        <span class="pending">Pending</span>'
+i = i + 1 output[i] = '\n        <a href="/package/'
+-- line 18 "package_list.tt2"
+i = i + 1 output[i] = stash_get(stash, 'account') .. '/' .. stash_get(stash, {'row', 0, 'package_name', 0})
+i = i + 1 output[i] = '/" class="title">'
 end
 
-i = i + 1 output[i] = '\n        </td>\n\n        <td>\n            <a href="'
--- line 43 "index.tt2"
-i = i + 1 output[i] = stash_get(stash, {'row', 0, 'repo_link', 0})
-i = i + 1 output[i] = '">\n            '
--- line 44 "index.tt2"
+i = i + 1 output[i] = '\n\n            '
+-- line 21 "package_list.tt2"
+i = i + 1 output[i] = stash_get(stash, 'account') .. '/' .. stash_get(stash, {'row', 0, 'package_name', 0})
+i = i + 1 output[i] = '\n        </a>\n        <span class="version_name">\n            '
+-- line 24 "package_list.tt2"
 
 -- FILTER
 local value
@@ -340,14 +573,33 @@ do
     local output = {}
     local i = 0
 
-i = i + 1 output[i] = stash_get(stash, 'account') .. '/' .. stash_get(stash, {'row', 0, 'package_name', 0})
+i = i + 1 output[i] = stash_get(stash, {'row', 0, 'version_s', 0})
 
     value = context.filter(output, 'html', {})
 end
 i = i + 1 output[i] = value
 
-i = i + 1 output[i] = '\n            </a>\n        </td>\n        <td>v'
--- line 47 "index.tt2"
+i = i + 1 output[i] = '\n        </span>'
+-- line 32 "package_list.tt2"
+if tt2_true(stash_get(stash, {'row', 0, 'indexed', 0})) then
+i = i + 1 output[i] = '\n'
+elseif tt2_true(stash_get(stash, {'row', 0, 'failed', 0})) then
+i = i + 1 output[i] = '\n        <span class="failed">Failed</span>'
+else
+i = i + 1 output[i] = '\n        <span class="pending">Pending</span>'
+end
+
+i = i + 1 output[i] = '\n        <span class="author">\n            by \n            <a href="/uploader/'
+-- line 35 "package_list.tt2"
+i = i + 1 output[i] = stash_get(stash, 'uploader')
+i = i + 1 output[i] = '/">\n                '
+-- line 36 "package_list.tt2"
+i = i + 1 output[i] = stash_get(stash, 'uploader')
+i = i + 1 output[i] = '\n            </a>\n        </span>\n    </div>\n    <div class="summary">\n        '
+-- line 41 "package_list.tt2"
+i = i + 1 output[i] = stash_get(stash, {'row', 0, 'abstract', 0})
+i = i + 1 output[i] = '\n        <span class="updated_at">\n            '
+-- line 43 "package_list.tt2"
 
 -- FILTER
 local value
@@ -355,44 +607,72 @@ do
     local output = {}
     local i = 0
 
-i = i + 1 output[i] = stash_get(stash, {'row', 0, 'version_s', 0})
+i = i + 1 output[i] = stash_get(stash, {'row', 0, 'upload_updated_at', 0})
 
     value = context.filter(output, 'html', {})
 end
 i = i + 1 output[i] = value
 
-i = i + 1 output[i] = '</td>\n        <td>'
--- line 48 "index.tt2"
+i = i + 1 output[i] = '\n        </span>\n    </div>\n</li>'
+        iterator.first = false
+        iterator.prev = value
+    end
+    stash_set(stash, 'loop', oldloop)
+end
 
--- FILTER
-local value
-do
+i = i + 1 output[i] = '\n</ul>\n\n'
+-- line 50 "package_list.tt2"
+i = i + 1 output[i] = stash_get(stash, 'page_info')
+i = i + 1 output[i] = '\n'
+
+    return output
+end
+
+-- packages.tt2
+template_map['packages.tt2'] = function (context)
+    if not context then
+        return error("Lemplate function called without context\n")
+    end
+    local stash = context.stash
     local output = {}
     local i = 0
 
-i = i + 1 output[i] = stash_get(stash, {'row', 0, 'abstract', 0})
+i = i + 1 output[i] = '\n<div class="main_col">\n<div class="split_header">\n    <h2>Recent packages\n    <span class="right">\n      <a href="/uploads">Recent uploads</a>\n    </span>\n    </h2>\n</div>\n\n'
+-- line 11 "packages.tt2"
+i = i + 1 output[i] = context.process(context, 'package_list.tt2')
+i = i + 1 output[i] = '\n</div>\n'
 
-    value = context.filter(output, 'html', {})
+    return output
 end
-i = i + 1 output[i] = value
 
-i = i + 1 output[i] = '</td>\n        <td>\n            <a href="https://github.com/'
--- line 50 "index.tt2"
-
--- FILTER
-local value
-do
+-- search.tt2
+template_map['search.tt2'] = function (context)
+    if not context then
+        return error("Lemplate function called without context\n")
+    end
+    local stash = context.stash
     local output = {}
     local i = 0
 
-i = i + 1 output[i] = stash_get(stash, 'uploader')
+i = i + 1 output[i] = '\n<div class="main_col">\n<div class="split_header">\n    <h2>Search results</h2>\n</div>\n\n'
+-- line 7 "search.tt2"
+i = i + 1 output[i] = context.process(context, 'package_list.tt2')
+i = i + 1 output[i] = '\n</div>\n'
 
-    value = context.filter(output, 'html', {})
+    return output
 end
-i = i + 1 output[i] = value
 
-i = i + 1 output[i] = '/">\n                '
--- line 51 "index.tt2"
+-- uploader.tt2
+template_map['uploader.tt2'] = function (context)
+    if not context then
+        return error("Lemplate function called without context\n")
+    end
+    local stash = context.stash
+    local output = {}
+    local i = 0
+
+i = i + 1 output[i] = '\n<div class="main_col">\n<div class="split_header">\n    <h2>'
+-- line 4 "uploader.tt2"
 
 -- FILTER
 local value
@@ -400,14 +680,14 @@ do
     local output = {}
     local i = 0
 
-i = i + 1 output[i] = stash_get(stash, 'uploader')
+i = i + 1 output[i] = stash_get(stash, 'uploader_name')
 
     value = context.filter(output, 'html', {})
 end
 i = i + 1 output[i] = value
 
-i = i + 1 output[i] = '\n            </a>\n        </td>\n        <td>'
--- line 54 "index.tt2"
+i = i + 1 output[i] = '\n    </h2>\n    <span class="user_github">\n      <a href="https://github.com/'
+-- line 7 "uploader.tt2"
 
 -- FILTER
 local value
@@ -415,23 +695,56 @@ do
     local output = {}
     local i = 0
 
-i = i + 1 output[i] = stash_get(stash, {'row', 0, 'created_at', 0})
+i = i + 1 output[i] = stash_get(stash, 'uploader_name')
 
     value = context.filter(output, 'html', {})
 end
 i = i + 1 output[i] = value
 
-i = i + 1 output[i] = '</td>\n    </tr>'
-        iterator.first = false
-        iterator.prev = value
-    end
-    stash_set(stash, 'loop', oldloop)
+i = i + 1 output[i] = '/" target="_blank"><img src="/images/github.png" width="30" height="30" alt="GitHub"></a>\n    </span>\n</div>\n\n<div class="metadata_columns">\n    <div class="metadata_columns_inner">\n        <div class="column">\n            <h3>Packages</h3>'
+-- line 14 "uploader.tt2"
+i = i + 1 output[i] = stash_get(stash, 'packages_count')
+i = i + 1 output[i] = '\n        </div>'
+-- line 20 "uploader.tt2"
+if tt2_true(stash_get(stash, {'uploader', 0, 'public_email', 0})) then
+i = i + 1 output[i] = '\n        <div class="column">\n            <h3>Email</h3>'
+-- line 18 "uploader.tt2"
+i = i + 1 output[i] = stash_get(stash, {'uploader', 0, 'public_email', 0})
+i = i + 1 output[i] = '\n        </div>'
 end
 
-i = i + 1 output[i] = '\n    </tbody>\n    </table>\n</div>\n'
--- line 60 "index.tt2"
-i = i + 1 output[i] = context.process(context, 'footer.tt2')
-i = i + 1 output[i] = '\n</body>\n<script>\nvar ga_func = function () {\n    (function(i,s,o,g,r,a,m){i[\'GoogleAnalyticsObject\']=r;i[r]=i[r]||function(){\n        (i[r].q=i[r].q||[]).push(arguments)},i[r].l=1*new Date();a=s.createElement(o),\n    m=s.getElementsByTagName(o)[0];a.async=1;a.src=g;m.parentNode.insertBefore(a,m)\n    })(window,document,\'script\',\'https://www.google-analytics.com/analytics.js\',\'ga\');\n\n    ga(\'create\', \'UA-24724965-2\', \'auto\');\n    ga(\'send\', \'pageview\');\n}\nsetTimeout(ga_func, 0);\n</script>\n</html>\n'
+-- line 25 "uploader.tt2"
+if tt2_true(stash_get(stash, {'uploader', 0, 'blog', 0})) then
+i = i + 1 output[i] = '\n        <div class="column">\n            <h3>Blog</h3><a href="'
+-- line 23 "uploader.tt2"
+i = i + 1 output[i] = stash_get(stash, {'uploader', 0, 'blog', 0})
+i = i + 1 output[i] = '" target="_blank">'
+-- line 23 "uploader.tt2"
+i = i + 1 output[i] = stash_get(stash, {'uploader', 0, 'blog', 0})
+i = i + 1 output[i] = '</a>\n        </div>'
+end
+
+i = i + 1 output[i] = '\n    </div>\n</div>\n\n<h3>Packages</h3>\n\n<section>\n'
+-- line 32 "uploader.tt2"
+i = i + 1 output[i] = context.process(context, 'package_list.tt2')
+i = i + 1 output[i] = '\n</section>\n</div>\n'
+
+    return output
+end
+
+-- uploads.tt2
+template_map['uploads.tt2'] = function (context)
+    if not context then
+        return error("Lemplate function called without context\n")
+    end
+    local stash = context.stash
+    local output = {}
+    local i = 0
+
+i = i + 1 output[i] = '\n<div class="main_col">\n<div class="split_header">\n    <h2>Recent uploads</h2>\n    <span class="right">\n      <a href="/packages">Recent packages</a>\n    </span>\n</div>\n\n'
+-- line 10 "uploads.tt2"
+i = i + 1 output[i] = context.process(context, 'package_list.tt2')
+i = i + 1 output[i] = '\n</div>\n'
 
     return output
 end
diff --git a/web/lua/opmserver/utils.lua b/web/lua/opmserver/utils.lua
new file mode 100644
index 0000000..0e0ecb3
--- /dev/null
+++ b/web/lua/opmserver/utils.lua
@@ -0,0 +1,54 @@
+
+local _M = {}
+
+local ngx = ngx
+local re_gsub = ngx.re.gsub
+local io_open = io.open
+local type = type
+
+local HTML_ENTITIES = {
+    ["&"] = "&amp;",
+    ["<"] = "&lt;",
+    [">"] = "&gt;",
+    ['"'] = "&quot;",
+    ["'"] = "&#39;",
+}
+
+local CODE_ENTITIES = {
+    ["{"] = "&#123;",
+    ["}"] = "&#125;",
+    ["&"] = "&amp;",
+    ["<"] = "&lt;",
+    [">"] = "&gt;",
+    ['"'] = "&quot;",
+    ["'"] = "&#39;",
+}
+
+
+function _M.to_html(s, c)
+    if type(s) == "string" then
+        if c then
+            s = re_gsub(s, "[}{\"><'&]", CODE_ENTITIES, "jo")
+        else
+            s = re_gsub(s, "[\"><'&]", HTML_ENTITIES, "jo")
+        end
+    end
+
+    return s
+end
+
+
+function _M.read_file(path)
+    local fp, err = io_open(path)
+    if not fp then
+        return nil, err
+    end
+
+    local chunk = fp:read("*all")
+    fp:close()
+
+    return chunk
+end
+
+
+return _M
diff --git a/web/lua/opmserver/view.lua b/web/lua/opmserver/view.lua
new file mode 100644
index 0000000..73efc58
--- /dev/null
+++ b/web/lua/opmserver/view.lua
@@ -0,0 +1,17 @@
+local _M = {}
+
+local templates = require "opmserver.templates"
+
+local say = ngx.say
+
+function _M.show(tpl_name, context)
+    context = context or {}
+    tpl_name = tpl_name .. '.tt2'
+    local sub_tpl_html = templates.process(tpl_name, context)
+    context.main_html = sub_tpl_html
+
+    local html = templates.process('layout.tt2', context)
+    say(html)
+end
+
+return _M
diff --git a/web/templates/404.tt2 b/web/templates/404.tt2
new file mode 100644
index 0000000..42f2427
--- /dev/null
+++ b/web/templates/404.tt2
@@ -0,0 +1,4 @@
+
+<h2>
+404 not found!
+</h2>
diff --git a/web/templates/analytics.tt2 b/web/templates/analytics.tt2
new file mode 100644
index 0000000..ddc2d35
--- /dev/null
+++ b/web/templates/analytics.tt2
@@ -0,0 +1,13 @@
+
+<script>
+var ga_func = function () {
+    (function(i,s,o,g,r,a,m){i['GoogleAnalyticsObject']=r;i[r]=i[r]||function(){
+        (i[r].q=i[r].q||[]).push(arguments)},i[r].l=1*new Date();a=s.createElement(o),
+    m=s.getElementsByTagName(o)[0];a.async=1;a.src=g;m.parentNode.insertBefore(a,m)
+    })(window,document,'script','https://www.google-analytics.com/analytics.js','ga');
+
+    ga('create', 'UA-24724965-2', 'auto');
+    ga('send', 'pageview');
+}
+setTimeout(ga_func, 0);
+</script>
diff --git a/web/templates/docs.tt2 b/web/templates/docs.tt2
new file mode 100644
index 0000000..43cf5a8
--- /dev/null
+++ b/web/templates/docs.tt2
@@ -0,0 +1,8 @@
+
+<div class="main_col">
+<div class="split_header">
+    <h2>Docs</h2>
+</div>
+
+[% doc_html %]
+</div>
diff --git a/web/templates/error.tt2 b/web/templates/error.tt2
new file mode 100644
index 0000000..cd94840
--- /dev/null
+++ b/web/templates/error.tt2
@@ -0,0 +1,11 @@
+
+<div class="main_col">
+<div class="split_header">
+    <h2>Error</h2>
+</div>
+
+<div class="error_info">
+    [% error_info | html %]
+</div>
+
+</div>
diff --git a/web/templates/footer.tt2 b/web/templates/footer.tt2
index 4a82faf..c462a15 100644
--- a/web/templates/footer.tt2
+++ b/web/templates/footer.tt2
@@ -1,10 +1,5 @@
-<div class="content-footer">
-<!-- <hr class="footer-sep"/> -->
-<div class="footer">
-  <p>[% "Copyright © 2016, 2017, 2018 Yichun Zhang (agentzh)" %]</p>
-  <p>[% "100% Powered by OpenResty and PostgreSQL" %]
-     [% "(" %]<a href="https://github.com/openresty/opm/">
-     [% "view the source code of this site" %]</a>[% ")" %]</p>
-  <p>京ICP备16021991号</p>
-</div>
-</div>
+
+<p>[% "Copyright © 2016-2020 Yichun Zhang (agentzh)" %]</p>
+<p>[% "100% Powered by OpenResty and PostgreSQL" %]
+ [% "(" %]<a href="https://github.com/openresty/opm/">[% "view the source code of this site" %]</a>[% ")" %]</p>
+<p>京ICP备16021991号</p>
diff --git a/web/templates/index.tt2 b/web/templates/index.tt2
index 2d15b9e..58ba6ae 100644
--- a/web/templates/index.tt2
+++ b/web/templates/index.tt2
@@ -1,74 +1,27 @@
-<!DOCTYPE html>
-<html lang="en">
-<head>
-    <meta charset="utf-8">
-    <title>OPM - OpenResty Package Manager</title>
-    <meta name="viewport" content="width=device-width, initial-scale=1.0, minimum-scale=0.5, maximum-scale=2.0, user-scalable=yes">
-    <link rel="stylesheet" type="text/css" href="/css/main.css">
-</head>
-<body>
-<h1>
-    <span>
-    <a href="https://openresty.org"><img src="https://openresty.org/images/logo.png" width="64"></a>
-    </span>
-    OPM - OpenResty Package Manager</h1>
-<div>
-    <h2>How to Use</h2>
-    <p>Please read the <a href="https://github.com/openresty/opm#readme">opm documentation</a> for more details.</p>
-    <h2>Recent Uploads</h2>
-    <p>We already have [% total_uploads %] successful uploads
-       across [% package_count %] distinct package names from [% uploader_count %]
-       contributors. Come on, OPM authors!</p>
-    <table class="recent">
-    <tbody>
-    [%- FOREACH row IN recent_uploads %]
-    <tr>
-        [% uploader = row.uploader_name;
-           org = row.org_name;
-           account = uploader;
-           IF org;
-            account = org;
-           END %]
-        <td>
-        [%- IF row.indexed %]
-        <span class="indexed">Indexed</span>
-        [%- ELSIF row.failed %]
-        <span class="failed">Failed</span>
-        [%- ELSE %]
-        <span class="pending">Pending</span>
-        [%- END %]
-        </td>
 
-        <td>
-            <a href="[% row.repo_link %]">
-            [% account _ "/" _ row.package_name | html %]
-            </a>
-        </td>
-        <td>v[% row.version_s | html %]</td>
-        <td>[% row.abstract | html %]</td>
-        <td>
-            <a href="https://github.com/[% uploader | html %]/">
-                [% uploader | html %]
-            </a>
-        </td>
-        <td>[% row.created_at | html %]</td>
-    </tr>
-    [%- END %]
-    </tbody>
-    </table>
+<div class="intro_banner">
+    <div class="intro_banner_inner">
+        <div class="intro_text">
+        <p><b>opm</b> is the official OpenResty package manager, similar to Perl's CPAN and NodeJS's npm in rationale.</p>
+        <p>We provide both the opm client-side command-line utility and the server-side application for the central package repository.</p>
+        <p>Please read the <a href="/docs">opm documentation</a> for more details.</p>
+        <p>We already have <b>[% total_uploads %]</b> successful uploads across <b>[% package_count %]</b> distinct package names from <b>[% uploader_count %]</b> contributors. Come on, OPM authors!</p>
+        </div>
+    </div>
+</div>
+
+<div class="main_col">
+<div class="split_header">
+    <h2>Recent packages</h2>
+    <span class="header_sub">
+        (<a href="/packages">view all</a>)
+    </span>
+    <span class="right">
+        <a href="/uploads">Recent uploads</a>
+    </span>
 </div>
-[% PROCESS "footer.tt2" %]
-</body>
-<script>
-var ga_func = function () {
-    (function(i,s,o,g,r,a,m){i['GoogleAnalyticsObject']=r;i[r]=i[r]||function(){
-        (i[r].q=i[r].q||[]).push(arguments)},i[r].l=1*new Date();a=s.createElement(o),
-    m=s.getElementsByTagName(o)[0];a.async=1;a.src=g;m.parentNode.insertBefore(a,m)
-    })(window,document,'script','https://www.google-analytics.com/analytics.js','ga');
 
-    ga('create', 'UA-24724965-2', 'auto');
-    ga('send', 'pageview');
-}
-setTimeout(ga_func, 0);
-</script>
-</html>
+<section>
+[% PROCESS "package_list.tt2" %]
+</section>
+</div>
diff --git a/web/templates/layout.tt2 b/web/templates/layout.tt2
new file mode 100644
index 0000000..3bf3a7d
--- /dev/null
+++ b/web/templates/layout.tt2
@@ -0,0 +1,28 @@
+<!DOCTYPE html>
+<html lang="en">
+<head>
+    <meta charset="utf-8">
+    <title>OPM - OpenResty Package Manager</title>
+    <meta name="viewport" content="width=device-width, initial-scale=1.0, minimum-scale=0.5, maximum-scale=2.0, user-scalable=yes">
+    <link rel="stylesheet" type="text/css" href="/css/main.css">
+</head>
+<body>
+    <div class="content">
+        <header class="header">
+        [% PROCESS "nav.tt2" %]
+        </header>
+
+        <main class="main_page">
+            [% main_html %]
+        </main>
+    </div>
+
+    <div class="footer">
+    [% PROCESS "footer.tt2" %]
+    </div>
+
+</body>
+
+[% PROCESS "analytics.tt2" %]
+
+</html>
diff --git a/web/templates/nav.tt2 b/web/templates/nav.tt2
new file mode 100644
index 0000000..cfdbbb6
--- /dev/null
+++ b/web/templates/nav.tt2
@@ -0,0 +1,19 @@
+
+<div class="header_inner">
+<a href="https://openresty.org">
+    <img src="https://openresty.org/images/logo.png" width="64">
+</a>
+<nav class="logo_panel">
+<a href="/">
+    OPM
+</a>
+</nav>
+
+<form method="GET" action="/search" class="header_search">
+    <input type="text" placeholder="Search Packages ..." name="q" value="[% query_words %]">
+</form>
+<nav class="nav_panel">
+    <a href="/docs">Docs </a>
+
+</nav>
+</div>
diff --git a/web/templates/package_info.tt2 b/web/templates/package_info.tt2
new file mode 100644
index 0000000..4a33f06
--- /dev/null
+++ b/web/templates/package_info.tt2
@@ -0,0 +1,52 @@
+
+<div class="main_col">
+<div class="split_header">
+    <h2>[% pkg_name | html %]
+    </h2>
+    <div class="description">
+        <p>
+        [% pkg_info.abstract | html %]
+        </p>
+    </div>
+</div>
+
+<div class="metadata_columns">
+    <div class="metadata_columns_inner">
+        <div class="column">
+            <h3>Account</h3>[% account %]
+        </div>
+        <div class="column">
+            <h3>Repo</h3><a href="[% pkg_info.repo_link %]" target="_blank">[% pkg_info.repo_link %]</a>
+        </div>
+    </div>
+</div>
+
+<h3>License</h3>
+<div class="description">
+    <p>
+    [% pkg_info.licenses | html %]
+    </p>
+</div>
+
+<h3>Authors</h3>
+<div class="description">
+    <p>
+    [% pkg_info.authors | html %]
+    </p>
+</div>
+
+[%- IF pkg_info.dep_info %]
+<h3>Dependencies</h3>
+<div class="description">
+    <p>
+    [% pkg_info.dep_info %]
+    </p>
+</div>
+[%- END %]
+
+<h3>Versions</h3>
+
+<section>
+[% PROCESS "package_list.tt2" %]
+</section>
+</div>
diff --git a/web/templates/package_list.tt2 b/web/templates/package_list.tt2
new file mode 100644
index 0000000..1be2f19
--- /dev/null
+++ b/web/templates/package_list.tt2
@@ -0,0 +1,50 @@
+
+<ul class="package_list">
+
+[%- FOREACH row IN packages %]
+<li class="package_row">
+
+    [% uploader = row.uploader_name;
+       org = row.org_name;
+       account = uploader;
+       IF org;
+        account = org;
+       END %]
+
+    <div class="main">
+        [%- IF row.raw_package_name %]
+        <a href="/package/[% account _ "/" _ row.raw_package_name %]/" class="title">
+        [%- ELSE %]
+        <a href="/package/[% account _ "/" _ row.package_name %]/" class="title">
+        [%- END %]
+
+            [% account _ "/" _ row.package_name %]
+        </a>
+        <span class="version_name">
+            [% row.version_s | html %]
+        </span>
+        [%- IF row.indexed %]
+
+        [%- ELSIF row.failed %]
+        <span class="failed">Failed</span>
+        [%- ELSE %]
+        <span class="pending">Pending</span>
+        [%- END %]
+        <span class="author">
+            by 
+            <a href="/uploader/[% uploader %]/">
+                [% uploader %]
+            </a>
+        </span>
+    </div>
+    <div class="summary">
+        [% row.abstract %]
+        <span class="updated_at">
+            [% row.upload_updated_at | html %]
+        </span>
+    </div>
+</li>
+[%- END %]
+</ul>
+
+[% page_info %]
diff --git a/web/templates/packages.tt2 b/web/templates/packages.tt2
new file mode 100644
index 0000000..43d74dd
--- /dev/null
+++ b/web/templates/packages.tt2
@@ -0,0 +1,12 @@
+
+<div class="main_col">
+<div class="split_header">
+    <h2>Recent packages
+    <span class="right">
+      <a href="/uploads">Recent uploads</a>
+    </span>
+    </h2>
+</div>
+
+[% PROCESS "package_list.tt2" %]
+</div>
diff --git a/web/templates/search.tt2 b/web/templates/search.tt2
new file mode 100644
index 0000000..50cdc5c
--- /dev/null
+++ b/web/templates/search.tt2
@@ -0,0 +1,8 @@
+
+<div class="main_col">
+<div class="split_header">
+    <h2>Search results</h2>
+</div>
+
+[% PROCESS "package_list.tt2" %]
+</div>
diff --git a/web/templates/uploader.tt2 b/web/templates/uploader.tt2
new file mode 100644
index 0000000..a100c6d
--- /dev/null
+++ b/web/templates/uploader.tt2
@@ -0,0 +1,34 @@
+
+<div class="main_col">
+<div class="split_header">
+    <h2>[% uploader_name | html %]
+    </h2>
+    <span class="user_github">
+      <a href="https://github.com/[% uploader_name | html %]/" target="_blank"><img src="/images/github.png" width="30" height="30" alt="GitHub"></a>
+    </span>
+</div>
+
+<div class="metadata_columns">
+    <div class="metadata_columns_inner">
+        <div class="column">
+            <h3>Packages</h3>[% packages_count %]
+        </div>
+        [%- IF uploader.public_email %]
+        <div class="column">
+            <h3>Email</h3>[% uploader.public_email %]
+        </div>
+        [%- END %]
+        [%- IF uploader.blog %]
+        <div class="column">
+            <h3>Blog</h3><a href="[% uploader.blog %]" target="_blank">[% uploader.blog %]</a>
+        </div>
+        [%- END %]
+    </div>
+</div>
+
+<h3>Packages</h3>
+
+<section>
+[% PROCESS "package_list.tt2" %]
+</section>
+</div>
diff --git a/web/templates/uploads.tt2 b/web/templates/uploads.tt2
new file mode 100644
index 0000000..e9f5a40
--- /dev/null
+++ b/web/templates/uploads.tt2
@@ -0,0 +1,11 @@
+
+<div class="main_col">
+<div class="split_header">
+    <h2>Recent uploads</h2>
+    <span class="right">
+      <a href="/packages">Recent packages</a>
+    </span>
+</div>
+
+[% PROCESS "package_list.tt2" %]
+</div>
------ diff log end --------
** Summary: check here https://github.com/openresty/opm
===================== END opm =================================
New Commit	: LuaJIT: 34 commits since 'v2.1-20200102'
------ diff log --------
commit 31116c4d25c4283a52b2d87fed50101cf20f5b77
Merge: 2763a421 322db020
Author: Yichun Zhang (agentzh) <yichun@openresty.com>
Date:   Sun May 10 21:53:37 2020 -0700

    Merge branch 'v2.1' into v2.1-agentzh

commit 322db0208160169cbfcd6cc2f93d5e0dfcb2081e
Author: Mike Pall <mike>
Date:   Fri May 8 14:00:19 2020 +0200

    Remove unused file.

diff --git a/src/vm_ppcspe.dasc b/src/vm_ppcspe.dasc
deleted file mode 100644
index 5542f8a2..00000000
--- a/src/vm_ppcspe.dasc
+++ /dev/null
@@ -1,3691 +0,0 @@
-|// Low-level VM code for PowerPC/e500 CPUs.
-|// Bytecode interpreter, fast functions and helper functions.
-|// Copyright (C) 2005-2020 Mike Pall. See Copyright Notice in luajit.h
-|
-|.arch ppc
-|.section code_op, code_sub
-|
-|.actionlist build_actionlist
-|.globals GLOB_
-|.globalnames globnames
-|.externnames extnames
-|
-|// Note: The ragged indentation of the instructions is intentional.
-|//       The starting columns indicate data dependencies.
-|
-|//-----------------------------------------------------------------------
-|
-|// Fixed register assignments for the interpreter.
-|// Don't use: r1 = sp, r2 and r13 = reserved and/or small data area ptr
-|
-|// The following must be C callee-save (but BASE is often refetched).
-|.define BASE,		r14	// Base of current Lua stack frame.
-|.define KBASE,		r15	// Constants of current Lua function.
-|.define PC,		r16	// Next PC.
-|.define DISPATCH,	r17	// Opcode dispatch table.
-|.define LREG,		r18	// Register holding lua_State (also in SAVE_L).
-|.define MULTRES,	r19	// Size of multi-result: (nresults+1)*8.
-|
-|// Constants for vectorized type-comparisons (hi+low GPR). C callee-save.
-|.define TISNUM,	r22
-|.define TISSTR,	r23
-|.define TISTAB,	r24
-|.define TISFUNC,	r25
-|.define TISNIL,	r26
-|.define TOBIT,		r27
-|.define ZERO,		TOBIT	// Zero in lo word.
-|
-|// The following temporaries are not saved across C calls, except for RA.
-|.define RA,		r20	// Callee-save.
-|.define RB,		r10
-|.define RC,		r11
-|.define RD,		r12
-|.define INS,		r7	// Overlaps CARG5.
-|
-|.define TMP0,		r0
-|.define TMP1,		r8
-|.define TMP2,		r9
-|.define TMP3,		r6	// Overlaps CARG4.
-|
-|// Saved temporaries.
-|.define SAVE0,		r21
-|
-|// Calling conventions.
-|.define CARG1,		r3
-|.define CARG2,		r4
-|.define CARG3,		r5
-|.define CARG4,		r6	// Overlaps TMP3.
-|.define CARG5,		r7	// Overlaps INS.
-|
-|.define CRET1,		r3
-|.define CRET2,		r4
-|
-|// Stack layout while in interpreter. Must match with lj_frame.h.
-|.define SAVE_LR,	188(sp)
-|.define CFRAME_SPACE,	184	// Delta for sp.
-|// Back chain for sp:	184(sp)	<-- sp entering interpreter
-|.define SAVE_r31,	176(sp)	// 64 bit register saves.
-|.define SAVE_r30,	168(sp)
-|.define SAVE_r29,	160(sp)
-|.define SAVE_r28,	152(sp)
-|.define SAVE_r27,	144(sp)
-|.define SAVE_r26,	136(sp)
-|.define SAVE_r25,	128(sp)
-|.define SAVE_r24,	120(sp)
-|.define SAVE_r23,	112(sp)
-|.define SAVE_r22,	104(sp)
-|.define SAVE_r21,	96(sp)
-|.define SAVE_r20,	88(sp)
-|.define SAVE_r19,	80(sp)
-|.define SAVE_r18,	72(sp)
-|.define SAVE_r17,	64(sp)
-|.define SAVE_r16,	56(sp)
-|.define SAVE_r15,	48(sp)
-|.define SAVE_r14,	40(sp)
-|.define SAVE_CR,	36(sp)
-|.define UNUSED1,	32(sp)
-|.define SAVE_ERRF,	28(sp)	// 32 bit C frame info.
-|.define SAVE_NRES,	24(sp)
-|.define SAVE_CFRAME,	20(sp)
-|.define SAVE_L,	16(sp)
-|.define SAVE_PC,	12(sp)
-|.define SAVE_MULTRES,	8(sp)
-|// Next frame lr:	4(sp)
-|// Back chain for sp:	0(sp)	<-- sp while in interpreter
-|
-|.macro save_, reg; evstdd reg, SAVE_..reg; .endmacro
-|.macro rest_, reg; evldd reg, SAVE_..reg; .endmacro
-|
-|.macro saveregs
-|  stwu sp, -CFRAME_SPACE(sp)
-|  save_ r14; save_ r15; save_ r16; save_ r17; save_ r18; save_ r19
-|  mflr r0; mfcr r12
-|  save_ r20; save_ r21; save_ r22; save_ r23; save_ r24; save_ r25
-|  stw  r0, SAVE_LR; stw r12, SAVE_CR
-|  save_ r26; save_ r27; save_ r28; save_ r29; save_ r30; save_ r31
-|.endmacro
-|
-|.macro restoreregs
-|  lwz r0, SAVE_LR; lwz r12, SAVE_CR
-|  rest_ r14; rest_ r15; rest_ r16; rest_ r17; rest_ r18; rest_ r19
-|  mtlr r0; mtcrf 0x38, r12
-|  rest_ r20; rest_ r21; rest_ r22; rest_ r23; rest_ r24; rest_ r25
-|  rest_ r26; rest_ r27; rest_ r28; rest_ r29; rest_ r30; rest_ r31
-|  addi sp, sp, CFRAME_SPACE
-|.endmacro
-|
-|// Type definitions. Some of these are only used for documentation.
-|.type L,		lua_State,	LREG
-|.type GL,		global_State
-|.type TVALUE,		TValue
-|.type GCOBJ,		GCobj
-|.type STR,		GCstr
-|.type TAB,		GCtab
-|.type LFUNC,		GCfuncL
-|.type CFUNC,		GCfuncC
-|.type PROTO,		GCproto
-|.type UPVAL,		GCupval
-|.type NODE,		Node
-|.type NARGS8,		int
-|.type TRACE,		GCtrace
-|
-|//-----------------------------------------------------------------------
-|
-|// These basic macros should really be part of DynASM.
-|.macro srwi, rx, ry, n; rlwinm rx, ry, 32-n, n, 31; .endmacro
-|.macro slwi, rx, ry, n; rlwinm rx, ry, n, 0, 31-n; .endmacro
-|.macro rotlwi, rx, ry, n; rlwinm rx, ry, n, 0, 31; .endmacro
-|.macro rotlw, rx, ry, rn; rlwnm rx, ry, rn, 0, 31; .endmacro
-|.macro subi, rx, ry, i; addi rx, ry, -i; .endmacro
-|
-|// Trap for not-yet-implemented parts.
-|.macro NYI; tw 4, sp, sp; .endmacro
-|
-|//-----------------------------------------------------------------------
-|
-|// Access to frame relative to BASE.
-|.define FRAME_PC,	-8
-|.define FRAME_FUNC,	-4
-|
-|// Instruction decode.
-|.macro decode_OP4, dst, ins; rlwinm dst, ins, 2, 22, 29; .endmacro
-|.macro decode_RA8, dst, ins; rlwinm dst, ins, 27, 21, 28; .endmacro
-|.macro decode_RB8, dst, ins; rlwinm dst, ins, 11, 21, 28; .endmacro
-|.macro decode_RC8, dst, ins; rlwinm dst, ins, 19, 21, 28; .endmacro
-|.macro decode_RD8, dst, ins; rlwinm dst, ins, 19, 13, 28; .endmacro
-|
-|.macro decode_OP1, dst, ins; rlwinm dst, ins, 0, 24, 31; .endmacro
-|.macro decode_RD4, dst, ins; rlwinm dst, ins, 18, 14, 29; .endmacro
-|
-|// Instruction fetch.
-|.macro ins_NEXT1
-|  lwz INS, 0(PC)
-|   addi PC, PC, 4
-|.endmacro
-|// Instruction decode+dispatch.
-|.macro ins_NEXT2
-|  decode_OP4 TMP1, INS
-|   decode_RB8 RB, INS
-|   decode_RD8 RD, INS
-|  lwzx TMP0, DISPATCH, TMP1
-|   decode_RA8 RA, INS
-|   decode_RC8 RC, INS
-|  mtctr TMP0
-|  bctr
-|.endmacro
-|.macro ins_NEXT
-|  ins_NEXT1
-|  ins_NEXT2
-|.endmacro
-|
-|// Instruction footer.
-|.if 1
-|  // Replicated dispatch. Less unpredictable branches, but higher I-Cache use.
-|  .define ins_next, ins_NEXT
-|  .define ins_next_, ins_NEXT
-|  .define ins_next1, ins_NEXT1
-|  .define ins_next2, ins_NEXT2
-|.else
-|  // Common dispatch. Lower I-Cache use, only one (very) unpredictable branch.
-|  // Affects only certain kinds of benchmarks (and only with -j off).
-|  .macro ins_next
-|    b ->ins_next
-|  .endmacro
-|  .macro ins_next1
-|  .endmacro
-|  .macro ins_next2
-|    b ->ins_next
-|  .endmacro
-|  .macro ins_next_
-|  ->ins_next:
-|    ins_NEXT
-|  .endmacro
-|.endif
-|
-|// Call decode and dispatch.
-|.macro ins_callt
-|  // BASE = new base, RB = LFUNC/CFUNC, RC = nargs*8, FRAME_PC(BASE) = PC
-|  lwz PC, LFUNC:RB->pc
-|  lwz INS, 0(PC)
-|   addi PC, PC, 4
-|  decode_OP4 TMP1, INS
-|   decode_RA8 RA, INS
-|  lwzx TMP0, DISPATCH, TMP1
-|   add RA, RA, BASE
-|  mtctr TMP0
-|  bctr
-|.endmacro
-|
-|.macro ins_call
-|  // BASE = new base, RB = LFUNC/CFUNC, RC = nargs*8, PC = caller PC
-|  stw PC, FRAME_PC(BASE)
-|  ins_callt
-|.endmacro
-|
-|//-----------------------------------------------------------------------
-|
-|// Macros to test operand types.
-|.macro checknum, reg; evcmpltu reg, TISNUM; .endmacro
-|.macro checkstr, reg; evcmpeq reg, TISSTR; .endmacro
-|.macro checktab, reg; evcmpeq reg, TISTAB; .endmacro
-|.macro checkfunc, reg; evcmpeq reg, TISFUNC; .endmacro
-|.macro checknil, reg; evcmpeq reg, TISNIL; .endmacro
-|.macro checkok, label; blt label; .endmacro
-|.macro checkfail, label; bge label; .endmacro
-|.macro checkanyfail, label; bns label; .endmacro
-|.macro checkallok, label; bso label; .endmacro
-|
-|.macro branch_RD
-|  srwi TMP0, RD, 1
-|  add PC, PC, TMP0
-|  addis PC, PC, -(BCBIAS_J*4 >> 16)
-|.endmacro
-|
-|// Assumes DISPATCH is relative to GL.
-#define DISPATCH_GL(field)	(GG_DISP2G + (int)offsetof(global_State, field))
-#define DISPATCH_J(field)	(GG_DISP2J + (int)offsetof(jit_State, field))
-|
-#define PC2PROTO(field)  ((int)offsetof(GCproto, field)-(int)sizeof(GCproto))
-|
-|.macro hotloop
-|  NYI
-|.endmacro
-|
-|.macro hotcall
-|  NYI
-|.endmacro
-|
-|// Set current VM state. Uses TMP0.
-|.macro li_vmstate, st; li TMP0, ~LJ_VMST_..st; .endmacro
-|.macro st_vmstate; stw TMP0, DISPATCH_GL(vmstate)(DISPATCH); .endmacro
-|
-|// Move table write barrier back. Overwrites mark and tmp.
-|.macro barrierback, tab, mark, tmp
-|  lwz tmp, DISPATCH_GL(gc.grayagain)(DISPATCH)
-|  // Assumes LJ_GC_BLACK is 0x04.
-|   rlwinm mark, mark, 0, 30, 28		// black2gray(tab)
-|  stw tab, DISPATCH_GL(gc.grayagain)(DISPATCH)
-|   stb mark, tab->marked
-|  stw tmp, tab->gclist
-|.endmacro
-|
-|//-----------------------------------------------------------------------
-
-/* Generate subroutines used by opcodes and other parts of the VM. */
-/* The .code_sub section should be last to help static branch prediction. */
-static void build_subroutines(BuildCtx *ctx)
-{
-  |.code_sub
-  |
-  |//-----------------------------------------------------------------------
-  |//-- Return handling ----------------------------------------------------
-  |//-----------------------------------------------------------------------
-  |
-  |->vm_returnp:
-  |  // See vm_return. Also: TMP2 = previous base.
-  |  andi. TMP0, PC, FRAME_P
-  |   evsplati TMP1, LJ_TTRUE
-  |  beq ->cont_dispatch
-  |
-  |  // Return from pcall or xpcall fast func.
-  |  lwz PC, FRAME_PC(TMP2)		// Fetch PC of previous frame.
-  |  mr BASE, TMP2			// Restore caller base.
-  |  // Prepending may overwrite the pcall frame, so do it at the end.
-  |   stwu TMP1, FRAME_PC(RA)		// Prepend true to results.
-  |
-  |->vm_returnc:
-  |  addi RD, RD, 8			// RD = (nresults+1)*8.
-  |   andi. TMP0, PC, FRAME_TYPE
-  |  cmpwi cr1, RD, 0
-  |  li CRET1, LUA_YIELD
-  |  beq cr1, ->vm_unwind_c_eh
-  |  mr MULTRES, RD
-  |   beq ->BC_RET_Z			// Handle regular return to Lua.
-  |
-  |->vm_return:
-  |  // BASE = base, RA = resultptr, RD/MULTRES = (nresults+1)*8, PC = return
-  |  // TMP0 = PC & FRAME_TYPE
-  |  cmpwi TMP0, FRAME_C
-  |   rlwinm TMP2, PC, 0, 0, 28
-  |    li_vmstate C
-  |   sub TMP2, BASE, TMP2		// TMP2 = previous base.
-  |  bne ->vm_returnp
-  |
-  |  addic. TMP1, RD, -8
-  |   stw TMP2, L->base
-  |   lwz TMP2, SAVE_NRES
-  |    subi BASE, BASE, 8
-  |    st_vmstate
-  |   slwi TMP2, TMP2, 3
-  |  beq >2
-  |1:
-  |  addic. TMP1, TMP1, -8
-  |   evldd TMP0, 0(RA)
-  |    addi RA, RA, 8
-  |   evstdd TMP0, 0(BASE)
-  |    addi BASE, BASE, 8
-  |  bne <1
-  |
-  |2:
-  |  cmpw TMP2, RD			// More/less results wanted?
-  |  bne >6
-  |3:
-  |  stw BASE, L->top			// Store new top.
-  |
-  |->vm_leave_cp:
-  |  lwz TMP0, SAVE_CFRAME		// Restore previous C frame.
-  |   li CRET1, 0			// Ok return status for vm_pcall.
-  |  stw TMP0, L->cframe
-  |
-  |->vm_leave_unw:
-  |  restoreregs
-  |  blr
-  |
-  |6:
-  |  ble >7				// Less results wanted?
-  |  // More results wanted. Check stack size and fill up results with nil.
-  |  lwz TMP1, L->maxstack
-  |  cmplw BASE, TMP1
-  |  bge >8
-  |  evstdd TISNIL, 0(BASE)
-  |  addi RD, RD, 8
-  |  addi BASE, BASE, 8
-  |  b <2
-  |
-  |7:  // Less results wanted.
-  |   sub TMP0, RD, TMP2
-  |  cmpwi TMP2, 0			// LUA_MULTRET+1 case?
-  |   sub TMP0, BASE, TMP0		// Subtract the difference.
-  |  iseleq BASE, BASE, TMP0		// Either keep top or shrink it.
-  |  b <3
-  |
-  |8:  // Corner case: need to grow stack for filling up results.
-  |  // This can happen if:
-  |  // - A C function grows the stack (a lot).
-  |  // - The GC shrinks the stack in between.
-  |  // - A return back from a lua_call() with (high) nresults adjustment.
-  |  stw BASE, L->top			// Save current top held in BASE (yes).
-  |   mr SAVE0, RD
-  |  mr CARG2, TMP2
-  |  mr CARG1, L
-  |  bl extern lj_state_growstack	// (lua_State *L, int n)
-  |    lwz TMP2, SAVE_NRES
-  |   mr RD, SAVE0
-  |    slwi TMP2, TMP2, 3
-  |  lwz BASE, L->top			// Need the (realloced) L->top in BASE.
-  |  b <2
-  |
-  |->vm_unwind_c:			// Unwind C stack, return from vm_pcall.
-  |  // (void *cframe, int errcode)
-  |  mr sp, CARG1
-  |  mr CRET1, CARG2
-  |->vm_unwind_c_eh:			// Landing pad for external unwinder.
-  |  lwz L, SAVE_L
-  |   li TMP0, ~LJ_VMST_C
-  |  lwz GL:TMP1, L->glref
-  |   stw TMP0, GL:TMP1->vmstate
-  |  b ->vm_leave_unw
-  |
-  |->vm_unwind_ff:			// Unwind C stack, return from ff pcall.
-  |  // (void *cframe)
-  |  rlwinm sp, CARG1, 0, 0, 29
-  |->vm_unwind_ff_eh:			// Landing pad for external unwinder.
-  |  lwz L, SAVE_L
-  |     evsplati TISNUM, LJ_TISNUM+1	// Setup type comparison constants.
-  |     evsplati TISFUNC, LJ_TFUNC
-  |     lus TOBIT, 0x4338
-  |     evsplati TISTAB, LJ_TTAB
-  |     li TMP0, 0
-  |  lwz BASE, L->base
-  |     evmergelo TOBIT, TOBIT, TMP0
-  |   lwz DISPATCH, L->glref		// Setup pointer to dispatch table.
-  |     evsplati TISSTR, LJ_TSTR
-  |  li TMP1, LJ_TFALSE
-  |     evsplati TISNIL, LJ_TNIL
-  |    li_vmstate INTERP
-  |  lwz PC, FRAME_PC(BASE)		// Fetch PC of previous frame.
-  |  la RA, -8(BASE)			// Results start at BASE-8.
-  |   addi DISPATCH, DISPATCH, GG_G2DISP
-  |  stw TMP1, 0(RA)			// Prepend false to error message.
-  |  li RD, 16				// 2 results: false + error message.
-  |    st_vmstate
-  |  b ->vm_returnc
-  |
-  |//-----------------------------------------------------------------------
-  |//-- Grow stack for calls -----------------------------------------------
-  |//-----------------------------------------------------------------------
-  |
-  |->vm_growstack_c:			// Grow stack for C function.
-  |  li CARG2, LUA_MINSTACK
-  |  b >2
-  |
-  |->vm_growstack_l:			// Grow stack for Lua function.
-  |  // BASE = new base, RA = BASE+framesize*8, RC = nargs*8, PC = first PC
-  |  add RC, BASE, RC
-  |   sub RA, RA, BASE
-  |  stw BASE, L->base
-  |   addi PC, PC, 4			// Must point after first instruction.
-  |  stw RC, L->top
-  |   srwi CARG2, RA, 3
-  |2:
-  |  // L->base = new base, L->top = top
-  |   stw PC, SAVE_PC
-  |  mr CARG1, L
-  |  bl extern lj_state_growstack	// (lua_State *L, int n)
-  |  lwz BASE, L->base
-  |  lwz RC, L->top
-  |  lwz LFUNC:RB, FRAME_FUNC(BASE)
-  |  sub RC, RC, BASE
-  |  // BASE = new base, RB = LFUNC/CFUNC, RC = nargs*8, FRAME_PC(BASE) = PC
-  |  ins_callt				// Just retry the call.
-  |
-  |//-----------------------------------------------------------------------
-  |//-- Entry points into the assembler VM ---------------------------------
-  |//-----------------------------------------------------------------------
-  |
-  |->vm_resume:				// Setup C frame and resume thread.
-  |  // (lua_State *L, TValue *base, int nres1 = 0, ptrdiff_t ef = 0)
-  |  saveregs
-  |  mr L, CARG1
-  |    lwz DISPATCH, L->glref		// Setup pointer to dispatch table.
-  |  mr BASE, CARG2
-  |    lbz TMP1, L->status
-  |   stw L, SAVE_L
-  |  li PC, FRAME_CP
-  |  addi TMP0, sp, CFRAME_RESUME
-  |    addi DISPATCH, DISPATCH, GG_G2DISP
-  |   stw CARG3, SAVE_NRES
-  |    cmplwi TMP1, 0
-  |   stw CARG3, SAVE_ERRF
-  |  stw TMP0, L->cframe
-  |   stw CARG3, SAVE_CFRAME
-  |   stw CARG1, SAVE_PC		// Any value outside of bytecode is ok.
-  |    beq >3
-  |
-  |  // Resume after yield (like a return).
-  |  mr RA, BASE
-  |   lwz BASE, L->base
-  |    evsplati TISNUM, LJ_TISNUM+1	// Setup type comparison constants.
-  |   lwz TMP1, L->top
-  |    evsplati TISFUNC, LJ_TFUNC
-  |    lus TOBIT, 0x4338
-  |    evsplati TISTAB, LJ_TTAB
-  |  lwz PC, FRAME_PC(BASE)
-  |    li TMP2, 0
-  |    evsplati TISSTR, LJ_TSTR
-  |   sub RD, TMP1, BASE
-  |    evmergelo TOBIT, TOBIT, TMP2
-  |    stb CARG3, L->status
-  |  andi. TMP0, PC, FRAME_TYPE
-  |    li_vmstate INTERP
-  |   addi RD, RD, 8
-  |    evsplati TISNIL, LJ_TNIL
-  |   mr MULTRES, RD
-  |    st_vmstate
-  |  beq ->BC_RET_Z
-  |  b ->vm_return
-  |
-  |->vm_pcall:				// Setup protected C frame and enter VM.
-  |  // (lua_State *L, TValue *base, int nres1, ptrdiff_t ef)
-  |  saveregs
-  |  li PC, FRAME_CP
-  |  stw CARG4, SAVE_ERRF
-  |  b >1
-  |
-  |->vm_call:				// Setup C frame and enter VM.
-  |  // (lua_State *L, TValue *base, int nres1)
-  |  saveregs
-  |  li PC, FRAME_C
-  |
-  |1:  // Entry point for vm_pcall above (PC = ftype).
-  |  lwz TMP1, L:CARG1->cframe
-  |   stw CARG3, SAVE_NRES
-  |    mr L, CARG1
-  |   stw CARG1, SAVE_L
-  |    mr BASE, CARG2
-  |  stw sp, L->cframe			// Add our C frame to cframe chain.
-  |    lwz DISPATCH, L->glref		// Setup pointer to dispatch table.
-  |   stw CARG1, SAVE_PC		// Any value outside of bytecode is ok.
-  |  stw TMP1, SAVE_CFRAME
-  |    addi DISPATCH, DISPATCH, GG_G2DISP
-  |
-  |3:  // Entry point for vm_cpcall/vm_resume (BASE = base, PC = ftype).
-  |  lwz TMP2, L->base			// TMP2 = old base (used in vmeta_call).
-  |    evsplati TISNUM, LJ_TISNUM+1	// Setup type comparison constants.
-  |   lwz TMP1, L->top
-  |    evsplati TISFUNC, LJ_TFUNC
-  |  add PC, PC, BASE
-  |    evsplati TISTAB, LJ_TTAB
-  |    lus TOBIT, 0x4338
-  |    li TMP0, 0
-  |  sub PC, PC, TMP2			// PC = frame delta + frame type
-  |    evsplati TISSTR, LJ_TSTR
-  |   sub NARGS8:RC, TMP1, BASE
-  |    evmergelo TOBIT, TOBIT, TMP0
-  |    li_vmstate INTERP
-  |    evsplati TISNIL, LJ_TNIL
-  |    st_vmstate
-  |
-  |->vm_call_dispatch:
-  |  // TMP2 = old base, BASE = new base, RC = nargs*8, PC = caller PC
-  |  li TMP0, -8
-  |  evlddx LFUNC:RB, BASE, TMP0
-  |  checkfunc LFUNC:RB
-  |  checkfail ->vmeta_call
-  |
-  |->vm_call_dispatch_f:
-  |  ins_call
-  |  // BASE = new base, RB = func, RC = nargs*8, PC = caller PC
-  |
-  |->vm_cpcall:				// Setup protected C frame, call C.
-  |  // (lua_State *L, lua_CFunction func, void *ud, lua_CPFunction cp)
-  |  saveregs
-  |  mr L, CARG1
-  |   lwz TMP0, L:CARG1->stack
-  |  stw CARG1, SAVE_L
-  |   lwz TMP1, L->top
-  |  stw CARG1, SAVE_PC			// Any value outside of bytecode is ok.
-  |   sub TMP0, TMP0, TMP1		// Compute -savestack(L, L->top).
-  |    lwz TMP1, L->cframe
-  |    stw sp, L->cframe		// Add our C frame to cframe chain.
-  |  li TMP2, 0
-  |   stw TMP0, SAVE_NRES		// Neg. delta means cframe w/o frame.
-  |  stw TMP2, SAVE_ERRF		// No error function.
-  |    stw TMP1, SAVE_CFRAME
-  |  mtctr CARG4
-  |  bctrl			// (lua_State *L, lua_CFunction func, void *ud)
-  |  mr. BASE, CRET1
-  |   lwz DISPATCH, L->glref		// Setup pointer to dispatch table.
-  |    li PC, FRAME_CP
-  |   addi DISPATCH, DISPATCH, GG_G2DISP
-  |  bne <3				// Else continue with the call.
-  |  b ->vm_leave_cp			// No base? Just remove C frame.
-  |
-  |//-----------------------------------------------------------------------
-  |//-- Metamethod handling ------------------------------------------------
-  |//-----------------------------------------------------------------------
-  |
-  |// The lj_meta_* functions (except for lj_meta_cat) don't reallocate the
-  |// stack, so BASE doesn't need to be reloaded across these calls.
-  |
-  |//-- Continuation dispatch ----------------------------------------------
-  |
-  |->cont_dispatch:
-  |  // BASE = meta base, RA = resultptr, RD = (nresults+1)*8
-  |  lwz TMP0, -12(BASE)		// Continuation.
-  |   mr RB, BASE
-  |   mr BASE, TMP2			// Restore caller BASE.
-  |    lwz LFUNC:TMP1, FRAME_FUNC(TMP2)
-  |  cmplwi TMP0, 0
-  |     lwz PC, -16(RB)			// Restore PC from [cont|PC].
-  |  beq >1
-  |   subi TMP2, RD, 8
-  |    lwz TMP1, LFUNC:TMP1->pc
-  |   evstddx TISNIL, RA, TMP2		// Ensure one valid arg.
-  |    lwz KBASE, PC2PROTO(k)(TMP1)
-  |  // BASE = base, RA = resultptr, RB = meta base
-  |  mtctr TMP0
-  |  bctr				// Jump to continuation.
-  |
-  |1:  // Tail call from C function.
-  |  subi TMP1, RB, 16
-  |  sub RC, TMP1, BASE
-  |  b ->vm_call_tail
-  |
-  |->cont_cat:				// RA = resultptr, RB = meta base
-  |  lwz INS, -4(PC)
-  |   subi CARG2, RB, 16
-  |  decode_RB8 SAVE0, INS
-  |   evldd TMP0, 0(RA)
-  |  add TMP1, BASE, SAVE0
-  |   stw BASE, L->base
-  |  cmplw TMP1, CARG2
-  |   sub CARG3, CARG2, TMP1
-  |  decode_RA8 RA, INS
-  |   evstdd TMP0, 0(CARG2)
-  |  bne ->BC_CAT_Z
-  |   evstddx TMP0, BASE, RA
-  |  b ->cont_nop
-  |
-  |//-- Table indexing metamethods -----------------------------------------
-  |
-  |->vmeta_tgets1:
-  |  evmergelo STR:RC, TISSTR, STR:RC
-  |  la CARG3, DISPATCH_GL(tmptv)(DISPATCH)
-  |   decode_RB8 RB, INS
-  |  evstdd STR:RC, 0(CARG3)
-  |   add CARG2, BASE, RB
-  |  b >1
-  |
-  |->vmeta_tgets:
-  |  evmergelo TAB:RB, TISTAB, TAB:RB
-  |  la CARG2, DISPATCH_GL(tmptv)(DISPATCH)
-  |   evmergelo STR:RC, TISSTR, STR:RC
-  |  evstdd TAB:RB, 0(CARG2)
-  |   la CARG3, DISPATCH_GL(tmptv2)(DISPATCH)
-  |   evstdd STR:RC, 0(CARG3)
-  |  b >1
-  |
-  |->vmeta_tgetb:			// TMP0 = index
-  |  efdcfsi TMP0, TMP0
-  |   decode_RB8 RB, INS
-  |  la CARG3, DISPATCH_GL(tmptv)(DISPATCH)
-  |   add CARG2, BASE, RB
-  |  evstdd TMP0, 0(CARG3)
-  |  b >1
-  |
-  |->vmeta_tgetv:
-  |  decode_RB8 RB, INS
-  |   decode_RC8 RC, INS
-  |  add CARG2, BASE, RB
-  |   add CARG3, BASE, RC
-  |1:
-  |  stw BASE, L->base
-  |  mr CARG1, L
-  |  stw PC, SAVE_PC
-  |  bl extern lj_meta_tget		// (lua_State *L, TValue *o, TValue *k)
-  |  // Returns TValue * (finished) or NULL (metamethod).
-  |  cmplwi CRET1, 0
-  |  beq >3
-  |  evldd TMP0, 0(CRET1)
-  |  evstddx TMP0, BASE, RA
-  |  ins_next
-  |
-  |3:  // Call __index metamethod.
-  |  // BASE = base, L->top = new base, stack = cont/func/t/k
-  |  subfic TMP1, BASE, FRAME_CONT
-  |  lwz BASE, L->top
-  |  stw PC, -16(BASE)			// [cont|PC]
-  |   add PC, TMP1, BASE
-  |  lwz LFUNC:RB, FRAME_FUNC(BASE)	// Guaranteed to be a function here.
-  |   li NARGS8:RC, 16			// 2 args for func(t, k).
-  |  b ->vm_call_dispatch_f
-  |
-  |//-----------------------------------------------------------------------
-  |
-  |->vmeta_tsets1:
-  |  evmergelo STR:RC, TISSTR, STR:RC
-  |  la CARG3, DISPATCH_GL(tmptv)(DISPATCH)
-  |   decode_RB8 RB, INS
-  |  evstdd STR:RC, 0(CARG3)
-  |   add CARG2, BASE, RB
-  |  b >1
-  |
-  |->vmeta_tsets:
-  |  evmergelo TAB:RB, TISTAB, TAB:RB
-  |  la CARG2, DISPATCH_GL(tmptv)(DISPATCH)
-  |   evmergelo STR:RC, TISSTR, STR:RC
-  |  evstdd TAB:RB, 0(CARG2)
-  |   la CARG3, DISPATCH_GL(tmptv2)(DISPATCH)
-  |   evstdd STR:RC, 0(CARG3)
-  |  b >1
-  |
-  |->vmeta_tsetb:			// TMP0 = index
-  |  efdcfsi TMP0, TMP0
-  |   decode_RB8 RB, INS
-  |  la CARG3, DISPATCH_GL(tmptv)(DISPATCH)
-  |   add CARG2, BASE, RB
-  |  evstdd TMP0, 0(CARG3)
-  |  b >1
-  |
-  |->vmeta_tsetv:
-  |  decode_RB8 RB, INS
-  |   decode_RC8 RC, INS
-  |  add CARG2, BASE, RB
-  |   add CARG3, BASE, RC
-  |1:
-  |  stw BASE, L->base
-  |  mr CARG1, L
-  |  stw PC, SAVE_PC
-  |  bl extern lj_meta_tset		// (lua_State *L, TValue *o, TValue *k)
-  |  // Returns TValue * (finished) or NULL (metamethod).
-  |  cmplwi CRET1, 0
-  |   evlddx TMP0, BASE, RA
-  |  beq >3
-  |  // NOBARRIER: lj_meta_tset ensures the table is not black.
-  |   evstdd TMP0, 0(CRET1)
-  |  ins_next
-  |
-  |3:  // Call __newindex metamethod.
-  |  // BASE = base, L->top = new base, stack = cont/func/t/k/(v)
-  |  subfic TMP1, BASE, FRAME_CONT
-  |  lwz BASE, L->top
-  |  stw PC, -16(BASE)			// [cont|PC]
-  |   add PC, TMP1, BASE
-  |  lwz LFUNC:RB, FRAME_FUNC(BASE)	// Guaranteed to be a function here.
-  |   li NARGS8:RC, 24			// 3 args for func(t, k, v)
-  |  evstdd TMP0, 16(BASE)		// Copy value to third argument.
-  |  b ->vm_call_dispatch_f
-  |
-  |//-- Comparison metamethods ---------------------------------------------
-  |
-  |->vmeta_comp:
-  |  mr CARG1, L
-  |   subi PC, PC, 4
-  |  add CARG2, BASE, RA
-  |   stw PC, SAVE_PC
-  |  add CARG3, BASE, RD
-  |   stw BASE, L->base
-  |  decode_OP1 CARG4, INS
-  |  bl extern lj_meta_comp  // (lua_State *L, TValue *o1, *o2, int op)
-  |  // Returns 0/1 or TValue * (metamethod).
-  |3:
-  |  cmplwi CRET1, 1
-  |  bgt ->vmeta_binop
-  |4:
-  |  lwz INS, 0(PC)
-  |   addi PC, PC, 4
-  |  decode_RD4 TMP2, INS
-  |  addis TMP3, PC, -(BCBIAS_J*4 >> 16)
-  |  add TMP2, TMP2, TMP3
-  |  isellt PC, PC, TMP2
-  |->cont_nop:
-  |  ins_next
-  |
-  |->cont_ra:				// RA = resultptr
-  |  lwz INS, -4(PC)
-  |   evldd TMP0, 0(RA)
-  |  decode_RA8 TMP1, INS
-  |   evstddx TMP0, BASE, TMP1
-  |  b ->cont_nop
-  |
-  |->cont_condt:			// RA = resultptr
-  |  lwz TMP0, 0(RA)
-  |   li TMP1, LJ_TTRUE
-  |  cmplw TMP1, TMP0			// Branch if result is true.
-  |  b <4
-  |
-  |->cont_condf:			// RA = resultptr
-  |  lwz TMP0, 0(RA)
-  |   li TMP1, LJ_TFALSE
-  |  cmplw TMP0, TMP1			// Branch if result is false.
-  |  b <4
-  |
-  |->vmeta_equal:
-  |  // CARG2, CARG3, CARG4 are already set by BC_ISEQV/BC_ISNEV.
-  |  subi PC, PC, 4
-  |   stw BASE, L->base
-  |  mr CARG1, L
-  |   stw PC, SAVE_PC
-  |  bl extern lj_meta_equal  // (lua_State *L, GCobj *o1, *o2, int ne)
-  |  // Returns 0/1 or TValue * (metamethod).
-  |  b <3
-  |
-  |//-- Arithmetic metamethods ---------------------------------------------
-  |
-  |->vmeta_arith_vn:
-  |  add CARG3, BASE, RB
-  |  add CARG4, KBASE, RC
-  |  b >1
-  |
-  |->vmeta_arith_nv:
-  |  add CARG3, KBASE, RC
-  |  add CARG4, BASE, RB
-  |  b >1
-  |
-  |->vmeta_unm:
-  |  add CARG3, BASE, RD
-  |  mr CARG4, CARG3
-  |  b >1
-  |
-  |->vmeta_arith_vv:
-  |  add CARG3, BASE, RB
-  |  add CARG4, BASE, RC
-  |1:
-  |  add CARG2, BASE, RA
-  |   stw BASE, L->base
-  |  mr CARG1, L
-  |   stw PC, SAVE_PC
-  |  decode_OP1 CARG5, INS		// Caveat: CARG5 overlaps INS.
-  |  bl extern lj_meta_arith  // (lua_State *L, TValue *ra,*rb,*rc, BCReg op)
-  |  // Returns NULL (finished) or TValue * (metamethod).
-  |  cmplwi CRET1, 0
-  |  beq ->cont_nop
-  |
-  |  // Call metamethod for binary op.
-  |->vmeta_binop:
-  |  // BASE = old base, CRET1 = new base, stack = cont/func/o1/o2
-  |  sub TMP1, CRET1, BASE
-  |   stw PC, -16(CRET1)		// [cont|PC]
-  |   mr TMP2, BASE
-  |  addi PC, TMP1, FRAME_CONT
-  |   mr BASE, CRET1
-  |  li NARGS8:RC, 16			// 2 args for func(o1, o2).
-  |  b ->vm_call_dispatch
-  |
-  |->vmeta_len:
-#if LJ_52
-  |  mr SAVE0, CARG1
-#endif
-  |  add CARG2, BASE, RD
-  |   stw BASE, L->base
-  |  mr CARG1, L
-  |   stw PC, SAVE_PC
-  |  bl extern lj_meta_len		// (lua_State *L, TValue *o)
-  |  // Returns NULL (retry) or TValue * (metamethod base).
-#if LJ_52
-  |  cmplwi CRET1, 0
-  |  bne ->vmeta_binop			// Binop call for compatibility.
-  |  mr CARG1, SAVE0
-  |  b ->BC_LEN_Z
-#else
-  |  b ->vmeta_binop			// Binop call for compatibility.
-#endif
-  |
-  |//-- Call metamethod ----------------------------------------------------
-  |
-  |->vmeta_call:			// Resolve and call __call metamethod.
-  |  // TMP2 = old base, BASE = new base, RC = nargs*8
-  |  mr CARG1, L
-  |   stw TMP2, L->base			// This is the callers base!
-  |  subi CARG2, BASE, 8
-  |   stw PC, SAVE_PC
-  |  add CARG3, BASE, RC
-  |   mr SAVE0, NARGS8:RC
-  |  bl extern lj_meta_call	// (lua_State *L, TValue *func, TValue *top)
-  |  lwz LFUNC:RB, FRAME_FUNC(BASE)	// Guaranteed to be a function here.
-  |   addi NARGS8:RC, SAVE0, 8		// Got one more argument now.
-  |  ins_call
-  |
-  |->vmeta_callt:			// Resolve __call for BC_CALLT.
-  |  // BASE = old base, RA = new base, RC = nargs*8
-  |  mr CARG1, L
-  |   stw BASE, L->base
-  |  subi CARG2, RA, 8
-  |   stw PC, SAVE_PC
-  |  add CARG3, RA, RC
-  |   mr SAVE0, NARGS8:RC
-  |  bl extern lj_meta_call	// (lua_State *L, TValue *func, TValue *top)
-  |  lwz TMP1, FRAME_PC(BASE)
-  |   addi NARGS8:RC, SAVE0, 8		// Got one more argument now.
-  |   lwz LFUNC:RB, FRAME_FUNC(RA)	// Guaranteed to be a function here.
-  |  b ->BC_CALLT_Z
-  |
-  |//-- Argument coercion for 'for' statement ------------------------------
-  |
-  |->vmeta_for:
-  |  mr CARG1, L
-  |   stw BASE, L->base
-  |  mr CARG2, RA
-  |   stw PC, SAVE_PC
-  |  mr SAVE0, INS
-  |  bl extern lj_meta_for	// (lua_State *L, TValue *base)
-  |.if JIT
-  |   decode_OP1 TMP0, SAVE0
-  |.endif
-  |  decode_RA8 RA, SAVE0
-  |.if JIT
-  |   cmpwi TMP0, BC_JFORI
-  |.endif
-  |  decode_RD8 RD, SAVE0
-  |.if JIT
-  |   beq =>BC_JFORI
-  |.endif
-  |  b =>BC_FORI
-  |
-  |//-----------------------------------------------------------------------
-  |//-- Fast functions -----------------------------------------------------
-  |//-----------------------------------------------------------------------
-  |
-  |.macro .ffunc, name
-  |->ff_ .. name:
-  |.endmacro
-  |
-  |.macro .ffunc_1, name
-  |->ff_ .. name:
-  |  cmplwi NARGS8:RC, 8
-  |   evldd CARG1, 0(BASE)
-  |  blt ->fff_fallback
-  |.endmacro
-  |
-  |.macro .ffunc_2, name
-  |->ff_ .. name:
-  |  cmplwi NARGS8:RC, 16
-  |   evldd CARG1, 0(BASE)
-  |   evldd CARG2, 8(BASE)
-  |  blt ->fff_fallback
-  |.endmacro
-  |
-  |.macro .ffunc_n, name
-  |  .ffunc_1 name
-  |  checknum CARG1
-  |  checkfail ->fff_fallback
-  |.endmacro
-  |
-  |.macro .ffunc_nn, name
-  |  .ffunc_2 name
-  |  evmergehi TMP0, CARG1, CARG2
-  |  checknum TMP0
-  |  checkanyfail ->fff_fallback
-  |.endmacro
-  |
-  |// Inlined GC threshold check. Caveat: uses TMP0 and TMP1.
-  |.macro ffgccheck
-  |  lwz TMP0, DISPATCH_GL(gc.total)(DISPATCH)
-  |  lwz TMP1, DISPATCH_GL(gc.threshold)(DISPATCH)
-  |  cmplw TMP0, TMP1
-  |  bgel ->fff_gcstep
-  |.endmacro
-  |
-  |//-- Base library: checks -----------------------------------------------
-  |
-  |.ffunc assert
-  |  cmplwi NARGS8:RC, 8
-  |   evldd TMP0, 0(BASE)
-  |  blt ->fff_fallback
-  |  evaddw TMP1, TISNIL, TISNIL	// Synthesize LJ_TFALSE.
-  |  la RA, -8(BASE)
-  |   evcmpltu cr1, TMP0, TMP1
-  |    lwz PC, FRAME_PC(BASE)
-  |  bge cr1, ->fff_fallback
-  |   evstdd TMP0, 0(RA)
-  |  addi RD, NARGS8:RC, 8		// Compute (nresults+1)*8.
-  |   beq ->fff_res			// Done if exactly 1 argument.
-  |  li TMP1, 8
-  |  subi RC, RC, 8
-  |1:
-  |  cmplw TMP1, RC
-  |   evlddx TMP0, BASE, TMP1
-  |   evstddx TMP0, RA, TMP1
-  |    addi TMP1, TMP1, 8
-  |  bne <1
-  |  b ->fff_res
-  |
-  |.ffunc type
-  |  cmplwi NARGS8:RC, 8
-  |   lwz CARG1, 0(BASE)
-  |  blt ->fff_fallback
-  |    li TMP2, ~LJ_TNUMX
-  |  cmplw CARG1, TISNUM
-  |  not TMP1, CARG1
-  |  isellt TMP1, TMP2, TMP1
-  |  slwi TMP1, TMP1, 3
-  |   la TMP2, CFUNC:RB->upvalue
-  |  evlddx STR:CRET1, TMP2, TMP1
-  |  b ->fff_restv
-  |
-  |//-- Base library: getters and setters ---------------------------------
-  |
-  |.ffunc_1 getmetatable
-  |  checktab CARG1
-  |   evmergehi TMP1, CARG1, CARG1
-  |  checkfail >6
-  |1:  // Field metatable must be at same offset for GCtab and GCudata!
-  |  lwz TAB:RB, TAB:CARG1->metatable
-  |2:
-  |  evmr CRET1, TISNIL
-  |   cmplwi TAB:RB, 0
-  |  lwz STR:RC, DISPATCH_GL(gcroot[GCROOT_MMNAME+MM_metatable])(DISPATCH)
-  |   beq ->fff_restv
-  |  lwz TMP0, TAB:RB->hmask
-  |   evmergelo CRET1, TISTAB, TAB:RB	// Use metatable as default result.
-  |  lwz TMP1, STR:RC->hash
-  |  lwz NODE:TMP2, TAB:RB->node
-  |   evmergelo STR:RC, TISSTR, STR:RC
-  |  and TMP1, TMP1, TMP0		// idx = str->hash & tab->hmask
-  |  slwi TMP0, TMP1, 5
-  |  slwi TMP1, TMP1, 3
-  |  sub TMP1, TMP0, TMP1
-  |  add NODE:TMP2, NODE:TMP2, TMP1	// node = tab->node + (idx*32-idx*8)
-  |3:  // Rearranged logic, because we expect _not_ to find the key.
-  |  evldd TMP0, NODE:TMP2->key
-  |   evldd TMP1, NODE:TMP2->val
-  |  evcmpeq TMP0, STR:RC
-  |   lwz NODE:TMP2, NODE:TMP2->next
-  |  checkallok >5
-  |   cmplwi NODE:TMP2, 0
-  |   beq ->fff_restv			// Not found, keep default result.
-  |   b <3
-  |5:
-  |  checknil TMP1
-  |  checkok ->fff_restv		// Ditto for nil value.
-  |  evmr CRET1, TMP1			// Return value of mt.__metatable.
-  |  b ->fff_restv
-  |
-  |6:
-  |  cmpwi TMP1, LJ_TUDATA
-  |   not TMP1, TMP1
-  |  beq <1
-  |  checknum CARG1
-  |   slwi TMP1, TMP1, 2
-  |   li TMP2, 4*~LJ_TNUMX
-  |  isellt TMP1, TMP2, TMP1
-  |   la TMP2, DISPATCH_GL(gcroot[GCROOT_BASEMT])(DISPATCH)
-  |  lwzx TAB:RB, TMP2, TMP1
-  |  b <2
-  |
-  |.ffunc_2 setmetatable
-  |  // Fast path: no mt for table yet and not clearing the mt.
-  |  evmergehi TMP0, TAB:CARG1, TAB:CARG2
-  |  checktab TMP0
-  |  checkanyfail ->fff_fallback
-  |  lwz TAB:TMP1, TAB:CARG1->metatable
-  |  cmplwi TAB:TMP1, 0
-  |   lbz TMP3, TAB:CARG1->marked
-  |  bne ->fff_fallback
-  |   andi. TMP0, TMP3, LJ_GC_BLACK	// isblack(table)
-  |    stw TAB:CARG2, TAB:CARG1->metatable
-  |   beq ->fff_restv
-  |  barrierback TAB:CARG1, TMP3, TMP0
-  |  b ->fff_restv
-  |
-  |.ffunc rawget
-  |  cmplwi NARGS8:RC, 16
-  |   evldd CARG2, 0(BASE)
-  |  blt ->fff_fallback
-  |  checktab CARG2
-  |   la CARG3, 8(BASE)
-  |  checkfail ->fff_fallback
-  |   mr CARG1, L
-  |  bl extern lj_tab_get  // (lua_State *L, GCtab *t, cTValue *key)
-  |  // Returns cTValue *.
-  |  evldd CRET1, 0(CRET1)
-  |  b ->fff_restv
-  |
-  |//-- Base library: conversions ------------------------------------------
-  |
-  |.ffunc tonumber
-  |  // Only handles the number case inline (without a base argument).
-  |  cmplwi NARGS8:RC, 8
-  |   evldd CARG1, 0(BASE)
-  |  bne ->fff_fallback			// Exactly one argument.
-  |  checknum CARG1
-  |  checkok ->fff_restv
-  |  b ->fff_fallback
-  |
-  |.ffunc_1 tostring
-  |  // Only handles the string or number case inline.
-  |  checkstr CARG1
-  |  // A __tostring method in the string base metatable is ignored.
-  |  checkok ->fff_restv		// String key?
-  |  // Handle numbers inline, unless a number base metatable is present.
-  |  lwz TMP0, DISPATCH_GL(gcroot[GCROOT_BASEMT_NUM])(DISPATCH)
-  |  checknum CARG1
-  |  cmplwi cr1, TMP0, 0
-  |   stw BASE, L->base			// Add frame since C call can throw.
-  |  crand 4*cr0+eq, 4*cr0+lt, 4*cr1+eq
-  |   stw PC, SAVE_PC			// Redundant (but a defined value).
-  |  bne ->fff_fallback
-  |  ffgccheck
-  |  mr CARG1, L
-  |  mr CARG2, BASE
-  |  bl extern lj_str_fromnum		// (lua_State *L, lua_Number *np)
-  |  // Returns GCstr *.
-  |  evmergelo STR:CRET1, TISSTR, STR:CRET1
-  |  b ->fff_restv
-  |
-  |//-- Base library: iterators -------------------------------------------
-  |
-  |.ffunc next
-  |  cmplwi NARGS8:RC, 8
-  |   evldd CARG2, 0(BASE)
-  |  blt ->fff_fallback
-  |   evstddx TISNIL, BASE, NARGS8:RC	// Set missing 2nd arg to nil.
-  |  checktab TAB:CARG2
-  |   lwz PC, FRAME_PC(BASE)
-  |  checkfail ->fff_fallback
-  |   stw BASE, L->base			// Add frame since C call can throw.
-  |  mr CARG1, L
-  |   stw BASE, L->top			// Dummy frame length is ok.
-  |  la CARG3, 8(BASE)
-  |   stw PC, SAVE_PC
-  |  bl extern lj_tab_next	// (lua_State *L, GCtab *t, TValue *key)
-  |  // Returns 0 at end of traversal.
-  |  cmplwi CRET1, 0
-  |   evmr CRET1, TISNIL
-  |  beq ->fff_restv			// End of traversal: return nil.
-  |  evldd TMP0, 8(BASE)		// Copy key and value to results.
-  |   la RA, -8(BASE)
-  |  evldd TMP1, 16(BASE)
-  |  evstdd TMP0, 0(RA)
-  |   li RD, (2+1)*8
-  |  evstdd TMP1, 8(RA)
-  |  b ->fff_res
-  |
-  |.ffunc_1 pairs
-  |  checktab TAB:CARG1
-  |   lwz PC, FRAME_PC(BASE)
-  |  checkfail ->fff_fallback
-#if LJ_52
-  |   lwz TAB:TMP2, TAB:CARG1->metatable
-  |  evldd CFUNC:TMP0, CFUNC:RB->upvalue[0]
-  |   cmplwi TAB:TMP2, 0
-  |  la RA, -8(BASE)
-  |   bne ->fff_fallback
-#else
-  |  evldd CFUNC:TMP0, CFUNC:RB->upvalue[0]
-  |  la RA, -8(BASE)
-#endif
-  |   evstdd TISNIL, 8(BASE)
-  |  li RD, (3+1)*8
-  |  evstdd CFUNC:TMP0, 0(RA)
-  |  b ->fff_res
-  |
-  |.ffunc_2 ipairs_aux
-  |  checktab TAB:CARG1
-  |   lwz PC, FRAME_PC(BASE)
-  |  checkfail ->fff_fallback
-  |  checknum CARG2
-  |    lus TMP3, 0x3ff0
-  |  checkfail ->fff_fallback
-  |  efdctsi TMP2, CARG2
-  |   lwz TMP0, TAB:CARG1->asize
-  |    evmergelo TMP3, TMP3, ZERO
-  |   lwz TMP1, TAB:CARG1->array
-  |  efdadd CARG2, CARG2, TMP3
-  |  addi TMP2, TMP2, 1
-  |   la RA, -8(BASE)
-  |  cmplw TMP0, TMP2
-  |   slwi TMP3, TMP2, 3
-  |  evstdd CARG2, 0(RA)
-  |  ble >2				// Not in array part?
-  |  evlddx TMP1, TMP1, TMP3
-  |1:
-  |  checknil TMP1
-  |   li RD, (0+1)*8
-  |  checkok ->fff_res			// End of iteration, return 0 results.
-  |   li RD, (2+1)*8
-  |  evstdd TMP1, 8(RA)
-  |  b ->fff_res
-  |2:  // Check for empty hash part first. Otherwise call C function.
-  |  lwz TMP0, TAB:CARG1->hmask
-  |  cmplwi TMP0, 0
-  |   li RD, (0+1)*8
-  |  beq ->fff_res
-  |   mr CARG2, TMP2
-  |  bl extern lj_tab_getinth		// (GCtab *t, int32_t key)
-  |  // Returns cTValue * or NULL.
-  |  cmplwi CRET1, 0
-  |   li RD, (0+1)*8
-  |  beq ->fff_res
-  |  evldd TMP1, 0(CRET1)
-  |  b <1
-  |
-  |.ffunc_1 ipairs
-  |  checktab TAB:CARG1
-  |   lwz PC, FRAME_PC(BASE)
-  |  checkfail ->fff_fallback
-#if LJ_52
-  |   lwz TAB:TMP2, TAB:CARG1->metatable
-  |  evldd CFUNC:TMP0, CFUNC:RB->upvalue[0]
-  |   cmplwi TAB:TMP2, 0
-  |  la RA, -8(BASE)
-  |   bne ->fff_fallback
-#else
-  |  evldd CFUNC:TMP0, CFUNC:RB->upvalue[0]
-  |  la RA, -8(BASE)
-#endif
-  |    evsplati TMP1, 0
-  |  li RD, (3+1)*8
-  |    evstdd TMP1, 8(BASE)
-  |  evstdd CFUNC:TMP0, 0(RA)
-  |  b ->fff_res
-  |
-  |//-- Base library: catch errors ----------------------------------------
-  |
-  |.ffunc pcall
-  |  cmplwi NARGS8:RC, 8
-  |   lbz TMP3, DISPATCH_GL(hookmask)(DISPATCH)
-  |  blt ->fff_fallback
-  |   mr TMP2, BASE
-  |   la BASE, 8(BASE)
-  |  // Remember active hook before pcall.
-  |  rlwinm TMP3, TMP3, 32-HOOK_ACTIVE_SHIFT, 31, 31
-  |   subi NARGS8:RC, NARGS8:RC, 8
-  |  addi PC, TMP3, 8+FRAME_PCALL
-  |  b ->vm_call_dispatch
-  |
-  |.ffunc_2 xpcall
-  |  lbz TMP3, DISPATCH_GL(hookmask)(DISPATCH)
-  |   mr TMP2, BASE
-  |  checkfunc CARG2			// Traceback must be a function.
-  |  checkfail ->fff_fallback
-  |   la BASE, 16(BASE)
-  |  // Remember active hook before pcall.
-  |  rlwinm TMP3, TMP3, 32-HOOK_ACTIVE_SHIFT, 31, 31
-  |   evstdd CARG2, 0(TMP2)		// Swap function and traceback.
-  |  subi NARGS8:RC, NARGS8:RC, 16
-  |   evstdd CARG1, 8(TMP2)
-  |  addi PC, TMP3, 16+FRAME_PCALL
-  |  b ->vm_call_dispatch
-  |
-  |//-- Coroutine library --------------------------------------------------
-  |
-  |.macro coroutine_resume_wrap, resume
-  |.if resume
-  |.ffunc_1 coroutine_resume
-  |  evmergehi TMP0, L:CARG1, L:CARG1
-  |.else
-  |.ffunc coroutine_wrap_aux
-  |  lwz L:CARG1, CFUNC:RB->upvalue[0].gcr
-  |.endif
-  |.if resume
-  |  cmpwi TMP0, LJ_TTHREAD
-  |  bne ->fff_fallback
-  |.endif
-  |  lbz TMP0, L:CARG1->status
-  |   lwz TMP1, L:CARG1->cframe
-  |    lwz CARG2, L:CARG1->top
-  |  cmplwi cr0, TMP0, LUA_YIELD
-  |    lwz TMP2, L:CARG1->base
-  |   cmplwi cr1, TMP1, 0
-  |   lwz TMP0, L:CARG1->maxstack
-  |    cmplw cr7, CARG2, TMP2
-  |   lwz PC, FRAME_PC(BASE)
-  |  crorc 4*cr6+lt, 4*cr0+gt, 4*cr1+eq		// st>LUA_YIELD || cframe!=0
-  |   add TMP2, CARG2, NARGS8:RC
-  |  crandc 4*cr6+gt, 4*cr7+eq, 4*cr0+eq	// base==top && st!=LUA_YIELD
-  |   cmplw cr1, TMP2, TMP0
-  |  cror 4*cr6+lt, 4*cr6+lt, 4*cr6+gt
-  |   stw PC, SAVE_PC
-  |  cror 4*cr6+lt, 4*cr6+lt, 4*cr1+gt		// cond1 || cond2 || stackov
-  |   stw BASE, L->base
-  |  blt cr6, ->fff_fallback
-  |1:
-  |.if resume
-  |  addi BASE, BASE, 8			// Keep resumed thread in stack for GC.
-  |  subi NARGS8:RC, NARGS8:RC, 8
-  |  subi TMP2, TMP2, 8
-  |.endif
-  |  stw TMP2, L:CARG1->top
-  |  li TMP1, 0
-  |  stw BASE, L->top
-  |2:  // Move args to coroutine.
-  |  cmpw TMP1, NARGS8:RC
-  |   evlddx TMP0, BASE, TMP1
-  |  beq >3
-  |   evstddx TMP0, CARG2, TMP1
-  |  addi TMP1, TMP1, 8
-  |  b <2
-  |3:
-  |  li CARG3, 0
-  |   mr L:SAVE0, L:CARG1
-  |  li CARG4, 0
-  |  bl ->vm_resume			// (lua_State *L, TValue *base, 0, 0)
-  |  // Returns thread status.
-  |4:
-  |  lwz TMP2, L:SAVE0->base
-  |   cmplwi CRET1, LUA_YIELD
-  |  lwz TMP3, L:SAVE0->top
-  |    li_vmstate INTERP
-  |  lwz BASE, L->base
-  |    st_vmstate
-  |   bgt >8
-  |  sub RD, TMP3, TMP2
-  |   lwz TMP0, L->maxstack
-  |  cmplwi RD, 0
-  |   add TMP1, BASE, RD
-  |  beq >6				// No results?
-  |  cmplw TMP1, TMP0
-  |   li TMP1, 0
-  |  bgt >9				// Need to grow stack?
-  |
-  |  subi TMP3, RD, 8
-  |   stw TMP2, L:SAVE0->top		// Clear coroutine stack.
-  |5:  // Move results from coroutine.
-  |  cmplw TMP1, TMP3
-  |   evlddx TMP0, TMP2, TMP1
-  |   evstddx TMP0, BASE, TMP1
-  |    addi TMP1, TMP1, 8
-  |  bne <5
-  |6:
-  |  andi. TMP0, PC, FRAME_TYPE
-  |.if resume
-  |  li TMP1, LJ_TTRUE
-  |   la RA, -8(BASE)
-  |  stw TMP1, -8(BASE)			// Prepend true to results.
-  |  addi RD, RD, 16
-  |.else
-  |  mr RA, BASE
-  |  addi RD, RD, 8
-  |.endif
-  |7:
-  |    stw PC, SAVE_PC
-  |   mr MULTRES, RD
-  |  beq ->BC_RET_Z
-  |  b ->vm_return
-  |
-  |8:  // Coroutine returned with error (at co->top-1).
-  |.if resume
-  |  andi. TMP0, PC, FRAME_TYPE
-  |  la TMP3, -8(TMP3)
-  |   li TMP1, LJ_TFALSE
-  |  evldd TMP0, 0(TMP3)
-  |   stw TMP3, L:SAVE0->top		// Remove error from coroutine stack.
-  |    li RD, (2+1)*8
-  |   stw TMP1, -8(BASE)		// Prepend false to results.
-  |    la RA, -8(BASE)
-  |  evstdd TMP0, 0(BASE)		// Copy error message.
-  |  b <7
-  |.else
-  |  mr CARG1, L
-  |  mr CARG2, L:SAVE0
-  |  bl extern lj_ffh_coroutine_wrap_err  // (lua_State *L, lua_State *co)
-  |.endif
-  |
-  |9:  // Handle stack expansion on return from yield.
-  |  mr CARG1, L
-  |  srwi CARG2, RD, 3
-  |  bl extern lj_state_growstack	// (lua_State *L, int n)
-  |  li CRET1, 0
-  |  b <4
-  |.endmacro
-  |
-  |  coroutine_resume_wrap 1		// coroutine.resume
-  |  coroutine_resume_wrap 0		// coroutine.wrap
-  |
-  |.ffunc coroutine_yield
-  |  lwz TMP0, L->cframe
-  |   add TMP1, BASE, NARGS8:RC
-  |   stw BASE, L->base
-  |  andi. TMP0, TMP0, CFRAME_RESUME
-  |   stw TMP1, L->top
-  |    li CRET1, LUA_YIELD
-  |  beq ->fff_fallback
-  |   stw ZERO, L->cframe
-  |    stb CRET1, L->status
-  |  b ->vm_leave_unw
-  |
-  |//-- Math library -------------------------------------------------------
-  |
-  |.ffunc_n math_abs
-  |  efdabs CRET1, CARG1
-  |  // Fallthrough.
-  |
-  |->fff_restv:
-  |  // CRET1 = TValue result.
-  |  lwz PC, FRAME_PC(BASE)
-  |   la RA, -8(BASE)
-  |  evstdd CRET1, 0(RA)
-  |->fff_res1:
-  |  // RA = results, PC = return.
-  |  li RD, (1+1)*8
-  |->fff_res:
-  |  // RA = results, RD = (nresults+1)*8, PC = return.
-  |  andi. TMP0, PC, FRAME_TYPE
-  |   mr MULTRES, RD
-  |  bne ->vm_return
-  |  lwz INS, -4(PC)
-  |  decode_RB8 RB, INS
-  |5:
-  |  cmplw RB, RD			// More results expected?
-  |   decode_RA8 TMP0, INS
-  |  bgt >6
-  |  ins_next1
-  |  // Adjust BASE. KBASE is assumed to be set for the calling frame.
-  |   sub BASE, RA, TMP0
-  |  ins_next2
-  |
-  |6:  // Fill up results with nil.
-  |  subi TMP1, RD, 8
-  |   addi RD, RD, 8
-  |  evstddx TISNIL, RA, TMP1
-  |  b <5
-  |
-  |.macro math_extern, func
-  |  .ffunc math_ .. func
-  |  cmplwi NARGS8:RC, 8
-  |   evldd CARG2, 0(BASE)
-  |  blt ->fff_fallback
-  |  checknum CARG2
-  |   evmergehi CARG1, CARG2, CARG2
-  |  checkfail ->fff_fallback
-  |  bl extern func@plt
-  |  evmergelo CRET1, CRET1, CRET2
-  |  b ->fff_restv
-  |.endmacro
-  |
-  |.macro math_extern2, func
-  |  .ffunc math_ .. func
-  |  cmplwi NARGS8:RC, 16
-  |   evldd CARG2, 0(BASE)
-  |   evldd CARG4, 8(BASE)
-  |  blt ->fff_fallback
-  |  evmergehi CARG1, CARG4, CARG2
-  |  checknum CARG1
-  |   evmergehi CARG3, CARG4, CARG4
-  |  checkanyfail ->fff_fallback
-  |  bl extern func@plt
-  |  evmergelo CRET1, CRET1, CRET2
-  |  b ->fff_restv
-  |.endmacro
-  |
-  |.macro math_round, func
-  |  .ffunc math_ .. func
-  |  cmplwi NARGS8:RC, 8
-  |   evldd CARG2, 0(BASE)
-  |  blt ->fff_fallback
-  |  checknum CARG2
-  |   evmergehi CARG1, CARG2, CARG2
-  |  checkfail ->fff_fallback
-  |   lwz PC, FRAME_PC(BASE)
-  |  bl ->vm_..func.._hilo;
-  |  la RA, -8(BASE)
-  |  evstdd CRET2, 0(RA)
-  |  b ->fff_res1
-  |.endmacro
-  |
-  |  math_round floor
-  |  math_round ceil
-  |
-  |  math_extern sqrt
-  |
-  |.ffunc math_log
-  |  cmplwi NARGS8:RC, 8
-  |   evldd CARG2, 0(BASE)
-  |  bne ->fff_fallback                 // Need exactly 1 argument.
-  |  checknum CARG2
-  |   evmergehi CARG1, CARG2, CARG2
-  |  checkfail ->fff_fallback
-  |  bl extern log@plt
-  |  evmergelo CRET1, CRET1, CRET2
-  |  b ->fff_restv
-  |
-  |  math_extern log10
-  |  math_extern exp
-  |  math_extern sin
-  |  math_extern cos
-  |  math_extern tan
-  |  math_extern asin
-  |  math_extern acos
-  |  math_extern atan
-  |  math_extern sinh
-  |  math_extern cosh
-  |  math_extern tanh
-  |  math_extern2 pow
-  |  math_extern2 atan2
-  |  math_extern2 fmod
-  |
-  |->ff_math_deg:
-  |.ffunc_n math_rad
-  |  evldd CARG2, CFUNC:RB->upvalue[0]
-  |  efdmul CRET1, CARG1, CARG2
-  |  b ->fff_restv
-  |
-  |.ffunc math_ldexp
-  |  cmplwi NARGS8:RC, 16
-  |   evldd CARG2, 0(BASE)
-  |   evldd CARG4, 8(BASE)
-  |  blt ->fff_fallback
-  |  evmergehi CARG1, CARG4, CARG2
-  |  checknum CARG1
-  |  checkanyfail ->fff_fallback
-  |  efdctsi CARG3, CARG4
-  |  bl extern ldexp@plt
-  |  evmergelo CRET1, CRET1, CRET2
-  |  b ->fff_restv
-  |
-  |.ffunc math_frexp
-  |  cmplwi NARGS8:RC, 8
-  |   evldd CARG2, 0(BASE)
-  |  blt ->fff_fallback
-  |  checknum CARG2
-  |   evmergehi CARG1, CARG2, CARG2
-  |  checkfail ->fff_fallback
-  |  la CARG3, DISPATCH_GL(tmptv)(DISPATCH)
-  |   lwz PC, FRAME_PC(BASE)
-  |  bl extern frexp@plt
-  |   lwz TMP1, DISPATCH_GL(tmptv)(DISPATCH)
-  |  evmergelo CRET1, CRET1, CRET2
-  |   efdcfsi CRET2, TMP1
-  |   la RA, -8(BASE)
-  |  evstdd CRET1, 0(RA)
-  |  li RD, (2+1)*8
-  |   evstdd CRET2, 8(RA)
-  |  b ->fff_res
-  |
-  |.ffunc math_modf
-  |  cmplwi NARGS8:RC, 8
-  |   evldd CARG2, 0(BASE)
-  |  blt ->fff_fallback
-  |  checknum CARG2
-  |   evmergehi CARG1, CARG2, CARG2
-  |  checkfail ->fff_fallback
-  |  la CARG3, -8(BASE)
-  |   lwz PC, FRAME_PC(BASE)
-  |  bl extern modf@plt
-  |  evmergelo CRET1, CRET1, CRET2
-  |   la RA, -8(BASE)
-  |  evstdd CRET1, 0(BASE)
-  |  li RD, (2+1)*8
-  |  b ->fff_res
-  |
-  |.macro math_minmax, name, cmpop
-  |  .ffunc_1 name
-  |  checknum CARG1
-  |   li TMP1, 8
-  |  checkfail ->fff_fallback
-  |1:
-  |  evlddx CARG2, BASE, TMP1
-  |  cmplw cr1, TMP1, NARGS8:RC
-  |   checknum CARG2
-  |  bge cr1, ->fff_restv		// Ok, since CRET1 = CARG1.
-  |   checkfail ->fff_fallback
-  |  cmpop CARG2, CARG1
-  |   addi TMP1, TMP1, 8
-  |  crmove 4*cr0+lt, 4*cr0+gt
-  |  evsel CARG1, CARG2, CARG1
-  |  b <1
-  |.endmacro
-  |
-  |  math_minmax math_min, efdtstlt
-  |  math_minmax math_max, efdtstgt
-  |
-  |//-- String library -----------------------------------------------------
-  |
-  |.ffunc_1 string_len
-  |  checkstr STR:CARG1
-  |  checkfail ->fff_fallback
-  |  lwz TMP0, STR:CARG1->len
-  |  efdcfsi CRET1, TMP0
-  |  b ->fff_restv
-  |
-  |.ffunc string_byte			// Only handle the 1-arg case here.
-  |  cmplwi NARGS8:RC, 8
-  |   evldd STR:CARG1, 0(BASE)
-  |  bne ->fff_fallback			// Need exactly 1 argument.
-  |  checkstr STR:CARG1
-  |   la RA, -8(BASE)
-  |  checkfail ->fff_fallback
-  |  lwz TMP0, STR:CARG1->len
-  |   li RD, (0+1)*8
-  |    lbz TMP1, STR:CARG1[1]		// Access is always ok (NUL at end).
-  |   li TMP2, (1+1)*8
-  |  cmplwi TMP0, 0
-  |   lwz PC, FRAME_PC(BASE)
-  |    efdcfsi CRET1, TMP1
-  |  iseleq RD, RD, TMP2
-  |    evstdd CRET1, 0(RA)
-  |  b ->fff_res
-  |
-  |.ffunc string_char			// Only handle the 1-arg case here.
-  |  ffgccheck
-  |  cmplwi NARGS8:RC, 8
-  |   evldd CARG1, 0(BASE)
-  |  bne ->fff_fallback			// Exactly 1 argument.
-  |  checknum CARG1
-  |   la CARG2, DISPATCH_GL(tmptv)(DISPATCH)
-  |  checkfail ->fff_fallback
-  |  efdctsiz TMP0, CARG1
-  |   li CARG3, 1
-  |  cmplwi TMP0, 255
-  |   stb TMP0, 0(CARG2)
-  |  bgt ->fff_fallback
-  |->fff_newstr:
-  |  mr CARG1, L
-  |  stw BASE, L->base
-  |  stw PC, SAVE_PC
-  |  bl extern lj_str_new		// (lua_State *L, char *str, size_t l)
-  |  // Returns GCstr *.
-  |  lwz BASE, L->base
-  |   evmergelo STR:CRET1, TISSTR, STR:CRET1
-  |  b ->fff_restv
-  |
-  |.ffunc string_sub
-  |  ffgccheck
-  |  cmplwi NARGS8:RC, 16
-  |   evldd CARG3, 16(BASE)
-  |   evldd STR:CARG1, 0(BASE)
-  |  blt ->fff_fallback
-  |   evldd CARG2, 8(BASE)
-  |   li TMP2, -1
-  |  beq >1
-  |  checknum CARG3
-  |  checkfail ->fff_fallback
-  |  efdctsiz TMP2, CARG3
-  |1:
-  |  checknum CARG2
-  |  checkfail ->fff_fallback
-  |  checkstr STR:CARG1
-  |   efdctsiz TMP1, CARG2
-  |  checkfail ->fff_fallback
-  |   lwz TMP0, STR:CARG1->len
-  |  cmplw TMP0, TMP2			// len < end? (unsigned compare)
-  |   add TMP3, TMP2, TMP0
-  |  blt >5
-  |2:
-  |  cmpwi TMP1, 0			// start <= 0?
-  |   add TMP3, TMP1, TMP0
-  |  ble >7
-  |3:
-  |  sub. CARG3, TMP2, TMP1
-  |    addi CARG2, STR:CARG1, #STR-1
-  |   addi CARG3, CARG3, 1
-  |    add CARG2, CARG2, TMP1
-  |  isellt CARG3, r0, CARG3
-  |  b ->fff_newstr
-  |
-  |5:  // Negative end or overflow.
-  |  cmpw TMP0, TMP2
-  |   addi TMP3, TMP3, 1
-  |  iselgt TMP2, TMP3, TMP0		// end = end > len ? len : end+len+1
-  |  b <2
-  |
-  |7:  // Negative start or underflow.
-  |   cmpwi cr1, TMP3, 0
-  |  iseleq TMP1, r0, TMP3
-  |   isel TMP1, r0, TMP1, 4*cr1+lt
-  |  addi TMP1, TMP1, 1			// start = 1 + (start ? start+len : 0)
-  |  b <3
-  |
-  |.ffunc string_rep			// Only handle the 1-char case inline.
-  |  ffgccheck
-  |  cmplwi NARGS8:RC, 16
-  |   evldd CARG1, 0(BASE)
-  |   evldd CARG2, 8(BASE)
-  |  bne ->fff_fallback			// Exactly 2 arguments.
-  |  checknum CARG2
-  |  checkfail ->fff_fallback
-  |  checkstr STR:CARG1
-  |   efdctsiz CARG3, CARG2
-  |  checkfail ->fff_fallback
-  |   lwz TMP0, STR:CARG1->len
-  |  cmpwi CARG3, 0
-  |   lwz TMP1, DISPATCH_GL(tmpbuf.sz)(DISPATCH)
-  |  ble >2				// Count <= 0? (or non-int)
-  |   cmplwi TMP0, 1
-  |  subi TMP2, CARG3, 1
-  |   blt >2				// Zero length string?
-  |  cmplw cr1, TMP1, CARG3
-  |   bne ->fff_fallback		// Fallback for > 1-char strings.
-  |   lbz TMP0, STR:CARG1[1]
-  |   lwz CARG2, DISPATCH_GL(tmpbuf.buf)(DISPATCH)
-  |  blt cr1, ->fff_fallback
-  |1:  // Fill buffer with char. Yes, this is suboptimal code (do you care?).
-  |  cmplwi TMP2, 0
-  |   stbx TMP0, CARG2, TMP2
-  |   subi TMP2, TMP2, 1
-  |  bne <1
-  |  b ->fff_newstr
-  |2:  // Return empty string.
-  |  la STR:CRET1, DISPATCH_GL(strempty)(DISPATCH)
-  |  evmergelo CRET1, TISSTR, STR:CRET1
-  |  b ->fff_restv
-  |
-  |.ffunc string_reverse
-  |  ffgccheck
-  |  cmplwi NARGS8:RC, 8
-  |   evldd CARG1, 0(BASE)
-  |  blt ->fff_fallback
-  |  checkstr STR:CARG1
-  |   lwz TMP1, DISPATCH_GL(tmpbuf.sz)(DISPATCH)
-  |  checkfail ->fff_fallback
-  |  lwz CARG3, STR:CARG1->len
-  |   la CARG1, #STR(STR:CARG1)
-  |   lwz CARG2, DISPATCH_GL(tmpbuf.buf)(DISPATCH)
-  |   li TMP2, 0
-  |  cmplw TMP1, CARG3
-  |   subi TMP3, CARG3, 1
-  |  blt ->fff_fallback
-  |1:  // Reverse string copy.
-  |  cmpwi TMP3, 0
-  |   lbzx TMP1, CARG1, TMP2
-  |  blt ->fff_newstr
-  |   stbx TMP1, CARG2, TMP3
-  |  subi TMP3, TMP3, 1
-  |  addi TMP2, TMP2, 1
-  |  b <1
-  |
-  |.macro ffstring_case, name, lo
-  |  .ffunc name
-  |  ffgccheck
-  |  cmplwi NARGS8:RC, 8
-  |   evldd CARG1, 0(BASE)
-  |  blt ->fff_fallback
-  |  checkstr STR:CARG1
-  |   lwz TMP1, DISPATCH_GL(tmpbuf.sz)(DISPATCH)
-  |  checkfail ->fff_fallback
-  |  lwz CARG3, STR:CARG1->len
-  |   la CARG1, #STR(STR:CARG1)
-  |   lwz CARG2, DISPATCH_GL(tmpbuf.buf)(DISPATCH)
-  |  cmplw TMP1, CARG3
-  |   li TMP2, 0
-  |  blt ->fff_fallback
-  |1:  // ASCII case conversion.
-  |  cmplw TMP2, CARG3
-  |   lbzx TMP1, CARG1, TMP2
-  |  bge ->fff_newstr
-  |   subi TMP0, TMP1, lo
-  |    xori TMP3, TMP1, 0x20
-  |   cmplwi TMP0, 26
-  |   isellt TMP1, TMP3, TMP1
-  |   stbx TMP1, CARG2, TMP2
-  |  addi TMP2, TMP2, 1
-  |  b <1
-  |.endmacro
-  |
-  |ffstring_case string_lower, 65
-  |ffstring_case string_upper, 97
-  |
-  |//-- Table library ------------------------------------------------------
-  |
-  |.ffunc_1 table_getn
-  |  checktab CARG1
-  |  checkfail ->fff_fallback
-  |  bl extern lj_tab_len		// (GCtab *t)
-  |  // Returns uint32_t (but less than 2^31).
-  |  efdcfsi CRET1, CRET1
-  |  b ->fff_restv
-  |
-  |//-- Bit library --------------------------------------------------------
-  |
-  |.macro .ffunc_bit, name
-  |  .ffunc_n bit_..name
-  |  efdadd CARG1, CARG1, TOBIT
-  |.endmacro
-  |
-  |.ffunc_bit tobit
-  |->fff_resbit:
-  |  efdcfsi CRET1, CARG1
-  |  b ->fff_restv
-  |
-  |.macro .ffunc_bit_op, name, ins
-  |  .ffunc_bit name
-  |   li TMP1, 8
-  |1:
-  |  evlddx CARG2, BASE, TMP1
-  |  cmplw cr1, TMP1, NARGS8:RC
-  |   checknum CARG2
-  |  bge cr1, ->fff_resbit
-  |   checkfail ->fff_fallback
-  |  efdadd CARG2, CARG2, TOBIT
-  |  ins CARG1, CARG1, CARG2
-  |   addi TMP1, TMP1, 8
-  |  b <1
-  |.endmacro
-  |
-  |.ffunc_bit_op band, and
-  |.ffunc_bit_op bor, or
-  |.ffunc_bit_op bxor, xor
-  |
-  |.ffunc_bit bswap
-  |  rotlwi TMP0, CARG1, 8
-  |  rlwimi TMP0, CARG1, 24, 0, 7
-  |  rlwimi TMP0, CARG1, 24, 16, 23
-  |  efdcfsi CRET1, TMP0
-  |  b ->fff_restv
-  |
-  |.ffunc_bit bnot
-  |  not TMP0, CARG1
-  |  efdcfsi CRET1, TMP0
-  |  b ->fff_restv
-  |
-  |.macro .ffunc_bit_sh, name, ins, shmod
-  |  .ffunc_nn bit_..name
-  |  efdadd CARG2, CARG2, TOBIT
-  |   efdadd CARG1, CARG1, TOBIT
-  |.if shmod == 1
-  |  rlwinm CARG2, CARG2, 0, 27, 31
-  |.elif shmod == 2
-  |  neg CARG2, CARG2
-  |.endif
-  |  ins TMP0, CARG1, CARG2
-  |  efdcfsi CRET1, TMP0
-  |  b ->fff_restv
-  |.endmacro
-  |
-  |.ffunc_bit_sh lshift, slw, 1
-  |.ffunc_bit_sh rshift, srw, 1
-  |.ffunc_bit_sh arshift, sraw, 1
-  |.ffunc_bit_sh rol, rotlw, 0
-  |.ffunc_bit_sh ror, rotlw, 2
-  |
-  |//-----------------------------------------------------------------------
-  |
-  |->fff_fallback:			// Call fast function fallback handler.
-  |  // BASE = new base, RB = CFUNC, RC = nargs*8
-  |  lwz TMP3, CFUNC:RB->f
-  |    add TMP1, BASE, NARGS8:RC
-  |   lwz PC, FRAME_PC(BASE)		// Fallback may overwrite PC.
-  |    addi TMP0, TMP1, 8*LUA_MINSTACK
-  |     lwz TMP2, L->maxstack
-  |   stw PC, SAVE_PC			// Redundant (but a defined value).
-  |  cmplw TMP0, TMP2
-  |     stw BASE, L->base
-  |    stw TMP1, L->top
-  |   mr CARG1, L
-  |  bgt >5				// Need to grow stack.
-  |  mtctr TMP3
-  |  bctrl				// (lua_State *L)
-  |  // Either throws an error, or recovers and returns -1, 0 or nresults+1.
-  |  lwz BASE, L->base
-  |  cmpwi CRET1, 0
-  |   slwi RD, CRET1, 3
-  |   la RA, -8(BASE)
-  |  bgt ->fff_res			// Returned nresults+1?
-  |1:  // Returned 0 or -1: retry fast path.
-  |  lwz TMP0, L->top
-  |   lwz LFUNC:RB, FRAME_FUNC(BASE)
-  |  sub NARGS8:RC, TMP0, BASE
-  |  bne ->vm_call_tail			// Returned -1?
-  |  ins_callt				// Returned 0: retry fast path.
-  |
-  |// Reconstruct previous base for vmeta_call during tailcall.
-  |->vm_call_tail:
-  |  andi. TMP0, PC, FRAME_TYPE
-  |   rlwinm TMP1, PC, 0, 0, 28
-  |  bne >3
-  |  lwz INS, -4(PC)
-  |  decode_RA8 TMP1, INS
-  |  addi TMP1, TMP1, 8
-  |3:
-  |  sub TMP2, BASE, TMP1
-  |  b ->vm_call_dispatch		// Resolve again for tailcall.
-  |
-  |5:  // Grow stack for fallback handler.
-  |  li CARG2, LUA_MINSTACK
-  |  bl extern lj_state_growstack	// (lua_State *L, int n)
-  |  lwz BASE, L->base
-  |  cmpw TMP0, TMP0			// Set 4*cr0+eq to force retry.
-  |  b <1
-  |
-  |->fff_gcstep:			// Call GC step function.
-  |  // BASE = new base, RC = nargs*8
-  |  mflr SAVE0
-  |   stw BASE, L->base
-  |  add TMP0, BASE, NARGS8:RC
-  |   stw PC, SAVE_PC			// Redundant (but a defined value).
-  |  stw TMP0, L->top
-  |  mr CARG1, L
-  |  bl extern lj_gc_step		// (lua_State *L)
-  |   lwz BASE, L->base
-  |  mtlr SAVE0
-  |    lwz TMP0, L->top
-  |   sub NARGS8:RC, TMP0, BASE
-  |   lwz CFUNC:RB, FRAME_FUNC(BASE)
-  |  blr
-  |
-  |//-----------------------------------------------------------------------
-  |//-- Special dispatch targets -------------------------------------------
-  |//-----------------------------------------------------------------------
-  |
-  |->vm_record:				// Dispatch target for recording phase.
-  |.if JIT
-  |  NYI
-  |.endif
-  |
-  |->vm_rethook:			// Dispatch target for return hooks.
-  |  lbz TMP3, DISPATCH_GL(hookmask)(DISPATCH)
-  |  andi. TMP0, TMP3, HOOK_ACTIVE	// Hook already active?
-  |  beq >1
-  |5:  // Re-dispatch to static ins.
-  |  addi TMP1, TMP1, GG_DISP2STATIC	// Assumes decode_OP4 TMP1, INS.
-  |  lwzx TMP0, DISPATCH, TMP1
-  |  mtctr TMP0
-  |  bctr
-  |
-  |->vm_inshook:			// Dispatch target for instr/line hooks.
-  |  lbz TMP3, DISPATCH_GL(hookmask)(DISPATCH)
-  |  lwz TMP2, DISPATCH_GL(hookcount)(DISPATCH)
-  |  andi. TMP0, TMP3, HOOK_ACTIVE	// Hook already active?
-  |   rlwinm TMP0, TMP3, 31-LUA_HOOKLINE, 31, 0
-  |  bne <5
-  |
-  |   cmpwi cr1, TMP0, 0
-  |  addic. TMP2, TMP2, -1
-  |   beq cr1, <5
-  |  stw TMP2, DISPATCH_GL(hookcount)(DISPATCH)
-  |  beq >1
-  |   bge cr1, <5
-  |1:
-  |  mr CARG1, L
-  |   stw MULTRES, SAVE_MULTRES
-  |  mr CARG2, PC
-  |   stw BASE, L->base
-  |  // SAVE_PC must hold the _previous_ PC. The callee updates it with PC.
-  |  bl extern lj_dispatch_ins		// (lua_State *L, const BCIns *pc)
-  |3:
-  |  lwz BASE, L->base
-  |4:  // Re-dispatch to static ins.
-  |  lwz INS, -4(PC)
-  |  decode_OP4 TMP1, INS
-  |   decode_RB8 RB, INS
-  |  addi TMP1, TMP1, GG_DISP2STATIC
-  |   decode_RD8 RD, INS
-  |  lwzx TMP0, DISPATCH, TMP1
-  |   decode_RA8 RA, INS
-  |   decode_RC8 RC, INS
-  |  mtctr TMP0
-  |  bctr
-  |
-  |->cont_hook:				// Continue from hook yield.
-  |  addi PC, PC, 4
-  |  lwz MULTRES, -20(RB)		// Restore MULTRES for *M ins.
-  |  b <4
-  |
-  |->vm_hotloop:			// Hot loop counter underflow.
-  |.if JIT
-  |  NYI
-  |.endif
-  |
-  |->vm_callhook:			// Dispatch target for call hooks.
-  |  mr CARG2, PC
-  |.if JIT
-  |  b >1
-  |.endif
-  |
-  |->vm_hotcall:			// Hot call counter underflow.
-  |.if JIT
-  |  ori CARG2, PC, 1
-  |1:
-  |.endif
-  |  add TMP0, BASE, RC
-  |   stw PC, SAVE_PC
-  |  mr CARG1, L
-  |   stw BASE, L->base
-  |  sub RA, RA, BASE
-  |   stw TMP0, L->top
-  |  bl extern lj_dispatch_call		// (lua_State *L, const BCIns *pc)
-  |  // Returns ASMFunction.
-  |  lwz BASE, L->base
-  |   lwz TMP0, L->top
-  |   stw ZERO, SAVE_PC			// Invalidate for subsequent line hook.
-  |  sub NARGS8:RC, TMP0, BASE
-  |  add RA, BASE, RA
-  |  lwz LFUNC:RB, FRAME_FUNC(BASE)
-  |  mtctr CRET1
-  |  bctr
-  |
-  |//-----------------------------------------------------------------------
-  |//-- Trace exit handler -------------------------------------------------
-  |//-----------------------------------------------------------------------
-  |
-  |->vm_exit_handler:
-  |.if JIT
-  |  NYI
-  |.endif
-  |->vm_exit_interp:
-  |.if JIT
-  |  NYI
-  |.endif
-  |
-  |//-----------------------------------------------------------------------
-  |//-- Math helper functions ----------------------------------------------
-  |//-----------------------------------------------------------------------
-  |
-  |// FP value rounding. Called by math.floor/math.ceil fast functions
-  |// and from JIT code.
-  |//
-  |// This can be inlined if the CPU has the frin/friz/frip/frim instructions.
-  |// The alternative hard-float approaches have a deep dependency chain.
-  |// The resulting latency is at least 3x-7x the double-precision FP latency
-  |// (e500v2: 6cy, e600: 5cy, Cell: 10cy) or around 20-70 cycles.
-  |//
-  |// The soft-float approach is tedious, but much faster (e500v2: ~11cy/~6cy).
-  |// However it relies on a fast way to transfer the FP value to GPRs
-  |// (e500v2: 0cy for lo-word, 1cy for hi-word).
-  |//
-  |.macro vm_round, name, mode
-  |  // Used temporaries: TMP0, TMP1, TMP2, TMP3.
-  |->name.._efd:			// Input: CARG2, output: CRET2
-  |  evmergehi CARG1, CARG2, CARG2
-  |->name.._hilo:
-  |  // Input: CARG1 (hi), CARG2 (hi, lo), output: CRET2
-  |  rlwinm TMP2, CARG1, 12, 21, 31
-  |  addic. TMP2, TMP2, -1023		// exp = exponent(x) - 1023
-  |   li TMP1, -1
-  |  cmplwi cr1, TMP2, 51		// 0 <= exp <= 51?
-  |   subfic TMP0, TMP2, 52
-  |  bgt cr1, >1
-  |   lus TMP3, 0xfff0
-  |  slw TMP0, TMP1, TMP0		// lomask = -1 << (52-exp)
-  |   sraw TMP1, TMP3, TMP2		// himask = (int32_t)0xfff00000 >> exp
-  |.if mode == 2		// trunc(x):
-  |  evmergelo TMP0, TMP1, TMP0
-  |  evand CRET2, CARG2, TMP0		// hi &= himask, lo &= lomask
-  |.else
-  |  andc TMP2, CARG2, TMP0
-  |   andc TMP3, CARG1, TMP1
-  |  or TMP2, TMP2, TMP3		// ztest = (hi&~himask) | (lo&~lomask)
-  |   srawi TMP3, CARG1, 31		// signmask = (int32_t)hi >> 31
-  |.if mode == 0		// floor(x):
-  |  and. TMP2, TMP2, TMP3		// iszero = ((ztest & signmask) == 0)
-  |.else			// ceil(x):
-  |  andc. TMP2, TMP2, TMP3		// iszero = ((ztest & ~signmask) == 0)
-  |.endif
-  |  and CARG2, CARG2, TMP0		// lo &= lomask
-  |  and CARG1, CARG1, TMP1		// hi &= himask
-  |   subc TMP0, CARG2, TMP0
-  |  iseleq TMP0, CARG2, TMP0		// lo = iszero ? lo : lo-lomask
-  |   sube TMP1, CARG1, TMP1
-  |  iseleq TMP1, CARG1, TMP1		// hi = iszero ? hi : hi-himask+carry
-  |  evmergelo CRET2, TMP1, TMP0
-  |.endif
-  |  blr
-  |1:
-  |  bgtlr				// Already done if >=2^52, +-inf or nan.
-  |.if mode == 2		// trunc(x):
-  |  rlwinm TMP1, CARG1, 0, 0, 0	// hi = sign(x)
-  |  li TMP0, 0
-  |  evmergelo CRET2, TMP1, TMP0
-  |.else
-  |  rlwinm TMP2, CARG1, 0, 1, 31
-  |  srawi TMP0, CARG1, 31		// signmask = (int32_t)hi >> 31
-  |  or TMP2, TMP2, CARG2		// ztest = abs(hi) | lo
-  |   lus TMP1, 0x3ff0
-  |.if mode == 0		// floor(x):
-  |  and. TMP2, TMP2, TMP0		// iszero = ((ztest & signmask) == 0)
-  |.else			// ceil(x):
-  |  andc. TMP2, TMP2, TMP0		// iszero = ((ztest & ~signmask) == 0)
-  |.endif
-  |   li TMP0, 0
-  |  iseleq TMP1, r0, TMP1
-  |  rlwimi CARG1, TMP1, 0, 1, 31	// hi = sign(x) | (iszero ? 0.0 : 1.0)
-  |  evmergelo CRET2, CARG1, TMP0
-  |.endif
-  |  blr
-  |.endmacro
-  |
-  |->vm_floor:
-  |  mflr CARG3
-  |  evmergelo CARG2, CARG1, CARG2
-  |  bl ->vm_floor_hilo
-  |  mtlr CARG3
-  |  evmergehi CRET1, CRET2, CRET2
-  |  blr
-  |
-  |  vm_round vm_floor, 0
-  |  vm_round vm_ceil,  1
-  |.if JIT
-  |  vm_round vm_trunc, 2
-  |.else
-  |->vm_trunc_efd:
-  |->vm_trunc_hilo:
-  |.endif
-  |
-  |//-----------------------------------------------------------------------
-  |//-- Miscellaneous functions --------------------------------------------
-  |//-----------------------------------------------------------------------
-  |
-  |//-----------------------------------------------------------------------
-  |//-- FFI helper functions -----------------------------------------------
-  |//-----------------------------------------------------------------------
-  |
-  |->vm_ffi_call:
-  |.if FFI
-  |  NYI
-  |.endif
-  |
-  |//-----------------------------------------------------------------------
-}
-
-/* Generate the code for a single instruction. */
-static void build_ins(BuildCtx *ctx, BCOp op, int defop)
-{
-  int vk = 0;
-  |=>defop:
-
-  switch (op) {
-
-  /* -- Comparison ops ---------------------------------------------------- */
-
-  /* Remember: all ops branch for a true comparison, fall through otherwise. */
-
-  case BC_ISLT: case BC_ISGE: case BC_ISLE: case BC_ISGT:
-    |  // RA = src1*8, RD = src2*8, JMP with RD = target
-    |  evlddx TMP0, BASE, RA
-    |   addi PC, PC, 4
-    |  evlddx TMP1, BASE, RD
-    |   addis TMP3, PC, -(BCBIAS_J*4 >> 16)
-    |   lwz TMP2, -4(PC)
-    |  evmergehi RB, TMP0, TMP1
-    |   decode_RD4 TMP2, TMP2
-    |  checknum RB
-    |   add TMP2, TMP2, TMP3
-    |  checkanyfail ->vmeta_comp
-    |  efdcmplt TMP0, TMP1
-    if (op == BC_ISLE || op == BC_ISGT) {
-      |  efdcmpeq cr1, TMP0, TMP1
-      |  cror 4*cr0+gt, 4*cr0+gt, 4*cr1+gt
-    }
-    if (op == BC_ISLT || op == BC_ISLE) {
-      |  iselgt PC, TMP2, PC
-    } else {
-      |  iselgt PC, PC, TMP2
-    }
-    |  ins_next
-    break;
-
-  case BC_ISEQV: case BC_ISNEV:
-    vk = op == BC_ISEQV;
-    |  // RA = src1*8, RD = src2*8, JMP with RD = target
-    |  evlddx CARG2, BASE, RA
-    |   addi PC, PC, 4
-    |  evlddx CARG3, BASE, RD
-    |   addis TMP3, PC, -(BCBIAS_J*4 >> 16)
-    |   lwz TMP2, -4(PC)
-    |  evmergehi RB, CARG2, CARG3
-    |   decode_RD4 TMP2, TMP2
-    |  checknum RB
-    |   add TMP2, TMP2, TMP3
-    |  checkanyfail >5
-    |  efdcmpeq CARG2, CARG3
-    if (vk) {
-      |  iselgt PC, TMP2, PC
-    } else {
-      |  iselgt PC, PC, TMP2
-    }
-    |1:
-    |  ins_next
-    |
-    |5:  // Either or both types are not numbers.
-    |  evcmpeq CARG2, CARG3
-    |   not TMP3, RB
-    |   cmplwi cr1, TMP3, ~LJ_TISPRI		// Primitive?
-    |  crorc 4*cr7+lt, 4*cr0+so, 4*cr0+lt	// 1: Same tv or different type.
-    |   cmplwi cr6, TMP3, ~LJ_TISTABUD		// Table or userdata?
-    |  crandc 4*cr7+gt, 4*cr0+lt, 4*cr1+gt	// 2: Same type and primitive.
-    |   mr SAVE0, PC
-    if (vk) {
-      |  isel PC, TMP2, PC, 4*cr7+gt
-    } else {
-      |  isel TMP2, PC, TMP2, 4*cr7+gt
-    }
-    |  cror 4*cr7+lt, 4*cr7+lt, 4*cr7+gt	// 1 or 2.
-    if (vk) {
-      |  isel PC, TMP2, PC, 4*cr0+so
-    } else {
-      |  isel PC, PC, TMP2, 4*cr0+so
-    }
-    |  blt cr7, <1			// Done if 1 or 2.
-    |  blt cr6, <1			// Done if not tab/ud.
-    |
-    |  // Different tables or userdatas. Need to check __eq metamethod.
-    |  // Field metatable must be at same offset for GCtab and GCudata!
-    |  lwz TAB:TMP2, TAB:CARG2->metatable
-    |   li CARG4, 1-vk			// ne = 0 or 1.
-    |  cmplwi TAB:TMP2, 0
-    |  beq <1				// No metatable?
-    |  lbz TMP2, TAB:TMP2->nomm
-    |  andi. TMP2, TMP2, 1<<MM_eq
-    |  bne <1				// Or 'no __eq' flag set?
-    |  mr PC, SAVE0			// Restore old PC.
-    |  b ->vmeta_equal			// Handle __eq metamethod.
-    break;
-
-  case BC_ISEQS: case BC_ISNES:
-    vk = op == BC_ISEQS;
-    |  // RA = src*8, RD = str_const*8 (~), JMP with RD = target
-    |  evlddx TMP0, BASE, RA
-    |   srwi RD, RD, 1
-    |    lwz INS, 0(PC)
-    |   subfic RD, RD, -4
-    |    addi PC, PC, 4
-    |   lwzx STR:TMP1, KBASE, RD	// KBASE-4-str_const*4
-    |    addis TMP3, PC, -(BCBIAS_J*4 >> 16)
-    |    decode_RD4 TMP2, INS
-    |   evmergelo STR:TMP1, TISSTR, STR:TMP1
-    |    add TMP2, TMP2, TMP3
-    |  evcmpeq TMP0, STR:TMP1
-    if (vk) {
-      |  isel PC, TMP2, PC, 4*cr0+so
-    } else {
-      |  isel PC, PC, TMP2, 4*cr0+so
-    }
-    |  ins_next
-    break;
-
-  case BC_ISEQN: case BC_ISNEN:
-    vk = op == BC_ISEQN;
-    |  // RA = src*8, RD = num_const*8, JMP with RD = target
-    |  evlddx TMP0, BASE, RA
-    |   addi PC, PC, 4
-    |  evlddx TMP1, KBASE, RD
-    |   addis TMP3, PC, -(BCBIAS_J*4 >> 16)
-    |   lwz INS, -4(PC)
-    |  checknum TMP0
-    |  checkfail >5
-    |  efdcmpeq TMP0, TMP1
-    |1:
-    |   decode_RD4 TMP2, INS
-    |   add TMP2, TMP2, TMP3
-    if (vk) {
-      |  iselgt PC, TMP2, PC
-      |5:
-    } else {
-      |  iselgt PC, PC, TMP2
-    }
-    |3:
-    |  ins_next
-    if (!vk) {
-      |5:
-      |  decode_RD4 TMP2, INS
-      |  add PC, TMP2, TMP3
-      |  b <3
-    }
-    break;
-
-  case BC_ISEQP: case BC_ISNEP:
-    vk = op == BC_ISEQP;
-    |  // RA = src*8, RD = primitive_type*8 (~), JMP with RD = target
-    |  lwzx TMP0, BASE, RA
-    |   srwi TMP1, RD, 3
-    |    lwz INS, 0(PC)
-    |    addi PC, PC, 4
-    |   not TMP1, TMP1
-    |    addis TMP3, PC, -(BCBIAS_J*4 >> 16)
-    |  cmplw TMP0, TMP1
-    |    decode_RD4 TMP2, INS
-    |    add TMP2, TMP2, TMP3
-    if (vk) {
-      |  iseleq PC, TMP2, PC
-    } else {
-      |  iseleq PC, PC, TMP2
-    }
-    |  ins_next
-    break;
-
-  /* -- Unary test and copy ops ------------------------------------------- */
-
-  case BC_ISTC: case BC_ISFC: case BC_IST: case BC_ISF:
-    |  // RA = dst*8 or unused, RD = src*8, JMP with RD = target
-    |  evlddx TMP0, BASE, RD
-    |   evaddw TMP1, TISNIL, TISNIL	// Synthesize LJ_TFALSE.
-    |   lwz INS, 0(PC)
-    |  evcmpltu TMP0, TMP1
-    |   addi PC, PC, 4
-    if (op == BC_IST || op == BC_ISF) {
-      |  addis TMP3, PC, -(BCBIAS_J*4 >> 16)
-      |  decode_RD4 TMP2, INS
-      |  add TMP2, TMP2, TMP3
-      if (op == BC_IST) {
-	|  isellt PC, TMP2, PC
-      } else {
-	|  isellt PC, PC, TMP2
-      }
-    } else {
-      if (op == BC_ISTC) {
-	|  checkfail >1
-      } else {
-	|  checkok >1
-      }
-      |  addis PC, PC, -(BCBIAS_J*4 >> 16)
-      |  decode_RD4 TMP2, INS
-      |   evstddx TMP0, BASE, RA
-      |  add PC, PC, TMP2
-      |1:
-    }
-    |  ins_next
-    break;
-
-  /* -- Unary ops --------------------------------------------------------- */
-
-  case BC_MOV:
-    |  // RA = dst*8, RD = src*8
-    |  ins_next1
-    |  evlddx TMP0, BASE, RD
-    |  evstddx TMP0, BASE, RA
-    |  ins_next2
-    break;
-  case BC_NOT:
-    |  // RA = dst*8, RD = src*8
-    |  ins_next1
-    |  lwzx TMP0, BASE, RD
-    |  subfic TMP1, TMP0, LJ_TTRUE
-    |  adde TMP0, TMP0, TMP1
-    |  stwx TMP0, BASE, RA
-    |  ins_next2
-    break;
-  case BC_UNM:
-    |  // RA = dst*8, RD = src*8
-    |  evlddx TMP0, BASE, RD
-    |  checknum TMP0
-    |  checkfail ->vmeta_unm
-    |  efdneg TMP0, TMP0
-    |  ins_next1
-    |  evstddx TMP0, BASE, RA
-    |  ins_next2
-    break;
-  case BC_LEN:
-    |  // RA = dst*8, RD = src*8
-    |  evlddx CARG1, BASE, RD
-    |  checkstr CARG1
-    |  checkfail >2
-    |  lwz CRET1, STR:CARG1->len
-    |1:
-    |  ins_next1
-    |  efdcfsi TMP0, CRET1
-    |  evstddx TMP0, BASE, RA
-    |  ins_next2
-    |2:
-    |  checktab CARG1
-    |  checkfail ->vmeta_len
-#if LJ_52
-    |  lwz TAB:TMP2, TAB:CARG1->metatable
-    |  cmplwi TAB:TMP2, 0
-    |  bne >9
-    |3:
-#endif
-    |->BC_LEN_Z:
-    |  bl extern lj_tab_len		// (GCtab *t)
-    |  // Returns uint32_t (but less than 2^31).
-    |  b <1
-#if LJ_52
-    |9:
-    |  lbz TMP0, TAB:TMP2->nomm
-    |  andi. TMP0, TMP0, 1<<MM_len
-    |  bne <3				// 'no __len' flag set: done.
-    |  b ->vmeta_len
-#endif
-    break;
-
-  /* -- Binary ops -------------------------------------------------------- */
-
-    |.macro ins_arithpre, t0, t1
-    |  // RA = dst*8, RB = src1*8, RC = src2*8 | num_const*8
-    ||vk = ((int)op - BC_ADDVN) / (BC_ADDNV-BC_ADDVN);
-    ||switch (vk) {
-    ||case 0:
-    |   evlddx t0, BASE, RB
-    |    checknum t0
-    |   evlddx t1, KBASE, RC
-    |    checkfail ->vmeta_arith_vn
-    ||  break;
-    ||case 1:
-    |   evlddx t1, BASE, RB
-    |    checknum t1
-    |   evlddx t0, KBASE, RC
-    |    checkfail ->vmeta_arith_nv
-    ||  break;
-    ||default:
-    |   evlddx t0, BASE, RB
-    |   evlddx t1, BASE, RC
-    |    evmergehi TMP2, t0, t1
-    |    checknum TMP2
-    |    checkanyfail ->vmeta_arith_vv
-    ||  break;
-    ||}
-    |.endmacro
-    |
-    |.macro ins_arith, ins
-    |  ins_arithpre TMP0, TMP1
-    |  ins_next1
-    |  ins TMP0, TMP0, TMP1
-    |  evstddx TMP0, BASE, RA
-    |  ins_next2
-    |.endmacro
-
-  case BC_ADDVN: case BC_ADDNV: case BC_ADDVV:
-    |  ins_arith efdadd
-    break;
-  case BC_SUBVN: case BC_SUBNV: case BC_SUBVV:
-    |  ins_arith efdsub
-    break;
-  case BC_MULVN: case BC_MULNV: case BC_MULVV:
-    |  ins_arith efdmul
-    break;
-  case BC_DIVVN: case BC_DIVNV: case BC_DIVVV:
-    |  ins_arith efddiv
-    break;
-  case BC_MODVN:
-    |  ins_arithpre RD, SAVE0
-    |->BC_MODVN_Z:
-    |  efddiv CARG2, RD, SAVE0
-    |  bl ->vm_floor_efd		// floor(b/c)
-    |  efdmul TMP0, CRET2, SAVE0
-    |  ins_next1
-    |  efdsub TMP0, RD, TMP0		// b - floor(b/c)*c
-    |  evstddx TMP0, BASE, RA
-    |  ins_next2
-    break;
-  case BC_MODNV: case BC_MODVV:
-    |  ins_arithpre RD, SAVE0
-    |  b ->BC_MODVN_Z			// Avoid 3 copies. It's slow anyway.
-    break;
-  case BC_POW:
-    |  evlddx CARG2, BASE, RB
-    |  evlddx CARG4, BASE, RC
-    |  evmergehi CARG1, CARG4, CARG2
-    |  checknum CARG1
-    |   evmergehi CARG3, CARG4, CARG4
-    |  checkanyfail ->vmeta_arith_vv
-    |  bl extern pow@plt
-    |  evmergelo CRET2, CRET1, CRET2
-    |  evstddx CRET2, BASE, RA
-    |  ins_next
-    break;
-
-  case BC_CAT:
-    |  // RA = dst*8, RB = src_start*8, RC = src_end*8
-    |  sub CARG3, RC, RB
-    |   stw BASE, L->base
-    |  add CARG2, BASE, RC
-    |  mr SAVE0, RB
-    |->BC_CAT_Z:
-    |   stw PC, SAVE_PC
-    |  mr CARG1, L
-    |  srwi CARG3, CARG3, 3
-    |  bl extern lj_meta_cat		// (lua_State *L, TValue *top, int left)
-    |  // Returns NULL (finished) or TValue * (metamethod).
-    |  cmplwi CRET1, 0
-    |   lwz BASE, L->base
-    |  bne ->vmeta_binop
-    |  evlddx TMP0, BASE, SAVE0		// Copy result from RB to RA.
-    |  evstddx TMP0, BASE, RA
-    |  ins_next
-    break;
-
-  /* -- Constant ops ------------------------------------------------------ */
-
-  case BC_KSTR:
-    |  // RA = dst*8, RD = str_const*8 (~)
-    |  ins_next1
-    |  srwi TMP1, RD, 1
-    |  subfic TMP1, TMP1, -4
-    |  lwzx TMP0, KBASE, TMP1		// KBASE-4-str_const*4
-    |  evmergelo TMP0, TISSTR, TMP0
-    |  evstddx TMP0, BASE, RA
-    |  ins_next2
-    break;
-  case BC_KCDATA:
-    |.if FFI
-    |  // RA = dst*8, RD = cdata_const*8 (~)
-    |  ins_next1
-    |  srwi TMP1, RD, 1
-    |  subfic TMP1, TMP1, -4
-    |  lwzx TMP0, KBASE, TMP1		// KBASE-4-cdata_const*4
-    |  li TMP2, LJ_TCDATA
-    |  evmergelo TMP0, TMP2, TMP0
-    |  evstddx TMP0, BASE, RA
-    |  ins_next2
-    |.endif
-    break;
-  case BC_KSHORT:
-    |  // RA = dst*8, RD = int16_literal*8
-    |  srwi TMP1, RD, 3
-    |  extsh TMP1, TMP1
-    |  ins_next1
-    |  efdcfsi TMP0, TMP1
-    |  evstddx TMP0, BASE, RA
-    |  ins_next2
-    break;
-  case BC_KNUM:
-    |  // RA = dst*8, RD = num_const*8
-    |  evlddx TMP0, KBASE, RD
-    |  ins_next1
-    |  evstddx TMP0, BASE, RA
-    |  ins_next2
-    break;
-  case BC_KPRI:
-    |  // RA = dst*8, RD = primitive_type*8 (~)
-    |  srwi TMP1, RD, 3
-    |  not TMP0, TMP1
-    |  ins_next1
-    |  stwx TMP0, BASE, RA
-    |  ins_next2
-    break;
-  case BC_KNIL:
-    |  // RA = base*8, RD = end*8
-    |  evstddx TISNIL, BASE, RA
-    |   addi RA, RA, 8
-    |1:
-    |  evstddx TISNIL, BASE, RA
-    |  cmpw RA, RD
-    |   addi RA, RA, 8
-    |  blt <1
-    |  ins_next_
-    break;
-
-  /* -- Upvalue and function ops ------------------------------------------ */
-
-  case BC_UGET:
-    |  // RA = dst*8, RD = uvnum*8
-    |  ins_next1
-    |  lwz LFUNC:RB, FRAME_FUNC(BASE)
-    |   srwi RD, RD, 1
-    |   addi RD, RD, offsetof(GCfuncL, uvptr)
-    |  lwzx UPVAL:RB, LFUNC:RB, RD
-    |  lwz TMP1, UPVAL:RB->v
-    |  evldd TMP0, 0(TMP1)
-    |  evstddx TMP0, BASE, RA
-    |  ins_next2
-    break;
-  case BC_USETV:
-    |  // RA = uvnum*8, RD = src*8
-    |  lwz LFUNC:RB, FRAME_FUNC(BASE)
-    |    srwi RA, RA, 1
-    |    addi RA, RA, offsetof(GCfuncL, uvptr)
-    |   evlddx TMP1, BASE, RD
-    |  lwzx UPVAL:RB, LFUNC:RB, RA
-    |  lbz TMP3, UPVAL:RB->marked
-    |   lwz CARG2, UPVAL:RB->v
-    |  andi. TMP3, TMP3, LJ_GC_BLACK	// isblack(uv)
-    |    lbz TMP0, UPVAL:RB->closed
-    |   evmergehi TMP2, TMP1, TMP1
-    |   evstdd TMP1, 0(CARG2)
-    |    cmplwi cr1, TMP0, 0
-    |  cror 4*cr0+eq, 4*cr0+eq, 4*cr1+eq
-    |   subi TMP2, TMP2, (LJ_TISNUM+1)
-    |  bne >2				// Upvalue is closed and black?
-    |1:
-    |  ins_next
-    |
-    |2:  // Check if new value is collectable.
-    |  cmplwi TMP2, LJ_TISGCV - (LJ_TISNUM+1)
-    |  bge <1				// tvisgcv(v)
-    |  lbz TMP3, GCOBJ:TMP1->gch.marked
-    |  andi. TMP3, TMP3, LJ_GC_WHITES	// iswhite(v)
-    |   la CARG1, GG_DISP2G(DISPATCH)
-    |  // Crossed a write barrier. Move the barrier forward.
-    |  beq <1
-    |  bl extern lj_gc_barrieruv	// (global_State *g, TValue *tv)
-    |  b <1
-    break;
-  case BC_USETS:
-    |  // RA = uvnum*8, RD = str_const*8 (~)
-    |  lwz LFUNC:RB, FRAME_FUNC(BASE)
-    |   srwi TMP1, RD, 1
-    |    srwi RA, RA, 1
-    |   subfic TMP1, TMP1, -4
-    |    addi RA, RA, offsetof(GCfuncL, uvptr)
-    |   lwzx STR:TMP1, KBASE, TMP1	// KBASE-4-str_const*4
-    |  lwzx UPVAL:RB, LFUNC:RB, RA
-    |   evmergelo STR:TMP1, TISSTR, STR:TMP1
-    |  lbz TMP3, UPVAL:RB->marked
-    |   lwz CARG2, UPVAL:RB->v
-    |  andi. TMP3, TMP3, LJ_GC_BLACK	// isblack(uv)
-    |   lbz TMP3, STR:TMP1->marked
-    |   lbz TMP2, UPVAL:RB->closed
-    |   evstdd STR:TMP1, 0(CARG2)
-    |  bne >2
-    |1:
-    |  ins_next
-    |
-    |2:  // Check if string is white and ensure upvalue is closed.
-    |  andi. TMP3, TMP3, LJ_GC_WHITES	// iswhite(str)
-    |   cmplwi cr1, TMP2, 0
-    |  cror 4*cr0+eq, 4*cr0+eq, 4*cr1+eq
-    |   la CARG1, GG_DISP2G(DISPATCH)
-    |  // Crossed a write barrier. Move the barrier forward.
-    |  beq <1
-    |  bl extern lj_gc_barrieruv	// (global_State *g, TValue *tv)
-    |  b <1
-    break;
-  case BC_USETN:
-    |  // RA = uvnum*8, RD = num_const*8
-    |  ins_next1
-    |  lwz LFUNC:RB, FRAME_FUNC(BASE)
-    |   srwi RA, RA, 1
-    |   addi RA, RA, offsetof(GCfuncL, uvptr)
-    |    evlddx TMP0, KBASE, RD
-    |  lwzx UPVAL:RB, LFUNC:RB, RA
-    |  lwz TMP1, UPVAL:RB->v
-    |  evstdd TMP0, 0(TMP1)
-    |  ins_next2
-    break;
-  case BC_USETP:
-    |  // RA = uvnum*8, RD = primitive_type*8 (~)
-    |  ins_next1
-    |  lwz LFUNC:RB, FRAME_FUNC(BASE)
-    |   srwi RA, RA, 1
-    |   addi RA, RA, offsetof(GCfuncL, uvptr)
-    |    srwi TMP0, RD, 3
-    |  lwzx UPVAL:RB, LFUNC:RB, RA
-    |    not TMP0, TMP0
-    |  lwz TMP1, UPVAL:RB->v
-    |  stw TMP0, 0(TMP1)
-    |  ins_next2
-    break;
-
-  case BC_UCLO:
-    |  // RA = level*8, RD = target
-    |  lwz TMP1, L->openupval
-    |  branch_RD			// Do this first since RD is not saved.
-    |   stw BASE, L->base
-    |  cmplwi TMP1, 0
-    |   mr CARG1, L
-    |  beq >1
-    |   add CARG2, BASE, RA
-    |  bl extern lj_func_closeuv	// (lua_State *L, TValue *level)
-    |  lwz BASE, L->base
-    |1:
-    |  ins_next
-    break;
-
-  case BC_FNEW:
-    |  // RA = dst*8, RD = proto_const*8 (~) (holding function prototype)
-    |  srwi TMP1, RD, 1
-    |   stw BASE, L->base
-    |  subfic TMP1, TMP1, -4
-    |   stw PC, SAVE_PC
-    |  lwzx CARG2, KBASE, TMP1		// KBASE-4-tab_const*4
-    |   mr CARG1, L
-    |  lwz CARG3, FRAME_FUNC(BASE)
-    |  // (lua_State *L, GCproto *pt, GCfuncL *parent)
-    |  bl extern lj_func_newL_gc
-    |  // Returns GCfuncL *.
-    |  lwz BASE, L->base
-    |  evmergelo LFUNC:CRET1, TISFUNC, LFUNC:CRET1
-    |  evstddx LFUNC:CRET1, BASE, RA
-    |  ins_next
-    break;
-
-  /* -- Table ops --------------------------------------------------------- */
-
-  case BC_TNEW:
-  case BC_TDUP:
-    |  // RA = dst*8, RD = (hbits|asize)*8 | tab_const*8 (~)
-    |  lwz TMP0, DISPATCH_GL(gc.total)(DISPATCH)
-    |   mr CARG1, L
-    |  lwz TMP1, DISPATCH_GL(gc.threshold)(DISPATCH)
-    |   stw BASE, L->base
-    |  cmplw TMP0, TMP1
-    |   stw PC, SAVE_PC
-    |  bge >5
-    |1:
-    if (op == BC_TNEW) {
-      |  rlwinm CARG2, RD, 29, 21, 31
-      |  rlwinm CARG3, RD, 18, 27, 31
-      |  cmpwi CARG2, 0x7ff
-      |   li TMP1, 0x801
-      |  iseleq CARG2, TMP1, CARG2
-      |  bl extern lj_tab_new  // (lua_State *L, int32_t asize, uint32_t hbits)
-      |  // Returns Table *.
-    } else {
-      |  srwi TMP1, RD, 1
-      |  subfic TMP1, TMP1, -4
-      |  lwzx CARG2, KBASE, TMP1		// KBASE-4-tab_const*4
-      |  bl extern lj_tab_dup  // (lua_State *L, Table *kt)
-      |  // Returns Table *.
-    }
-    |  lwz BASE, L->base
-    |  evmergelo TAB:CRET1, TISTAB, TAB:CRET1
-    |  evstddx TAB:CRET1, BASE, RA
-    |  ins_next
-    |5:
-    |  mr SAVE0, RD
-    |  bl extern lj_gc_step_fixtop  // (lua_State *L)
-    |  mr RD, SAVE0
-    |  mr CARG1, L
-    |  b <1
-    break;
-
-  case BC_GGET:
-    |  // RA = dst*8, RD = str_const*8 (~)
-  case BC_GSET:
-    |  // RA = src*8, RD = str_const*8 (~)
-    |  lwz LFUNC:TMP2, FRAME_FUNC(BASE)
-    |   srwi TMP1, RD, 1
-    |  lwz TAB:RB, LFUNC:TMP2->env
-    |   subfic TMP1, TMP1, -4
-    |   lwzx STR:RC, KBASE, TMP1	// KBASE-4-str_const*4
-    if (op == BC_GGET) {
-      |  b ->BC_TGETS_Z
-    } else {
-      |  b ->BC_TSETS_Z
-    }
-    break;
-
-  case BC_TGETV:
-    |  // RA = dst*8, RB = table*8, RC = key*8
-    |  evlddx TAB:RB, BASE, RB
-    |   evlddx RC, BASE, RC
-    |  checktab TAB:RB
-    |  checkfail ->vmeta_tgetv
-    |  checknum RC
-    |  checkfail >5
-    |  // Convert number key to integer
-    |  efdctsi TMP2, RC
-    |   lwz TMP0, TAB:RB->asize
-    |  efdcfsi TMP1, TMP2
-    |   cmplw cr0, TMP0, TMP2
-    |  efdcmpeq cr1, RC, TMP1
-    |   lwz TMP1, TAB:RB->array
-    |  crand 4*cr0+gt, 4*cr0+gt, 4*cr1+gt
-    |   slwi TMP2, TMP2, 3
-    |  ble ->vmeta_tgetv		// Integer key and in array part?
-    |  evlddx TMP1, TMP1, TMP2
-    |  checknil TMP1
-    |  checkok >2
-    |1:
-    |  evstddx TMP1, BASE, RA
-    |  ins_next
-    |
-    |2:  // Check for __index if table value is nil.
-    |  lwz TAB:TMP2, TAB:RB->metatable
-    |  cmplwi TAB:TMP2, 0
-    |  beq <1				// No metatable: done.
-    |  lbz TMP0, TAB:TMP2->nomm
-    |  andi. TMP0, TMP0, 1<<MM_index
-    |  bne <1				// 'no __index' flag set: done.
-    |  b ->vmeta_tgetv
-    |
-    |5:
-    |  checkstr STR:RC			// String key?
-    |  checkok ->BC_TGETS_Z
-    |  b ->vmeta_tgetv
-    break;
-  case BC_TGETS:
-    |  // RA = dst*8, RB = table*8, RC = str_const*8 (~)
-    |  evlddx TAB:RB, BASE, RB
-    |   srwi TMP1, RC, 1
-    |  checktab TAB:RB
-    |   subfic TMP1, TMP1, -4
-    |   lwzx STR:RC, KBASE, TMP1	// KBASE-4-str_const*4
-    |  checkfail ->vmeta_tgets1
-    |->BC_TGETS_Z:
-    |  // TAB:RB = GCtab *, STR:RC = GCstr *, RA = dst*8
-    |  lwz TMP0, TAB:RB->hmask
-    |  lwz TMP1, STR:RC->hash
-    |  lwz NODE:TMP2, TAB:RB->node
-    |   evmergelo STR:RC, TISSTR, STR:RC
-    |  and TMP1, TMP1, TMP0		// idx = str->hash & tab->hmask
-    |  slwi TMP0, TMP1, 5
-    |  slwi TMP1, TMP1, 3
-    |  sub TMP1, TMP0, TMP1
-    |  add NODE:TMP2, NODE:TMP2, TMP1	// node = tab->node + (idx*32-idx*8)
-    |1:
-    |  evldd TMP0, NODE:TMP2->key
-    |   evldd TMP1, NODE:TMP2->val
-    |  evcmpeq TMP0, STR:RC
-    |  checkanyfail >4
-    |   checknil TMP1
-    |   checkok >5			// Key found, but nil value?
-    |3:
-    |   evstddx TMP1, BASE, RA
-    |  ins_next
-    |
-    |4:  // Follow hash chain.
-    |  lwz NODE:TMP2, NODE:TMP2->next
-    |  cmplwi NODE:TMP2, 0
-    |  bne <1
-    |  // End of hash chain: key not found, nil result.
-    |   evmr TMP1, TISNIL
-    |
-    |5:  // Check for __index if table value is nil.
-    |  lwz TAB:TMP2, TAB:RB->metatable
-    |  cmplwi TAB:TMP2, 0
-    |  beq <3				// No metatable: done.
-    |  lbz TMP0, TAB:TMP2->nomm
-    |  andi. TMP0, TMP0, 1<<MM_index
-    |  bne <3				// 'no __index' flag set: done.
-    |  b ->vmeta_tgets
-    break;
-  case BC_TGETB:
-    |  // RA = dst*8, RB = table*8, RC = index*8
-    |  evlddx TAB:RB, BASE, RB
-    |   srwi TMP0, RC, 3
-    |  checktab TAB:RB
-    |  checkfail ->vmeta_tgetb
-    |  lwz TMP1, TAB:RB->asize
-    |   lwz TMP2, TAB:RB->array
-    |  cmplw TMP0, TMP1
-    |  bge ->vmeta_tgetb
-    |  evlddx TMP1, TMP2, RC
-    |  checknil TMP1
-    |  checkok >5
-    |1:
-    |  ins_next1
-    |  evstddx TMP1, BASE, RA
-    |  ins_next2
-    |
-    |5:  // Check for __index if table value is nil.
-    |  lwz TAB:TMP2, TAB:RB->metatable
-    |  cmplwi TAB:TMP2, 0
-    |  beq <1				// No metatable: done.
-    |  lbz TMP2, TAB:TMP2->nomm
-    |  andi. TMP2, TMP2, 1<<MM_index
-    |  bne <1				// 'no __index' flag set: done.
-    |  b ->vmeta_tgetb			// Caveat: preserve TMP0!
-    break;
-
-  case BC_TSETV:
-    |  // RA = src*8, RB = table*8, RC = key*8
-    |  evlddx TAB:RB, BASE, RB
-    |   evlddx RC, BASE, RC
-    |  checktab TAB:RB
-    |  checkfail ->vmeta_tsetv
-    |  checknum RC
-    |  checkfail >5
-    |  // Convert number key to integer
-    |  efdctsi TMP2, RC
-    |    evlddx SAVE0, BASE, RA
-    |   lwz TMP0, TAB:RB->asize
-    |  efdcfsi TMP1, TMP2
-    |   cmplw cr0, TMP0, TMP2
-    |  efdcmpeq cr1, RC, TMP1
-    |   lwz TMP1, TAB:RB->array
-    |  crand 4*cr0+gt, 4*cr0+gt, 4*cr1+gt
-    |   slwi TMP0, TMP2, 3
-    |  ble ->vmeta_tsetv		// Integer key and in array part?
-    |   lbz TMP3, TAB:RB->marked
-    |  evlddx TMP2, TMP1, TMP0
-    |  checknil TMP2
-    |  checkok >3
-    |1:
-    |  andi. TMP2, TMP3, LJ_GC_BLACK	// isblack(table)
-    |   evstddx SAVE0, TMP1, TMP0
-    |  bne >7
-    |2:
-    |  ins_next
-    |
-    |3:  // Check for __newindex if previous value is nil.
-    |  lwz TAB:TMP2, TAB:RB->metatable
-    |  cmplwi TAB:TMP2, 0
-    |  beq <1				// No metatable: done.
-    |  lbz TMP2, TAB:TMP2->nomm
-    |  andi. TMP2, TMP2, 1<<MM_newindex
-    |  bne <1				// 'no __newindex' flag set: done.
-    |  b ->vmeta_tsetv
-    |
-    |5:
-    |  checkstr STR:RC			// String key?
-    |  checkok ->BC_TSETS_Z
-    |  b ->vmeta_tsetv
-    |
-    |7:  // Possible table write barrier for the value. Skip valiswhite check.
-    |  barrierback TAB:RB, TMP3, TMP0
-    |  b <2
-    break;
-  case BC_TSETS:
-    |  // RA = src*8, RB = table*8, RC = str_const*8 (~)
-    |  evlddx TAB:RB, BASE, RB
-    |   srwi TMP1, RC, 1
-    |  checktab TAB:RB
-    |   subfic TMP1, TMP1, -4
-    |   lwzx STR:RC, KBASE, TMP1	// KBASE-4-str_const*4
-    |  checkfail ->vmeta_tsets1
-    |->BC_TSETS_Z:
-    |  // TAB:RB = GCtab *, STR:RC = GCstr *, RA = src*8
-    |  lwz TMP0, TAB:RB->hmask
-    |  lwz TMP1, STR:RC->hash
-    |  lwz NODE:TMP2, TAB:RB->node
-    |   evmergelo STR:RC, TISSTR, STR:RC
-    |    stb ZERO, TAB:RB->nomm		// Clear metamethod cache.
-    |  and TMP1, TMP1, TMP0		// idx = str->hash & tab->hmask
-    |    evlddx SAVE0, BASE, RA
-    |  slwi TMP0, TMP1, 5
-    |  slwi TMP1, TMP1, 3
-    |  sub TMP1, TMP0, TMP1
-    |    lbz TMP3, TAB:RB->marked
-    |  add NODE:TMP2, NODE:TMP2, TMP1	// node = tab->node + (idx*32-idx*8)
-    |1:
-    |  evldd TMP0, NODE:TMP2->key
-    |   evldd TMP1, NODE:TMP2->val
-    |  evcmpeq TMP0, STR:RC
-    |  checkanyfail >5
-    |   checknil TMP1
-    |   checkok >4			// Key found, but nil value?
-    |2:
-    |  andi. TMP0, TMP3, LJ_GC_BLACK	// isblack(table)
-    |    evstdd SAVE0, NODE:TMP2->val
-    |  bne >7
-    |3:
-    |  ins_next
-    |
-    |4:  // Check for __newindex if previous value is nil.
-    |  lwz TAB:TMP1, TAB:RB->metatable
-    |  cmplwi TAB:TMP1, 0
-    |  beq <2				// No metatable: done.
-    |  lbz TMP0, TAB:TMP1->nomm
-    |  andi. TMP0, TMP0, 1<<MM_newindex
-    |  bne <2				// 'no __newindex' flag set: done.
-    |  b ->vmeta_tsets
-    |
-    |5:  // Follow hash chain.
-    |  lwz NODE:TMP2, NODE:TMP2->next
-    |  cmplwi NODE:TMP2, 0
-    |  bne <1
-    |  // End of hash chain: key not found, add a new one.
-    |
-    |  // But check for __newindex first.
-    |  lwz TAB:TMP1, TAB:RB->metatable
-    |   la CARG3, DISPATCH_GL(tmptv)(DISPATCH)
-    |   stw PC, SAVE_PC
-    |   mr CARG1, L
-    |  cmplwi TAB:TMP1, 0
-    |   stw BASE, L->base
-    |  beq >6				// No metatable: continue.
-    |  lbz TMP0, TAB:TMP1->nomm
-    |  andi. TMP0, TMP0, 1<<MM_newindex
-    |  beq ->vmeta_tsets		// 'no __newindex' flag NOT set: check.
-    |6:
-    |  mr CARG2, TAB:RB
-    |  evstdd STR:RC, 0(CARG3)
-    |  bl extern lj_tab_newkey		// (lua_State *L, GCtab *t, TValue *k)
-    |  // Returns TValue *.
-    |  lwz BASE, L->base
-    |  evstdd SAVE0, 0(CRET1)
-    |  b <3				// No 2nd write barrier needed.
-    |
-    |7:  // Possible table write barrier for the value. Skip valiswhite check.
-    |  barrierback TAB:RB, TMP3, TMP0
-    |  b <3
-    break;
-  case BC_TSETB:
-    |  // RA = src*8, RB = table*8, RC = index*8
-    |  evlddx TAB:RB, BASE, RB
-    |   srwi TMP0, RC, 3
-    |  checktab TAB:RB
-    |  checkfail ->vmeta_tsetb
-    |  lwz TMP1, TAB:RB->asize
-    |   lwz TMP2, TAB:RB->array
-    |    lbz TMP3, TAB:RB->marked
-    |  cmplw TMP0, TMP1
-    |   evlddx SAVE0, BASE, RA
-    |  bge ->vmeta_tsetb
-    |  evlddx TMP1, TMP2, RC
-    |  checknil TMP1
-    |  checkok >5
-    |1:
-    |  andi. TMP0, TMP3, LJ_GC_BLACK	// isblack(table)
-    |   evstddx SAVE0, TMP2, RC
-    |  bne >7
-    |2:
-    |  ins_next
-    |
-    |5:  // Check for __newindex if previous value is nil.
-    |  lwz TAB:TMP1, TAB:RB->metatable
-    |  cmplwi TAB:TMP1, 0
-    |  beq <1				// No metatable: done.
-    |  lbz TMP1, TAB:TMP1->nomm
-    |  andi. TMP1, TMP1, 1<<MM_newindex
-    |  bne <1				// 'no __newindex' flag set: done.
-    |  b ->vmeta_tsetb			// Caveat: preserve TMP0!
-    |
-    |7:  // Possible table write barrier for the value. Skip valiswhite check.
-    |  barrierback TAB:RB, TMP3, TMP0
-    |  b <2
-    break;
-
-  case BC_TSETM:
-    |  // RA = base*8 (table at base-1), RD = num_const*8 (start index)
-    |  add RA, BASE, RA
-    |1:
-    |   add TMP3, KBASE, RD
-    |  lwz TAB:CARG2, -4(RA)		// Guaranteed to be a table.
-    |    addic. TMP0, MULTRES, -8
-    |   lwz TMP3, 4(TMP3)		// Integer constant is in lo-word.
-    |    srwi CARG3, TMP0, 3
-    |    beq >4				// Nothing to copy?
-    |  add CARG3, CARG3, TMP3
-    |  lwz TMP2, TAB:CARG2->asize
-    |   slwi TMP1, TMP3, 3
-    |    lbz TMP3, TAB:CARG2->marked
-    |  cmplw CARG3, TMP2
-    |   add TMP2, RA, TMP0
-    |   lwz TMP0, TAB:CARG2->array
-    |  bgt >5
-    |   add TMP1, TMP1, TMP0
-    |    andi. TMP0, TMP3, LJ_GC_BLACK	// isblack(table)
-    |3:  // Copy result slots to table.
-    |   evldd TMP0, 0(RA)
-    |  addi RA, RA, 8
-    |  cmpw cr1, RA, TMP2
-    |   evstdd TMP0, 0(TMP1)
-    |    addi TMP1, TMP1, 8
-    |  blt cr1, <3
-    |  bne >7
-    |4:
-    |  ins_next
-    |
-    |5:  // Need to resize array part.
-    |   stw BASE, L->base
-    |  mr CARG1, L
-    |   stw PC, SAVE_PC
-    |  mr SAVE0, RD
-    |  bl extern lj_tab_reasize		// (lua_State *L, GCtab *t, int nasize)
-    |  // Must not reallocate the stack.
-    |  mr RD, SAVE0
-    |  b <1
-    |
-    |7:  // Possible table write barrier for any value. Skip valiswhite check.
-    |  barrierback TAB:CARG2, TMP3, TMP0
-    |  b <4
-    break;
-
-  /* -- Calls and vararg handling ----------------------------------------- */
-
-  case BC_CALLM:
-    |  // RA = base*8, (RB = (nresults+1)*8,) RC = extra_nargs*8
-    |  add NARGS8:RC, NARGS8:RC, MULTRES
-    |  // Fall through. Assumes BC_CALL follows.
-    break;
-  case BC_CALL:
-    |  // RA = base*8, (RB = (nresults+1)*8,) RC = (nargs+1)*8
-    |  evlddx LFUNC:RB, BASE, RA
-    |   mr TMP2, BASE
-    |   add BASE, BASE, RA
-    |    subi NARGS8:RC, NARGS8:RC, 8
-    |  checkfunc LFUNC:RB
-    |   addi BASE, BASE, 8
-    |  checkfail ->vmeta_call
-    |  ins_call
-    break;
-
-  case BC_CALLMT:
-    |  // RA = base*8, (RB = 0,) RC = extra_nargs*8
-    |  add NARGS8:RC, NARGS8:RC, MULTRES
-    |  // Fall through. Assumes BC_CALLT follows.
-    break;
-  case BC_CALLT:
-    |  // RA = base*8, (RB = 0,) RC = (nargs+1)*8
-    |  evlddx LFUNC:RB, BASE, RA
-    |   add RA, BASE, RA
-    |    lwz TMP1, FRAME_PC(BASE)
-    |    subi NARGS8:RC, NARGS8:RC, 8
-    |  checkfunc LFUNC:RB
-    |   addi RA, RA, 8
-    |  checkfail ->vmeta_callt
-    |->BC_CALLT_Z:
-    |  andi. TMP0, TMP1, FRAME_TYPE	// Caveat: preserve cr0 until the crand.
-    |   lbz TMP3, LFUNC:RB->ffid
-    |    xori TMP2, TMP1, FRAME_VARG
-    |    cmplwi cr1, NARGS8:RC, 0
-    |  bne >7
-    |1:
-    |  stw LFUNC:RB, FRAME_FUNC(BASE)	// Copy function down, but keep PC.
-    |  li TMP2, 0
-    |   cmplwi cr7, TMP3, 1		// (> FF_C) Calling a fast function?
-    |    beq cr1, >3
-    |2:
-    |  addi TMP3, TMP2, 8
-    |   evlddx TMP0, RA, TMP2
-    |  cmplw cr1, TMP3, NARGS8:RC
-    |   evstddx TMP0, BASE, TMP2
-    |  mr TMP2, TMP3
-    |  bne cr1, <2
-    |3:
-    |  crand 4*cr0+eq, 4*cr0+eq, 4*cr7+gt
-    |  beq >5
-    |4:
-    |  ins_callt
-    |
-    |5:  // Tailcall to a fast function with a Lua frame below.
-    |  lwz INS, -4(TMP1)
-    |  decode_RA8 RA, INS
-    |  sub TMP1, BASE, RA
-    |  lwz LFUNC:TMP1, FRAME_FUNC-8(TMP1)
-    |  lwz TMP1, LFUNC:TMP1->pc
-    |  lwz KBASE, PC2PROTO(k)(TMP1)	// Need to prepare KBASE.
-    |  b <4
-    |
-    |7:  // Tailcall from a vararg function.
-    |  andi. TMP0, TMP2, FRAME_TYPEP
-    |  bne <1				// Vararg frame below?
-    |  sub BASE, BASE, TMP2		// Relocate BASE down.
-    |  lwz TMP1, FRAME_PC(BASE)
-    |  andi. TMP0, TMP1, FRAME_TYPE
-    |  b <1
-    break;
-
-  case BC_ITERC:
-    |  // RA = base*8, (RB = (nresults+1)*8, RC = (nargs+1)*8 ((2+1)*8))
-    |  subi RA, RA, 24			// evldd doesn't support neg. offsets.
-    |   mr TMP2, BASE
-    |  evlddx LFUNC:RB, BASE, RA
-    |   add BASE, BASE, RA
-    |   evldd TMP0, 8(BASE)
-    |    evldd TMP1, 16(BASE)
-    |  evstdd LFUNC:RB, 24(BASE)	// Copy callable.
-    |  checkfunc LFUNC:RB
-    |   evstdd TMP0, 32(BASE)		// Copy state.
-    |     li NARGS8:RC, 16		// Iterators get 2 arguments.
-    |    evstdd TMP1, 40(BASE)		// Copy control var.
-    |     addi BASE, BASE, 32
-    |  checkfail ->vmeta_call
-    |  ins_call
-    break;
-
-  case BC_ITERN:
-    |  // RA = base*8, (RB = (nresults+1)*8, RC = (nargs+1)*8 (2+1)*8)
-    |.if JIT
-    |  // NYI: add hotloop, record BC_ITERN.
-    |.endif
-    |  add RA, BASE, RA
-    |  lwz TAB:RB, -12(RA)
-    |  lwz RC, -4(RA)			// Get index from control var.
-    |  lwz TMP0, TAB:RB->asize
-    |  lwz TMP1, TAB:RB->array
-    |   addi PC, PC, 4
-    |1:  // Traverse array part.
-    |  cmplw RC, TMP0
-    |   slwi TMP3, RC, 3
-    |  bge >5				// Index points after array part?
-    |  evlddx TMP2, TMP1, TMP3
-    |  checknil TMP2
-    |     lwz INS, -4(PC)
-    |  checkok >4
-    |   efdcfsi TMP0, RC
-    |    addi RC, RC, 1
-    |     addis TMP3, PC, -(BCBIAS_J*4 >> 16)
-    |  evstdd TMP2, 8(RA)
-    |     decode_RD4 TMP1, INS
-    |    stw RC, -4(RA)			// Update control var.
-    |     add PC, TMP1, TMP3
-    |   evstdd TMP0, 0(RA)
-    |3:
-    |  ins_next
-    |
-    |4:  // Skip holes in array part.
-    |  addi RC, RC, 1
-    |  b <1
-    |
-    |5:  // Traverse hash part.
-    |  lwz TMP1, TAB:RB->hmask
-    |  sub RC, RC, TMP0
-    |   lwz TMP2, TAB:RB->node
-    |6:
-    |  cmplw RC, TMP1			// End of iteration? Branch to ITERL+1.
-    |   slwi TMP3, RC, 5
-    |  bgt <3
-    |   slwi RB, RC, 3
-    |   sub TMP3, TMP3, RB
-    |  evlddx RB, TMP2, TMP3
-    |   add NODE:TMP3, TMP2, TMP3
-    |  checknil RB
-    |     lwz INS, -4(PC)
-    |  checkok >7
-    |   evldd TMP3, NODE:TMP3->key
-    |     addis TMP2, PC, -(BCBIAS_J*4 >> 16)
-    |  evstdd RB, 8(RA)
-    |    add RC, RC, TMP0
-    |     decode_RD4 TMP1, INS
-    |   evstdd TMP3, 0(RA)
-    |    addi RC, RC, 1
-    |     add PC, TMP1, TMP2
-    |    stw RC, -4(RA)			// Update control var.
-    |  b <3
-    |
-    |7:  // Skip holes in hash part.
-    |  addi RC, RC, 1
-    |  b <6
-    break;
-
-  case BC_ISNEXT:
-    |  // RA = base*8, RD = target (points to ITERN)
-    |  add RA, BASE, RA
-    |   li TMP2, -24
-    |  evlddx CFUNC:TMP1, RA, TMP2
-    |   lwz TMP2, -16(RA)
-    |    lwz TMP3, -8(RA)
-    |  evmergehi TMP0, CFUNC:TMP1, CFUNC:TMP1
-    |   cmpwi cr0, TMP2, LJ_TTAB
-    |  cmpwi cr1, TMP0, LJ_TFUNC
-    |    cmpwi cr6, TMP3, LJ_TNIL
-    |  bne cr1, >5
-    |  lbz TMP1, CFUNC:TMP1->ffid
-    |   crand 4*cr0+eq, 4*cr0+eq, 4*cr6+eq
-    |  cmpwi cr7, TMP1, FF_next_N
-    |    srwi TMP0, RD, 1
-    |  crand 4*cr0+eq, 4*cr0+eq, 4*cr7+eq
-    |    add TMP3, PC, TMP0
-    |  bne cr0, >5
-    |  lus TMP1, 0xfffe
-    |  ori TMP1, TMP1, 0x7fff
-    |  stw ZERO, -4(RA)			// Initialize control var.
-    |  stw TMP1, -8(RA)
-    |    addis PC, TMP3, -(BCBIAS_J*4 >> 16)
-    |1:
-    |  ins_next
-    |5:  // Despecialize bytecode if any of the checks fail.
-    |  li TMP0, BC_JMP
-    |   li TMP1, BC_ITERC
-    |  stb TMP0, -1(PC)
-    |    addis PC, TMP3, -(BCBIAS_J*4 >> 16)
-    |   stb TMP1, 3(PC)
-    |  b <1
-    break;
-
-  case BC_VARG:
-    |  // RA = base*8, RB = (nresults+1)*8, RC = numparams*8
-    |  lwz TMP0, FRAME_PC(BASE)
-    |  add RC, BASE, RC
-    |   add RA, BASE, RA
-    |  addi RC, RC, FRAME_VARG
-    |   add TMP2, RA, RB
-    |  subi TMP3, BASE, 8		// TMP3 = vtop
-    |  sub RC, RC, TMP0			// RC = vbase
-    |  // Note: RC may now be even _above_ BASE if nargs was < numparams.
-    |  cmplwi cr1, RB, 0
-    |   sub. TMP1, TMP3, RC
-    |  beq cr1, >5			// Copy all varargs?
-    |   subi TMP2, TMP2, 16
-    |   ble >2				// No vararg slots?
-    |1:  // Copy vararg slots to destination slots.
-    |  evldd TMP0, 0(RC)
-    |   addi RC, RC, 8
-    |  evstdd TMP0, 0(RA)
-    |  cmplw RA, TMP2
-    |   cmplw cr1, RC, TMP3
-    |  bge >3				// All destination slots filled?
-    |    addi RA, RA, 8
-    |   blt cr1, <1			// More vararg slots?
-    |2:  // Fill up remainder with nil.
-    |  evstdd TISNIL, 0(RA)
-    |  cmplw RA, TMP2
-    |   addi RA, RA, 8
-    |  blt <2
-    |3:
-    |  ins_next
-    |
-    |5:  // Copy all varargs.
-    |  lwz TMP0, L->maxstack
-    |   li MULTRES, 8			// MULTRES = (0+1)*8
-    |  ble <3				// No vararg slots?
-    |  add TMP2, RA, TMP1
-    |  cmplw TMP2, TMP0
-    |   addi MULTRES, TMP1, 8
-    |  bgt >7
-    |6:
-    |  evldd TMP0, 0(RC)
-    |   addi RC, RC, 8
-    |  evstdd TMP0, 0(RA)
-    |  cmplw RC, TMP3
-    |   addi RA, RA, 8
-    |  blt <6				// More vararg slots?
-    |  b <3
-    |
-    |7:  // Grow stack for varargs.
-    |  mr CARG1, L
-    |   stw RA, L->top
-    |  sub SAVE0, RC, BASE		// Need delta, because BASE may change.
-    |   stw BASE, L->base
-    |  sub RA, RA, BASE
-    |   stw PC, SAVE_PC
-    |  srwi CARG2, TMP1, 3
-    |  bl extern lj_state_growstack	// (lua_State *L, int n)
-    |  lwz BASE, L->base
-    |  add RA, BASE, RA
-    |  add RC, BASE, SAVE0
-    |  subi TMP3, BASE, 8
-    |  b <6
-    break;
-
-  /* -- Returns ----------------------------------------------------------- */
-
-  case BC_RETM:
-    |  // RA = results*8, RD = extra_nresults*8
-    |  add RD, RD, MULTRES		// MULTRES >= 8, so RD >= 8.
-    |  // Fall through. Assumes BC_RET follows.
-    break;
-
-  case BC_RET:
-    |  // RA = results*8, RD = (nresults+1)*8
-    |  lwz PC, FRAME_PC(BASE)
-    |   add RA, BASE, RA
-    |    mr MULTRES, RD
-    |1:
-    |  andi. TMP0, PC, FRAME_TYPE
-    |   xori TMP1, PC, FRAME_VARG
-    |  bne ->BC_RETV_Z
-    |
-    |->BC_RET_Z:
-    |  // BASE = base, RA = resultptr, RD = (nresults+1)*8, PC = return
-    |   lwz INS, -4(PC)
-    |  cmpwi RD, 8
-    |   subi TMP2, BASE, 8
-    |   subi RC, RD, 8
-    |   decode_RB8 RB, INS
-    |  beq >3
-    |   li TMP1, 0
-    |2:
-    |  addi TMP3, TMP1, 8
-    |   evlddx TMP0, RA, TMP1
-    |  cmpw TMP3, RC
-    |   evstddx TMP0, TMP2, TMP1
-    |  beq >3
-    |  addi TMP1, TMP3, 8
-    |   evlddx TMP0, RA, TMP3
-    |  cmpw TMP1, RC
-    |   evstddx TMP0, TMP2, TMP3
-    |  bne <2
-    |3:
-    |5:
-    |  cmplw RB, RD
-    |   decode_RA8 RA, INS
-    |  bgt >6
-    |   sub BASE, TMP2, RA
-    |  lwz LFUNC:TMP1, FRAME_FUNC(BASE)
-    |  ins_next1
-    |  lwz TMP1, LFUNC:TMP1->pc
-    |  lwz KBASE, PC2PROTO(k)(TMP1)
-    |  ins_next2
-    |
-    |6:  // Fill up results with nil.
-    |  subi TMP1, RD, 8
-    |   addi RD, RD, 8
-    |  evstddx TISNIL, TMP2, TMP1
-    |  b <5
-    |
-    |->BC_RETV_Z:  // Non-standard return case.
-    |  andi. TMP2, TMP1, FRAME_TYPEP
-    |  bne ->vm_return
-    |  // Return from vararg function: relocate BASE down.
-    |  sub BASE, BASE, TMP1
-    |  lwz PC, FRAME_PC(BASE)
-    |  b <1
-    break;
-
-  case BC_RET0: case BC_RET1:
-    |  // RA = results*8, RD = (nresults+1)*8
-    |  lwz PC, FRAME_PC(BASE)
-    |   add RA, BASE, RA
-    |    mr MULTRES, RD
-    |  andi. TMP0, PC, FRAME_TYPE
-    |   xori TMP1, PC, FRAME_VARG
-    |  bne ->BC_RETV_Z
-    |
-    |  lwz INS, -4(PC)
-    |   subi TMP2, BASE, 8
-    |  decode_RB8 RB, INS
-    if (op == BC_RET1) {
-      |  evldd TMP0, 0(RA)
-      |  evstdd TMP0, 0(TMP2)
-    }
-    |5:
-    |  cmplw RB, RD
-    |   decode_RA8 RA, INS
-    |  bgt >6
-    |   sub BASE, TMP2, RA
-    |  lwz LFUNC:TMP1, FRAME_FUNC(BASE)
-    |  ins_next1
-    |  lwz TMP1, LFUNC:TMP1->pc
-    |  lwz KBASE, PC2PROTO(k)(TMP1)
-    |  ins_next2
-    |
-    |6:  // Fill up results with nil.
-    |  subi TMP1, RD, 8
-    |   addi RD, RD, 8
-    |  evstddx TISNIL, TMP2, TMP1
-    |  b <5
-    break;
-
-  /* -- Loops and branches ------------------------------------------------ */
-
-  case BC_FORL:
-    |.if JIT
-    |  hotloop
-    |.endif
-    |  // Fall through. Assumes BC_IFORL follows.
-    break;
-
-  case BC_JFORI:
-  case BC_JFORL:
-#if !LJ_HASJIT
-    break;
-#endif
-  case BC_FORI:
-  case BC_IFORL:
-    |  // RA = base*8, RD = target (after end of loop or start of loop)
-    vk = (op == BC_IFORL || op == BC_JFORL);
-    |  add RA, BASE, RA
-    |  evldd TMP1, FORL_IDX*8(RA)
-    |  evldd TMP3, FORL_STEP*8(RA)
-    |  evldd TMP2, FORL_STOP*8(RA)
-    if (!vk) {
-      |  evcmpgtu cr0, TMP1, TISNUM
-      |  evcmpgtu cr7, TMP3, TISNUM
-      |  evcmpgtu cr1, TMP2, TISNUM
-      |  cror 4*cr0+lt, 4*cr0+lt, 4*cr7+lt
-      |  cror 4*cr0+lt, 4*cr0+lt, 4*cr1+lt
-      |  blt ->vmeta_for
-    }
-    if (vk) {
-      |  efdadd TMP1, TMP1, TMP3
-      |  evstdd TMP1, FORL_IDX*8(RA)
-    }
-    |   evcmpgts TMP3, TISNIL
-    |  evstdd TMP1, FORL_EXT*8(RA)
-    |   bge >2
-    |  efdcmpgt TMP1, TMP2
-    |1:
-    if (op != BC_JFORL) {
-      |  srwi RD, RD, 1
-      |  add RD, PC, RD
-      if (op == BC_JFORI) {
-	|  addis PC, RD, -(BCBIAS_J*4 >> 16)
-      } else {
-	|  addis RD, RD, -(BCBIAS_J*4 >> 16)
-      }
-    }
-    if (op == BC_FORI) {
-      |  iselgt PC, RD, PC
-    } else if (op == BC_IFORL) {
-      |  iselgt PC, PC, RD
-    } else {
-      |  ble =>BC_JLOOP
-    }
-    |  ins_next
-    |2:
-    |  efdcmpgt TMP2, TMP1
-    |  b <1
-    break;
-
-  case BC_ITERL:
-    |.if JIT
-    |  hotloop
-    |.endif
-    |  // Fall through. Assumes BC_IITERL follows.
-    break;
-
-  case BC_JITERL:
-#if !LJ_HASJIT
-    break;
-#endif
-  case BC_IITERL:
-    |  // RA = base*8, RD = target
-    |  evlddx TMP1, BASE, RA
-    |   subi RA, RA, 8
-    |  checknil TMP1
-    |  checkok >1			// Stop if iterator returned nil.
-    if (op == BC_JITERL) {
-      |  NYI
-    } else {
-      |  branch_RD			// Otherwise save control var + branch.
-      |  evstddx TMP1, BASE, RA
-    }
-    |1:
-    |  ins_next
-    break;
-
-  case BC_LOOP:
-    |  // RA = base*8, RD = target (loop extent)
-    |  // Note: RA/RD is only used by trace recorder to determine scope/extent
-    |  // This opcode does NOT jump, it's only purpose is to detect a hot loop.
-    |.if JIT
-    |  hotloop
-    |.endif
-    |  // Fall through. Assumes BC_ILOOP follows.
-    break;
-
-  case BC_ILOOP:
-    |  // RA = base*8, RD = target (loop extent)
-    |  ins_next
-    break;
-
-  case BC_JLOOP:
-    |.if JIT
-    |  NYI
-    |.endif
-    break;
-
-  case BC_JMP:
-    |  // RA = base*8 (only used by trace recorder), RD = target
-    |  branch_RD
-    |  ins_next
-    break;
-
-  /* -- Function headers -------------------------------------------------- */
-
-  case BC_FUNCF:
-    |.if JIT
-    |  hotcall
-    |.endif
-  case BC_FUNCV:  /* NYI: compiled vararg functions. */
-    |  // Fall through. Assumes BC_IFUNCF/BC_IFUNCV follow.
-    break;
-
-  case BC_JFUNCF:
-#if !LJ_HASJIT
-    break;
-#endif
-  case BC_IFUNCF:
-    |  // BASE = new base, RA = BASE+framesize*8, RB = LFUNC, RC = nargs*8
-    |  lwz TMP2, L->maxstack
-    |   lbz TMP1, -4+PC2PROTO(numparams)(PC)
-    |    lwz KBASE, -4+PC2PROTO(k)(PC)
-    |  cmplw RA, TMP2
-    |   slwi TMP1, TMP1, 3
-    |  bgt ->vm_growstack_l
-    |  ins_next1
-    |2:
-    |  cmplw NARGS8:RC, TMP1		// Check for missing parameters.
-    |  ble >3
-    if (op == BC_JFUNCF) {
-      |  NYI
-    } else {
-      |  ins_next2
-    }
-    |
-    |3:  // Clear missing parameters.
-    |  evstddx TISNIL, BASE, NARGS8:RC
-    |  addi NARGS8:RC, NARGS8:RC, 8
-    |  b <2
-    break;
-
-  case BC_JFUNCV:
-#if !LJ_HASJIT
-    break;
-#endif
-    |  NYI  // NYI: compiled vararg functions
-    break;  /* NYI: compiled vararg functions. */
-
-  case BC_IFUNCV:
-    |  // BASE = new base, RA = BASE+framesize*8, RB = LFUNC, RC = nargs*8
-    |  lwz TMP2, L->maxstack
-    |   add TMP1, BASE, RC
-    |  add TMP0, RA, RC
-    |   stw LFUNC:RB, 4(TMP1)		// Store copy of LFUNC.
-    |   addi TMP3, RC, 8+FRAME_VARG
-    |    lwz KBASE, -4+PC2PROTO(k)(PC)
-    |  cmplw TMP0, TMP2
-    |   stw TMP3, 0(TMP1)		// Store delta + FRAME_VARG.
-    |  bge ->vm_growstack_l
-    |  lbz TMP2, -4+PC2PROTO(numparams)(PC)
-    |   mr RA, BASE
-    |   mr RC, TMP1
-    |  ins_next1
-    |  cmpwi TMP2, 0
-    |   addi BASE, TMP1, 8
-    |  beq >3
-    |1:
-    |  cmplw RA, RC			// Less args than parameters?
-    |   evldd TMP0, 0(RA)
-    |  bge >4
-    |    evstdd TISNIL, 0(RA)		// Clear old fixarg slot (help the GC).
-    |    addi RA, RA, 8
-    |2:
-    |  addic. TMP2, TMP2, -1
-    |   evstdd TMP0, 8(TMP1)
-    |    addi TMP1, TMP1, 8
-    |  bne <1
-    |3:
-    |  ins_next2
-    |
-    |4:  // Clear missing parameters.
-    |  evmr TMP0, TISNIL
-    |  b <2
-    break;
-
-  case BC_FUNCC:
-  case BC_FUNCCW:
-    |  // BASE = new base, RA = BASE+framesize*8, RB = CFUNC, RC = nargs*8
-    if (op == BC_FUNCC) {
-      |  lwz TMP3, CFUNC:RB->f
-    } else {
-      |  lwz TMP3, DISPATCH_GL(wrapf)(DISPATCH)
-    }
-    |   add TMP1, RA, NARGS8:RC
-    |   lwz TMP2, L->maxstack
-    |    add RC, BASE, NARGS8:RC
-    |   stw BASE, L->base
-    |   cmplw TMP1, TMP2
-    |    stw RC, L->top
-    |     li_vmstate C
-    |  mtctr TMP3
-    if (op == BC_FUNCCW) {
-      |  lwz CARG2, CFUNC:RB->f
-    }
-    |  mr CARG1, L
-    |   bgt ->vm_growstack_c		// Need to grow stack.
-    |     st_vmstate
-    |  bctrl				// (lua_State *L [, lua_CFunction f])
-    |  // Returns nresults.
-    |  lwz TMP1, L->top
-    |   slwi RD, CRET1, 3
-    |  lwz BASE, L->base
-    |    li_vmstate INTERP
-    |  lwz PC, FRAME_PC(BASE)		// Fetch PC of caller.
-    |   sub RA, TMP1, RD		// RA = L->top - nresults*8
-    |    st_vmstate
-    |  b ->vm_returnc
-    break;
-
-  /* ---------------------------------------------------------------------- */
-
-  default:
-    fprintf(stderr, "Error: undefined opcode BC_%s\n", bc_names[op]);
-    exit(2);
-    break;
-  }
-}
-
-static int build_backend(BuildCtx *ctx)
-{
-  int op;
-
-  dasm_growpc(Dst, BC__MAX);
-
-  build_subroutines(ctx);
-
-  |.code_op
-  for (op = 0; op < BC__MAX; op++)
-    build_ins(ctx, (BCOp)op, op);
-
-  return BC__MAX;
-}
-
-/* Emit pseudo frame-info for all assembler functions. */
-static void emit_asm_debug(BuildCtx *ctx)
-{
-  int i;
-  switch (ctx->mode) {
-  case BUILD_elfasm:
-    fprintf(ctx->fp, "\t.section .debug_frame,\"\",@progbits\n");
-    fprintf(ctx->fp,
-	".Lframe0:\n"
-	"\t.long .LECIE0-.LSCIE0\n"
-	".LSCIE0:\n"
-	"\t.long 0xffffffff\n"
-	"\t.byte 0x1\n"
-	"\t.string \"\"\n"
-	"\t.uleb128 0x1\n"
-	"\t.sleb128 -4\n"
-	"\t.byte 65\n"
-	"\t.byte 0xc\n\t.uleb128 1\n\t.uleb128 0\n"
-	"\t.align 2\n"
-	".LECIE0:\n\n");
-    fprintf(ctx->fp,
-	".LSFDE0:\n"
-	"\t.long .LEFDE0-.LASFDE0\n"
-	".LASFDE0:\n"
-	"\t.long .Lframe0\n"
-	"\t.long .Lbegin\n"
-	"\t.long %d\n"
-	"\t.byte 0xe\n\t.uleb128 %d\n"
-	"\t.byte 0x11\n\t.uleb128 65\n\t.sleb128 -1\n"
-	"\t.byte 0x5\n\t.uleb128 70\n\t.sleb128 37\n",
-	(int)ctx->codesz, CFRAME_SIZE);
-    for (i = 14; i <= 31; i++)
-      fprintf(ctx->fp,
-	"\t.byte %d\n\t.uleb128 %d\n"
-	"\t.byte 5\n\t.uleb128 %d\n\t.uleb128 %d\n",
-	0x80+i, 1+2*(31-i), 1200+i, 2+2*(31-i));
-    fprintf(ctx->fp,
-	"\t.align 2\n"
-	".LEFDE0:\n\n");
-    fprintf(ctx->fp, "\t.section .eh_frame,\"a\",@progbits\n");
-    fprintf(ctx->fp,
-	".Lframe1:\n"
-	"\t.long .LECIE1-.LSCIE1\n"
-	".LSCIE1:\n"
-	"\t.long 0\n"
-	"\t.byte 0x1\n"
-	"\t.string \"zPR\"\n"
-	"\t.uleb128 0x1\n"
-	"\t.sleb128 -4\n"
-	"\t.byte 65\n"
-	"\t.uleb128 6\n"			/* augmentation length */
-	"\t.byte 0x1b\n"			/* pcrel|sdata4 */
-	"\t.long lj_err_unwind_dwarf-.\n"
-	"\t.byte 0x1b\n"			/* pcrel|sdata4 */
-	"\t.byte 0xc\n\t.uleb128 1\n\t.uleb128 0\n"
-	"\t.align 2\n"
-	".LECIE1:\n\n");
-    fprintf(ctx->fp,
-	".LSFDE1:\n"
-	"\t.long .LEFDE1-.LASFDE1\n"
-	".LASFDE1:\n"
-	"\t.long .LASFDE1-.Lframe1\n"
-	"\t.long .Lbegin-.\n"
-	"\t.long %d\n"
-	"\t.uleb128 0\n"			/* augmentation length */
-	"\t.byte 0xe\n\t.uleb128 %d\n"
-	"\t.byte 0x11\n\t.uleb128 65\n\t.sleb128 -1\n"
-	"\t.byte 0x5\n\t.uleb128 70\n\t.sleb128 37\n",
-	(int)ctx->codesz, CFRAME_SIZE);
-    for (i = 14; i <= 31; i++)
-      fprintf(ctx->fp,
-	"\t.byte %d\n\t.uleb128 %d\n"
-	"\t.byte 5\n\t.uleb128 %d\n\t.uleb128 %d\n",
-	0x80+i, 1+2*(31-i), 1200+i, 2+2*(31-i));
-    fprintf(ctx->fp,
-	"\t.align 2\n"
-	".LEFDE1:\n\n");
-    break;
-  default:
-    break;
-  }
-}
-

commit d5e12d5174720fbd3c5fad4e02da5850b8433057
Merge: 92c011b5 cc4bbec4
Author: Mike Pall <mike>
Date:   Fri May 8 14:00:07 2020 +0200

    Merge branch 'master' into v2.1

commit cc4bbec483d3f3250b519ccb7cc22f1a8e6fe6f0
Author: Mike Pall <mike>
Date:   Fri May 8 13:50:41 2020 +0200

    FFI: Always fall back to metamethods for cdata length/concat.
    
    Thanks to Egor Skriptunoff.

diff --git a/src/lib_ffi.c b/src/lib_ffi.c
index 5851eea5..c7a26f56 100644
--- a/src/lib_ffi.c
+++ b/src/lib_ffi.c
@@ -193,7 +193,7 @@ LJLIB_CF(ffi_meta___eq)		LJLIB_REC(cdata_arith MM_eq)
 
 LJLIB_CF(ffi_meta___len)	LJLIB_REC(cdata_arith MM_len)
 {
-  return lj_carith_len(L);
+  return ffi_arith(L);
 }
 
 LJLIB_CF(ffi_meta___lt)		LJLIB_REC(cdata_arith MM_lt)
diff --git a/src/lj_carith.c b/src/lj_carith.c
index b33b1f36..530d5ddb 100644
--- a/src/lj_carith.c
+++ b/src/lj_carith.c
@@ -263,7 +263,7 @@ int lj_carith_op(lua_State *L, MMS mm)
 {
   CTState *cts = ctype_cts(L);
   CDArith ca;
-  if (carith_checkarg(L, cts, &ca)) {
+  if (carith_checkarg(L, cts, &ca) && mm != MM_len && mm != MM_concat) {
     if (carith_int64(L, cts, &ca, mm) || carith_ptr(L, cts, &ca, mm)) {
       copyTV(L, &G(L)->tmptv2, L->top-1);  /* Remember for trace recorder. */
       return 1;
@@ -272,15 +272,6 @@ int lj_carith_op(lua_State *L, MMS mm)
   return lj_carith_meta(L, cts, &ca, mm);
 }
 
-/* No built-in functionality for length of cdata. */
-int lj_carith_len(lua_State *L)
-{
-  CTState *cts = ctype_cts(L);
-  CDArith ca;
-  carith_checkarg(L, cts, &ca);
-  return lj_carith_meta(L, cts, &ca, MM_len);
-}
-
 /* -- 64 bit integer arithmetic helpers ----------------------------------- */
 
 #if LJ_32 && LJ_HASJIT
diff --git a/src/lj_carith.h b/src/lj_carith.h
index bac3e1a4..207809df 100644
--- a/src/lj_carith.h
+++ b/src/lj_carith.h
@@ -11,7 +11,6 @@
 #if LJ_HASFFI
 
 LJ_FUNC int lj_carith_op(lua_State *L, MMS mm);
-LJ_FUNC int lj_carith_len(lua_State *L);
 
 #if LJ_32 && LJ_HASJIT
 LJ_FUNC int64_t lj_carith_mul64(int64_t x, int64_t k);
diff --git a/src/lj_crecord.c b/src/lj_crecord.c
index 99344b79..6e3c36a1 100644
--- a/src/lj_crecord.c
+++ b/src/lj_crecord.c
@@ -1443,8 +1443,10 @@ void LJ_FASTCALL recff_cdata_arith(jit_State *J, RecordFFData *rd)
   }
   {
     TRef tr;
-    if (!(tr = crec_arith_int64(J, sp, s, (MMS)rd->data)) &&
-	!(tr = crec_arith_ptr(J, sp, s, (MMS)rd->data)) &&
+    MMS mm = (MMS)rd->data;
+    if ((mm == MM_len || mm == MM_concat ||
+	 (!(tr = crec_arith_int64(J, sp, s, mm)) &&
+	  !(tr = crec_arith_ptr(J, sp, s, mm)))) &&
 	!(tr = crec_arith_meta(J, sp, s, cts, rd)))
       return;
     J->base[0] = tr;

commit 92c011b5117f237f2554c5745646ea566ce0d568
Author: Mike Pall <mike>
Date:   Tue May 5 12:32:55 2020 +0200

    Windows: Make actual use of internal allocator optimization.
    
    Thanks to Nicholas Ham.

diff --git a/src/lj_alloc.c b/src/lj_alloc.c
index 33a2eb8f..a12ec8b4 100644
--- a/src/lj_alloc.c
+++ b/src/lj_alloc.c
@@ -151,7 +151,7 @@ static void *CALL_MMAP(size_t size)
 }
 
 /* For direct MMAP, use MEM_TOP_DOWN to minimize interference */
-static void *DIRECT_MMAP(size_t size)
+static void *direct_mmap(size_t size)
 {
   DWORD olderr = GetLastError();
   void *ptr = NULL;
@@ -173,7 +173,7 @@ static void *CALL_MMAP(size_t size)
 }
 
 /* For direct MMAP, use MEM_TOP_DOWN to minimize interference */
-static void *DIRECT_MMAP(size_t size)
+static void *direct_mmap(size_t size)
 {
   DWORD olderr = GetLastError();
   void *ptr = LJ_WIN_VALLOC(0, size, MEM_RESERVE|MEM_COMMIT|MEM_TOP_DOWN,
@@ -184,6 +184,8 @@ static void *DIRECT_MMAP(size_t size)
 
 #endif
 
+#define DIRECT_MMAP(size)	direct_mmap(size)
+
 /* This function supports releasing coalesed segments */
 static int CALL_MUNMAP(void *ptr, size_t size)
 {

commit 2763a421d6219c8cb2bbd39246de619dc796bab6
Author: Guy Menanteau <menantea@fr.ibm.com>
Date:   Tue Jun 11 11:11:47 2019 +0000

    Patch for PPC64 support
    
     Create a patch for PPC64 support based on
    https://github.com/LuaJIT/LuaJIT/pull/140.
    https://bugzilla.redhat.com/show_bug.cgi?id=1591701
     This patch has been rebased to match FPU support
    
    Author: Guy Menanteau <menantea@fr.ibm.com>
    
    Signed-Off-By: Marcin Kościelnicki <koriakin@0x04.net
    Signed-Off-By: Siddhesh Poyarekar <siddhesh@gotplt.org>
    
    [ppc] Fix access beyond list in ipairs
    
    The load into TMP2 was incorrectly put into ENDIAN_LE, which made the
    subsequent check invalid.
    
    [ppc] Fix typo
    
    [ppc]  Load BASEP4 as much as possible
    
    BASEP4 doesn't seem to get initialized all the time, especially when
    BASE is updated because of which programs can crash at random on
    ppc32.  Err on the conservative side and set BASEP4 every time BASE_LO
    (or BASE_HI for LE) are accessed.
    
    This eventually needs to be tuned optimally.
    
    [ppc] Revert LE code for assert
    
    [ppc] Fix off by one in assert
    
    It ended up reading the first argument twice.
    
    Fix BC_POW on ppc64le

diff --git a/dynasm/dasm_ppc.lua b/dynasm/dasm_ppc.lua
index 20634e13..572c9317 100644
--- a/dynasm/dasm_ppc.lua
+++ b/dynasm/dasm_ppc.lua
@@ -257,9 +257,11 @@ map_op = {
   addic_3 =	"30000000RRI",
   ["addic._3"] = "34000000RRI",
   addi_3 =	"38000000RR0I",
+  addil_3 =	"38000000RR0J",
   li_2 =	"38000000RI",
   la_2 =	"38000000RD",
   addis_3 =	"3c000000RR0I",
+  addisl_3 =	"3c000000RR0J",
   lis_2 =	"3c000000RI",
   lus_2 =	"3c000000RU",
   bc_3 =	"40000000AAK",
@@ -842,6 +844,9 @@ map_op = {
   srdi_3 =	op_alias("rldicl_4", function(p)
     p[4] = p[3]; p[3] = "64-("..p[3]..")"
   end),
+  ["srdi._3"] =	op_alias("rldicl._4", function(p)
+    p[4] = p[3]; p[3] = "64-("..p[3]..")"
+  end),
   clrldi_3 =	op_alias("rldicl_4", function(p)
     p[4] = p[3]; p[3] = "0"
   end),
diff --git a/src/Makefile b/src/Makefile
index c343bceb..e43ba18f 100644
--- a/src/Makefile
+++ b/src/Makefile
@@ -463,7 +463,16 @@ ifeq (ppc,$(TARGET_LJARCH))
     DASM_AFLAGS+= -D GPR64
   endif
   ifeq (PS3,$(TARGET_SYS))
-    DASM_AFLAGS+= -D PPE -D TOC
+    DASM_AFLAGS+= -D PPE
+  endif
+  ifneq (,$(findstring LJ_ARCH_PPC_OPD 1,$(TARGET_TESTARCH)))
+    DASM_AFLAGS+= -D OPD
+  endif
+  ifneq (,$(findstring LJ_ARCH_PPC_OPDENV 1,$(TARGET_TESTARCH)))
+    DASM_AFLAGS+= -D OPDENV
+  endif
+  ifneq (,$(findstring LJ_ARCH_PPC_ELFV2 1,$(TARGET_TESTARCH)))
+    DASM_AFLAGS+= -D ELFV2
   endif
 endif
 endif
diff --git a/src/host/buildvm_asm.c b/src/host/buildvm_asm.c
index c8fdcbc7..17998c89 100644
--- a/src/host/buildvm_asm.c
+++ b/src/host/buildvm_asm.c
@@ -188,7 +188,11 @@ static void emit_asm_wordreloc(BuildCtx *ctx, uint8_t *p, int n,
 #else
 #define TOCPREFIX ""
 #endif
-  if ((ins >> 26) == 16) {
+  if ((ins >> 26) == 14) {
+    fprintf(ctx->fp, "\taddi %d,%d,%s\n", (ins >> 21) & 31, (ins >> 16) & 31, sym);
+  } else if ((ins >> 26) == 15) {
+    fprintf(ctx->fp, "\taddis %d,%d,%s\n", (ins >> 21) & 31, (ins >> 16) & 31, sym);
+  } else if ((ins >> 26) == 16) {
     fprintf(ctx->fp, "\t%s %d, %d, " TOCPREFIX "%s\n",
 	    (ins & 1) ? "bcl" : "bc", (ins >> 21) & 31, (ins >> 16) & 31, sym);
   } else if ((ins >> 26) == 18) {
@@ -290,6 +294,9 @@ void emit_asm(BuildCtx *ctx)
   int i, rel;
 
   fprintf(ctx->fp, "\t.file \"buildvm_%s.dasc\"\n", ctx->dasm_arch);
+#if LJ_ARCH_PPC_ELFV2
+  fprintf(ctx->fp, "\t.abiversion 2\n");
+#endif
   fprintf(ctx->fp, "\t.text\n");
   emit_asm_align(ctx, 4);
 
diff --git a/src/lj_arch.h b/src/lj_arch.h
index 5f1be8c7..295f52f9 100644
--- a/src/lj_arch.h
+++ b/src/lj_arch.h
@@ -299,8 +299,18 @@
 #if LJ_TARGET_CONSOLE
 #define LJ_ARCH_PPC32ON64	1
 #define LJ_ARCH_NOFFI		1
+#if LJ_TARGET_PS3
+#define LJ_ARCH_PPC_OPD		1
+#endif
 #elif LJ_ARCH_BITS == 64
-#error "No support for PPC64"
+#define LJ_ARCH_PPC32ON64	1
+#define LJ_ARCH_NOJIT		1	/* NYI */
+#if _CALL_ELF == 2
+#define LJ_ARCH_PPC_ELFV2	1
+#else
+#define LJ_ARCH_PPC_OPD		1
+#define LJ_ARCH_PPC_OPDENV	1
+#endif
 #endif
 
 #if _ARCH_PWR7
@@ -482,9 +492,6 @@
 #error "No support for ILP32 model on ARM64"
 #endif
 #elif LJ_TARGET_PPC
-#if defined(_LITTLE_ENDIAN) && (!defined(_BYTE_ORDER) || (_BYTE_ORDER == _LITTLE_ENDIAN))
-#error "No support for little-endian PPC32"
-#endif
 #if defined(__NO_FPRS__) && !defined(_SOFT_FLOAT)
 #error "No support for PPC/e500 anymore (use LuaJIT 2.0)"
 #endif
diff --git a/src/lj_ccall.c b/src/lj_ccall.c
index ab3d3c4e..b724ae57 100644
--- a/src/lj_ccall.c
+++ b/src/lj_ccall.c
@@ -370,21 +370,97 @@
 #elif LJ_TARGET_PPC
 /* -- PPC calling conventions --------------------------------------------- */
 
+#if LJ_ARCH_BITS == 64
+
+#if LJ_ARCH_PPC_ELFV2
+
+#define CCALL_HANDLE_STRUCTRET \
+  if (sz > 16 && ccall_classify_fp(cts, ctr) <= 0) { \
+    cc->retref = 1;  /* Return by reference. */ \
+    cc->gpr[ngpr++] = (GPRArg)dp; \
+  }
+
+#define CCALL_HANDLE_STRUCTRET2 \
+  int isfp = ccall_classify_fp(cts, ctr); \
+  int i; \
+  if (isfp == FTYPE_FLOAT) { \
+    for (i = 0; i < ctr->size / 4; i++) \
+      ((float *)dp)[i] = cc->fpr[i]; \
+  } else if (isfp == FTYPE_DOUBLE) { \
+    for (i = 0; i < ctr->size / 8; i++) \
+      ((double *)dp)[i] = cc->fpr[i]; \
+  } else { \
+    if (ctr->size < 8 && LJ_BE) { \
+      sp += 8 - ctr->size; \
+    } \
+    memcpy(dp, sp, ctr->size); \
+  }
+
+#else
+
 #define CCALL_HANDLE_STRUCTRET \
   cc->retref = 1;  /* Return all structs by reference. */ \
   cc->gpr[ngpr++] = (GPRArg)dp;
 
+#endif
+
 #define CCALL_HANDLE_COMPLEXRET \
   /* Complex values are returned in 2 or 4 GPRs. */ \
   cc->retref = 0;
 
+#define CCALL_HANDLE_STRUCTARG
+
 #define CCALL_HANDLE_COMPLEXRET2 \
-  memcpy(dp, sp, ctr->size);  /* Copy complex from GPRs. */
+  if (ctr->size == 2*sizeof(float)) {  /* Copy complex float from FPRs. */ \
+    ((float *)dp)[0] = cc->fpr[0]; \
+    ((float *)dp)[1] = cc->fpr[1]; \
+  } else {  /* Copy complex double from FPRs. */ \
+    ((double *)dp)[0] = cc->fpr[0]; \
+    ((double *)dp)[1] = cc->fpr[1]; \
+  }
+
+#define CCALL_HANDLE_COMPLEXARG \
+  isfp = 1; \
+  if (d->size == sizeof(float) * 2) { \
+    d = ctype_get(cts, CTID_COMPLEX_DOUBLE); \
+    isf32 = 1; \
+  }
+
+#define CCALL_HANDLE_REGARG \
+  if (isfp && d->size == sizeof(float)) { \
+    d = ctype_get(cts, CTID_DOUBLE); \
+    isf32 = 1; \
+  } \
+  if (ngpr < maxgpr) { \
+   dp = &cc->gpr[ngpr]; \
+   ngpr += n; \
+   if (ngpr > maxgpr) { \
+     nsp += ngpr - 8; \
+     ngpr = 8; \
+     if (nsp > CCALL_MAXSTACK) { \
+       goto err_nyi; \
+     } \
+   } \
+   goto done; \
+  }
+
+#else
+
+#define CCALL_HANDLE_STRUCTRET \
+  cc->retref = 1;  /* Return all structs by reference. */ \
+  cc->gpr[ngpr++] = (GPRArg)dp;
+
+#define CCALL_HANDLE_COMPLEXRET \
+  /* Complex values are returned in 2 or 4 GPRs. */ \
+  cc->retref = 0;
 
 #define CCALL_HANDLE_STRUCTARG \
   rp = cdataptr(lj_cdata_new(cts, did, sz)); \
   sz = CTSIZE_PTR;  /* Pass all structs by reference. */
 
+#define CCALL_HANDLE_COMPLEXRET2 \
+  memcpy(dp, sp, ctr->size);  /* Copy complex from GPRs. */
+
 #define CCALL_HANDLE_COMPLEXARG \
   /* Pass complex by value in 2 or 4 GPRs. */
 
@@ -419,6 +495,8 @@
   }
 #endif
 
+#endif
+
 #if !LJ_ABI_SOFTFP
 #define CCALL_HANDLE_RET \
   if (ctype_isfp(ctr->info) && ctr->size == sizeof(float)) \
@@ -846,6 +924,50 @@ noth:  /* Not a homogeneous float/double aggregate. */
 
 #endif
 
+/* -- PowerPC64 ELFv2 ABI struct classification ------------------- */
+
+#if LJ_ARCH_PPC_ELFV2
+
+#define FTYPE_FLOAT	1
+#define FTYPE_DOUBLE	2
+
+static unsigned int ccall_classify_fp(CTState *cts, CType *ct) {
+  if (ctype_isfp(ct->info)) {
+    if (ct->size == sizeof(float))
+      return FTYPE_FLOAT;
+    else
+      return FTYPE_DOUBLE;
+  } else if (ctype_iscomplex(ct->info)) {
+    if (ct->size == sizeof(float) * 2)
+      return FTYPE_FLOAT;
+    else
+      return FTYPE_DOUBLE;
+  } else if (ctype_isstruct(ct->info)) {
+    int res = -1;
+    int sz = ct->size;
+    while (ct->sib) {
+      ct = ctype_get(cts, ct->sib);
+      if (ctype_isfield(ct->info)) {
+        int sub = ccall_classify_fp(cts, ctype_rawchild(cts, ct));
+        if (res == -1)
+          res = sub;
+        if (sub != -1 && sub != res)
+          return 0;
+      } else if (ctype_isbitfield(ct->info) ||
+        ctype_isxattrib(ct->info, CTA_SUBTYPE)) {
+        return 0;
+      }
+    }
+    if (res > 0 && sz > res * 4 * 8)
+      return 0;
+    return res;
+  } else {
+    return 0;
+  }
+}
+
+#endif
+
 /* -- MIPS64 ABI struct classification ---------------------------- */
 
 #if LJ_TARGET_MIPS64
@@ -1020,6 +1142,9 @@ static int ccall_set_args(lua_State *L, CTState *cts, CType *ct,
     CTSize sz;
     MSize n, isfp = 0, isva = 0;
     void *dp, *rp = NULL;
+#if LJ_TARGET_PPC && LJ_ARCH_BITS == 64
+    int isf32 = 0;
+#endif
 
 #if LJ_TARGET_S390X
     uint32_t onstack = 0;
@@ -1083,7 +1208,37 @@ static int ccall_set_args(lua_State *L, CTState *cts, CType *ct,
       *(void **)dp = rp;
       dp = rp;
     }
+#if LJ_TARGET_PPC && LJ_ARCH_BITS == 64 && LJ_BE
+    if (ctype_isstruct(d->info) && sz < CTSIZE_PTR) {
+      dp = (char *)dp + (CTSIZE_PTR - sz);
+    }
+#endif
     lj_cconv_ct_tv(cts, d, (uint8_t *)dp, o, CCF_ARG(narg));
+#if LJ_TARGET_PPC && LJ_ARCH_BITS == 64
+    if (isfp) {
+      int i;
+      for (i = 0; i < d->size / 8 && nfpr < CCALL_NARG_FPR; i++)
+        cc->fpr[nfpr++] = ((double *)dp)[i];
+    }
+    if (isf32) {
+      int i;
+      for (i = 0; i < d->size / 8; i++)
+        ((float *)dp)[i*2] = ((double *)dp)[i];
+    }
+#endif
+#if LJ_ARCH_PPC_ELFV2
+    if (ctype_isstruct(d->info)) {
+      isfp = ccall_classify_fp(cts, d);
+      int i;
+      if (isfp == FTYPE_FLOAT) {
+        for (i = 0; i < d->size / 4 && nfpr < CCALL_NARG_FPR; i++)
+          cc->fpr[nfpr++] = ((float *)dp)[i];
+      } else if (isfp == FTYPE_DOUBLE) {
+        for (i = 0; i < d->size / 8 && nfpr < CCALL_NARG_FPR; i++)
+          cc->fpr[nfpr++] = ((double *)dp)[i];
+      }
+    }
+#endif
     /* Extend passed integers to 32 bits at least. */
     if (ctype_isinteger_or_bool(d->info) && d->size < 4) {
       if (d->info & CTF_UNSIGNED)
@@ -1097,6 +1252,15 @@ static int ccall_set_args(lua_State *L, CTState *cts, CType *ct,
     if (isfp && d->size == sizeof(float))
       ((float *)dp)[1] = ((float *)dp)[0];  /* Floats occupy high slot. */
 #endif
+#if LJ_TARGET_PPC && LJ_ARCH_BITS == 64
+    if ((ctype_isinteger_or_bool(d->info) || ctype_isenum(d->info))
+	&& d->size <= 4) {
+      if (d->info & CTF_UNSIGNED)
+	*(uint64_t *)dp = (uint64_t)*(uint32_t *)dp;
+      else
+        *(int64_t *)dp = (int64_t)*(int32_t *)dp;
+    }
+#endif
 #if LJ_TARGET_MIPS64 || (LJ_TARGET_ARM64 && LJ_BE)
     if ((ctype_isinteger_or_bool(d->info) || ctype_isenum(d->info)
 #if LJ_TARGET_MIPS64
diff --git a/src/lj_ccall.h b/src/lj_ccall.h
index 93f8b91a..68fc27b9 100644
--- a/src/lj_ccall.h
+++ b/src/lj_ccall.h
@@ -86,10 +86,23 @@ typedef union FPRArg {
 #elif LJ_TARGET_PPC
 
 #define CCALL_NARG_GPR		8
+#if LJ_ARCH_BITS == 64
+#define CCALL_NARG_FPR		13
+#if LJ_ARCH_PPC_ELFV2
+#define CCALL_NRET_GPR		2
+#define CCALL_NRET_FPR		8
+#define CCALL_SPS_EXTRA		14
+#else
+#define CCALL_NRET_GPR		1
+#define CCALL_NRET_FPR		2
+#define CCALL_SPS_EXTRA		16
+#endif
+#else
 #define CCALL_NARG_FPR		(LJ_ABI_SOFTFP ? 0 : 8)
 #define CCALL_NRET_GPR		4	/* For complex double. */
 #define CCALL_NRET_FPR		(LJ_ABI_SOFTFP ? 0 : 1)
 #define CCALL_SPS_EXTRA		4
+#endif
 #define CCALL_SPS_FREE		0
 
 typedef intptr_t GPRArg;
diff --git a/src/lj_ccallback.c b/src/lj_ccallback.c
index 30028018..9556732a 100644
--- a/src/lj_ccallback.c
+++ b/src/lj_ccallback.c
@@ -61,8 +61,24 @@ static MSize CALLBACK_OFS2SLOT(MSize ofs)
 
 #elif LJ_TARGET_PPC
 
+#if LJ_ARCH_PPC_OPD
+
+#define CALLBACK_SLOT2OFS(slot)		(24*(slot))
+#define CALLBACK_OFS2SLOT(ofs)		((ofs)/24)
+#define CALLBACK_MAX_SLOT		(CALLBACK_OFS2SLOT(CALLBACK_MCODE_SIZE))
+
+#elif LJ_ARCH_PPC_ELFV2
+
+#define CALLBACK_SLOT2OFS(slot)		(4*(slot))
+#define CALLBACK_OFS2SLOT(ofs)		((ofs)/4)
+#define CALLBACK_MAX_SLOT		(CALLBACK_MCODE_SIZE/4 - 10)
+
+#else
+
 #define CALLBACK_MCODE_HEAD		24
 
+#endif
+
 #elif LJ_TARGET_MIPS32
 
 #define CALLBACK_MCODE_HEAD		20
@@ -188,24 +204,59 @@ static void callback_mcode_init(global_State *g, uint32_t *page)
   lua_assert(p - page <= CALLBACK_MCODE_SIZE);
 }
 #elif LJ_TARGET_PPC
+#if LJ_ARCH_PPC_OPD
+register void *vm_toc __asm__("r2");
+static void callback_mcode_init(global_State *g, uint64_t *page)
+{
+  uint64_t *p = page;
+  void *target = (void *)lj_vm_ffi_callback;
+  MSize slot;
+  for (slot = 0; slot < CALLBACK_MAX_SLOT; slot++) {
+    *p++ = (uint64_t)target;
+    *p++ = (uint64_t)vm_toc;
+    *p++ = (uint64_t)g | ((uint64_t)slot << 47);
+  }
+  lua_assert(p - page <= CALLBACK_MCODE_SIZE / 8);
+}
+#else
 static void callback_mcode_init(global_State *g, uint32_t *page)
 {
   uint32_t *p = page;
   void *target = (void *)lj_vm_ffi_callback;
   MSize slot;
+#if LJ_ARCH_PPC_ELFV2
+  // Needs to be in sync with lj_vm_ffi_callback.
+  lua_assert(CALLBACK_MCODE_SIZE == 4096);
+  for (slot = 0; slot < CALLBACK_MAX_SLOT; slot++) {
+    *p = PPCI_B | (((page+CALLBACK_MAX_SLOT-p) & 0x00ffffffu) << 2);
+    p++;
+  }
+  *p++ = PPCI_LI | PPCF_T(RID_SYS1) | ((((intptr_t)target) >> 32) & 0xffff);
+  *p++ = PPCI_LI | PPCF_T(RID_R11) | ((((intptr_t)g) >> 32) & 0xffff);
+  *p++ = PPCI_RLDICR | PPCF_T(RID_SYS1) | PPCF_A(RID_SYS1) | PPCF_SH(32) | PPCF_M6(63-32);  /* sldi */
+  *p++ = PPCI_RLDICR | PPCF_T(RID_R11) | PPCF_A(RID_R11) | PPCF_SH(32) | PPCF_M6(63-32);  /* sldi */
+  *p++ = PPCI_ORIS | PPCF_A(RID_SYS1) | PPCF_T(RID_SYS1) | ((((intptr_t)target) >> 16) & 0xffff);
+  *p++ = PPCI_ORIS | PPCF_A(RID_R11) | PPCF_T(RID_R11) | ((((intptr_t)g) >> 16) & 0xffff);
+  *p++ = PPCI_ORI | PPCF_A(RID_SYS1) | PPCF_T(RID_SYS1) | (((intptr_t)target) & 0xffff);
+  *p++ = PPCI_ORI | PPCF_A(RID_R11) | PPCF_T(RID_R11) | (((intptr_t)g) & 0xffff);
+  *p++ = PPCI_MTCTR | PPCF_T(RID_SYS1);
+  *p++ = PPCI_BCTR;
+#else
   *p++ = PPCI_LIS | PPCF_T(RID_TMP) | (u32ptr(target) >> 16);
-  *p++ = PPCI_LIS | PPCF_T(RID_R12) | (u32ptr(g) >> 16);
+  *p++ = PPCI_LIS | PPCF_T(RID_R11) | (u32ptr(g) >> 16);
   *p++ = PPCI_ORI | PPCF_A(RID_TMP)|PPCF_T(RID_TMP) | (u32ptr(target) & 0xffff);
-  *p++ = PPCI_ORI | PPCF_A(RID_R12)|PPCF_T(RID_R12) | (u32ptr(g) & 0xffff);
+  *p++ = PPCI_ORI | PPCF_A(RID_R11)|PPCF_T(RID_R11) | (u32ptr(g) & 0xffff);
   *p++ = PPCI_MTCTR | PPCF_T(RID_TMP);
   *p++ = PPCI_BCTR;
   for (slot = 0; slot < CALLBACK_MAX_SLOT; slot++) {
-    *p++ = PPCI_LI | PPCF_T(RID_R11) | slot;
+    *p++ = PPCI_LI | PPCF_T(RID_R12) | slot;
     *p = PPCI_B | (((page-p) & 0x00ffffffu) << 2);
     p++;
   }
-  lua_assert(p - page <= CALLBACK_MCODE_SIZE);
+#endif
+  lua_assert(p - page <= CALLBACK_MCODE_SIZE / 4);
 }
+#endif
 #elif LJ_TARGET_MIPS
 static void callback_mcode_init(global_State *g, uint32_t *page)
 {
@@ -662,6 +713,15 @@ static void callback_conv_result(CTState *cts, lua_State *L, TValue *o)
 	*(int32_t *)dp = ctr->size == 1 ? (int32_t)*(int8_t *)dp :
 					  (int32_t)*(int16_t *)dp;
     }
+#if LJ_TARGET_PPC && LJ_ARCH_BITS == 64
+    if (ctr->size <= 4 &&
+       (ctype_isinteger_or_bool(ctr->info) || ctype_isenum(ctr->info))) {
+      if (ctr->info & CTF_UNSIGNED)
+        *(uint64_t *)dp = (uint64_t)*(uint32_t *)dp;
+      else
+        *(int64_t *)dp = (int64_t)*(int32_t *)dp;
+    }
+#endif
 #if LJ_TARGET_MIPS64 || (LJ_TARGET_ARM64 && LJ_BE)
     /* Always sign-extend results to 64 bits. Even a soft-fp 'float'. */
     if (ctr->size <= 4 &&
diff --git a/src/lj_ctype.h b/src/lj_ctype.h
index 73cefef8..e59a703a 100644
--- a/src/lj_ctype.h
+++ b/src/lj_ctype.h
@@ -153,7 +153,7 @@ typedef struct CType {
 
 /* Simplify target-specific configuration. Checked in lj_ccall.h. */
 #define CCALL_MAX_GPR		8
-#define CCALL_MAX_FPR		8
+#define CCALL_MAX_FPR		14
 
 typedef LJ_ALIGN(8) union FPRCBArg { double d; float f[2]; } FPRCBArg;
 
diff --git a/src/lj_def.h b/src/lj_def.h
index ac729e4b..d0ef808c 100644
--- a/src/lj_def.h
+++ b/src/lj_def.h
@@ -71,7 +71,11 @@ typedef unsigned int uintptr_t;
 #define LJ_MAX_IDXCHAIN	100		/* __index/__newindex chain limit. */
 #define LJ_STACK_EXTRA	(5+2*LJ_FR2)	/* Extra stack space (metamethods). */
 
+#if defined(__powerpc64__) && _CALL_ELF != 2
+#define LJ_NUM_CBPAGE	4		/* Number of FFI callback pages. */
+#else
 #define LJ_NUM_CBPAGE	1		/* Number of FFI callback pages. */
+#endif
 
 /* Minimum table/buffer sizes. */
 #define LJ_MIN_GLOBAL	6		/* Min. global table size (hbits). */
diff --git a/src/lj_frame.h b/src/lj_frame.h
index f78c8fcc..17ea66e2 100644
--- a/src/lj_frame.h
+++ b/src/lj_frame.h
@@ -210,6 +210,15 @@ enum { LJ_CONT_TAILCALL, LJ_CONT_FFI_CALLBACK };  /* Special continuations. */
 #define CFRAME_OFS_MULTRES	408
 #define CFRAME_SIZE		384
 #define CFRAME_SHIFT_MULTRES	3
+#elif LJ_ARCH_PPC_ELFV2
+#define CFRAME_OFS_ERRF		360
+#define CFRAME_OFS_NRES		356
+#define CFRAME_OFS_PREV		336
+#define CFRAME_OFS_L		352
+#define CFRAME_OFS_PC		348
+#define CFRAME_OFS_MULTRES	344
+#define CFRAME_SIZE		368
+#define CFRAME_SHIFT_MULTRES	3
 #elif LJ_ARCH_PPC32ON64
 #define CFRAME_OFS_ERRF		472
 #define CFRAME_OFS_NRES		468
diff --git a/src/lj_target_ppc.h b/src/lj_target_ppc.h
index c7d4c229..e9301654 100644
--- a/src/lj_target_ppc.h
+++ b/src/lj_target_ppc.h
@@ -30,8 +30,13 @@ enum {
 
   /* Calling conventions. */
   RID_RET = RID_R3,
+#if LJ_LE
+  RID_RETHI = RID_R4,
+  RID_RETLO = RID_R3,
+#else
   RID_RETHI = RID_R3,
   RID_RETLO = RID_R4,
+#endif
   RID_FPRET = RID_F1,
 
   /* These definitions must match with the *.dasc file(s): */
@@ -131,6 +136,8 @@ static LJ_AINLINE uint32_t *exitstub_trace_addr_(uint32_t *p, uint32_t exitno)
 #define PPCF_C(r)	((r) << 6)
 #define PPCF_MB(n)	((n) << 6)
 #define PPCF_ME(n)	((n) << 1)
+#define PPCF_SH(n)	((((n) & 31) << (11+1)) | (((n) & 32) >> (5-1)))
+#define PPCF_M6(n)	((((n) & 31) << (5+1)) | (((n) & 32) << (11-5)))
 #define PPCF_Y		0x00200000
 #define PPCF_DOT	0x00000001
 
@@ -200,6 +207,13 @@ typedef enum PPCIns {
   PPCI_RLWINM = 0x54000000,
   PPCI_RLWIMI = 0x50000000,
 
+  PPCI_RLDICL = 0x78000000,
+  PPCI_RLDICR = 0x78000004,
+  PPCI_RLDIC = 0x78000008,
+  PPCI_RLDIMI = 0x7800000c,
+  PPCI_RLDCL = 0x78000010,
+  PPCI_RLDCR = 0x78000012,
+
   PPCI_B = 0x48000000,
   PPCI_BL = 0x48000001,
   PPCI_BC = 0x40800000,
diff --git a/src/vm_ppc.dasc b/src/vm_ppc.dasc
index 4299e266..0d2cae8b 100644
--- a/src/vm_ppc.dasc
+++ b/src/vm_ppc.dasc
@@ -21,35 +21,40 @@
 |// GPR64   64 bit registers (but possibly 32 bit pointers, e.g. PS3).
 |//         Affects reg saves, stack layout, carry/overflow/dot flags etc.
 |// FRAME32 Use 32 bit frame layout, even with GPR64 (Xbox 360).
-|// TOC     Need table of contents (64 bit or 32 bit variant, e.g. PS3).
+|// OPD     Need function descriptors (64 bit or 32 bit variant, e.g. PS3).
 |//         Function pointers are really a struct: code, TOC, env (optional).
-|// TOCENV  Function pointers have an environment pointer, too (not on PS3).
+|// OPDENV  Function pointers have an environment pointer, too (not on PS3).
+|// ELFV2   The 64-bit ELF V2 ABI is in use.
 |// PPE     Power Processor Element of Cell (PS3) or Xenon (Xbox 360).
 |//         Must avoid (slow) micro-coded instructions.
 |
 |.if P64
-|.define TOC, 1
-|.define TOCENV, 1
 |.macro lpx, a, b, c; ldx a, b, c; .endmacro
 |.macro lp, a, b; ld a, b; .endmacro
 |.macro stp, a, b; std a, b; .endmacro
+|.macro stpx, a, b, c; stdx a, b, c; .endmacro
 |.define decode_OPP, decode_OP8
-|.if FFI
-|// Missing: Calling conventions, 64 bit regs, TOC.
-|.error lib_ffi not yet implemented for PPC64
-|.endif
+|.define PSIZE, 8
 |.else
 |.macro lpx, a, b, c; lwzx a, b, c; .endmacro
 |.macro lp, a, b; lwz a, b; .endmacro
 |.macro stp, a, b; stw a, b; .endmacro
+|.macro stpx, a, b, c; stwx a, b, c; .endmacro
 |.define decode_OPP, decode_OP4
+|.define PSIZE, 4
 |.endif
 |
 |// Convenience macros for TOC handling.
-|.if TOC
+|.if OPD or ELFV2
 |// Linker needs a TOC patch area for every external call relocation.
-|.macro blex, target; bl extern target@plt; nop; .endmacro
+|.macro blex, target; bl extern target; nop; .endmacro
 |.macro .toc, a, b; a, b; .endmacro
+|.else
+|.macro blex, target; bl extern target@plt; .endmacro
+|.macro .toc, a, b; .endmacro
+|.endif
+|.if OPD
+|.macro .opd, a, b; a, b; .endmacro
 |.if P64
 |.define TOC_OFS,	 8
 |.define ENV_OFS,	16
@@ -57,13 +62,13 @@
 |.define TOC_OFS,	4
 |.define ENV_OFS,	8
 |.endif
-|.else  // No TOC.
-|.macro blex, target; bl extern target@plt; .endmacro
-|.macro .toc, a, b; .endmacro
+|.else  // No OPD.
+|.macro .opd, a, b; .endmacro
 |.endif
-|.macro .tocenv, a, b; .if TOCENV; a, b; .endif; .endmacro
+|.macro .opdenv, a, b; .if OPDENV; a, b; .endif; .endmacro
 |
 |.macro .gpr64, a, b; .if GPR64; a, b; .endif; .endmacro
+|.macro .elfv2, a, b; .if ELFV2; a, b; .endif; .endmacro
 |
 |.macro andix., y, a, i
 |.if PPE
@@ -74,29 +79,6 @@
 |.endif
 |.endmacro
 |
-|.macro clrso, reg
-|.if PPE
-|  li reg, 0
-|  mtxer reg
-|.else
-|  mcrxr cr0
-|.endif
-|.endmacro
-|
-|.macro checkov, reg, noov
-|.if PPE
-|  mfxer reg
-|  add reg, reg, reg
-|  cmpwi reg, 0
-|   li reg, 0
-|   mtxer reg
-|  bgey noov
-|.else
-|  mcrxr cr0
-|  bley noov
-|.endif
-|.endmacro
-|
 |//-----------------------------------------------------------------------
 |
 |// Fixed register assignments for the interpreter.
@@ -122,6 +104,7 @@
 |.define LREG,		r18	// Register holding lua_State (also in SAVE_L).
 |.define MULTRES,	r19	// Size of multi-result: (nresults+1)*8.
 |.define JGL,		r31	// On-trace: global_State + 32768.
+|.define BASEP4,	r26	// Equal to BASE + 4
 |
 |// Constants for type-comparisons, stores and conversions. C callee-save.
 |.define TISNUM,	r22
@@ -158,6 +141,12 @@
 |.if FPU
 |.define FARG1,		f1
 |.define FARG2,		f2
+|.define FARG3,		f3
+|.define FARG4,		f4
+|.define FARG5,		f5
+|.define FARG6,		f6
+|.define FARG7,		f7
+|.define FARG8,		f8
 |.endif
 |
 |.define CRET1,		r3
@@ -165,6 +154,7 @@
 |
 |.define TOCREG,	r2	// TOC register (only used by C code).
 |.define ENVREG,	r11	// Environment pointer (nested C functions).
+|.define FUNCREG,	r12	// ELFv2 function pointer (overlaps RD)
 |
 |// Stack layout while in interpreter. Must match with lj_frame.h.
 |.if GPR64
@@ -198,6 +188,49 @@
 |.define TMPD,		TMPD_HI
 |.define TONUM_D,	TONUM_HI
 |
+|.elif ELFV2
+|
+|//			392(sp) // \ 32 bit C frame info.
+|.define SAVE_LR,	384(sp)
+|.define SAVE_CR,	376(sp) // 64 bit CR save.
+|.define CFRAME_SPACE,	368     // Delta for sp.
+|// Back chain for sp:	368(sp) <-- sp entering interpreter
+|.define SAVE_ERRF,	360(sp) // |
+|.define SAVE_NRES,	356(sp) // |
+|.define SAVE_L,	352(sp) //  > Parameter save area.
+|.define SAVE_PC,	348(sp) // |
+|.define SAVE_MULTRES,	344(sp) // |
+|.define SAVE_CFRAME,	336(sp) // / 64 bit C frame chain.
+|.define SAVE_FPR_,	192     // .. 192+18*8: 64 bit FPR saves.
+|.define SAVE_GPR_,	48      // .. 48+18*8: 64 bit GPR saves.
+|.if ENDIAN_LE
+|.define TMPD_HI,	44(sp)
+|.define TMPD_LO,	40(sp)
+|.define TONUM_HI,	36(sp)
+|.define TONUM_LO,	32(sp)
+|.else
+|.define TMPD_LO,	44(sp)
+|.define TMPD_HI,	40(sp)
+|.define TONUM_LO,	36(sp)
+|.define TONUM_HI,	32(sp)
+|.endif
+|.define SAVE_TOC,	24(sp)  // TOC save area.
+|// Next frame lr:	16(sp)
+|// Next frame cr:	8(sp)
+|// Back chain for sp:	0(sp)	<-- sp while in interpreter
+|
+|.if ENDIAN_LE
+|.define TMPD_BLO,	32(sp)
+|.define TMPD,		TMPD_LO
+|.define TONUM_D,	TONUM_LO
+|.else
+|.define TMPD_BLO,	39(sp)
+|.define TMPD,		TMPD_HI
+|.define TONUM_D,	TONUM_HI
+|.endif
+|
+|.define EXIT_OFFSET,	32
+|
 |.else
 |
 |//			508(sp) // \ 32 bit C frame info.
@@ -208,23 +241,39 @@
 |.define SAVE_MULTRES,	456(sp) // |
 |.define SAVE_CFRAME,	448(sp) // / 64 bit C frame chain.
 |.define SAVE_LR,	416(sp)
+|.define SAVE_CR,	408(sp)  // 64 bit CR save.
 |.define CFRAME_SPACE,	400     // Delta for sp.
 |// Back chain for sp:	400(sp) <-- sp entering interpreter
 |.define SAVE_FPR_,	256     // .. 256+18*8: 64 bit FPR saves.
 |.define SAVE_GPR_,	112     // .. 112+18*8: 64 bit GPR saves.
 |//			48(sp)  // Callee parameter save area (ABI mandated).
 |.define SAVE_TOC,	40(sp)  // TOC save area.
+|.if ENDIAN_LE
+|.define TMPD_HI,	36(sp)  // \ Link editor temp (ABI mandated).
+|.define TMPD_LO,	32(sp)  // /
+|.define TONUM_HI,	28(sp)  // \ Compiler temp (ABI mandated).
+|.define TONUM_LO,	24(sp)  // /
+|.else
 |.define TMPD_LO,	36(sp)  // \ Link editor temp (ABI mandated).
 |.define TMPD_HI,	32(sp)  // /
 |.define TONUM_LO,	28(sp)  // \ Compiler temp (ABI mandated).
 |.define TONUM_HI,	24(sp)  // /
+|.endif
 |// Next frame lr:	16(sp)
-|.define SAVE_CR,	8(sp)  // 64 bit CR save.
+|// Next frame cr:	8(sp)
 |// Back chain for sp:	0(sp)	<-- sp while in interpreter
 |
+|.if ENDIAN_LE
+|.define TMPD_BLO,	32(sp)
+|.define TMPD,		TMPD_LO
+|.define TONUM_D,	TONUM_LO
+|.else
 |.define TMPD_BLO,	39(sp)
 |.define TMPD,		TMPD_HI
 |.define TONUM_D,	TONUM_HI
+|.endif
+|
+|.define EXIT_OFFSET,	112
 |
 |.endif
 |.else
@@ -249,10 +298,17 @@
 |.define SAVE_MULTRES,	28(sp)
 |.define UNUSED1,	24(sp)
 |.if FPU
+|.if ENDIAN_LE
+|.define TMPD_HI,	20(sp)
+|.define TMPD_LO,	16(sp)
+|.define TONUM_HI,	12(sp)
+|.define TONUM_LO,	8(sp)
+|.else
 |.define TMPD_LO,	20(sp)
 |.define TMPD_HI,	16(sp)
 |.define TONUM_LO,	12(sp)
 |.define TONUM_HI,	8(sp)
+|.endif
 |.else
 |.define SFSAVE_4,	20(sp)
 |.define SFSAVE_3,	16(sp)
@@ -263,10 +319,22 @@
 |// Back chain for sp:	0(sp)	<-- sp while in interpreter
 |
 |.if FPU
+|.if ENDIAN_LE
+|.define TMPD_BLO,	16(sp)
+|.define TMPD,		TMPD_LO
+|.define TONUM_D,	TONUM_LO
+|.else
 |.define TMPD_BLO,	23(sp)
 |.define TMPD,		TMPD_HI
 |.define TONUM_D,	TONUM_HI
 |.endif
+|.else
+|.define TMPD_BLO,	23(sp)
+|.define TMPD,		TMPD_HI
+|.define TONUM_D,	TONUM_HI
+|.endif
+|
+|.define EXIT_OFFSET,	16
 |
 |.endif
 |
@@ -383,8 +451,35 @@
 |//-----------------------------------------------------------------------
 |
 |// Access to frame relative to BASE.
+|.if ENDIAN_LE
+|.define FRAME_PC,	-4
+|.define FRAME_FUNC,	-8
+|.define FRAME_CONTPC,	-12
+|.define FRAME_CONTRET,	-16
+|.define WORD_LO,	0
+|.define WORD_HI,	4
+|.define WORD_BLO,	0
+|.define BASE_LO,	BASE
+|.define BASE_HI,	BASEP4
+|.macro lwzux2, hi, lo, base, idx
+|  lwzux lo, base, idx
+|  lwz hi, 4(base)
+|.endmacro
+|.else
 |.define FRAME_PC,	-8
 |.define FRAME_FUNC,	-4
+|.define FRAME_CONTPC,	-16
+|.define FRAME_CONTRET,	-12
+|.define WORD_LO,	4
+|.define WORD_HI,	0
+|.define WORD_BLO,	7
+|.define BASE_LO,	BASEP4
+|.define BASE_HI,	BASE
+|.macro lwzux2, hi, lo, base, idx
+|  lwzux hi, base, idx
+|  lwz lo, 4(base)
+|.endmacro
+|.endif
 |
 |// Instruction decode.
 |.macro decode_OP4, dst, ins; rlwinm dst, ins, 2, 22, 29; .endmacro
@@ -445,6 +540,7 @@
 |// Call decode and dispatch.
 |.macro ins_callt
 |  // BASE = new base, RB = LFUNC/CFUNC, RC = nargs*8, FRAME_PC(BASE) = PC
+|  addi BASEP4, BASE, 4
 |  lwz PC, LFUNC:RB->pc
 |  lwz INS, 0(PC)
 |   addi PC, PC, 4
@@ -537,7 +633,12 @@ static void build_subroutines(BuildCtx *ctx)
   |  lwz PC, FRAME_PC(TMP2)		// Fetch PC of previous frame.
   |  mr BASE, TMP2			// Restore caller base.
   |  // Prepending may overwrite the pcall frame, so do it at the end.
-  |   stwu TMP1, FRAME_PC(RA)		// Prepend true to results.
+  |  .if ENDIAN_LE
+  |    addi RA, RA, -8
+  |    stw TMP1, WORD_HI(RA)		// Prepend true to results.
+  |  .else
+  |    stwu TMP1, -8(RA)		// Prepend true to results.
+  |  .endif
   |
   |->vm_returnc:
   |  addi RD, RD, 8			// RD = (nresults+1)*8.
@@ -603,7 +704,7 @@ static void build_subroutines(BuildCtx *ctx)
   |  lwz TMP1, L->maxstack
   |  cmplw BASE, TMP1
   |  bge >8
-  |  stw TISNIL, 0(BASE)
+  |  stw TISNIL, WORD_HI(BASE)
   |  addi RD, RD, 8
   |  addi BASE, BASE, 8
   |  b <2
@@ -654,7 +755,12 @@ static void build_subroutines(BuildCtx *ctx)
   |->vm_unwind_ff_eh:			// Landing pad for external unwinder.
   |  lwz L, SAVE_L
   |  .toc ld TOCREG, SAVE_TOC
+  |.if P64
+  |     lus TISNUM, LJ_TISNUM >> 16	// Setup type comparison constants.
+  |     ori TISNUM, TISNUM, LJ_TISNUM & 0xffff
+  |.else
   |     li TISNUM, LJ_TISNUM		// Setup type comparison constants.
+  |.endif
   |  lp BASE, L->base
   |     .FPU lus TMP3, 0x59c0		// TOBIT = 2^52 + 2^51 (float).
   |   lwz DISPATCH, L->glref		// Setup pointer to dispatch table.
@@ -669,7 +775,7 @@ static void build_subroutines(BuildCtx *ctx)
   |  la RA, -8(BASE)			// Results start at BASE-8.
   |     .FPU stw TMP3, TMPD
   |   addi DISPATCH, DISPATCH, GG_G2DISP
-  |  stw TMP1, 0(RA)			// Prepend false to error message.
+  |  stw TMP1, WORD_HI(RA)		// Prepend false to error message.
   |  li RD, 16				// 2 results: false + error message.
   |    st_vmstate
   |     .FPU lfs TONUM, TMPD
@@ -730,7 +836,12 @@ static void build_subroutines(BuildCtx *ctx)
   |  stw L, DISPATCH_GL(cur_L)(DISPATCH)
   |  mr RA, BASE
   |   lp BASE, L->base
+  |.if P64
+  |     lus TISNUM, LJ_TISNUM >> 16	// Setup type comparison constants.
+  |     ori TISNUM, TISNUM, LJ_TISNUM & 0xffff
+  |.else
   |     li TISNUM, LJ_TISNUM		// Setup type comparison constants.
+  |.endif
   |   lp TMP1, L->top
   |  lwz PC, FRAME_PC(BASE)
   |     .FPU lus TMP3, 0x59c0		// TOBIT = 2^52 + 2^51 (float).
@@ -780,7 +891,12 @@ static void build_subroutines(BuildCtx *ctx)
   |3:  // Entry point for vm_cpcall/vm_resume (BASE = base, PC = ftype).
   |  stw L, DISPATCH_GL(cur_L)(DISPATCH)
   |  lp TMP2, L->base			// TMP2 = old base (used in vmeta_call).
+  |.if P64
+  |     lus TISNUM, LJ_TISNUM >> 16	// Setup type comparison constants.
+  |     ori TISNUM, TISNUM, LJ_TISNUM & 0xffff
+  |.else
   |     li TISNUM, LJ_TISNUM		// Setup type comparison constants.
+  |.endif
   |   lp TMP1, L->top
   |     .FPU lus TMP3, 0x59c0		// TOBIT = 2^52 + 2^51 (float).
   |  add PC, PC, BASE
@@ -800,8 +916,8 @@ static void build_subroutines(BuildCtx *ctx)
   |
   |->vm_call_dispatch:
   |  // TMP2 = old base, BASE = new base, RC = nargs*8, PC = caller PC
-  |  lwz TMP0, FRAME_PC(BASE)
-  |   lwz LFUNC:RB, FRAME_FUNC(BASE)
+  |  lwz TMP0, WORD_HI-8(BASE)
+  |   lwz LFUNC:RB, WORD_LO-8(BASE)
   |  checkfunc TMP0; bne ->vmeta_call
   |
   |->vm_call_dispatch_f:
@@ -820,7 +936,9 @@ static void build_subroutines(BuildCtx *ctx)
   |   sub TMP0, TMP0, TMP1		// Compute -savestack(L, L->top).
   |    lp TMP1, L->cframe
   |     addi DISPATCH, DISPATCH, GG_G2DISP
-  |  .toc lp CARG4, 0(CARG4)
+  |  .opd lp TOCREG, TOC_OFS(CARG4)
+  |  .opdenv lp ENVREG, ENV_OFS(CARG4)
+  |  .opd lp CARG4, 0(CARG4)
   |  li TMP2, 0
   |   stw TMP0, SAVE_NRES		// Neg. delta means cframe w/o frame.
   |  stw TMP2, SAVE_ERRF		// No error function.
@@ -828,7 +946,9 @@ static void build_subroutines(BuildCtx *ctx)
   |    stp sp, L->cframe		// Add our C frame to cframe chain.
   |     stw L, DISPATCH_GL(cur_L)(DISPATCH)
   |  mtctr CARG4
+  |  .elfv2 mr FUNCREG, CARG4
   |  bctrl			// (lua_State *L, lua_CFunction func, void *ud)
+  |  .toc lp TOCREG, SAVE_TOC
   |.if PPE
   |  mr BASE, CRET1
   |  cmpwi CRET1, 0
@@ -850,20 +970,27 @@ static void build_subroutines(BuildCtx *ctx)
   |
   |->cont_dispatch:
   |  // BASE = meta base, RA = resultptr, RD = (nresults+1)*8
-  |  lwz TMP0, -12(BASE)		// Continuation.
+  |  lwz TMP0, FRAME_CONTRET(BASE)	// Continuation.
   |   mr RB, BASE
   |   mr BASE, TMP2			// Restore caller BASE.
   |    lwz LFUNC:TMP1, FRAME_FUNC(TMP2)
   |.if FFI
   |  cmplwi TMP0, 1
   |.endif
-  |     lwz PC, -16(RB)			// Restore PC from [cont|PC].
-  |   subi TMP2, RD, 8
+  |     lwz PC, FRAME_CONTPC(RB)	// Restore PC from [cont|PC].
+  |  addi BASEP4, BASE, 4
+  |   addi TMP2, RD, WORD_HI-8
   |    lwz TMP1, LFUNC:TMP1->pc
   |   stwx TISNIL, RA, TMP2		// Ensure one valid arg.
+  |.if P64
+  |   ld TMP3, 0(DISPATCH)
+  |.endif
   |.if FFI
   |  ble >1
   |.endif
+  |.if P64
+  |  add TMP0, TMP0, TMP3
+  |.endif
   |    lwz KBASE, PC2PROTO(k)(TMP1)
   |  // BASE = base, RA = resultptr, RB = meta base
   |  mtctr TMP0
@@ -914,20 +1041,20 @@ static void build_subroutines(BuildCtx *ctx)
   |  la CARG3, DISPATCH_GL(tmptv)(DISPATCH)
   |  li TMP0, LJ_TSTR
   |   decode_RB8 RB, INS
-  |  stw STR:RC, 4(CARG3)
+  |  stw STR:RC, WORD_LO(CARG3)
   |   add CARG2, BASE, RB
-  |  stw TMP0, 0(CARG3)
+  |  stw TMP0, WORD_HI(CARG3)
   |  b >1
   |
   |->vmeta_tgets:
   |  la CARG2, DISPATCH_GL(tmptv)(DISPATCH)
   |  li TMP0, LJ_TTAB
-  |  stw TAB:RB, 4(CARG2)
+  |  stw TAB:RB, WORD_LO(CARG2)
   |   la CARG3, DISPATCH_GL(tmptv2)(DISPATCH)
-  |  stw TMP0, 0(CARG2)
+  |  stw TMP0, WORD_HI(CARG2)
   |   li TMP1, LJ_TSTR
-  |   stw STR:RC, 4(CARG3)
-  |   stw TMP1, 0(CARG3)
+  |   stw STR:RC, WORD_LO(CARG3)
+  |   stw TMP1, WORD_HI(CARG3)
   |  b >1
   |
   |->vmeta_tgetb:			// TMP0 = index
@@ -938,8 +1065,8 @@ static void build_subroutines(BuildCtx *ctx)
   |  la CARG3, DISPATCH_GL(tmptv)(DISPATCH)
   |   add CARG2, BASE, RB
   |.if DUALNUM
-  |  stw TISNUM, 0(CARG3)
-  |  stw TMP0, 4(CARG3)
+  |  stw TISNUM, WORD_HI(CARG3)
+  |  stw TMP0, WORD_LO(CARG3)
   |.else
   |  stfd f0, 0(CARG3)
   |.endif
@@ -977,7 +1104,7 @@ static void build_subroutines(BuildCtx *ctx)
   |  // BASE = base, L->top = new base, stack = cont/func/t/k
   |  subfic TMP1, BASE, FRAME_CONT
   |  lp BASE, L->top
-  |  stw PC, -16(BASE)			// [cont|PC]
+  |  stw PC, FRAME_CONTPC(BASE)		// [cont|PC]
   |   add PC, TMP1, BASE
   |  lwz LFUNC:RB, FRAME_FUNC(BASE)	// Guaranteed to be a function here.
   |   li NARGS8:RC, 16			// 2 args for func(t, k).
@@ -996,7 +1123,10 @@ static void build_subroutines(BuildCtx *ctx)
   |.endif
   |  b ->BC_TGETR_Z
   |1:
-  |  stwx TISNIL, BASE, RA
+  |.if ENDIAN_LE
+  |  addi BASEP4, BASE, 4
+  |.endif
+  |  stwx TISNIL, BASE_HI, RA
   |  b ->cont_nop
   |
   |//-----------------------------------------------------------------------
@@ -1005,20 +1135,20 @@ static void build_subroutines(BuildCtx *ctx)
   |  la CARG3, DISPATCH_GL(tmptv)(DISPATCH)
   |  li TMP0, LJ_TSTR
   |   decode_RB8 RB, INS
-  |  stw STR:RC, 4(CARG3)
+  |  stw STR:RC, WORD_LO(CARG3)
   |   add CARG2, BASE, RB
-  |  stw TMP0, 0(CARG3)
+  |  stw TMP0, WORD_HI(CARG3)
   |  b >1
   |
   |->vmeta_tsets:
   |  la CARG2, DISPATCH_GL(tmptv)(DISPATCH)
   |  li TMP0, LJ_TTAB
-  |  stw TAB:RB, 4(CARG2)
+  |  stw TAB:RB, WORD_LO(CARG2)
   |   la CARG3, DISPATCH_GL(tmptv2)(DISPATCH)
-  |  stw TMP0, 0(CARG2)
+  |  stw TMP0, WORD_HI(CARG2)
   |   li TMP1, LJ_TSTR
-  |   stw STR:RC, 4(CARG3)
-  |   stw TMP1, 0(CARG3)
+  |   stw STR:RC, WORD_LO(CARG3)
+  |   stw TMP1, WORD_HI(CARG3)
   |  b >1
   |
   |->vmeta_tsetb:			// TMP0 = index
@@ -1029,8 +1159,8 @@ static void build_subroutines(BuildCtx *ctx)
   |  la CARG3, DISPATCH_GL(tmptv)(DISPATCH)
   |   add CARG2, BASE, RB
   |.if DUALNUM
-  |  stw TISNUM, 0(CARG3)
-  |  stw TMP0, 4(CARG3)
+  |  stw TISNUM, WORD_HI(CARG3)
+  |  stw TMP0, WORD_LO(CARG3)
   |.else
   |  stfd f0, 0(CARG3)
   |.endif
@@ -1069,7 +1199,7 @@ static void build_subroutines(BuildCtx *ctx)
   |  // BASE = base, L->top = new base, stack = cont/func/t/k/(v)
   |  subfic TMP1, BASE, FRAME_CONT
   |  lp BASE, L->top
-  |  stw PC, -16(BASE)			// [cont|PC]
+  |  stw PC, FRAME_CONTPC(BASE)		// [cont|PC]
   |   add PC, TMP1, BASE
   |  lwz LFUNC:RB, FRAME_FUNC(BASE)	// Guaranteed to be a function here.
   |   li NARGS8:RC, 24			// 3 args for func(t, k, v)
@@ -1099,17 +1229,9 @@ static void build_subroutines(BuildCtx *ctx)
   |->vmeta_comp:
   |  mr CARG1, L
   |   subi PC, PC, 4
-  |.if DUALNUM
-  |  mr CARG2, RA
-  |.else
   |  add CARG2, BASE, RA
-  |.endif
   |   stw PC, SAVE_PC
-  |.if DUALNUM
-  |  mr CARG3, RD
-  |.else
   |  add CARG3, BASE, RD
-  |.endif
   |   stp BASE, L->base
   |  decode_OP1 CARG4, INS
   |  bl extern lj_meta_comp  // (lua_State *L, TValue *o1, *o2, int op)
@@ -1146,7 +1268,7 @@ static void build_subroutines(BuildCtx *ctx)
   |  b ->cont_nop
   |
   |->cont_condt:			// RA = resultptr
-  |  lwz TMP0, 0(RA)
+  |  lwz TMP0, WORD_HI(RA)
   |  .gpr64 extsw TMP0, TMP0
   |  subfic TMP0, TMP0, LJ_TTRUE	// Branch if result is true.
   |  subfe CRET1, CRET1, CRET1
@@ -1154,7 +1276,7 @@ static void build_subroutines(BuildCtx *ctx)
   |  b <4
   |
   |->cont_condf:			// RA = resultptr
-  |  lwz TMP0, 0(RA)
+  |  lwz TMP0, WORD_HI(RA)
   |  .gpr64 extsw TMP0, TMP0
   |  subfic TMP0, TMP0, LJ_TTRUE	// Branch if result is false.
   |  subfe CRET1, CRET1, CRET1
@@ -1206,8 +1328,8 @@ static void build_subroutines(BuildCtx *ctx)
   |.endif
   |
   |->vmeta_unm:
-  |  mr CARG3, RD
-  |  mr CARG4, RD
+  |  add CARG3, BASE, RD
+  |  add CARG4, BASE, RD
   |  b >1
   |
   |->vmeta_arith_vn:
@@ -1242,7 +1364,7 @@ static void build_subroutines(BuildCtx *ctx)
   |->vmeta_binop:
   |  // BASE = old base, CRET1 = new base, stack = cont/func/o1/o2
   |  sub TMP1, CRET1, BASE
-  |   stw PC, -16(CRET1)		// [cont|PC]
+  |   stw PC, FRAME_CONTPC(CRET1)	// [cont|PC]
   |   mr TMP2, BASE
   |  addi PC, TMP1, FRAME_CONT
   |   mr BASE, CRET1
@@ -1253,7 +1375,7 @@ static void build_subroutines(BuildCtx *ctx)
 #if LJ_52
   |  mr SAVE0, CARG1
 #endif
-  |  mr CARG2, RD
+  |  add CARG2, BASE, RD
   |   stp BASE, L->base
   |  mr CARG1, L
   |   stw PC, SAVE_PC
@@ -1330,25 +1452,25 @@ static void build_subroutines(BuildCtx *ctx)
   |.macro .ffunc_1, name
   |->ff_ .. name:
   |  cmplwi NARGS8:RC, 8
-  |   lwz CARG3, 0(BASE)
-  |    lwz CARG1, 4(BASE)
+  |   lwz CARG3, WORD_HI(BASE)
+  |    lwz CARG1, WORD_LO(BASE)
   |  blt ->fff_fallback
   |.endmacro
   |
   |.macro .ffunc_2, name
   |->ff_ .. name:
   |  cmplwi NARGS8:RC, 16
-  |   lwz CARG3, 0(BASE)
-  |    lwz CARG4, 8(BASE)
-  |   lwz CARG1, 4(BASE)
-  |    lwz CARG2, 12(BASE)
+  |   lwz CARG3, WORD_HI(BASE)
+  |    lwz CARG4, WORD_HI+8(BASE)
+  |   lwz CARG1, WORD_LO(BASE)
+  |    lwz CARG2, WORD_LO+8(BASE)
   |  blt ->fff_fallback
   |.endmacro
   |
   |.macro .ffunc_n, name
   |->ff_ .. name:
   |  cmplwi NARGS8:RC, 8
-  |   lwz CARG1, 0(BASE)
+  |   lwz CARG1, WORD_HI(BASE)
   |.if FPU
   |    lfd FARG1, 0(BASE)
   |.else
@@ -1361,15 +1483,15 @@ static void build_subroutines(BuildCtx *ctx)
   |.macro .ffunc_nn, name
   |->ff_ .. name:
   |  cmplwi NARGS8:RC, 16
-  |   lwz CARG1, 0(BASE)
+  |   lwz CARG1, WORD_HI(BASE)
   |.if FPU
   |    lfd FARG1, 0(BASE)
-  |   lwz CARG3, 8(BASE)
+  |   lwz CARG3, WORD_HI+8(BASE)
   |    lfd FARG2, 8(BASE)
   |.else
-  |    lwz CARG2, 4(BASE)
-  |   lwz CARG3, 8(BASE)
-  |    lwz CARG4, 12(BASE)
+  |    lwz CARG2, WORD_LO(BASE)
+  |   lwz CARG3, WORD_HI+8(BASE)
+  |    lwz CARG4, WORD_LO+8(BASE)
   |.endif
   |  blt ->fff_fallback
   |  checknum CARG1; bge ->fff_fallback
@@ -1392,17 +1514,17 @@ static void build_subroutines(BuildCtx *ctx)
   |  cmplw cr1, CARG3, TMP1
   |    lwz PC, FRAME_PC(BASE)
   |  bge cr1, ->fff_fallback
-  |   stw CARG3, 0(RA)
+  |   stw CARG3, WORD_HI(RA)
   |  addi RD, NARGS8:RC, 8		// Compute (nresults+1)*8.
   |  addi TMP1, BASE, 8
   |  add TMP2, RA, NARGS8:RC
-  |   stw CARG1, 4(RA)
+  |   stw CARG1, WORD_LO(RA)
   |  beq ->fff_res			// Done if exactly 1 argument.
   |1:
   |  cmplw TMP1, TMP2
   |.if FPU
   |   lfd f0, 0(TMP1)
-  |   stfd f0, 0(TMP1)
+  |   stfd f0, -8(TMP1)
   |.else
   |   lwz CARG1, 0(TMP1)
   |   lwz CARG2, 4(TMP1)
@@ -1415,14 +1537,28 @@ static void build_subroutines(BuildCtx *ctx)
   |
   |.ffunc type
   |  cmplwi NARGS8:RC, 8
-  |   lwz CARG1, 0(BASE)
+  |   lwz CARG1, WORD_HI(BASE)
   |  blt ->fff_fallback
   |  .gpr64 extsw CARG1, CARG1
+  |.if P64
+  |  li TMP0, LJ_TNUMX
+  |    srawi TMP3, CARG1, 15
+  |  subfc TMP1, TMP0, CARG1
+  |.else
   |  subfc TMP0, TISNUM, CARG1
-  |  subfe TMP2, CARG1, CARG1
+  |.endif
+  |    subfe TMP2, CARG1, CARG1
+  |.if P64
+  |  cmpwi TMP3, -2
+  |    orc TMP1, TMP2, TMP1
+  |    subf TMP1, TMP0, TMP1
+  |  beq >1
+  |.else
   |  orc TMP1, TMP2, TMP0
-  |  addi TMP1, TMP1, ~LJ_TISNUM+1
+  |  subf TMP1, TISNUM, TMP1
+  |.endif
   |  slwi TMP1, TMP1, 3
+  |2:
   |.if FPU
   |   la TMP2, CFUNC:RB->upvalue
   |  lfdx FARG1, TMP2, TMP1
@@ -1432,6 +1568,11 @@ static void build_subroutines(BuildCtx *ctx)
   |  lwz CARG2, CFUNC:TMP1->upvalue[0].u32.lo
   |.endif
   |  b ->fff_resn
+  |.if P64
+  |1:
+  |  li TMP1, ~LJ_TLIGHTUD<<3
+  |  b <2
+  |.endif
   |
   |//-- Base library: getters and setters ---------------------------------
   |
@@ -1454,10 +1595,10 @@ static void build_subroutines(BuildCtx *ctx)
   |  sub TMP1, TMP0, TMP1
   |  add NODE:TMP2, NODE:TMP2, TMP1	// node = tab->node + (idx*32-idx*8)
   |3:  // Rearranged logic, because we expect _not_ to find the key.
-  |  lwz CARG4, NODE:TMP2->key
-  |   lwz TMP0, 4+offsetof(Node, key)(NODE:TMP2)
-  |    lwz CARG2, NODE:TMP2->val
-  |     lwz TMP1, 4+offsetof(Node, val)(NODE:TMP2)
+  |  lwz CARG4, WORD_HI+offsetof(Node, key)(NODE:TMP2)
+  |   lwz TMP0, WORD_LO+offsetof(Node, key)(NODE:TMP2)
+  |    lwz CARG2, WORD_HI+offsetof(Node, val)(NODE:TMP2)
+  |     lwz TMP1, WORD_LO+offsetof(Node, val)(NODE:TMP2)
   |  checkstr CARG4; bne >4
   |   cmpw TMP0, STR:RC; beq >5
   |4:
@@ -1475,14 +1616,33 @@ static void build_subroutines(BuildCtx *ctx)
   |6:
   |  cmpwi CARG3, LJ_TUDATA; beq <1
   |  .gpr64 extsw CARG3, CARG3
+  |.if P64
+  |  li TMP0, LJ_TNUMX
+  |    srawi TMP3, CARG3, 15
+  |  subfc TMP1, TMP0, CARG3
+  |.else
   |  subfc TMP0, TISNUM, CARG3
+  |.endif
   |  subfe TMP2, CARG3, CARG3
+  |.if P64
+  |  cmpwi TMP3, -2
+  |    orc TMP1, TMP2, TMP1
+  |    subf TMP1, TMP0, TMP1
+  |  beq >7
+  |.else
   |  orc TMP1, TMP2, TMP0
-  |  addi TMP1, TMP1, ~LJ_TISNUM+1
+  |  subf TMP1, TISNUM, TMP1
+  |.endif
   |  slwi TMP1, TMP1, 2
+  |8:
   |   la TMP2, DISPATCH_GL(gcroot[GCROOT_BASEMT])(DISPATCH)
   |  lwzx TAB:CARG1, TMP2, TMP1
   |  b <2
+  |.if P64
+  |7:
+  |  li TMP1, ~LJ_TLIGHTUD<<2
+  |  b <8
+  |.endif
   |
   |.ffunc_2 setmetatable
   |  // Fast path: no mt for table yet and not clearing the mt.
@@ -1500,8 +1660,8 @@ static void build_subroutines(BuildCtx *ctx)
   |
   |.ffunc rawget
   |  cmplwi NARGS8:RC, 16
-  |   lwz CARG4, 0(BASE)
-  |    lwz TAB:CARG2, 4(BASE)
+  |   lwz CARG4, WORD_HI(BASE)
+  |    lwz TAB:CARG2, WORD_LO(BASE)
   |  blt ->fff_fallback
   |  checktab CARG4; bne ->fff_fallback
   |   la CARG3, 8(BASE)
@@ -1521,11 +1681,11 @@ static void build_subroutines(BuildCtx *ctx)
   |.ffunc tonumber
   |  // Only handles the number case inline (without a base argument).
   |  cmplwi NARGS8:RC, 8
-  |   lwz CARG1, 0(BASE)
+  |   lwz CARG1, WORD_HI(BASE)
   |.if FPU
   |    lfd FARG1, 0(BASE)
   |.else
-  |    lwz CARG2, 4(BASE)
+  |    lwz CARG2, WORD_LO(BASE)
   |.endif
   |  bne ->fff_fallback			// Exactly one argument.
   |   checknum CARG1; bgt ->fff_fallback
@@ -1560,10 +1720,15 @@ static void build_subroutines(BuildCtx *ctx)
   |
   |.ffunc next
   |  cmplwi NARGS8:RC, 8
-  |   lwz CARG1, 0(BASE)
-  |    lwz TAB:CARG2, 4(BASE)
+  |   lwz CARG1, WORD_HI(BASE)
+  |    lwz TAB:CARG2, WORD_LO(BASE)
   |  blt ->fff_fallback
+  |.if ENDIAN_LE
+  |   add TMP1, BASE, NARGS8:RC
+  |   stw TISNIL, WORD_HI(TMP1)		// Set missing 2nd arg to nil.
+  |.else
   |   stwx TISNIL, BASE, NARGS8:RC	// Set missing 2nd arg to nil.
+  |.endif
   |  checktab CARG1
   |   lwz PC, FRAME_PC(BASE)
   |  bne ->fff_fallback
@@ -1620,7 +1785,7 @@ static void build_subroutines(BuildCtx *ctx)
   |.endif
   |  la RA, -8(BASE)
 #endif
-  |   stw TISNIL, 8(BASE)
+  |   stw TISNIL, 8+WORD_HI(BASE)
   |  li RD, (3+1)*8
   |.if FPU
   |  stfd f0, 0(RA)
@@ -1632,11 +1797,11 @@ static void build_subroutines(BuildCtx *ctx)
   |
   |.ffunc ipairs_aux
   |  cmplwi NARGS8:RC, 16
-  |   lwz CARG3, 0(BASE)
-  |    lwz TAB:CARG1, 4(BASE)
-  |   lwz CARG4, 8(BASE)
+  |   lwz CARG3, WORD_HI(BASE)
+  |    lwz TAB:CARG1, WORD_LO(BASE)
+  |   lwz CARG4, 8+WORD_HI(BASE)
   |.if DUALNUM
-  |    lwz TMP2, 12(BASE)
+  |    lwz TMP2, 8+WORD_LO(BASE)
   |.else
   |    lfd FARG2, 8(BASE)
   |.endif
@@ -1665,20 +1830,20 @@ static void build_subroutines(BuildCtx *ctx)
   |   la RA, -8(BASE)
   |  cmplw TMP0, TMP2
   |.if DUALNUM
-  |  stw TISNUM, 0(RA)
+  |  stw TISNUM, WORD_HI(RA)
   |   slwi TMP3, TMP2, 3
-  |  stw TMP2, 4(RA)
+  |  stw TMP2, WORD_LO(RA)
   |.else
   |   slwi TMP3, TMP2, 3
   |  stfd FARG2, 0(RA)
   |.endif
   |  ble >2				// Not in array part?
   |.if FPU
-  |  lwzx TMP2, TMP1, TMP3
-  |  lfdx f0, TMP1, TMP3
+  |  lfdux f0, TMP1, TMP3
+  |  lwz TMP2, WORD_HI(TMP1)
   |.else
   |  lwzux TMP2, TMP1, TMP3
-  |  lwz TMP3, 4(TMP1)
+  |  lwz TMP3, WORD_HI(TMP1)
   |.endif
   |1:
   |  checknil TMP2
@@ -1703,7 +1868,7 @@ static void build_subroutines(BuildCtx *ctx)
   |  cmplwi CRET1, 0
   |   li RD, (0+1)*8
   |  beq ->fff_res
-  |  lwz TMP2, 0(CRET1)
+  |  lwz TMP2, WORD_HI(CRET1)
   |.if FPU
   |  lfd f0, 0(CRET1)
   |.else
@@ -1736,11 +1901,11 @@ static void build_subroutines(BuildCtx *ctx)
   |  la RA, -8(BASE)
 #endif
   |.if DUALNUM
-  |  stw TISNUM, 8(BASE)
+  |  stw TISNUM, 8+WORD_HI(BASE)
   |.else
-  |  stw ZERO, 8(BASE)
+  |  stw ZERO, 8+WORD_HI(BASE)
   |.endif
-  |   stw ZERO, 12(BASE)
+  |   stw ZERO, 8+WORD_LO(BASE)
   |  li RD, (3+1)*8
   |.if FPU
   |  stfd f0, 0(RA)
@@ -1766,7 +1931,7 @@ static void build_subroutines(BuildCtx *ctx)
   |
   |.ffunc xpcall
   |  cmplwi NARGS8:RC, 16
-  |   lwz CARG3, 8(BASE)
+  |   lwz CARG3, 8+WORD_HI(BASE)
   |.if FPU
   |    lfd FARG2, 8(BASE)
   |    lfd FARG1, 0(BASE)
@@ -1897,7 +2062,7 @@ static void build_subroutines(BuildCtx *ctx)
   |.if resume
   |  li TMP1, LJ_TTRUE
   |   la RA, -8(BASE)
-  |  stw TMP1, -8(BASE)			// Prepend true to results.
+  |  stw TMP1, WORD_HI-8(BASE)		// Prepend true to results.
   |  addi RD, RD, 16
   |.else
   |  mr RA, BASE
@@ -1922,7 +2087,7 @@ static void build_subroutines(BuildCtx *ctx)
   |.endif
   |   stp TMP3, L:SAVE0->top		// Remove error from coroutine stack.
   |    li RD, (2+1)*8
-  |   stw TMP1, -8(BASE)		// Prepend false to results.
+  |   stw TMP1, WORD_HI-8(BASE)		// Prepend false to results.
   |    la RA, -8(BASE)
   |.if FPU
   |  stfd f0, 0(BASE)			// Copy error message.
@@ -1980,8 +2145,8 @@ static void build_subroutines(BuildCtx *ctx)
   |->fff_resi:
   |  lwz PC, FRAME_PC(BASE)
   |  la RA, -8(BASE)
-  |  stw TISNUM, -8(BASE)
-  |  stw CRET1, -4(BASE)
+  |  stw TISNUM, WORD_HI-8(BASE)
+  |  stw CRET1, WORD_LO-8(BASE)
   |  b ->fff_res1
   |1:
   |  lus CARG3, 0x41e0	// 2^31.
@@ -1996,9 +2161,9 @@ static void build_subroutines(BuildCtx *ctx)
   |->fff_restv:
   |  // CARG3/CARG1 = TValue result.
   |  lwz PC, FRAME_PC(BASE)
-  |   stw CARG3, -8(BASE)
+  |   stw CARG3, WORD_HI-8(BASE)
   |  la RA, -8(BASE)
-  |   stw CARG1, -4(BASE)
+  |   stw CARG1, WORD_LO-8(BASE)
   |->fff_res1:
   |  // RA = results, PC = return.
   |  li RD, (1+1)*8
@@ -2016,10 +2181,11 @@ static void build_subroutines(BuildCtx *ctx)
   |  ins_next1
   |  // Adjust BASE. KBASE is assumed to be set for the calling frame.
   |   sub BASE, RA, TMP0
+  |   addi BASEP4, BASE, 4
   |  ins_next2
   |
   |6:  // Fill up results with nil.
-  |  subi TMP1, RD, 8
+  |  addi TMP1, RD, WORD_HI-8
   |   addi RD, RD, 8
   |  stwx TISNIL, RA, TMP1
   |  b <5
@@ -2137,7 +2303,7 @@ static void build_subroutines(BuildCtx *ctx)
   |
   |.ffunc math_log
   |  cmplwi NARGS8:RC, 8
-  |   lwz CARG1, 0(BASE)
+  |   lwz CARG1, WORD_HI(BASE)
   |  bne ->fff_fallback			// Need exactly 1 argument.
   |  checknum CARG1; bge ->fff_fallback
   |.if FPU
@@ -2166,20 +2332,20 @@ static void build_subroutines(BuildCtx *ctx)
   |.if DUALNUM
   |.ffunc math_ldexp
   |  cmplwi NARGS8:RC, 16
-  |   lwz TMP0, 0(BASE)
+  |   lwz TMP0, WORD_HI(BASE)
   |.if FPU
   |    lfd FARG1, 0(BASE)
   |.else
-  |    lwz CARG1, 0(BASE)
-  |    lwz CARG2, 4(BASE)
+  |    lwz CARG1, WORD_HI(BASE)
+  |    lwz CARG2, WORD_LO(BASE)
   |.endif
-  |   lwz TMP1, 8(BASE)
+  |   lwz TMP1, WORD_HI+8(BASE)
   |.if GPR64
-  |    lwz CARG2, 12(BASE)
+  |    lwz CARG2, WORD_LO+8(BASE)
   |.elif FPU
-  |    lwz CARG1, 12(BASE)
+  |    lwz CARG1, WORD_LO+8(BASE)
   |.else
-  |    lwz CARG3, 12(BASE)
+  |    lwz CARG3, WORD_LO+8(BASE)
   |.endif
   |  blt ->fff_fallback
   |  checknum TMP0; bge ->fff_fallback
@@ -2218,8 +2384,8 @@ static void build_subroutines(BuildCtx *ctx)
   |.endif
   |  li RD, (2+1)*8
   |.if DUALNUM
-  |   stw TISNUM, 8(RA)
-  |   stw TMP1, 12(RA)
+  |   stw TISNUM, WORD_HI+8(RA)
+  |   stw TMP1, WORD_LO+8(RA)
   |.else
   |   stfd FARG2, 8(RA)
   |.endif
@@ -2253,9 +2419,9 @@ static void build_subroutines(BuildCtx *ctx)
   |   add SAVE1, BASE, NARGS8:RC
   |  bne >4
   |1:  // Handle integers.
-  |  lwz CARG4, 0(SAVE0)
+  |  lwz CARG4, WORD_HI(SAVE0)
   |   cmplw cr1, SAVE0, SAVE1
-  |  lwz CARG2, 4(SAVE0)
+  |  lwz CARG2, WORD_LO(SAVE0)
   |   bge cr1, ->fff_resi
   |  checknum CARG4
   |   xoris TMP0, CARG1, 0x8000
@@ -2296,7 +2462,7 @@ static void build_subroutines(BuildCtx *ctx)
   |.endif
   |  bge ->fff_fallback
   |5:  // Handle numbers.
-  |  lwz CARG3, 0(SAVE0)
+  |  lwz CARG3, WORD_HI(SAVE0)
   |   cmplw cr1, SAVE0, SAVE1
   |.if FPU
   |  lfd FARG2, 0(SAVE0)
@@ -2335,7 +2501,7 @@ static void build_subroutines(BuildCtx *ctx)
   |.endif
   |  b <5
   |7:  // Convert integer to number and continue above.
-  |   lwz CARG3, 4(SAVE0)
+  |   lwz CARG3, WORD_LO(SAVE0)
   |  bne ->fff_fallback
   |.if FPU
   |  tonum_i FARG2, CARG3
@@ -2347,7 +2513,12 @@ static void build_subroutines(BuildCtx *ctx)
   |  .ffunc_n name
   |  li TMP1, 8
   |1:
+  |.if ENDIAN_LE
+  |   add CARG2, BASE, TMP1
+  |   lwz CARG2, WORD_HI(CARG2)
+  |.else
   |   lwzx CARG2, BASE, TMP1
+  |.endif
   |   lfdx FARG2, BASE, TMP1
   |  cmplw cr1, TMP1, NARGS8:RC
   |   checknum CARG2
@@ -2371,8 +2542,8 @@ static void build_subroutines(BuildCtx *ctx)
   |
   |.ffunc string_byte			// Only handle the 1-arg case here.
   |  cmplwi NARGS8:RC, 8
-  |   lwz CARG3, 0(BASE)
-  |    lwz STR:CARG1, 4(BASE)
+  |   lwz CARG3, WORD_HI(BASE)
+  |    lwz STR:CARG1, WORD_LO(BASE)
   |  bne ->fff_fallback			// Need exactly 1 argument.
   |   checkstr CARG3
   |   bne ->fff_fallback
@@ -2403,12 +2574,12 @@ static void build_subroutines(BuildCtx *ctx)
   |.ffunc string_char			// Only handle the 1-arg case here.
   |  ffgccheck
   |  cmplwi NARGS8:RC, 8
-  |   lwz CARG3, 0(BASE)
+  |   lwz CARG3, WORD_HI(BASE)
   |.if DUALNUM
-  |    lwz TMP0, 4(BASE)
+  |    lwz TMP0, WORD_LO(BASE)
   |  bne ->fff_fallback			// Exactly 1 argument.
   |  checknum CARG3; bne ->fff_fallback
-  |   la CARG2, 7(BASE)
+  |   la CARG2, WORD_BLO(BASE)
   |.else
   |    lfd FARG1, 0(BASE)
   |  bne ->fff_fallback			// Exactly 1 argument.
@@ -2432,16 +2603,16 @@ static void build_subroutines(BuildCtx *ctx)
   |.ffunc string_sub
   |  ffgccheck
   |  cmplwi NARGS8:RC, 16
-  |   lwz CARG3, 16(BASE)
+  |   lwz CARG3, WORD_HI+16(BASE)
   |.if not DUALNUM
   |    lfd f0, 16(BASE)
   |.endif
-  |   lwz TMP0, 0(BASE)
-  |    lwz STR:CARG1, 4(BASE)
+  |   lwz TMP0, WORD_HI(BASE)
+  |    lwz STR:CARG1, WORD_LO(BASE)
   |  blt ->fff_fallback
-  |   lwz CARG2, 8(BASE)
+  |   lwz CARG2, WORD_HI+8(BASE)
   |.if DUALNUM
-  |    lwz TMP1, 12(BASE)
+  |    lwz TMP1, WORD_LO+8(BASE)
   |.else
   |    lfd f1, 8(BASE)
   |.endif
@@ -2449,7 +2620,7 @@ static void build_subroutines(BuildCtx *ctx)
   |  beq >1
   |.if DUALNUM
   |  checknum CARG3
-  |   lwz TMP2, 20(BASE)
+  |   lwz TMP2, WORD_LO+16(BASE)
   |  bne ->fff_fallback
   |1:
   |  checknum CARG2; bne ->fff_fallback
@@ -2505,8 +2676,8 @@ static void build_subroutines(BuildCtx *ctx)
   |  .ffunc string_ .. name
   |  ffgccheck
   |  cmplwi NARGS8:RC, 8
-  |   lwz CARG3, 0(BASE)
-  |    lwz STR:CARG2, 4(BASE)
+  |   lwz CARG3, WORD_HI(BASE)
+  |    lwz STR:CARG2, WORD_LO(BASE)
   |  blt ->fff_fallback
   |  checkstr CARG3
   |   la SBUF:CARG1, DISPATCH_GL(tmpbuf)(DISPATCH)
@@ -2544,10 +2715,10 @@ static void build_subroutines(BuildCtx *ctx)
   |  addi SAVE0, BASE, 8
   |  add SAVE1, BASE, NARGS8:RC
   |1:
-  |  lwz CARG4, 0(SAVE0)
+  |  lwz CARG4, WORD_HI(SAVE0)
   |   cmplw cr1, SAVE0, SAVE1
   |.if DUALNUM
-  |  lwz CARG2, 4(SAVE0)
+  |  lwz CARG2, WORD_LO(SAVE0)
   |.else
   |  lfd FARG1, 0(SAVE0)
   |.endif
@@ -2714,20 +2885,23 @@ static void build_subroutines(BuildCtx *ctx)
   |
   |->fff_fallback:			// Call fast function fallback handler.
   |  // BASE = new base, RB = CFUNC, RC = nargs*8
-  |  lp TMP3, CFUNC:RB->f
+  |  lp FUNCREG, CFUNC:RB->f
   |    add TMP1, BASE, NARGS8:RC
   |   lwz PC, FRAME_PC(BASE)		// Fallback may overwrite PC.
   |    addi TMP0, TMP1, 8*LUA_MINSTACK
   |     lwz TMP2, L->maxstack
   |   stw PC, SAVE_PC			// Redundant (but a defined value).
-  |  .toc lp TMP3, 0(TMP3)
+  |  .opd lp TOCREG, TOC_OFS(FUNCREG)
+  |  .opdenv lp ENVREG, ENV_OFS(FUNCREG)
+  |  .opd lp FUNCREG, 0(FUNCREG)
   |  cmplw TMP0, TMP2
   |     stp BASE, L->base
   |    stp TMP1, L->top
   |   mr CARG1, L
   |  bgt >5				// Need to grow stack.
-  |  mtctr TMP3
+  |  mtctr FUNCREG
   |  bctrl				// (lua_State *L)
+  |  .toc lp TOCREG, SAVE_TOC
   |  // Either throws an error, or recovers and returns -1, 0 or nresults+1.
   |  lp BASE, L->base
   |  cmpwi CRET1, 0
@@ -2829,6 +3003,7 @@ static void build_subroutines(BuildCtx *ctx)
   |3:
   |  lp BASE, L->base
   |4:  // Re-dispatch to static ins.
+  |  addi BASEP4, BASE, 4
   |  lwz INS, -4(PC)
   |  decode_OPP TMP1, INS
   |   decode_RB8 RB, INS
@@ -2842,7 +3017,7 @@ static void build_subroutines(BuildCtx *ctx)
   |
   |->cont_hook:				// Continue from hook yield.
   |  addi PC, PC, 4
-  |  lwz MULTRES, -20(RB)		// Restore MULTRES for *M ins.
+  |  lwz MULTRES, WORD_LO-24(RB)		// Restore MULTRES for *M ins.
   |  b <4
   |
   |->vm_hotloop:			// Hot loop counter underflow.
@@ -2884,6 +3059,7 @@ static void build_subroutines(BuildCtx *ctx)
   |  lp BASE, L->base
   |   lp TMP0, L->top
   |   stw ZERO, SAVE_PC			// Invalidate for subsequent line hook.
+  |  addi BASEP4, BASE, 4
   |  sub NARGS8:RC, TMP0, BASE
   |  add RA, BASE, RA
   |  lwz LFUNC:RB, FRAME_FUNC(BASE)
@@ -2895,7 +3071,7 @@ static void build_subroutines(BuildCtx *ctx)
   |.if JIT
   |  // RA = resultptr, RB = meta base
   |  lwz INS, -4(PC)
-  |    lwz TRACE:TMP2, -20(RB)		// Save previous trace.
+  |    lwz TRACE:TMP2, WORD_LO-24(RB)	// Save previous trace.
   |   addic. TMP1, MULTRES, -8
   |  decode_RA8 RC, INS			// Call base.
   |   beq >2
@@ -2941,10 +3117,16 @@ static void build_subroutines(BuildCtx *ctx)
   |  mr CARG2, PC
   |  bl extern lj_dispatch_stitch	// (jit_State *J, const BCIns *pc)
   |  lp BASE, L->base
+  |  addi BASEP4, BASE, 4
   |  b ->cont_nop
   |
   |9:
+  |.if ENDIAN_LE
+  |  addi BASEP4, BASE, 4
+  |  stwx TISNIL, BASEP4, RC
+  |.else
   |  stwx TISNIL, BASE, RC
+  |.endif
   |  addi RC, RC, 8
   |  b <3
   |.endif
@@ -2959,6 +3141,7 @@ static void build_subroutines(BuildCtx *ctx)
   |  // HOOK_PROFILE is off again, so re-dispatch to dynamic instruction.
   |  lp BASE, L->base
   |  subi PC, PC, 4
+  |  addi BASEP4, BASE, 4
   |  b ->cont_nop
 #endif
   |
@@ -2968,40 +3151,73 @@ static void build_subroutines(BuildCtx *ctx)
   |
   |.macro savex_, a, b, c, d
   |.if FPU
-  |  stfd f..a, 16+a*8(sp)
-  |  stfd f..b, 16+b*8(sp)
-  |  stfd f..c, 16+c*8(sp)
-  |  stfd f..d, 16+d*8(sp)
+  |  stfd f..a, EXIT_OFFSET+a*8(sp)
+  |  stfd f..b, EXIT_OFFSET+b*8(sp)
+  |  stfd f..c, EXIT_OFFSET+c*8(sp)
+  |  stfd f..d, EXIT_OFFSET+d*8(sp)
   |.endif
   |.endmacro
   |
+  |.macro saver, a
+  |  stp r..a, EXIT_OFFSET+32*8+a*PSIZE(sp)
+  |.endmacro
+  |
   |->vm_exit_handler:
   |.if JIT
-  |  addi sp, sp, -(16+32*8+32*4)
-  |  stmw r2, 16+32*8+2*4(sp)
+  |  addi sp, sp, -(EXIT_OFFSET+32*8+32*PSIZE)
+  |  saver 3 // CARG1
+  |  saver 4 // CARG2
+  |  saver 5 // CARG3
+  |  saver 17 // DISPATCH
   |    addi DISPATCH, JGL, -GG_DISP2G-32768
   |    li CARG2, ~LJ_VMST_EXIT
-  |   lwz CARG1, 16+32*8+32*4(sp)	// Get stack chain.
+  |   lp CARG1, EXIT_OFFSET+32*8+32*PSIZE(sp)	// Get stack chain.
   |    stw CARG2, DISPATCH_GL(vmstate)(DISPATCH)
+  |  saver 2
+  |  saver 6
+  |  saver 7
+  |  saver 8
+  |  saver 9
+  |  saver 10
+  |  saver 11
+  |  saver 12
+  |  saver 13
   |  savex_ 0,1,2,3
-  |   stw CARG1, 0(sp)			// Store extended stack chain.
-  |   clrso TMP1
+  |   stp CARG1, 0(sp)			// Store extended stack chain.
+
   |  savex_ 4,5,6,7
-  |   addi CARG2, sp, 16+32*8+32*4	// Recompute original value of sp.
+  |  saver 14
+  |  saver 15
+  |  saver 16
+  |  saver 18
+  |   addi CARG2, sp, EXIT_OFFSET+32*8+32*PSIZE	// Recompute original value of sp.
   |  savex_ 8,9,10,11
-  |   stw CARG2, 16+32*8+1*4(sp)	// Store sp in RID_SP.
+  |   stp CARG2, EXIT_OFFSET+32*8+1*PSIZE(sp)	// Store sp in RID_SP.
   |  savex_ 12,13,14,15
   |   mflr CARG3
   |   li TMP1, 0
   |  savex_ 16,17,18,19
-  |   stw TMP1, 16+32*8+0*4(sp)		// Clear RID_TMP.
+  |   stw TMP1, EXIT_OFFSET+32*8+0*PSIZE(sp)		// Clear RID_TMP.
   |  savex_ 20,21,22,23
   |   lhz CARG4, 2(CARG3)		// Load trace number.
   |  savex_ 24,25,26,27
   |  lwz L, DISPATCH_GL(cur_L)(DISPATCH)
   |  savex_ 28,29,30,31
+  |  saver 19
+  |  saver 20
+  |  saver 21
+  |  saver 22
+  |  saver 23
+  |  saver 24
+  |  saver 25
+  |  saver 26
+  |  saver 27
+  |  saver 28
+  |  saver 29
+  |  saver 30
+  |  saver 31
   |   sub CARG3, TMP0, CARG3		// Compute exit number.
-  |  lp BASE, DISPATCH_GL(jit_base)(DISPATCH)
+  |  lwz BASE, DISPATCH_GL(jit_base)(DISPATCH)
   |   srwi CARG3, CARG3, 2
   |  stp L, DISPATCH_J(L)(DISPATCH)
   |   subi CARG3, CARG3, 2
@@ -3010,11 +3226,11 @@ static void build_subroutines(BuildCtx *ctx)
   |  stw TMP1, DISPATCH_GL(jit_base)(DISPATCH)
   |  addi CARG1, DISPATCH, GG_DISP2J
   |   stw CARG3, DISPATCH_J(exitno)(DISPATCH)
-  |  addi CARG2, sp, 16
+  |  addi CARG2, sp, EXIT_OFFSET
   |  bl extern lj_trace_exit		// (jit_State *J, ExitState *ex)
   |  // Returns MULTRES (unscaled) or negated error code.
   |  lp TMP1, L->cframe
-  |  lwz TMP2, 0(sp)
+  |  lp TMP2, 0(sp)
   |   lp BASE, L->base
   |.if GPR64
   |  rldicr sp, TMP1, 0, 61
@@ -3022,7 +3238,7 @@ static void build_subroutines(BuildCtx *ctx)
   |  rlwinm sp, TMP1, 0, 0, 29
   |.endif
   |   lwz PC, SAVE_PC			// Get SAVE_PC.
-  |  stw TMP2, 0(sp)
+  |  stp TMP2, 0(sp)
   |  stw L, SAVE_L			// Set SAVE_L (on-trace resume/yield).
   |  b >1
   |.endif
@@ -3043,7 +3259,12 @@ static void build_subroutines(BuildCtx *ctx)
   |    stw TMP2, DISPATCH_GL(jit_base)(DISPATCH)
   |  lwz KBASE, PC2PROTO(k)(TMP1)
   |  // Setup type comparison constants.
+  |.if P64
+  |  lus TISNUM, LJ_TISNUM >> 16
+  |  ori TISNUM, TISNUM, LJ_TISNUM & 0xffff
+  |.else
   |  li TISNUM, LJ_TISNUM
+  |.endif
   |  .FPU lus TMP3, 0x59c0		// TOBIT = 2^52 + 2^51 (float).
   |  .FPU stw TMP3, TMPD
   |  li ZERO, 0
@@ -3063,14 +3284,14 @@ static void build_subroutines(BuildCtx *ctx)
   |   decode_RA8 RA, INS
   |  lpx TMP0, DISPATCH, TMP1
   |  mtctr TMP0
-  |  cmplwi TMP1, BC_FUNCF*4		// Function header?
+  |  cmplwi TMP1, BC_FUNCF*PSIZE	// Function header?
   |  bge >2
   |   decode_RB8 RB, INS
   |   decode_RD8 RD, INS
   |   decode_RC8 RC, INS
   |  bctr
   |2:
-  |  cmplwi TMP1, (BC_FUNCC+2)*4	// Fast function?
+  |  cmplwi TMP1, (BC_FUNCC+2)*PSIZE	// Fast function?
   |  blt >3
   |  // Check frame below fast function.
   |  lwz TMP1, FRAME_PC(BASE)
@@ -3080,7 +3301,7 @@ static void build_subroutines(BuildCtx *ctx)
   |  lwz TMP2, -4(TMP1)
   |  decode_RA8 TMP0, TMP2
   |  sub TMP1, BASE, TMP0
-  |  lwz LFUNC:TMP2, -12(TMP1)
+  |  lwz LFUNC:TMP2, WORD_LO-16(TMP1)
   |  lwz TMP1, LFUNC:TMP2->pc
   |  lwz KBASE, PC2PROTO(k)(TMP1)
   |3:
@@ -3129,6 +3350,8 @@ static void build_subroutines(BuildCtx *ctx)
   |  sfi2d CARG3, CARG4
   |
   |->vm_modi:
+  |  li TMP1, 0
+  |  mtxer TMP1
   |  divwo. TMP0, CARG1, CARG2
   |  bso >1
   |.if GPR64
@@ -3147,7 +3370,8 @@ static void build_subroutines(BuildCtx *ctx)
   |  cmpwi CARG2, 0
   |   li CARG1, 0
   |  beqlr
-  |  clrso TMP0			// Clear SO for -2147483648 % -1 and return 0.
+  |  // Clear SO for -2147483648 % -1 and return 0.
+  |  crxor 4*cr0+so, 4*cr0+so, 4*cr0+so
   |  blr
   |
   |//-----------------------------------------------------------------------
@@ -3160,10 +3384,18 @@ static void build_subroutines(BuildCtx *ctx)
   |->vm_cachesync:
   |.if JIT or FFI
   |  // Compute start of first cache line and number of cache lines.
+  |  .if GPR64
+  |  rldicr CARG1, CARG1, 0, 58
+  |  .else
   |  rlwinm CARG1, CARG1, 0, 0, 26
+  |  .endif
   |  sub CARG2, CARG2, CARG1
   |  addi CARG2, CARG2, 31
+  |  .if GPR64
+  |  srdi. CARG2, CARG2, 5
+  |  .else
   |  rlwinm. CARG2, CARG2, 27, 5, 31
+  |  .endif
   |  beqlr
   |  mtctr CARG2
   |  mr CARG3, CARG1
@@ -3185,39 +3417,70 @@ static void build_subroutines(BuildCtx *ctx)
   |//-- FFI helper functions -----------------------------------------------
   |//-----------------------------------------------------------------------
   |
-  |// Handler for callback functions. Callback slot number in r11, g in r12.
+  |// Handler for callback functions.
+  |// 32-bit: Callback slot number in r12, g in r11.
+  |// 64-bit v1: Callback slot number in bits 47+ of r11, g in 0-46, TOC in r2.
+  |// 64-bit v2: Callback slot number in bits 2-11 of r12, g in r11,
+  |// vm_ffi_callback in r2.
   |->vm_ffi_callback:
   |.if FFI
   |.type CTSTATE, CTState, PC
+  |  .if OPD
+  |   rldicl r12, r11, 17, 47
+  |   rldicl r11, r11, 0, 17
+  |  .endif
+  |  .if ELFV2
+  |   rlwinm r12, r12, 30, 22, 31
+  |   addisl TOCREG, TOCREG, extern .TOC.-lj_vm_ffi_callback@ha
+  |   addil TOCREG, TOCREG, extern .TOC.-lj_vm_ffi_callback@l
+  |  .endif
   |  saveregs
-  |  lwz CTSTATE, GL:r12->ctype_state
-  |   addi DISPATCH, r12, GG_G2DISP
-  |  stw r11, CTSTATE->cb.slot
-  |  stw r3, CTSTATE->cb.gpr[0]
+  |  lwz CTSTATE, GL:r11->ctype_state
+  |   addi DISPATCH, r11, GG_G2DISP
+  |  stw r12, CTSTATE->cb.slot
+  |  stp r3, CTSTATE->cb.gpr[0]
   |   .FPU stfd f1, CTSTATE->cb.fpr[0]
-  |  stw r4, CTSTATE->cb.gpr[1]
+  |  stp r4, CTSTATE->cb.gpr[1]
   |   .FPU stfd f2, CTSTATE->cb.fpr[1]
-  |  stw r5, CTSTATE->cb.gpr[2]
+  |  stp r5, CTSTATE->cb.gpr[2]
   |   .FPU stfd f3, CTSTATE->cb.fpr[2]
-  |  stw r6, CTSTATE->cb.gpr[3]
+  |  stp r6, CTSTATE->cb.gpr[3]
   |   .FPU stfd f4, CTSTATE->cb.fpr[3]
-  |  stw r7, CTSTATE->cb.gpr[4]
+  |  stp r7, CTSTATE->cb.gpr[4]
   |   .FPU stfd f5, CTSTATE->cb.fpr[4]
-  |  stw r8, CTSTATE->cb.gpr[5]
+  |  stp r8, CTSTATE->cb.gpr[5]
   |   .FPU stfd f6, CTSTATE->cb.fpr[5]
-  |  stw r9, CTSTATE->cb.gpr[6]
+  |  stp r9, CTSTATE->cb.gpr[6]
   |   .FPU stfd f7, CTSTATE->cb.fpr[6]
-  |  stw r10, CTSTATE->cb.gpr[7]
+  |  stp r10, CTSTATE->cb.gpr[7]
   |   .FPU stfd f8, CTSTATE->cb.fpr[7]
+  |  .if GPR64
+  |   stfd f9, CTSTATE->cb.fpr[8]
+  |   stfd f10, CTSTATE->cb.fpr[9]
+  |   stfd f11, CTSTATE->cb.fpr[10]
+  |   stfd f12, CTSTATE->cb.fpr[11]
+  |   stfd f13, CTSTATE->cb.fpr[12]
+  |  .endif
+  |  .if ELFV2
+  |  addi TMP0, sp, CFRAME_SPACE+96
+  |  .elif GPR64
+  |  addi TMP0, sp, CFRAME_SPACE+112
+  |  .else
   |  addi TMP0, sp, CFRAME_SPACE+8
-  |  stw TMP0, CTSTATE->cb.stack
+  |  .endif
+  |  stp TMP0, CTSTATE->cb.stack
   |   mr CARG1, CTSTATE
   |  stw CTSTATE, SAVE_PC		// Any value outside of bytecode is ok.
   |   mr CARG2, sp
   |  bl extern lj_ccallback_enter	// (CTState *cts, void *cf)
   |  // Returns lua_State *.
   |  lp BASE, L:CRET1->base
+  |.if P64
+  |     lus TISNUM, LJ_TISNUM >> 16	// Setup type comparison constants.
+  |     ori TISNUM, TISNUM, LJ_TISNUM & 0xffff
+  |.else
   |     li TISNUM, LJ_TISNUM		// Setup type comparison constants.
+  |.endif
   |  lp RC, L:CRET1->top
   |     .FPU lus TMP3, 0x59c0		// TOBIT = 2^52 + 2^51 (float).
   |     li ZERO, 0
@@ -3246,9 +3509,21 @@ static void build_subroutines(BuildCtx *ctx)
   |  mr CARG1, CTSTATE
   |  mr CARG2, RA
   |  bl extern lj_ccallback_leave	// (CTState *cts, TValue *o)
-  |  lwz CRET1, CTSTATE->cb.gpr[0]
+  |  lp CRET1, CTSTATE->cb.gpr[0]
   |  .FPU lfd FARG1, CTSTATE->cb.fpr[0]
-  |  lwz CRET2, CTSTATE->cb.gpr[1]
+  |  lp CRET2, CTSTATE->cb.gpr[1]
+  |  .if GPR64
+  |    lfd FARG2, CTSTATE->cb.fpr[1]
+  |  .else
+  |    lp CARG3, CTSTATE->cb.gpr[2]
+  |    lp CARG4, CTSTATE->cb.gpr[3]
+  |  .endif
+  |  .elfv2 lfd f3, CTSTATE->cb.fpr[2]
+  |  .elfv2 lfd f4, CTSTATE->cb.fpr[3]
+  |  .elfv2 lfd f5, CTSTATE->cb.fpr[4]
+  |  .elfv2 lfd f6, CTSTATE->cb.fpr[5]
+  |  .elfv2 lfd f7, CTSTATE->cb.fpr[6]
+  |  .elfv2 lfd f8, CTSTATE->cb.fpr[7]
   |  b ->vm_leave_unw
   |.endif
   |
@@ -3261,23 +3536,46 @@ static void build_subroutines(BuildCtx *ctx)
   |   lbz CARG2, CCSTATE->nsp
   |   lbz CARG3, CCSTATE->nfpr
   |  neg TMP1, TMP1
+  |  .if GPR64
+  |    std TMP0, 16(sp)
+  |  .else
   |    stw TMP0, 4(sp)
+  |  .endif
   |   cmpwi cr1, CARG3, 0
   |  mr TMP2, sp
   |   addic. CARG2, CARG2, -1
+  |  .if GPR64
+  |  stdux sp, sp, TMP1
+  |  .else
   |  stwux sp, sp, TMP1
+  |  .endif
   |   crnot 4*cr1+eq, 4*cr1+eq		// For vararg calls.
-  |  stw r14, -4(TMP2)
-  |  stw CCSTATE, -8(TMP2)
+  |  .if GPR64
+  |    std r14, -8(TMP2)
+  |    std CCSTATE, -16(TMP2)
+  |  .else
+  |    stw r14, -4(TMP2)
+  |    stw CCSTATE, -8(TMP2)
+  |  .endif
   |  mr r14, TMP2
   |  la TMP1, CCSTATE->stack
+  |  .if GPR64
+  |   sldi CARG2, CARG2, 3
+  |  .else
   |   slwi CARG2, CARG2, 2
+  |  .endif
   |   blty >2
-  |  la TMP2, 8(sp)
+  |  .if ELFV2
+  |    la TMP2, 96(sp)
+  |  .elif GPR64
+  |    la TMP2, 112(sp)
+  |  .else
+  |    la TMP2, 8(sp)
+  |  .endif
   |1:
-  |  lwzx TMP0, TMP1, CARG2
-  |  stwx TMP0, TMP2, CARG2
-  |   addic. CARG2, CARG2, -4
+  |  lpx TMP0, TMP1, CARG2
+  |  stpx TMP0, TMP2, CARG2
+  |   addic. CARG2, CARG2, -PSIZE
   |  bge <1
   |2:
   |  bney cr1, >3
@@ -3289,28 +3587,55 @@ static void build_subroutines(BuildCtx *ctx)
   |  .FPU lfd f6, CCSTATE->fpr[5]
   |  .FPU lfd f7, CCSTATE->fpr[6]
   |  .FPU lfd f8, CCSTATE->fpr[7]
+  |  .if GPR64
+  |  .FPU lfd f9, CCSTATE->fpr[8]
+  |  .FPU lfd f10, CCSTATE->fpr[9]
+  |  .FPU lfd f11, CCSTATE->fpr[10]
+  |  .FPU lfd f12, CCSTATE->fpr[11]
+  |  .FPU lfd f13, CCSTATE->fpr[12]
+  |  .endif
   |3:
-  |   lp TMP0, CCSTATE->func
-  |  lwz CARG2, CCSTATE->gpr[1]
-  |  lwz CARG3, CCSTATE->gpr[2]
-  |  lwz CARG4, CCSTATE->gpr[3]
-  |  lwz CARG5, CCSTATE->gpr[4]
-  |   mtctr TMP0
-  |  lwz r8, CCSTATE->gpr[5]
-  |  lwz r9, CCSTATE->gpr[6]
-  |  lwz r10, CCSTATE->gpr[7]
-  |  lwz CARG1, CCSTATE->gpr[0]		// Do this last, since CCSTATE is CARG1.
+  |  .toc std TOCREG, SAVE_TOC
+  |   lp FUNCREG, CCSTATE->func
+  |  lp CARG2, CCSTATE->gpr[1]
+  |  lp CARG3, CCSTATE->gpr[2]
+  |  .opd lp TOCREG, TOC_OFS(FUNCREG)
+  |  .opdenv lp ENVREG, ENV_OFS(FUNCREG)
+  |  .opd lp FUNCREG, 0(FUNCREG)
+  |  lp CARG4, CCSTATE->gpr[3]
+  |  lp CARG5, CCSTATE->gpr[4]
+  |   mtctr FUNCREG
+  |  lp r8, CCSTATE->gpr[5]
+  |  lp r9, CCSTATE->gpr[6]
+  |  lp r10, CCSTATE->gpr[7]
+  |  lp CARG1, CCSTATE->gpr[0]		// Do this last, since CCSTATE is CARG1.
   |   bctrl
-  |  lwz CCSTATE:TMP1, -8(r14)
-  |  lwz TMP2, -4(r14)
+  |   .toc lp TOCREG, SAVE_TOC
+  |  .if GPR64
+  |   ld CCSTATE:TMP1, -16(r14)
+  |   ld TMP2, -8(r14)
+  |   ld TMP0, 16(r14)
+  |  .else
+  |   lwz CCSTATE:TMP1, -8(r14)
+  |   lwz TMP2, -4(r14)
   |   lwz TMP0, 4(r14)
-  |  stw CARG1, CCSTATE:TMP1->gpr[0]
+  |  .endif
+  |  stp CARG1, CCSTATE:TMP1->gpr[0]
   |  .FPU stfd FARG1, CCSTATE:TMP1->fpr[0]
-  |  stw CARG2, CCSTATE:TMP1->gpr[1]
+  |  stp CARG2, CCSTATE:TMP1->gpr[1]
+  |  .if GPR64
+  |   stfd FARG2, CCSTATE:TMP1->fpr[1]
+  |  .endif
+  |  .elfv2 stfd FARG3, CCSTATE:TMP1->fpr[2]
+  |  .elfv2 stfd FARG4, CCSTATE:TMP1->fpr[3]
+  |  .elfv2 stfd FARG5, CCSTATE:TMP1->fpr[4]
+  |  .elfv2 stfd FARG6, CCSTATE:TMP1->fpr[5]
+  |  .elfv2 stfd FARG7, CCSTATE:TMP1->fpr[6]
+  |  .elfv2 stfd FARG8, CCSTATE:TMP1->fpr[7]
   |   mtlr TMP0
-  |  stw CARG3, CCSTATE:TMP1->gpr[2]
+  |  stp CARG3, CCSTATE:TMP1->gpr[2]
   |   mr sp, r14
-  |  stw CARG4, CCSTATE:TMP1->gpr[3]
+  |  stp CARG4, CCSTATE:TMP1->gpr[3]
   |   mr r14, TMP2
   |  blr
   |.endif
@@ -3333,14 +3658,15 @@ static void build_ins(BuildCtx *ctx, BCOp op, int defop)
 
   case BC_ISLT: case BC_ISGE: case BC_ISLE: case BC_ISGT:
     |  // RA = src1*8, RD = src2*8, JMP with RD = target
+    |  addi BASEP4, BASE, 4
     |.if DUALNUM
-    |  lwzux CARG1, RA, BASE
+    |  lwzx CARG1, BASE_HI, RA
     |    addi PC, PC, 4
-    |   lwz CARG2, 4(RA)
-    |  lwzux CARG3, RD, BASE
+    |   lwzx CARG2, BASE_LO, RA
+    |  lwzx CARG3, BASE_HI, RD
     |    lwz TMP2, -4(PC)
     |  checknum cr0, CARG1
-    |   lwz CARG4, 4(RD)
+    |   lwzx CARG4, BASE_LO, RD
     |    decode_RD4 TMP2, TMP2
     |  checknum cr1, CARG3
     |    addis SAVE0, TMP2, -(BCBIAS_J*4 >> 16)
@@ -3364,7 +3690,7 @@ static void build_ins(BuildCtx *ctx, BCOp op, int defop)
     |7:  // RA is not an integer.
     |  bgt cr0, ->vmeta_comp
     |  // RA is a number.
-    |   .FPU lfd f0, 0(RA)
+    |   .FPU lfdx f0, BASE, RA
     |  bgt cr1, ->vmeta_comp
     |  blt cr1, >4
     |  // RA is a number, RD is an integer.
@@ -3384,7 +3710,7 @@ static void build_ins(BuildCtx *ctx, BCOp op, int defop)
     |  bl ->vm_sfi2d_1
     |.endif
     |4:
-    |  .FPU lfd f1, 0(RD)
+    |  .FPU lfdx f1, BASE, RD
     |5:
     |.if FPU
     |  fcmpu cr0, f0, f1
@@ -3405,10 +3731,10 @@ static void build_ins(BuildCtx *ctx, BCOp op, int defop)
     }
     |  b <1
     |.else
-    |  lwzx TMP0, BASE, RA
+    |  lwzx TMP0, BASE_HI, RA
     |    addi PC, PC, 4
     |   lfdx f0, BASE, RA
-    |  lwzx TMP1, BASE, RD
+    |  lwzx TMP1, BASE_HI, RD
     |  checknum cr0, TMP0
     |    lwz TMP2, -4(PC)
     |   lfdx f1, BASE, RD
@@ -3438,16 +3764,25 @@ static void build_ins(BuildCtx *ctx, BCOp op, int defop)
   case BC_ISEQV: case BC_ISNEV:
     vk = op == BC_ISEQV;
     |  // RA = src1*8, RD = src2*8, JMP with RD = target
+    |  addi BASEP4, BASE, 4
     |.if DUALNUM
-    |  lwzux CARG1, RA, BASE
+    |  lwzx CARG1, BASE_HI, RA
     |    addi PC, PC, 4
-    |   lwz CARG2, 4(RA)
-    |  lwzux CARG3, RD, BASE
+    |   lwzx CARG2, BASE_LO, RA
+    |  .if ENDIAN_LE
+    |    lwzx CARG3, BASE_HI, RD
+    |  .else
+    |    lwzux CARG3, RD, BASE_HI
+    |  .endif
     |  checknum cr0, CARG1
     |    lwz SAVE0, -4(PC)
     |  checknum cr1, CARG3
     |    decode_RD4 SAVE0, SAVE0
-    |   lwz CARG4, 4(RD)
+    |  .if ENDIAN_LE
+    |   lwzux CARG4, RD, BASE_LO
+    |  .else
+    |   lwz CARG4, WORD_LO(RD)
+    |  .endif
     |  cror 4*cr7+gt, 4*cr0+gt, 4*cr1+gt
     |    addis SAVE0, SAVE0, -(BCBIAS_J*4 >> 16)
     if (vk) {
@@ -3456,11 +3791,11 @@ static void build_ins(BuildCtx *ctx, BCOp op, int defop)
       |  ble cr7, ->BC_ISNEN_Z
     }
     |.else
-    |  lwzux CARG1, RA, BASE
+    |  lwzx CARG1, BASE_HI, RA
     |   lwz SAVE0, 0(PC)
-    |    lfd f0, 0(RA)
+    |    lfdx f0, BASE, RA
     |   addi PC, PC, 4
-    |  lwzux CARG3, RD, BASE
+    |  lwzx CARG3, BASE_HI, RD
     |  checknum cr0, CARG1
     |   decode_RD4 SAVE0, SAVE0
     |    lfd f1, 0(RD)
@@ -3481,8 +3816,8 @@ static void build_ins(BuildCtx *ctx, BCOp op, int defop)
     |.endif
     |5:  // Either or both types are not numbers.
     |.if not DUALNUM
-    |    lwz CARG2, 4(RA)
-    |    lwz CARG4, 4(RD)
+    |    lwzx CARG2, BASE_LO, RA
+    |    lwzx CARG4, BASE_LO, RD
     |.endif
     |.if FFI
     |  cmpwi cr7, CARG1, LJ_TCDATA
@@ -3498,10 +3833,16 @@ static void build_ins(BuildCtx *ctx, BCOp op, int defop)
     |.if FFI
     |  beq cr7, ->vmeta_equal_cd
     |.endif
+    |.if P64
+    |   cmplwi cr7, TMP2, ~LJ_TUDATA		// Avoid 64 bit lightuserdata.
+    |.endif
     |    cmplw cr5, CARG2, CARG4
     |  crandc 4*cr0+gt, 4*cr0+eq, 4*cr1+gt	// 2: Same type and primitive.
     |  crorc 4*cr0+lt, 4*cr5+eq, 4*cr0+eq	// 1: Same tv or different type.
     |  crand 4*cr0+eq, 4*cr0+eq, 4*cr5+eq	// 0: Same type and same tv.
+    |.if P64
+    |   cror 4*cr6+lt, 4*cr6+lt, 4*cr7+gt
+    |.endif
     |   mr SAVE1, PC
     |  cror 4*cr0+eq, 4*cr0+eq, 4*cr0+gt	// 0 or 2.
     |  cror 4*cr0+lt, 4*cr0+lt, 4*cr0+gt	// 1 or 2.
@@ -3541,9 +3882,10 @@ static void build_ins(BuildCtx *ctx, BCOp op, int defop)
   case BC_ISEQS: case BC_ISNES:
     vk = op == BC_ISEQS;
     |  // RA = src*8, RD = str_const*8 (~), JMP with RD = target
-    |  lwzux TMP0, RA, BASE
+    |  addi BASEP4, BASE, 4
+    |  lwzx TMP0, BASE_HI, RA
     |   srwi RD, RD, 1
-    |  lwz STR:TMP3, 4(RA)
+    |  lwzx STR:TMP3, BASE_LO, RA
     |    lwz TMP2, 0(PC)
     |   subfic RD, RD, -4
     |    addi PC, PC, 4
@@ -3574,16 +3916,16 @@ static void build_ins(BuildCtx *ctx, BCOp op, int defop)
   case BC_ISEQN: case BC_ISNEN:
     vk = op == BC_ISEQN;
     |  // RA = src*8, RD = num_const*8, JMP with RD = target
+    |  addi BASEP4, BASE, 4
     |.if DUALNUM
-    |  lwzux CARG1, RA, BASE
+    |  lwzx CARG1, BASE_HI, RA
     |    addi PC, PC, 4
-    |   lwz CARG2, 4(RA)
-    |  lwzux CARG3, RD, KBASE
+    |   lwzx CARG2, BASE_LO, RA
+    |  lwzux2 CARG3, CARG4, RD, KBASE
     |  checknum cr0, CARG1
     |    lwz SAVE0, -4(PC)
     |  checknum cr1, CARG3
     |    decode_RD4 SAVE0, SAVE0
-    |   lwz CARG4, 4(RD)
     |    addis SAVE0, SAVE0, -(BCBIAS_J*4 >> 16)
     if (vk) {
       |->BC_ISEQN_Z:
@@ -3600,7 +3942,7 @@ static void build_ins(BuildCtx *ctx, BCOp op, int defop)
     } else {
       |->BC_ISNEN_Z:  // Dummy label.
     }
-    |  lwzx CARG1, BASE, RA
+    |  lwzx CARG1, BASE_HI, RA
     |    addi PC, PC, 4
     |   lfdx f0, BASE, RA
     |    lwz SAVE0, -4(PC)
@@ -3638,7 +3980,7 @@ static void build_ins(BuildCtx *ctx, BCOp op, int defop)
     |7:  // RA is not an integer.
     |  bge cr0, <3
     |  // RA is a number.
-    |   .FPU lfd f0, 0(RA)
+    |   .FPU lfdx f0, BASE, RA
     |  blt cr1, >1
     |  // RA is a number, RD is an integer.
     |.if FPU
@@ -3670,7 +4012,8 @@ static void build_ins(BuildCtx *ctx, BCOp op, int defop)
   case BC_ISEQP: case BC_ISNEP:
     vk = op == BC_ISEQP;
     |  // RA = src*8, RD = primitive_type*8 (~), JMP with RD = target
-    |  lwzx TMP0, BASE, RA
+    |  addi BASEP4, BASE, 4
+    |  lwzx TMP0, BASE_HI, RA
     |   srwi TMP1, RD, 3
     |    lwz TMP2, 0(PC)
     |   not TMP1, TMP1
@@ -3700,7 +4043,8 @@ static void build_ins(BuildCtx *ctx, BCOp op, int defop)
 
   case BC_ISTC: case BC_ISFC: case BC_IST: case BC_ISF:
     |  // RA = dst*8 or unused, RD = src*8, JMP with RD = target
-    |  lwzx TMP0, BASE, RD
+    |  addi BASEP4, BASE, 4
+    |  lwzx TMP0, BASE_HI, RD
     |   lwz INS, 0(PC)
     |   addi PC, PC, 4
     if (op == BC_IST || op == BC_ISF) {
@@ -3745,7 +4089,10 @@ static void build_ins(BuildCtx *ctx, BCOp op, int defop)
 
   case BC_ISTYPE:
     |  // RA = src*8, RD = -type*8
-    |  lwzx TMP0, BASE, RA
+    |.if ENDIAN_LE
+    |  addi BASEP4, BASE, 4
+    |.endif
+    |  lwzx TMP0, BASE_HI, RA
     |  srwi TMP1, RD, 3
     |  ins_next1
     |.if not PPE and not GPR64
@@ -3759,7 +4106,10 @@ static void build_ins(BuildCtx *ctx, BCOp op, int defop)
     break;
   case BC_ISNUM:
     |  // RA = src*8, RD = -(TISNUM-1)*8
-    |  lwzx TMP0, BASE, RA
+    |.if ENDIAN_LE
+    |  addi BASEP4, BASE, 4
+    |.endif
+    |  lwzx TMP0, BASE_HI, RA
     |  ins_next1
     |  checknum TMP0
     |  bge ->vmeta_istype
@@ -3784,18 +4134,25 @@ static void build_ins(BuildCtx *ctx, BCOp op, int defop)
     break;
   case BC_NOT:
     |  // RA = dst*8, RD = src*8
+    |.if ENDIAN_LE
+    |  addi BASEP4, BASE, 4
+    |.endif
     |  ins_next1
-    |  lwzx TMP0, BASE, RD
+    |  lwzx TMP0, BASE_HI, RD
     |  .gpr64 extsw TMP0, TMP0
     |  subfic TMP1, TMP0, LJ_TTRUE
     |  adde TMP0, TMP0, TMP1
-    |  stwx TMP0, BASE, RA
+    |  stwx TMP0, BASE_HI, RA
     |  ins_next2
     break;
   case BC_UNM:
     |  // RA = dst*8, RD = src*8
-    |  lwzux TMP1, RD, BASE
-    |   lwz TMP0, 4(RD)
+    |  addi BASEP4, BASE, 4
+    |  lwzx TMP1, BASE_HI, RD
+    |   lwzx TMP0, BASE_LO, RD
+    |.if DUALNUM and not GPR64
+    |  mtxer ZERO
+    |.endif
     |  checknum TMP1
     |.if DUALNUM
     |  bne >5
@@ -3807,18 +4164,13 @@ static void build_ins(BuildCtx *ctx, BCOp op, int defop)
     |.else
     |  nego. TMP0, TMP0
     |  bso >4
-    |1:
     |.endif
     |  ins_next1
-    |  stwux TISNUM, RA, BASE
-    |   stw TMP0, 4(RA)
+    |  stwx TISNUM, BASE_HI, RA
+    |   stwx TMP0, BASE_LO, RA
     |3:
     |  ins_next2
     |4:
-    |.if not GPR64
-    |  // Potential overflow.
-    |  checkov TMP1, <1			// Ignore unrelated overflow.
-    |.endif
     |  lus TMP1, 0x41e0			// 2^31.
     |  li TMP0, 0
     |  b >7
@@ -3828,8 +4180,8 @@ static void build_ins(BuildCtx *ctx, BCOp op, int defop)
     |  xoris TMP1, TMP1, 0x8000
     |7:
     |  ins_next1
-    |  stwux TMP1, RA, BASE
-    |   stw TMP0, 4(RA)
+    |  stwx TMP1, BASE_HI, RA
+    |   stwx TMP0, BASE_LO, RA
     |.if DUALNUM
     |  b <3
     |.else
@@ -3838,15 +4190,16 @@ static void build_ins(BuildCtx *ctx, BCOp op, int defop)
     break;
   case BC_LEN:
     |  // RA = dst*8, RD = src*8
-    |  lwzux TMP0, RD, BASE
-    |   lwz CARG1, 4(RD)
+    |  addi BASEP4, BASE, 4
+    |  lwzx TMP0, BASE_HI, RD
+    |   lwzx CARG1, BASE_LO, RD
     |  checkstr TMP0; bne >2
     |  lwz CRET1, STR:CARG1->len
     |1:
     |.if DUALNUM
     |  ins_next1
-    |  stwux TISNUM, RA, BASE
-    |   stw CRET1, 4(RA)
+    |  stwx TISNUM, BASE_HI, RA
+    |   stwx CRET1, BASE_LO, RA
     |.else
     |  tonum_u f0, CRET1		// Result is a non-negative integer.
     |  ins_next1
@@ -3878,12 +4231,20 @@ static void build_ins(BuildCtx *ctx, BCOp op, int defop)
 
     |.macro ins_arithpre
     |  // RA = dst*8, RB = src1*8, RC = src2*8 | num_const*8
+    |  addi BASEP4, BASE, 4
     ||vk = ((int)op - BC_ADDVN) / (BC_ADDNV-BC_ADDVN);
     ||switch (vk) {
     ||case 0:
-    |   lwzx CARG1, BASE, RB
+    |   .if ENDIAN_LE and DUALNUM
+    |     addi CARG3, RC, 4
+    |   .endif
+    |   lwzx CARG1, BASE_HI, RB
     |   .if DUALNUM
-    |     lwzx CARG3, KBASE, RC
+    |     .if ENDIAN_LE
+    |       lwzx CARG3, KBASE, CARG3
+    |     .else
+    |       lwzx CARG3, KBASE, RC
+    |     .endif
     |   .endif
     |   .if FPU
     |    lfdx f14, BASE, RB
@@ -3904,9 +4265,16 @@ static void build_ins(BuildCtx *ctx, BCOp op, int defop)
     |   .endif
     ||  break;
     ||case 1:
-    |   lwzx CARG1, BASE, RB
+    |   .if ENDIAN_LE and DUALNUM
+    |     addi CARG3, RC, 4
+    |   .endif
+    |   lwzx CARG1, BASE_HI, RB
     |   .if DUALNUM
-    |     lwzx CARG3, KBASE, RC
+    |     .if ENDIAN_LE
+    |       lwzx CARG3, KBASE, CARG3
+    |     .else
+    |       lwzx CARG3, KBASE, RC
+    |     .endif
     |   .endif
     |   .if FPU
     |    lfdx f15, BASE, RB
@@ -3927,8 +4295,8 @@ static void build_ins(BuildCtx *ctx, BCOp op, int defop)
     |   .endif
     ||  break;
     ||default:
-    |   lwzx CARG1, BASE, RB
-    |   lwzx CARG3, BASE, RC
+    |   lwzx CARG1, BASE_HI, RB
+    |   lwzx CARG3, BASE_HI, RC
     |   .if FPU
     |    lfdx f14, BASE, RB
     |    lfdx f15, BASE, RC
@@ -4011,50 +4379,78 @@ static void build_ins(BuildCtx *ctx, BCOp op, int defop)
     |
     |.macro ins_arithdn, intins, fpins, fpcall
     |  // RA = dst*8, RB = src1*8, RC = src2*8 | num_const*8
+    |  addi BASEP4, BASE, 4
     ||vk = ((int)op - BC_ADDVN) / (BC_ADDNV-BC_ADDVN);
     ||switch (vk) {
     ||case 0:
-    |   lwzux CARG1, RB, BASE
-    |   lwzux CARG3, RC, KBASE
+    |   .if ENDIAN_LE
+    |     lwzx TMP1, RB, BASE_HI
+    |     lwzux CARG2, RC, KBASE
+    |      lwz TMP2, 4(RC)
+    |     checknum cr0, TMP1
+    |      lwzux CARG1, RB, BASE
+    |     checknum cr1, TMP2
+    |   .else
+    |     lwzux CARG1, RB, BASE
+    |     lwzux CARG3, RC, KBASE
     |    lwz CARG2, 4(RB)
-    |   checknum cr0, CARG1
-    |    lwz CARG4, 4(RC)
-    |   checknum cr1, CARG3
+    |     checknum cr0, CARG1
+    |      lwz CARG4, 4(RC)
+    |     checknum cr1, CARG3
+    |   .endif
     ||  break;
     ||case 1:
-    |   lwzux CARG3, RB, BASE
-    |   lwzux CARG1, RC, KBASE
-    |    lwz CARG4, 4(RB)
-    |   checknum cr0, CARG3
-    |    lwz CARG2, 4(RC)
-    |   checknum cr1, CARG1
+    |   .if ENDIAN_LE
+    |     lwzux CARG1, RC, KBASE
+    |     lwzx TMP1, RB, BASE_HI
+    |      lwz TMP2, 4(RC)
+    |     checknum cr0, TMP1
+    |      lwzux CARG2, RB, BASE
+    |     checknum cr1, TMP2
+    |   .else
+    |     lwzux CARG3, RB, BASE
+    |     lwzux CARG1, RC, KBASE
+    |      lwz CARG4, 4(RB)
+    |     checknum cr0, CARG3
+    |      lwz CARG2, 4(RC)
+    |     checknum cr1, CARG1
+    |   .endif
     ||  break;
     ||default:
-    |   lwzux CARG1, RB, BASE
-    |   lwzux CARG3, RC, BASE
-    |    lwz CARG2, 4(RB)
-    |   checknum cr0, CARG1
-    |    lwz CARG4, 4(RC)
-    |   checknum cr1, CARG3
+    |   .if ENDIAN_LE
+    |     lwzx TMP1, RB, BASE_HI
+    |     lwzx TMP2, RC, BASE_HI
+    |      lwzux CARG1, RB, BASE
+    |     checknum cr0, TMP1
+    |      lwzux CARG2, RC, BASE
+    |     checknum cr1, TMP2
+    |   .else
+    |     lwzux CARG1, RB, BASE
+    |     lwzux CARG3, RC, BASE
+    |      lwz CARG2, 4(RB)
+    |     checknum cr0, CARG1
+    |      lwz CARG4, 4(RC)
+    |     checknum cr1, CARG3
+    |   .endif
     ||  break;
     ||}
     |  bne >5
     |  bne cr1, >5
-    |.if "intins" == "intmod"
-    |  mr CARG1, CARG2
-    |  mr CARG2, CARG4
-    |.endif
+    |.if ENDIAN_LE
+    |  intins CARG1, CARG1, CARG2
+    |.else
+    |  .if "intins" == "intmod"
+    |    mr CARG1, CARG2
+    |    mr CARG2, CARG4
+    |  .endif
     |  intins CARG1, CARG2, CARG4
-    |  bso >4
-    |1:
+    |.endif
+    |  ins_arithfallback bso
     |  ins_next1
-    |  stwux TISNUM, RA, BASE
-    |  stw CARG1, 4(RA)
+    |  stwx TISNUM, BASE_HI, RA
+    |  stwx CARG1, BASE_LO, RA
     |2:
     |  ins_next2
-    |4:  // Overflow.
-    |  checkov TMP0, <1			// Ignore unrelated overflow.
-    |  ins_arithfallback b
     |5:  // FP variant.
     |.if FPU
     ||if (vk == 1) {
@@ -4137,8 +4533,11 @@ static void build_ins(BuildCtx *ctx, BCOp op, int defop)
     break;
   case BC_POW:
     |  // NYI: (partial) integer arithmetic.
-    |  lwzx CARG1, BASE, RB
-    |  lwzx CARG3, BASE, RC
+    |.if ENDIAN_LE
+    |  addi BASEP4, BASE, 4
+    |.endif
+    |  lwzx CARG1, BASE_HI, RB
+    |  lwzx CARG3, BASE_HI, RC
     |.if FPU
     |   lfdx FARG1, BASE, RB
     |   lfdx FARG2, BASE, RC
@@ -4177,6 +4576,7 @@ static void build_ins(BuildCtx *ctx, BCOp op, int defop)
     |  // Returns NULL (finished) or TValue * (metamethod).
     |  cmplwi CRET1, 0
     |   lp BASE, L->base
+    |   addi BASEP4, BASE, 4
     |  bne ->vmeta_binop
     |  ins_next1
     |.if FPU
@@ -4195,42 +4595,46 @@ static void build_ins(BuildCtx *ctx, BCOp op, int defop)
 
   case BC_KSTR:
     |  // RA = dst*8, RD = str_const*8 (~)
+    |  addi BASEP4, BASE, 4
     |  srwi TMP1, RD, 1
     |  subfic TMP1, TMP1, -4
     |  ins_next1
     |  lwzx TMP0, KBASE, TMP1		// KBASE-4-str_const*4
     |  li TMP2, LJ_TSTR
-    |  stwux TMP2, RA, BASE
-    |  stw TMP0, 4(RA)
+    |  stwx TMP2, BASE_HI, RA
+    |  stwx TMP0, BASE_LO, RA
     |  ins_next2
     break;
   case BC_KCDATA:
     |.if FFI
     |  // RA = dst*8, RD = cdata_const*8 (~)
+    |  addi BASEP4, BASE, 4
     |  srwi TMP1, RD, 1
     |  subfic TMP1, TMP1, -4
     |  ins_next1
     |  lwzx TMP0, KBASE, TMP1		// KBASE-4-cdata_const*4
     |  li TMP2, LJ_TCDATA
-    |  stwux TMP2, RA, BASE
-    |  stw TMP0, 4(RA)
+    |  stwx TMP2, BASE_HI, RA
+    |  stwx TMP0, BASE_LO, RA
     |  ins_next2
     |.endif
     break;
   case BC_KSHORT:
     |  // RA = dst*8, RD = int16_literal*8
+    |  addi BASEP4, BASE, 4
     |.if DUALNUM
     |  slwi RD, RD, 13
     |  srawi RD, RD, 16
     |  ins_next1
-    |   stwux TISNUM, RA, BASE
-    |   stw RD, 4(RA)
+    |   stwx TISNUM, BASE_HI, RA
+    |   stwx RD, BASE_LO, RA
     |  ins_next2
     |.else
     |  // The soft-float approach is faster.
     |  slwi RD, RD, 13
     |  srawi TMP1, RD, 31
     |  xor TMP2, TMP1, RD
+    |  .gpr64 extsw RD, RD
     |  sub TMP2, TMP2, TMP1		// TMP2 = abs(x)
     |  cntlzw TMP3, TMP2
     |  subfic TMP1, TMP3, 0x40d		// TMP1 = exponent-1
@@ -4242,8 +4646,8 @@ static void build_ins(BuildCtx *ctx, BCOp op, int defop)
     |   add RD, RD, TMP1		// hi = hi + exponent-1
     |    and RD, RD, TMP0		// hi = x == 0 ? 0 : hi
     |  ins_next1
-    |    stwux RD, RA, BASE
-    |    stw ZERO, 4(RA)
+    |    stwx RD, BASE_HI, RA
+    |    stwx ZERO, BASE_LO, RA
     |  ins_next2
     |.endif
     break;
@@ -4263,18 +4667,24 @@ static void build_ins(BuildCtx *ctx, BCOp op, int defop)
     break;
   case BC_KPRI:
     |  // RA = dst*8, RD = primitive_type*8 (~)
+    |.if ENDIAN_LE
+    |  addi BASEP4, BASE, 4
+    |.endif
     |  srwi TMP1, RD, 3
     |  not TMP0, TMP1
     |  ins_next1
-    |  stwx TMP0, BASE, RA
+    |  stwx TMP0, BASE_HI, RA
     |  ins_next2
     break;
   case BC_KNIL:
     |  // RA = base*8, RD = end*8
-    |  stwx TISNIL, BASE, RA
+    |.if ENDIAN_LE
+    |  addi BASEP4, BASE, 4
+    |.endif
+    |  stwx TISNIL, BASE_HI, RA
     |   addi RA, RA, 8
     |1:
-    |  stwx TISNIL, BASE, RA
+    |  stwx TISNIL, BASE_HI, RA
     |  cmpw RA, RD
     |   addi RA, RA, 8
     |  blt <1
@@ -4318,7 +4728,7 @@ static void build_ins(BuildCtx *ctx, BCOp op, int defop)
     |   lwz CARG2, UPVAL:RB->v
     |  andix. TMP3, TMP3, LJ_GC_BLACK	// isblack(uv)
     |    lbz TMP0, UPVAL:RB->closed
-    |   lwz TMP2, 0(RD)
+    |   lwz TMP2, WORD_HI(RD)
     |.if FPU
     |   stfd f0, 0(CARG2)
     |.else
@@ -4326,7 +4736,7 @@ static void build_ins(BuildCtx *ctx, BCOp op, int defop)
     |   stw CARG3, 4(CARG2)
     |.endif
     |    cmplwi cr1, TMP0, 0
-    |   lwz TMP1, 4(RD)
+    |   lwz TMP1, WORD_LO(RD)
     |  cror 4*cr0+eq, 4*cr0+eq, 4*cr1+eq
     |   subi TMP2, TMP2, (LJ_TNUMX+1)
     |  bne >2				// Upvalue is closed and black?
@@ -4359,8 +4769,8 @@ static void build_ins(BuildCtx *ctx, BCOp op, int defop)
     |   lbz TMP3, STR:TMP1->marked
     |   lbz TMP2, UPVAL:RB->closed
     |   li TMP0, LJ_TSTR
-    |   stw STR:TMP1, 4(CARG2)
-    |   stw TMP0, 0(CARG2)
+    |   stw STR:TMP1, WORD_LO(CARG2)
+    |   stw TMP0, WORD_HI(CARG2)
     |  bne >2
     |1:
     |  ins_next
@@ -4407,7 +4817,7 @@ static void build_ins(BuildCtx *ctx, BCOp op, int defop)
     |  lwzx UPVAL:RB, LFUNC:RB, RA
     |  ins_next1
     |  lwz TMP1, UPVAL:RB->v
-    |  stw TMP0, 0(TMP1)
+    |  stw TMP0, WORD_HI(TMP1)
     |  ins_next2
     break;
 
@@ -4422,6 +4832,7 @@ static void build_ins(BuildCtx *ctx, BCOp op, int defop)
     |   add CARG2, BASE, RA
     |  bl extern lj_func_closeuv	// (lua_State *L, TValue *level)
     |  lp BASE, L->base
+    |  addi BASEP4, BASE, 4
     |1:
     |  ins_next
     break;
@@ -4440,8 +4851,9 @@ static void build_ins(BuildCtx *ctx, BCOp op, int defop)
     |  // Returns GCfuncL *.
     |  lp BASE, L->base
     |   li TMP0, LJ_TFUNC
-    |  stwux TMP0, RA, BASE
-    |  stw LFUNC:CRET1, 4(RA)
+    |  addi BASEP4, BASE, 4
+    |  stwx TMP0, BASE_HI, RA
+    |  stwx LFUNC:CRET1, BASE_LO, RA
     |  ins_next
     break;
 
@@ -4474,8 +4886,9 @@ static void build_ins(BuildCtx *ctx, BCOp op, int defop)
     }
     |  lp BASE, L->base
     |   li TMP0, LJ_TTAB
-    |  stwux TMP0, RA, BASE
-    |  stw TAB:CRET1, 4(RA)
+    |  addi BASEP4, BASE, 4
+    |  stwx TMP0, BASE_HI, RA
+    |  stwx TAB:CRET1, BASE_LO, RA
     |  ins_next
     if (op == BC_TNEW) {
       |3:
@@ -4508,13 +4921,14 @@ static void build_ins(BuildCtx *ctx, BCOp op, int defop)
 
   case BC_TGETV:
     |  // RA = dst*8, RB = table*8, RC = key*8
-    |  lwzux CARG1, RB, BASE
-    |  lwzux CARG2, RC, BASE
-    |   lwz TAB:RB, 4(RB)
+    |  addi BASEP4, BASE, 4
+    |  lwzx CARG1, BASE_HI, RB
+    |  lwzx CARG2, BASE_HI, RC
+    |   lwzx TAB:RB, BASE_LO, RB
     |.if DUALNUM
-    |   lwz RC, 4(RC)
+    |   lwzx RC, BASE_LO, RC
     |.else
-    |   lfd f0, 0(RC)
+    |   lfdx f0, BASE, RC
     |.endif
     |  checktab CARG1
     |   checknum cr1, CARG2
@@ -4541,9 +4955,14 @@ static void build_ins(BuildCtx *ctx, BCOp op, int defop)
     |   slwi TMP2, TMP2, 3
     |.endif
     |  ble ->vmeta_tgetv		// Integer key and in array part?
-    |  lwzx TMP0, TMP1, TMP2
     |.if FPU
-    |   lfdx f14, TMP1, TMP2
+    |  .if ENDIAN_LE
+    |    lfdux f14, TMP1, TMP2
+    |    lwz TMP0, WORD_HI(TMP1)
+    |  .else
+    |    lwzx TMP0, TMP1, TMP2
+    |    lfdx f14, TMP1, TMP2
+    |  .endif
     |.else
     |   lwzux SAVE0, TMP1, TMP2
     |   lwz SAVE1, 4(TMP1)
@@ -4571,21 +4990,23 @@ static void build_ins(BuildCtx *ctx, BCOp op, int defop)
     |5:
     |  checkstr CARG2; bne ->vmeta_tgetv
     |.if not DUALNUM
-    |  lwz STR:RC, 4(RC)
+    |  lwzx STR:RC, BASE_LO, RC
     |.endif
     |  b ->BC_TGETS_Z			// String key?
     break;
   case BC_TGETS:
     |  // RA = dst*8, RB = table*8, RC = str_const*8 (~)
-    |  lwzux CARG1, RB, BASE
+    |  addi BASEP4, BASE, 4
+    |  lwzx CARG1, BASE_HI, RB
     |   srwi TMP1, RC, 1
-    |    lwz TAB:RB, 4(RB)
+    |    lwzx TAB:RB, BASE_LO, RB
     |   subfic TMP1, TMP1, -4
     |  checktab CARG1
     |   lwzx STR:RC, KBASE, TMP1	// KBASE-4-str_const*4
     |  bne ->vmeta_tgets1
     |->BC_TGETS_Z:
     |  // TAB:RB = GCtab *, STR:RC = GCstr *, RA = dst*8
+    |  addi BASEP4, BASE, 4
     |  lwz TMP0, TAB:RB->hmask
     |  lwz TMP1, STR:RC->hash
     |  lwz NODE:TMP2, TAB:RB->node
@@ -4595,16 +5016,16 @@ static void build_ins(BuildCtx *ctx, BCOp op, int defop)
     |  sub TMP1, TMP0, TMP1
     |  add NODE:TMP2, NODE:TMP2, TMP1	// node = tab->node + (idx*32-idx*8)
     |1:
-    |  lwz CARG1, NODE:TMP2->key
-    |   lwz TMP0, 4+offsetof(Node, key)(NODE:TMP2)
-    |    lwz CARG2, NODE:TMP2->val
-    |     lwz TMP1, 4+offsetof(Node, val)(NODE:TMP2)
+    |  lwz CARG1, WORD_HI+offsetof(Node, key)(NODE:TMP2)
+    |   lwz TMP0, WORD_LO+offsetof(Node, key)(NODE:TMP2)
+    |    lwz CARG2, WORD_HI+offsetof(Node, val)(NODE:TMP2)
+    |     lwz TMP1, WORD_LO+offsetof(Node, val)(NODE:TMP2)
     |  checkstr CARG1; bne >4
     |   cmpw TMP0, STR:RC; bne >4
     |    checknil CARG2; beq >5		// Key found, but nil value?
     |3:
-    |    stwux CARG2, RA, BASE
-    |     stw TMP1, 4(RA)
+    |    stwx CARG2, BASE_HI, RA
+    |     stwx TMP1, BASE_LO, RA
     |  ins_next
     |
     |4:  // Follow hash chain.
@@ -4625,16 +5046,22 @@ static void build_ins(BuildCtx *ctx, BCOp op, int defop)
     break;
   case BC_TGETB:
     |  // RA = dst*8, RB = table*8, RC = index*8
-    |  lwzux CARG1, RB, BASE
+    |  addi BASEP4, BASE, 4
+    |  lwzx CARG1, BASE_HI, RB
     |   srwi TMP0, RC, 3
-    |   lwz TAB:RB, 4(RB)
+    |   lwzx TAB:RB, BASE_LO, RB
     |  checktab CARG1; bne ->vmeta_tgetb
     |  lwz TMP1, TAB:RB->asize
     |   lwz TMP2, TAB:RB->array
     |  cmplw TMP0, TMP1; bge ->vmeta_tgetb
     |.if FPU
-    |  lwzx TMP1, TMP2, RC
-    |   lfdx f0, TMP2, RC
+    |  .if ENDIAN_LE
+    |    lfdux f0, TMP2, RC
+    |    lwz TMP1, WORD_HI(TMP2)
+    |  .else
+    |    lwzx TMP1, TMP2, RC
+    |    lfdx f0, TMP2, RC
+    |  .endif
     |.else
     |  lwzux TMP1, TMP2, RC
     |   lwz TMP3, 4(TMP2)
@@ -4661,12 +5088,11 @@ static void build_ins(BuildCtx *ctx, BCOp op, int defop)
     break;
   case BC_TGETR:
     |  // RA = dst*8, RB = table*8, RC = key*8
-    |  add RB, BASE, RB
-    |  lwz TAB:CARG1, 4(RB)
+    |  addi BASEP4, BASE, 4
+    |  lwzx TAB:CARG1, BASE_LO, RB
     |.if DUALNUM
-    |  add RC, BASE, RC
     |  lwz TMP0, TAB:CARG1->asize
-    |  lwz CARG2, 4(RC)
+    |  lwzx CARG2, BASE_LO, RC
     |   lwz TMP1, TAB:CARG1->array
     |.else
     |  lfdx f0, BASE, RC
@@ -4696,13 +5122,14 @@ static void build_ins(BuildCtx *ctx, BCOp op, int defop)
 
   case BC_TSETV:
     |  // RA = src*8, RB = table*8, RC = key*8
-    |  lwzux CARG1, RB, BASE
-    |  lwzux CARG2, RC, BASE
-    |   lwz TAB:RB, 4(RB)
+    |  addi BASEP4, BASE, 4
+    |  lwzx CARG1, BASE_HI, RB
+    |  lwzx CARG2, BASE_HI, RC
+    |   lwzx TAB:RB, BASE_LO, RB
     |.if DUALNUM
-    |   lwz RC, 4(RC)
+    |   lwzx RC, BASE_LO, RC
     |.else
-    |   lfd f0, 0(RC)
+    |   lfdx f0, BASE, RC
     |.endif
     |  checktab CARG1
     |   checknum cr1, CARG2
@@ -4729,7 +5156,12 @@ static void build_ins(BuildCtx *ctx, BCOp op, int defop)
     |   slwi TMP0, TMP2, 3
     |.endif
     |  ble ->vmeta_tsetv		// Integer key and in array part?
+    |  .if ENDIAN_LE
+    |   addi TMP2, TMP1, 4
+    |   lwzx TMP2, TMP2, TMP0
+    |  .else
     |   lwzx TMP2, TMP1, TMP0
+    |  .endif
     |  lbz TMP3, TAB:RB->marked
     |.if FPU
     |    lfdx f14, BASE, RA
@@ -4763,7 +5195,7 @@ static void build_ins(BuildCtx *ctx, BCOp op, int defop)
     |5:
     |  checkstr CARG2; bne ->vmeta_tsetv
     |.if not DUALNUM
-    |  lwz STR:RC, 4(RC)
+    |  lwzx STR:RC, BASE_LO, RC
     |.endif
     |  b ->BC_TSETS_Z			// String key?
     |
@@ -4773,9 +5205,10 @@ static void build_ins(BuildCtx *ctx, BCOp op, int defop)
     break;
   case BC_TSETS:
     |  // RA = src*8, RB = table*8, RC = str_const*8 (~)
-    |  lwzux CARG1, RB, BASE
+    |  addi BASEP4, BASE, 4
+    |  lwzx CARG1, BASE_HI, RB
     |   srwi TMP1, RC, 1
-    |    lwz TAB:RB, 4(RB)
+    |    lwzx TAB:RB, BASE_LO, RB
     |   subfic TMP1, TMP1, -4
     |  checktab CARG1
     |   lwzx STR:RC, KBASE, TMP1	// KBASE-4-str_const*4
@@ -4800,9 +5233,9 @@ static void build_ins(BuildCtx *ctx, BCOp op, int defop)
     |    lbz TMP3, TAB:RB->marked
     |  add NODE:TMP2, NODE:TMP2, TMP1	// node = tab->node + (idx*32-idx*8)
     |1:
-    |  lwz CARG1, NODE:TMP2->key
-    |   lwz TMP0, 4+offsetof(Node, key)(NODE:TMP2)
-    |    lwz CARG2, NODE:TMP2->val
+    |  lwz CARG1, WORD_HI+offsetof(Node, key)(NODE:TMP2)
+    |   lwz TMP0, WORD_LO+offsetof(Node, key)(NODE:TMP2)
+    |    lwz CARG2, WORD_HI+offsetof(Node, val)(NODE:TMP2)
     |     lwz NODE:TMP1, NODE:TMP2->next
     |  checkstr CARG1; bne >5
     |   cmpw TMP0, STR:RC; bne >5
@@ -4847,9 +5280,9 @@ static void build_ins(BuildCtx *ctx, BCOp op, int defop)
     |  beq ->vmeta_tsets		// 'no __newindex' flag NOT set: check.
     |6:
     |  li TMP0, LJ_TSTR
-    |   stw STR:RC, 4(CARG3)
+    |   stw STR:RC, WORD_LO(CARG3)
     |   mr CARG2, TAB:RB
-    |  stw TMP0, 0(CARG3)
+    |  stw TMP0, WORD_HI(CARG3)
     |  bl extern lj_tab_newkey		// (lua_State *L, GCtab *t, TValue *k)
     |  // Returns TValue *.
     |  lp BASE, L->base
@@ -4859,6 +5292,7 @@ static void build_ins(BuildCtx *ctx, BCOp op, int defop)
     |  stw SAVE0, 0(CRET1)
     |  stw SAVE1, 4(CRET1)
     |.endif
+    |   addi BASEP4, BASE, 4
     |  b <3				// No 2nd write barrier needed.
     |
     |7:  // Possible table write barrier for the value. Skip valiswhite check.
@@ -4867,9 +5301,10 @@ static void build_ins(BuildCtx *ctx, BCOp op, int defop)
     break;
   case BC_TSETB:
     |  // RA = src*8, RB = table*8, RC = index*8
-    |  lwzux CARG1, RB, BASE
+    |  addi BASEP4, BASE, 4
+    |  lwzx CARG1, BASE_HI, RB
     |   srwi TMP0, RC, 3
-    |   lwz TAB:RB, 4(RB)
+    |   lwzx TAB:RB, BASE_LO, RB
     |  checktab CARG1; bne ->vmeta_tsetb
     |  lwz TMP1, TAB:RB->asize
     |   lwz TMP2, TAB:RB->array
@@ -4883,7 +5318,12 @@ static void build_ins(BuildCtx *ctx, BCOp op, int defop)
     |   lwz SAVE1, 4(CARG2)
     |.endif
     |  bge ->vmeta_tsetb
-    |  lwzx TMP1, TMP2, RC
+    |  .if ENDIAN_LE
+    |    addi TMP1, TMP2, 4
+    |    lwzx TMP1, TMP1, RC
+    |  .else
+    |    lwzx TMP1, TMP2, RC
+    |  .endif
     |  checknil TMP1; beq >5
     |1:
     |  andix. TMP0, TMP3, LJ_GC_BLACK	// isblack(table)
@@ -4912,13 +5352,12 @@ static void build_ins(BuildCtx *ctx, BCOp op, int defop)
     break;
   case BC_TSETR:
     |  // RA = dst*8, RB = table*8, RC = key*8
-    |  add RB, BASE, RB
-    |  lwz TAB:CARG2, 4(RB)
+    |  addi BASEP4, BASE, 4
+    |  lwzx TAB:CARG2, BASE_LO, RB
     |.if DUALNUM
-    |  add RC, BASE, RC
     |    lbz TMP3, TAB:CARG2->marked
     |  lwz TMP0, TAB:CARG2->asize
-    |  lwz CARG3, 4(RC)
+    |  lwzx CARG3, BASE_LO, RC
     |   lwz TMP1, TAB:CARG2->array
     |.else
     |  lfdx f0, BASE, RC
@@ -4959,9 +5398,9 @@ static void build_ins(BuildCtx *ctx, BCOp op, int defop)
     |  add RA, BASE, RA
     |1:
     |   add TMP3, KBASE, RD
-    |  lwz TAB:CARG2, -4(RA)		// Guaranteed to be a table.
+    |  lwz TAB:CARG2, WORD_LO-8(RA)	// Guaranteed to be a table.
     |    addic. TMP0, MULTRES, -8
-    |   lwz TMP3, 4(TMP3)		// Integer constant is in lo-word.
+    |   lwz TMP3, WORD_LO(TMP3)		// Integer constant is in lo-word.
     |    srwi CARG3, TMP0, 3
     |    beq >4				// Nothing to copy?
     |  add CARG3, CARG3, TMP3
@@ -5020,8 +5459,7 @@ static void build_ins(BuildCtx *ctx, BCOp op, int defop)
   case BC_CALL:
     |  // RA = base*8, (RB = (nresults+1)*8,) RC = (nargs+1)*8
     |  mr TMP2, BASE
-    |  lwzux TMP0, BASE, RA
-    |   lwz LFUNC:RB, 4(BASE)
+    |  lwzux2 TMP0, LFUNC:RB, BASE, RA
     |    subi NARGS8:RC, NARGS8:RC, 8
     |   addi BASE, BASE, 8
     |  checkfunc TMP0; bne ->vmeta_call
@@ -5035,8 +5473,7 @@ static void build_ins(BuildCtx *ctx, BCOp op, int defop)
     break;
   case BC_CALLT:
     |  // RA = base*8, (RB = 0,) RC = (nargs+1)*8
-    |  lwzux TMP0, RA, BASE
-    |   lwz LFUNC:RB, 4(RA)
+    |  lwzux2 TMP0, LFUNC:RB, RA, BASE
     |    subi NARGS8:RC, NARGS8:RC, 8
     |    lwz TMP1, FRAME_PC(BASE)
     |  checkfunc TMP0
@@ -5099,8 +5536,8 @@ static void build_ins(BuildCtx *ctx, BCOp op, int defop)
     |  // RA = base*8, (RB = (nresults+1)*8, RC = (nargs+1)*8 ((2+1)*8))
     |  mr TMP2, BASE
     |  add BASE, BASE, RA
-    |  lwz TMP1, -24(BASE)
-    |   lwz LFUNC:RB, -20(BASE)
+    |  lwz TMP1, WORD_HI-24(BASE)
+    |   lwz LFUNC:RB, WORD_LO-24(BASE)
     |.if FPU
     |    lfd f1, -8(BASE)
     |    lfd f0, -16(BASE)
@@ -5110,8 +5547,8 @@ static void build_ins(BuildCtx *ctx, BCOp op, int defop)
     |    lwz CARG3, -16(BASE)
     |    lwz CARG4, -12(BASE)
     |.endif
-    |  stw TMP1, 0(BASE)		// Copy callable.
-    |   stw LFUNC:RB, 4(BASE)
+    |  stw TMP1, WORD_HI(BASE)		// Copy callable.
+    |   stw LFUNC:RB, WORD_LO(BASE)
     |  checkfunc TMP1
     |     li NARGS8:RC, 16		// Iterators get 2 arguments.
     |.if FPU
@@ -5133,8 +5570,8 @@ static void build_ins(BuildCtx *ctx, BCOp op, int defop)
     |  // NYI: add hotloop, record BC_ITERN.
     |.endif
     |  add RA, BASE, RA
-    |  lwz TAB:RB, -12(RA)
-    |  lwz RC, -4(RA)			// Get index from control var.
+    |  lwz TAB:RB, WORD_LO-16(RA)
+    |  lwz RC, WORD_LO-8(RA)		// Get index from control var.
     |  lwz TMP0, TAB:RB->asize
     |  lwz TMP1, TAB:RB->array
     |   addi PC, PC, 4
@@ -5142,10 +5579,11 @@ static void build_ins(BuildCtx *ctx, BCOp op, int defop)
     |  cmplw RC, TMP0
     |   slwi TMP3, RC, 3
     |  bge >5				// Index points after array part?
-    |  lwzx TMP2, TMP1, TMP3
     |.if FPU
-    |   lfdx f0, TMP1, TMP3
+    |  lfdux f0, TMP3, TMP1
+    |   lwz TMP2, WORD_HI(TMP3)
     |.else
+    |  lwzx TMP2, TMP1, TMP3
     |   lwzux CARG1, TMP3, TMP1
     |   lwz CARG2, 4(TMP3)
     |.endif
@@ -5153,8 +5591,8 @@ static void build_ins(BuildCtx *ctx, BCOp op, int defop)
     |     lwz INS, -4(PC)
     |  beq >4
     |.if DUALNUM
-    |   stw RC, 4(RA)
-    |   stw TISNUM, 0(RA)
+    |   stw RC, WORD_LO(RA)
+    |   stw TISNUM, WORD_HI(RA)
     |.else
     |   tonum_u f1, RC
     |.endif
@@ -5167,7 +5605,7 @@ static void build_ins(BuildCtx *ctx, BCOp op, int defop)
     |  stw CARG2, 12(RA)
     |.endif
     |     decode_RD4 TMP1, INS
-    |    stw RC, -4(RA)			// Update control var.
+    |    stw RC, WORD_LO-8(RA)		// Update control var.
     |     add PC, TMP1, TMP3
     |.if not DUALNUM
     |   stfd f1, 0(RA)
@@ -5189,15 +5627,15 @@ static void build_ins(BuildCtx *ctx, BCOp op, int defop)
     |  bgty <3
     |   slwi RB, RC, 3
     |   sub TMP3, TMP3, RB
-    |  lwzx RB, TMP2, TMP3
     |.if FPU
-    |  lfdx f0, TMP2, TMP3
+    |  lfdux f0, TMP3, TMP2
+    |  lwz RB, WORD_HI(TMP3)
     |.else
     |  add CARG3, TMP2, TMP3
     |  lwz CARG1, 0(CARG3)
     |  lwz CARG2, 4(CARG3)
-    |.endif
     |   add NODE:TMP3, TMP2, TMP3
+    |.endif
     |  checknil RB
     |     lwz INS, -4(PC)
     |  beq >7
@@ -5224,7 +5662,7 @@ static void build_ins(BuildCtx *ctx, BCOp op, int defop)
     |.endif
     |    addi RC, RC, 1
     |     add PC, TMP1, TMP2
-    |    stw RC, -4(RA)			// Update control var.
+    |    stw RC, WORD_LO-8(RA)		// Update control var.
     |  b <3
     |
     |7:  // Skip holes in hash part.
@@ -5235,10 +5673,10 @@ static void build_ins(BuildCtx *ctx, BCOp op, int defop)
   case BC_ISNEXT:
     |  // RA = base*8, RD = target (points to ITERN)
     |  add RA, BASE, RA
-    |  lwz TMP0, -24(RA)
-    |  lwz CFUNC:TMP1, -20(RA)
-    |   lwz TMP2, -16(RA)
-    |    lwz TMP3, -8(RA)
+    |  lwz TMP0, WORD_HI-24(RA)
+    |  lwz CFUNC:TMP1, WORD_LO-24(RA)
+    |   lwz TMP2, WORD_HI-16(RA)
+    |    lwz TMP3, WORD_HI-8(RA)
     |   cmpwi cr0, TMP2, LJ_TTAB
     |  cmpwi cr1, TMP0, LJ_TFUNC
     |    cmpwi cr6, TMP3, LJ_TNIL
@@ -5252,17 +5690,25 @@ static void build_ins(BuildCtx *ctx, BCOp op, int defop)
     |  bne cr0, >5
     |  lus TMP1, 0xfffe
     |  ori TMP1, TMP1, 0x7fff
-    |  stw ZERO, -4(RA)			// Initialize control var.
-    |  stw TMP1, -8(RA)
+    |  stw ZERO, WORD_LO-8(RA)		// Initialize control var.
+    |  stw TMP1, WORD_HI-8(RA)
     |    addis PC, TMP3, -(BCBIAS_J*4 >> 16)
     |1:
     |  ins_next
     |5:  // Despecialize bytecode if any of the checks fail.
     |  li TMP0, BC_JMP
     |   li TMP1, BC_ITERC
+    |  .if ENDIAN_LE
+    |  stb TMP0, -4(PC)
+    |  .else
     |  stb TMP0, -1(PC)
+    |  .endif
     |    addis PC, TMP3, -(BCBIAS_J*4 >> 16)
+    |  .if ENDIAN_LE
+    |   stb TMP1, 0(PC)
+    |  .else
     |   stb TMP1, 3(PC)
+    |  .endif
     |  b <1
     break;
 
@@ -5306,7 +5752,7 @@ static void build_ins(BuildCtx *ctx, BCOp op, int defop)
     |    addi RA, RA, 8
     |   blt cr1, <1			// More vararg slots?
     |2:  // Fill up remainder with nil.
-    |  stw TISNIL, 0(RA)
+    |  stw TISNIL, WORD_HI(RA)
     |  cmplw RA, TMP2
     |   addi RA, RA, 8
     |  blt <2
@@ -5353,6 +5799,7 @@ static void build_ins(BuildCtx *ctx, BCOp op, int defop)
     |  add RA, BASE, RA
     |  add RC, BASE, SAVE0
     |  subi TMP3, BASE, 8
+    |  addi BASEP4, BASE, 4
     |  b <6
     break;
 
@@ -5425,13 +5872,14 @@ static void build_ins(BuildCtx *ctx, BCOp op, int defop)
     |  bgt >6
     |   sub BASE, TMP2, RA
     |  lwz LFUNC:TMP1, FRAME_FUNC(BASE)
+    |  addi BASEP4, BASE, 4
     |  ins_next1
     |  lwz TMP1, LFUNC:TMP1->pc
     |  lwz KBASE, PC2PROTO(k)(TMP1)
     |  ins_next2
     |
     |6:  // Fill up results with nil.
-    |  subi TMP1, RD, 8
+    |  addi TMP1, RD, WORD_HI-8
     |   addi RD, RD, 8
     |  stwx TISNIL, TMP2, TMP1
     |  b <5
@@ -5474,13 +5922,14 @@ static void build_ins(BuildCtx *ctx, BCOp op, int defop)
     |  bgt >6
     |   sub BASE, TMP2, RA
     |  lwz LFUNC:TMP1, FRAME_FUNC(BASE)
+    |  addi BASEP4, BASE, 4
     |  ins_next1
     |  lwz TMP1, LFUNC:TMP1->pc
     |  lwz KBASE, PC2PROTO(k)(TMP1)
     |  ins_next2
     |
     |6:  // Fill up results with nil.
-    |  subi TMP1, RD, 8
+    |  addi TMP1, RD, WORD_HI-8
     |   addi RD, RD, 8
     |  stwx TISNIL, TMP2, TMP1
     |  b <5
@@ -5506,11 +5955,13 @@ static void build_ins(BuildCtx *ctx, BCOp op, int defop)
     vk = (op == BC_IFORL || op == BC_JFORL);
     |.if DUALNUM
     |  // Integer loop.
-    |  lwzux TMP1, RA, BASE
-    |   lwz CARG1, FORL_IDX*8+4(RA)
+    |  lwzux2 TMP1, CARG1, RA, BASE
+    if (vk) {
+      |  mtxer ZERO
+    }
     |  cmplw cr0, TMP1, TISNUM
     if (vk) {
-      |   lwz CARG3, FORL_STEP*8+4(RA)
+      |   lwz CARG3, FORL_STEP*8+WORD_LO(RA)
       |  bne >9
       |.if GPR64
       |  // Need to check overflow for (a<<32) + (b<<32).
@@ -5522,15 +5973,15 @@ static void build_ins(BuildCtx *ctx, BCOp op, int defop)
       |  addo. CARG1, CARG1, CARG3
       |.endif
       |    cmpwi cr6, CARG3, 0
-      |   lwz CARG2, FORL_STOP*8+4(RA)
-      |  bso >6
+      |   lwz CARG2, FORL_STOP*8+WORD_LO(RA)
+      |  bso >2
       |4:
-      |  stw CARG1, FORL_IDX*8+4(RA)
+      |  stw CARG1, FORL_IDX*8+WORD_LO(RA)
     } else {
-      |  lwz SAVE0, FORL_STEP*8(RA)
-      |   lwz CARG3, FORL_STEP*8+4(RA)
-      |  lwz TMP2, FORL_STOP*8(RA)
-      |   lwz CARG2, FORL_STOP*8+4(RA)
+      |  lwz SAVE0, FORL_STEP*8+WORD_HI(RA)
+      |   lwz CARG3, FORL_STEP*8+WORD_LO(RA)
+      |  lwz TMP2, FORL_STOP*8+WORD_HI(RA)
+      |   lwz CARG2, FORL_STOP*8+WORD_LO(RA)
       |  cmplw cr7, SAVE0, TISNUM
       |  cmplw cr1, TMP2, TISNUM
       |  crand 4*cr0+eq, 4*cr0+eq, 4*cr7+eq
@@ -5541,11 +5992,11 @@ static void build_ins(BuildCtx *ctx, BCOp op, int defop)
     |    blt cr6, >5
     |  cmpw CARG1, CARG2
     |1:
-    |   stw TISNUM, FORL_EXT*8(RA)
+    |   stw TISNUM, FORL_EXT*8+WORD_HI(RA)
     if (op != BC_JFORL) {
       |  srwi RD, RD, 1
     }
-    |   stw CARG1, FORL_EXT*8+4(RA)
+    |   stw CARG1, FORL_EXT*8+WORD_LO(RA)
     if (op != BC_JFORL) {
       |  add RD, PC, RD
     }
@@ -5565,11 +6016,6 @@ static void build_ins(BuildCtx *ctx, BCOp op, int defop)
     |5:  // Invert check for negative step.
     |  cmpw CARG2, CARG1
     |  b <1
-    if (vk) {
-      |6:  // Potential overflow.
-      |  checkov TMP0, <4		// Ignore unrelated overflow.
-      |  b <2
-    }
     |.endif
     if (vk) {
       |.if DUALNUM
@@ -5599,12 +6045,18 @@ static void build_ins(BuildCtx *ctx, BCOp op, int defop)
       |  lwz CARG3, FORL_STOP*8(RA)
       |  lwz CARG4, FORL_STOP*8+4(RA)
       |.endif
-      |   lwz SAVE0, FORL_STEP*8(RA)
+      |   lwz SAVE0, FORL_STEP*8+WORD_HI(RA)
     } else {
       |.if DUALNUM
       |9:  // FP loop.
       |.else
+      |.if ENDIAN_LE
+      |  addi BASEP4, BASE, 4
+      |  lwzx TMP1, RA, BASE_LO
+      |  add RA, RA, BASE
+      |.else
       |  lwzux TMP1, RA, BASE
+      |.endif
       |  lwz SAVE0, FORL_STEP*8(RA)
       |  lwz TMP2, FORL_STOP*8(RA)
       |  cmplw cr0, TMP1, TISNUM
@@ -5707,17 +6159,16 @@ static void build_ins(BuildCtx *ctx, BCOp op, int defop)
 #endif
   case BC_IITERL:
     |  // RA = base*8, RD = target
-    |  lwzux TMP1, RA, BASE
-    |   lwz TMP2, 4(RA)
+    |  lwzux2 TMP1, TMP2, RA, BASE
     |  checknil TMP1; beq >1		// Stop if iterator returned nil.
     if (op == BC_JITERL) {
-      |  stw TMP1, -8(RA)
-      |   stw TMP2, -4(RA)
+      |  stw TMP1, WORD_HI-8(RA)
+      |   stw TMP2, WORD_LO-8(RA)
       |  b =>BC_JLOOP
     } else {
       |  branch_RD			// Otherwise save control var + branch.
-      |  stw TMP1, -8(RA)
-      |   stw TMP2, -4(RA)
+      |  stw TMP1, WORD_HI-8(RA)
+      |   stw TMP2, WORD_LO-8(RA)
     }
     |1:
     |  ins_next
@@ -5746,7 +6197,7 @@ static void build_ins(BuildCtx *ctx, BCOp op, int defop)
     |  // Traces on PPC don't store the trace number, so use 0.
     |   stw ZERO, DISPATCH_GL(vmstate)(DISPATCH)
     |  lwzx TRACE:TMP2, TMP1, RD
-    |  clrso TMP1
+    |  mtxer ZERO
     |  lp TMP2, TRACE:TMP2->mcode
     |   stw BASE, DISPATCH_GL(jit_base)(DISPATCH)
     |  mtctr TMP2
@@ -5798,7 +6249,10 @@ static void build_ins(BuildCtx *ctx, BCOp op, int defop)
     }
     |
     |3:  // Clear missing parameters.
-    |  stwx TISNIL, BASE, NARGS8:RC
+    |.if ENDIAN_LE
+    |  addi BASEP4, BASE, 4
+    |.endif
+    |  stwx TISNIL, BASE_HI, NARGS8:RC
     |  addi NARGS8:RC, NARGS8:RC, 8
     |  b <2
     break;
@@ -5815,11 +6269,11 @@ static void build_ins(BuildCtx *ctx, BCOp op, int defop)
     |  lwz TMP2, L->maxstack
     |   add TMP1, BASE, RC
     |  add TMP0, RA, RC
-    |   stw LFUNC:RB, 4(TMP1)		// Store copy of LFUNC.
+    |   stw LFUNC:RB, WORD_LO(TMP1)	// Store copy of LFUNC.
     |   addi TMP3, RC, 8+FRAME_VARG
     |    lwz KBASE, -4+PC2PROTO(k)(PC)
     |  cmplw TMP0, TMP2
-    |   stw TMP3, 0(TMP1)		// Store delta + FRAME_VARG.
+    |   stw TMP3, WORD_HI(TMP1)		// Store delta + FRAME_VARG.
     |  bge ->vm_growstack_l
     |  lbz TMP2, -4+PC2PROTO(numparams)(PC)
     |   mr RA, BASE
@@ -5830,18 +6284,19 @@ static void build_ins(BuildCtx *ctx, BCOp op, int defop)
     |  beq >3
     |1:
     |  cmplw RA, RC			// Less args than parameters?
-    |   lwz TMP0, 0(RA)
-    |   lwz TMP3, 4(RA)
+    |   lwz TMP0, WORD_HI(RA)
+    |   lwz TMP3, WORD_LO(RA)
     |  bge >4
-    |    stw TISNIL, 0(RA)		// Clear old fixarg slot (help the GC).
+    |    stw TISNIL, WORD_HI(RA)	// Clear old fixarg slot (help the GC).
     |    addi RA, RA, 8
     |2:
     |  addic. TMP2, TMP2, -1
-    |   stw TMP0, 8(TMP1)
-    |   stw TMP3, 12(TMP1)
+    |   stw TMP0, WORD_HI+8(TMP1)
+    |   stw TMP3, WORD_LO+8(TMP1)
     |    addi TMP1, TMP1, 8
     |  bne <1
     |3:
+    |  addi BASEP4, BASE, 4
     |  ins_next2
     |
     |4:  // Clear missing parameters.
@@ -5853,35 +6308,35 @@ static void build_ins(BuildCtx *ctx, BCOp op, int defop)
   case BC_FUNCCW:
     |  // BASE = new base, RA = BASE+framesize*8, RB = CFUNC, RC = nargs*8
     if (op == BC_FUNCC) {
-      |  lp RD, CFUNC:RB->f
+      |  lp FUNCREG, CFUNC:RB->f
     } else {
-      |  lp RD, DISPATCH_GL(wrapf)(DISPATCH)
+      |  lp FUNCREG, DISPATCH_GL(wrapf)(DISPATCH)
     }
     |   add TMP1, RA, NARGS8:RC
     |   lwz TMP2, L->maxstack
-    |  .toc lp TMP3, 0(RD)
+    |  .opd lp TMP3, 0(FUNCREG)
     |    add RC, BASE, NARGS8:RC
     |   stp BASE, L->base
     |   cmplw TMP1, TMP2
     |    stp RC, L->top
     |     li_vmstate C
-    |.if TOC
+    |.if OPD
     |  mtctr TMP3
     |.else
-    |  mtctr RD
+    |  mtctr FUNCREG
     |.endif
     if (op == BC_FUNCCW) {
       |  lp CARG2, CFUNC:RB->f
     }
     |  mr CARG1, L
     |   bgt ->vm_growstack_c		// Need to grow stack.
-    |  .toc lp TOCREG, TOC_OFS(RD)
-    |  .tocenv lp ENVREG, ENV_OFS(RD)
+    |  .opd lp TOCREG, TOC_OFS(FUNCREG)
+    |  .opdenv lp ENVREG, ENV_OFS(FUNCREG)
     |     st_vmstate
     |  bctrl				// (lua_State *L [, lua_CFunction f])
+    |  .toc lp TOCREG, SAVE_TOC
     |  // Returns nresults.
     |  lp BASE, L->base
-    |  .toc ld TOCREG, SAVE_TOC
     |   slwi RD, CRET1, 3
     |  lp TMP1, L->top
     |    li_vmstate INTERP
@@ -5932,7 +6387,11 @@ static void emit_asm_debug(BuildCtx *ctx)
 	"\t.byte 0x1\n"
 	"\t.string \"\"\n"
 	"\t.uleb128 0x1\n"
+#if LJ_ARCH_PPC32ON64
+	"\t.sleb128 -8\n"
+#else
 	"\t.sleb128 -4\n"
+#endif
 	"\t.byte 65\n"
 	"\t.byte 0xc\n\t.uleb128 1\n\t.uleb128 0\n"
 	"\t.align 2\n"
@@ -5945,14 +6404,24 @@ static void emit_asm_debug(BuildCtx *ctx)
 	"\t.long .Lbegin\n"
 	"\t.long %d\n"
 	"\t.byte 0xe\n\t.uleb128 %d\n"
+#if LJ_ARCH_PPC32ON64
+	"\t.byte 0x11\n\t.uleb128 65\n\t.sleb128 -2\n"
+	"\t.byte 0x11\n\t.uleb128 70\n\t.sleb128 -1\n",
+#else
 	"\t.byte 0x11\n\t.uleb128 65\n\t.sleb128 -1\n"
 	"\t.byte 0x5\n\t.uleb128 70\n\t.uleb128 55\n",
+#endif
 	fcofs, CFRAME_SIZE);
     for (i = 14; i <= 31; i++)
       fprintf(ctx->fp,
 	"\t.byte %d\n\t.uleb128 %d\n"
 	"\t.byte %d\n\t.uleb128 %d\n",
-	0x80+i, 37+(31-i), 0x80+32+i, 2+2*(31-i));
+#if LJ_ARCH_PPC32ON64
+	0x80+i, 19+(31-i), 0x80+32+i, 1+(31-i)
+#else
+	0x80+i, 37+(31-i), 0x80+32+i, 2+2*(31-i)
+#endif
+      );
     fprintf(ctx->fp,
 	"\t.align 2\n"
 	".LEFDE0:\n\n");
@@ -5968,8 +6437,12 @@ static void emit_asm_debug(BuildCtx *ctx)
 	"\t.long lj_vm_ffi_call\n"
 #endif
 	"\t.long %d\n"
+#if LJ_ARCH_PPC32ON64
+	"\t.byte 0x11\n\t.uleb128 65\n\t.sleb128 -2\n"
+#else
 	"\t.byte 0x11\n\t.uleb128 65\n\t.sleb128 -1\n"
-	"\t.byte 0x8e\n\t.uleb128 2\n"
+#endif
+	"\t.byte 0x8e\n\t.uleb128 1\n"
 	"\t.byte 0xd\n\t.uleb128 0xe\n"
 	"\t.align 2\n"
 	".LEFDE1:\n\n", (int)ctx->codesz - fcofs);
@@ -5984,7 +6457,11 @@ static void emit_asm_debug(BuildCtx *ctx)
 	"\t.byte 0x1\n"
 	"\t.string \"zPR\"\n"
 	"\t.uleb128 0x1\n"
+#if LJ_ARCH_PPC32ON64
+	"\t.sleb128 -8\n"
+#else
 	"\t.sleb128 -4\n"
+#endif
 	"\t.byte 65\n"
 	"\t.uleb128 6\n"			/* augmentation length */
 	"\t.byte 0x1b\n"			/* pcrel|sdata4 */
@@ -6002,14 +6479,24 @@ static void emit_asm_debug(BuildCtx *ctx)
 	"\t.long %d\n"
 	"\t.uleb128 0\n"			/* augmentation length */
 	"\t.byte 0xe\n\t.uleb128 %d\n"
+#if LJ_ARCH_PPC32ON64
+	"\t.byte 0x11\n\t.uleb128 65\n\t.sleb128 -2\n"
+	"\t.byte 0x11\n\t.uleb128 70\n\t.sleb128 -1\n",
+#else
 	"\t.byte 0x11\n\t.uleb128 65\n\t.sleb128 -1\n"
 	"\t.byte 0x5\n\t.uleb128 70\n\t.uleb128 55\n",
+#endif
 	fcofs, CFRAME_SIZE);
     for (i = 14; i <= 31; i++)
       fprintf(ctx->fp,
 	"\t.byte %d\n\t.uleb128 %d\n"
 	"\t.byte %d\n\t.uleb128 %d\n",
-	0x80+i, 37+(31-i), 0x80+32+i, 2+2*(31-i));
+#if LJ_ARCH_PPC32ON64
+	0x80+i, 19+(31-i), 0x80+32+i, 1+(31-i)
+#else
+	0x80+i, 37+(31-i), 0x80+32+i, 2+2*(31-i)
+#endif
+      );
     fprintf(ctx->fp,
 	"\t.align 2\n"
 	".LEFDE2:\n\n");
@@ -6037,8 +6524,12 @@ static void emit_asm_debug(BuildCtx *ctx)
 	"\t.long lj_vm_ffi_call-.\n"
 	"\t.long %d\n"
 	"\t.uleb128 0\n"			/* augmentation length */
+#if LJ_ARCH_PPC32ON64
+	"\t.byte 0x11\n\t.uleb128 65\n\t.sleb128 -2\n"
+#else
 	"\t.byte 0x11\n\t.uleb128 65\n\t.sleb128 -1\n"
-	"\t.byte 0x8e\n\t.uleb128 2\n"
+#endif
+	"\t.byte 0x8e\n\t.uleb128 1\n"
 	"\t.byte 0xd\n\t.uleb128 0xe\n"
 	"\t.align 2\n"
 	".LEFDE3:\n\n", (int)ctx->codesz - fcofs);

commit 99d1268823914d0c1f46df0e85bf8fce50292252
Merge: f133649c 179cf2eb
Author: Mike Pall <mike>
Date:   Tue Apr 28 17:54:03 2020 +0200

    Merge branch 'master' into v2.1

commit 179cf2eb84fef2b9a524469c3c8cc49363b8fb10
Author: Mike Pall <mike>
Date:   Tue Apr 28 17:52:28 2020 +0200

    Fix overflow check in unpack().
    
    Thanks to HybridDog.

diff --git a/src/lib_base.c b/src/lib_base.c
index dae61fe1..99f7b44a 100644
--- a/src/lib_base.c
+++ b/src/lib_base.c
@@ -219,9 +219,11 @@ LJLIB_CF(unpack)
   int32_t n, i = lj_lib_optint(L, 2, 1);
   int32_t e = (L->base+3-1 < L->top && !tvisnil(L->base+3-1)) ?
 	      lj_lib_checkint(L, 3) : (int32_t)lj_tab_len(t);
+  uint32_t nu;
   if (i > e) return 0;
-  n = e - i + 1;
-  if (n <= 0 || !lua_checkstack(L, n))
+  nu = (uint32_t)e - (uint32_t)i;
+  n = (int32_t)(nu+1);
+  if (nu >= LUAI_MAXCSTACK || !lua_checkstack(L, n))
     lj_err_caller(L, LJ_ERR_UNPACK);
   do {
     cTValue *tv = lj_tab_getint(t, i);

commit f133649ced961a6af920be89d646582ed7623424
Merge: 9143e864 db0b7ec1
Author: Mike Pall <mike>
Date:   Tue Apr 28 16:53:32 2020 +0200

    Merge branch 'master' into v2.1

commit db0b7ec194f9535c292a6084bd4bf57e9baf8b7e
Author: Mike Pall <mike>
Date:   Tue Apr 28 16:52:28 2020 +0200

    Fix Windows make clean.

diff --git a/src/Makefile b/src/Makefile
index a588dc3d..5cf1f0be 100644
--- a/src/Makefile
+++ b/src/Makefile
@@ -296,7 +296,6 @@ ifeq (Windows,$(TARGET_SYS))
   TARGET_STRIP+= --strip-unneeded
   TARGET_XSHLDFLAGS= -shared -Wl,--out-implib,$(TARGET_DLLDOTANAME)
   TARGET_DYNXLDOPTS=
-  HOST_RM= del
 else
   TARGET_AR+= 2>/dev/null
 ifeq (,$(shell $(TARGET_CC) -o /dev/null -c -x c /dev/null -fno-stack-protector 2>/dev/null || echo 1))
@@ -540,6 +539,7 @@ ifeq (Windows,$(HOST_SYS))
     MINILUA_X= host\minilua
     BUILDVM_X= host\buildvm
     ALL_RM:= $(subst /,\,$(ALL_RM))
+    HOST_RM= del
   endif
 endif
 

commit 33b5f86c1b9ab53ad09c33f9097df42403587bea
Merge: 38cb695d 9143e864
Author: Yichun Zhang (agentzh) <yichun@openresty.com>
Date:   Sat Mar 21 13:52:44 2020 -0700

    Merge branch 'v2.1' into v2.1-agentzh

commit 9143e86498436892cb4316550be4d45b68a61224
Author: Mike Pall <mike>
Date:   Fri Mar 20 14:10:18 2020 +0100

    FFI/ARM64: Fix pass-by-value struct calling conventions.

diff --git a/src/lj_ccall.c b/src/lj_ccall.c
index a9b81aa5..499a01d8 100644
--- a/src/lj_ccall.c
+++ b/src/lj_ccall.c
@@ -337,7 +337,8 @@
   if (LJ_TARGET_IOS && isva) { \
     /* IOS: All variadic arguments are on the stack. */ \
   } else if (isfp) {  /* Try to pass argument in FPRs. */ \
-    int n2 = ctype_isvector(d->info) ? 1 : n*isfp; \
+    int n2 = ctype_isvector(d->info) ? 1 : \
+	     isfp == 1 ? n : (d->size >> (4-isfp)); \
     if (nfpr + n2 <= CCALL_NARG_FPR) { \
       dp = &cc->fpr[nfpr]; \
       nfpr += n2; \

commit fc1c4da3cc2b3bb51109a3028b696dbd05add5dc
Merge: 0ad60ccb e613105c
Author: Mike Pall <mike>
Date:   Fri Mar 20 13:38:05 2020 +0100

    Merge branch 'master' into v2.1

commit e613105ca92fe25e7bd63031b409faa8c908ac35
Author: Mike Pall <mike>
Date:   Fri Mar 20 13:35:49 2020 +0100

    Fix write barrier for lua_setupvalue() and debug.setupvalue().

diff --git a/src/lj_api.c b/src/lj_api.c
index e2d7e533..1a34a774 100644
--- a/src/lj_api.c
+++ b/src/lj_api.c
@@ -841,7 +841,8 @@ LUA_API int lua_next(lua_State *L, int idx)
 LUA_API const char *lua_getupvalue(lua_State *L, int idx, int n)
 {
   TValue *val;
-  const char *name = lj_debug_uvnamev(index2adr(L, idx), (uint32_t)(n-1), &val);
+  GCobj *o;
+  const char *name = lj_debug_uvnamev(index2adr(L, idx), (uint32_t)(n-1), &val, &o);
   if (name) {
     copyTV(L, L->top, val);
     incr_top(L);
@@ -1014,13 +1015,14 @@ LUA_API const char *lua_setupvalue(lua_State *L, int idx, int n)
 {
   cTValue *f = index2adr(L, idx);
   TValue *val;
+  GCobj *o;
   const char *name;
   api_checknelems(L, 1);
-  name = lj_debug_uvnamev(f, (uint32_t)(n-1), &val);
+  name = lj_debug_uvnamev(f, (uint32_t)(n-1), &val, &o);
   if (name) {
     L->top--;
     copyTV(L, val, L->top);
-    lj_gc_barrier(L, funcV(f), L->top);
+    lj_gc_barrier(L, o, L->top);
   }
   return name;
 }
diff --git a/src/lj_debug.c b/src/lj_debug.c
index 04fecfaf..1d73da7e 100644
--- a/src/lj_debug.c
+++ b/src/lj_debug.c
@@ -235,19 +235,22 @@ const char *lj_debug_uvname(GCproto *pt, uint32_t idx)
 }
 
 /* Get name and value of upvalue. */
-const char *lj_debug_uvnamev(cTValue *o, uint32_t idx, TValue **tvp)
+const char *lj_debug_uvnamev(cTValue *o, uint32_t idx, TValue **tvp, GCobj **op)
 {
   if (tvisfunc(o)) {
     GCfunc *fn = funcV(o);
     if (isluafunc(fn)) {
       GCproto *pt = funcproto(fn);
       if (idx < pt->sizeuv) {
-	*tvp = uvval(&gcref(fn->l.uvptr[idx])->uv);
+	GCobj *uvo = gcref(fn->l.uvptr[idx]);
+	*tvp = uvval(&uvo->uv);
+	*op = uvo;
 	return lj_debug_uvname(pt, idx);
       }
     } else {
       if (idx < fn->c.nupvalues) {
 	*tvp = &fn->c.upvalue[idx];
+	*op = obj2gco(fn);
 	return "";
       }
     }
diff --git a/src/lj_debug.h b/src/lj_debug.h
index 75ea927c..43fb9c19 100644
--- a/src/lj_debug.h
+++ b/src/lj_debug.h
@@ -29,7 +29,8 @@ typedef struct lj_Debug {
 LJ_FUNC cTValue *lj_debug_frame(lua_State *L, int level, int *size);
 LJ_FUNC BCLine LJ_FASTCALL lj_debug_line(GCproto *pt, BCPos pc);
 LJ_FUNC const char *lj_debug_uvname(GCproto *pt, uint32_t idx);
-LJ_FUNC const char *lj_debug_uvnamev(cTValue *o, uint32_t idx, TValue **tvp);
+LJ_FUNC const char *lj_debug_uvnamev(cTValue *o, uint32_t idx, TValue **tvp,
+				     GCobj **op);
 LJ_FUNC const char *lj_debug_slotname(GCproto *pt, const BCIns *pc,
 				      BCReg slot, const char **name);
 LJ_FUNC const char *lj_debug_funcname(lua_State *L, TValue *frame,

commit 0ad60ccbc3768fa8e3e726858adf261950edbc22
Author: Mike Pall <mike>
Date:   Thu Feb 13 17:39:51 2020 +0100

    Make string to number conversions fail on NUL char.
    
    Contributed by Igor Munkin.

diff --git a/src/lj_cparse.c b/src/lj_cparse.c
index 70b82af3..a393965e 100644
--- a/src/lj_cparse.c
+++ b/src/lj_cparse.c
@@ -169,7 +169,8 @@ static CPToken cp_number(CPState *cp)
   TValue o;
   do { cp_save(cp, cp->c); } while (lj_char_isident(cp_get(cp)));
   cp_save(cp, '\0');
-  fmt = lj_strscan_scan((const uint8_t *)sbufB(&cp->sb), &o, STRSCAN_OPT_C);
+  fmt = lj_strscan_scan((const uint8_t *)sbufB(&cp->sb), sbuflen(&cp->sb)-1,
+			&o, STRSCAN_OPT_C);
   if (fmt == STRSCAN_INT) cp->val.id = CTID_INT32;
   else if (fmt == STRSCAN_U32) cp->val.id = CTID_UINT32;
   else if (!(cp->mode & CPARSE_MODE_SKIP))
diff --git a/src/lj_lex.c b/src/lj_lex.c
index 05a2efc3..ada0876e 100644
--- a/src/lj_lex.c
+++ b/src/lj_lex.c
@@ -105,7 +105,7 @@ static void lex_number(LexState *ls, TValue *tv)
     lex_savenext(ls);
   }
   lex_save(ls, '\0');
-  fmt = lj_strscan_scan((const uint8_t *)sbufB(&ls->sb), tv,
+  fmt = lj_strscan_scan((const uint8_t *)sbufB(&ls->sb), sbuflen(&ls->sb)-1, tv,
 	  (LJ_DUALNUM ? STRSCAN_OPT_TOINT : STRSCAN_OPT_TONUM) |
 	  (LJ_HASFFI ? (STRSCAN_OPT_LL|STRSCAN_OPT_IMAG) : 0));
   if (LJ_DUALNUM && fmt == STRSCAN_INT) {
diff --git a/src/lj_strscan.c b/src/lj_strscan.c
index 948c84a7..433b33a3 100644
--- a/src/lj_strscan.c
+++ b/src/lj_strscan.c
@@ -370,9 +370,11 @@ static StrScanFmt strscan_bin(const uint8_t *p, TValue *o,
 }
 
 /* Scan string containing a number. Returns format. Returns value in o. */
-StrScanFmt lj_strscan_scan(const uint8_t *p, TValue *o, uint32_t opt)
+StrScanFmt lj_strscan_scan(const uint8_t *p, MSize len, TValue *o,
+			   uint32_t opt)
 {
   int32_t neg = 0;
+  const uint8_t *pe = p + len;
 
   /* Remove leading space, parse sign and non-numbers. */
   if (LJ_UNLIKELY(!lj_char_isdigit(*p))) {
@@ -390,7 +392,7 @@ StrScanFmt lj_strscan_scan(const uint8_t *p, TValue *o, uint32_t opt)
 	p += 3;
       }
       while (lj_char_isspace(*p)) p++;
-      if (*p) return STRSCAN_ERROR;
+      if (*p || p < pe) return STRSCAN_ERROR;
       o->u64 = tmp.u64;
       return STRSCAN_NUM;
     }
@@ -488,6 +490,7 @@ StrScanFmt lj_strscan_scan(const uint8_t *p, TValue *o, uint32_t opt)
       while (lj_char_isspace(*p)) p++;
       if (*p) return STRSCAN_ERROR;
     }
+    if (p < pe) return STRSCAN_ERROR;
 
     /* Fast path for decimal 32 bit integers. */
     if (fmt == STRSCAN_INT && base == 10 &&
@@ -523,7 +526,7 @@ StrScanFmt lj_strscan_scan(const uint8_t *p, TValue *o, uint32_t opt)
 
 int LJ_FASTCALL lj_strscan_num(GCstr *str, TValue *o)
 {
-  StrScanFmt fmt = lj_strscan_scan((const uint8_t *)strdata(str), o,
+  StrScanFmt fmt = lj_strscan_scan((const uint8_t *)strdata(str), str->len, o,
 				   STRSCAN_OPT_TONUM);
   lua_assert(fmt == STRSCAN_ERROR || fmt == STRSCAN_NUM);
   return (fmt != STRSCAN_ERROR);
@@ -532,7 +535,7 @@ int LJ_FASTCALL lj_strscan_num(GCstr *str, TValue *o)
 #if LJ_DUALNUM
 int LJ_FASTCALL lj_strscan_number(GCstr *str, TValue *o)
 {
-  StrScanFmt fmt = lj_strscan_scan((const uint8_t *)strdata(str), o,
+  StrScanFmt fmt = lj_strscan_scan((const uint8_t *)strdata(str), str->len, o,
 				   STRSCAN_OPT_TOINT);
   lua_assert(fmt == STRSCAN_ERROR || fmt == STRSCAN_NUM || fmt == STRSCAN_INT);
   if (fmt == STRSCAN_INT) setitype(o, LJ_TISNUM);
diff --git a/src/lj_strscan.h b/src/lj_strscan.h
index 42aa1455..30e271b2 100644
--- a/src/lj_strscan.h
+++ b/src/lj_strscan.h
@@ -22,7 +22,8 @@ typedef enum {
   STRSCAN_INT, STRSCAN_U32, STRSCAN_I64, STRSCAN_U64,
 } StrScanFmt;
 
-LJ_FUNC StrScanFmt lj_strscan_scan(const uint8_t *p, TValue *o, uint32_t opt);
+LJ_FUNC StrScanFmt lj_strscan_scan(const uint8_t *p, MSize len, TValue *o,
+				   uint32_t opt);
 LJ_FUNC int LJ_FASTCALL lj_strscan_num(GCstr *str, TValue *o);
 #if LJ_DUALNUM
 LJ_FUNC int LJ_FASTCALL lj_strscan_number(GCstr *str, TValue *o);

commit d85d6b3c1b2c3d1ecf89ccff6ad7519e767fcebe
Merge: 0c982ad7 522d2073
Author: Mike Pall <mike>
Date:   Sun Feb 2 18:20:35 2020 +0100

    Merge branch 'master' into v2.1

commit 522d2073da4be2af79db4728cbb375db0fbdfc48
Author: Mike Pall <mike>
Date:   Sun Feb 2 18:19:44 2020 +0100

    x86/x64: Fix loop realignment.

diff --git a/src/lj_asm_x86.h b/src/lj_asm_x86.h
index 2c38d1ec..68b40b31 100644
--- a/src/lj_asm_x86.h
+++ b/src/lj_asm_x86.h
@@ -1836,8 +1836,9 @@ static void asm_intarith(ASMState *as, IRIns *ir, x86Arith xa)
   int32_t k = 0;
   if (as->flagmcp == as->mcp) {  /* Drop test r,r instruction. */
     MCode *p = as->mcp + ((LJ_64 && *as->mcp < XI_TESTb) ? 3 : 2);
-    if ((p[1] & 15) < 14) {
-      if ((p[1] & 15) >= 12) p[1] -= 4;  /* L <->S, NL <-> NS */
+    MCode *q = p[0] == 0x0f ? p+1 : p;
+    if ((*q & 15) < 14) {
+      if ((*q & 15) >= 12) *q -= 4;  /* L <->S, NL <-> NS */
       as->flagmcp = NULL;
       as->mcp = p;
     }  /* else: cannot transform LE/NLE to cc without use of OF. */

commit 0c982ad74c3e15c811cb7e3e332c1a9dedd49f55
Merge: 6d267ff6 bd907032
Author: Mike Pall <mike>
Date:   Sun Jan 26 15:44:40 2020 +0100

    Merge branch 'master' into v2.1

commit bd907032e3b93651f2b969cbc04477bba40faee8
Author: Mike Pall <mike>
Date:   Sun Jan 26 15:37:33 2020 +0100

    Documentation cleanup.

diff --git a/doc/changes.html b/doc/changes.html
deleted file mode 100644
index a20295f2..00000000
--- a/doc/changes.html
+++ /dev/null
@@ -1,1019 +0,0 @@
-<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01//EN" "http://www.w3.org/TR/html4/strict.dtd">
-<html>
-<head>
-<title>LuaJIT Change History</title>
-<meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1">
-<meta name="Copyright" content="Copyright (C) 2005-2020">
-<meta name="Language" content="en">
-<link rel="stylesheet" type="text/css" href="bluequad.css" media="screen">
-<link rel="stylesheet" type="text/css" href="bluequad-print.css" media="print">
-<style type="text/css">
-div.major { max-width: 600px; padding: 1em; margin: 1em 0 1em 0; }
-</style>
-</head>
-<body>
-<div id="site">
-<a href="http://luajit.org"><span>Lua<span id="logo">JIT</span></span></a>
-</div>
-<div id="head">
-<h1>LuaJIT Change History</h1>
-</div>
-<div id="nav">
-<ul><li>
-<a href="luajit.html">LuaJIT</a>
-<ul><li>
-<a href="http://luajit.org/download.html">Download <span class="ext">&raquo;</span></a>
-</li><li>
-<a href="install.html">Installation</a>
-</li><li>
-<a href="running.html">Running</a>
-</li></ul>
-</li><li>
-<a href="extensions.html">Extensions</a>
-<ul><li>
-<a href="ext_ffi.html">FFI Library</a>
-<ul><li>
-<a href="ext_ffi_tutorial.html">FFI Tutorial</a>
-</li><li>
-<a href="ext_ffi_api.html">ffi.* API</a>
-</li><li>
-<a href="ext_ffi_semantics.html">FFI Semantics</a>
-</li></ul>
-</li><li>
-<a href="ext_jit.html">jit.* Library</a>
-</li><li>
-<a href="ext_c_api.html">Lua/C API</a>
-</li></ul>
-</li><li>
-<a href="status.html">Status</a>
-<ul><li>
-<a class="current" href="changes.html">Changes</a>
-</li></ul>
-</li><li>
-<a href="faq.html">FAQ</a>
-</li><li>
-<a href="http://luajit.org/performance.html">Performance <span class="ext">&raquo;</span></a>
-</li><li>
-<a href="http://wiki.luajit.org/">Wiki <span class="ext">&raquo;</span></a>
-</li><li>
-<a href="http://luajit.org/list.html">Mailing List <span class="ext">&raquo;</span></a>
-</li></ul>
-</div>
-<div id="main">
-<p>
-This is a list of changes between the released versions of LuaJIT.<br>
-The current <span style="color: #0000c0;">stable version</span> is <strong>LuaJIT&nbsp;2.0.5</strong>.<br>
-</p>
-<p>
-Please check the
-<a href="http://luajit.org/changes.html"><span class="ext">&raquo;</span>&nbsp;Online Change History</a>
-to see whether newer versions are available.
-</p>
-
-<div class="major" style="background: #d0d0ff;">
-<h2 id="LuaJIT-2.0.5">LuaJIT 2.0.5 &mdash; 2017-05-01</h2>
-<ul>
-<li>Add workaround for MSVC 2015 stdio changes.</li>
-<li>Limit mcode alloc probing, depending on the available pool size.</li>
-<li>Fix overly restrictive range calculation in mcode allocation.</li>
-<li>Fix out-of-scope goto handling in parser.</li>
-<li>Remove internal <tt>__mode = "K"</tt> and replace with safe check.</li>
-<li>Add "proto" field to <tt>jit.util.funcinfo()</tt>.</li>
-<li>Fix GC step size calculation.</li>
-<li>Initialize <tt>uv->immutable</tt> for upvalues of loaded chunks.</li>
-<li>Fix for cdata vs. non-cdata arithmetics/comparisons.</li>
-<li>Drop leftover regs in 'for' iterator assignment, too.</li>
-<li>Fix PHI remarking in SINK pass.</li>
-<li>Don't try to record outermost <tt>pcall()</tt> return to lower frame.</li>
-<li>Add guard for obscure aliasing between open upvalues and SSA slots.</li>
-<li>Remove assumption that <tt>lj_math_random_step()</tt> doesn't clobber FPRs.</li>
-<li>Fix handling of non-numeric strings in arithmetic coercions.</li>
-<li>Fix recording of <tt>select(n, ...)</tt> with off-trace varargs</li>
-<li>Fix install for cross-builds.</li>
-<li>Don't allocate unused 2nd result register in JIT compiler backend.</li>
-<li>Drop marks from replayed instructions when sinking.</li>
-<li>Fix unsinking check.</li>
-<li>Properly handle OOM in <tt>trace_save()</tt>.</li>
-<li>Limit number of arguments given to <tt>io.lines()</tt> and <tt>fp:lines()</tt>.</li>
-<li>Fix narrowing of <tt>TOBIT</tt>.</li>
-<li>OSX: Fix build with recent XCode.</li>
-<li>x86/x64: Don't spill an explicit <tt>REF_BASE</tt> in the IR.</li>
-<li>x86/x64: Fix instruction length decoder.</li>
-<li>x86/x64: Search for exit jumps with instruction length decoder.</li>
-<li>ARM: Fix <tt>BLX</tt> encoding for Thumb interworking calls.</li>
-<li>MIPS: Don't use <tt>RID_GP</tt> as a scratch register.</li>
-<li>MIPS: Fix emitted code for U32 to float conversion.</li>
-<li>MIPS: Backport workaround for compact unwind tables.</li>
-<li>MIPS: Fix cross-endian jit.bcsave.</li>
-<li>MIPS: Fix <tt>BC_ISNEXT</tt> fallback path.</li>
-<li>MIPS: Fix use of ffgccheck delay slots in interpreter.</li>
-<li>FFI: Fix FOLD rules for <tt>int64_t</tt> comparisons.</li>
-<li>FFI: Fix SPLIT pass for <tt>CONV i64.u64</tt>.</li>
-<li>FFI: Fix <tt>ipairs()</tt> recording.</li>
-<li>FFI: Don't propagate qualifiers into subtypes of complex.</li>
-</ul>
-
-<h2 id="LuaJIT-2.0.4">LuaJIT 2.0.4 &mdash; 2015-05-14</h2>
-<ul>
-<li>Fix stack check in narrowing optimization.</li>
-<li>Fix Lua/C API typecheck error for special indexes.</li>
-<li>Fix string to number conversion.</li>
-<li>Fix lexer error for chunks without tokens.</li>
-<li>Don't compile <tt>IR_RETF</tt> after <tt>CALLT</tt> to ff with-side effects.</li>
-<li>Fix <tt>BC_UCLO</tt>/<tt>BC_JMP</tt> join optimization in Lua parser.</li>
-<li>Fix corner case in string to number conversion.</li>
-<li>Gracefully handle <tt>lua_error()</tt> for a suspended coroutine.</li>
-<li>Avoid error messages when building with Clang.</li>
-<li>Fix snapshot #0 handling for traces with a stack check on entry.</li>
-<li>Fix fused constant loads under high register pressure.</li>
-<li>Invalidate backpropagation cache after DCE.</li>
-<li>Fix ABC elimination.</li>
-<li>Fix debug info for main chunk of stripped bytecode.</li>
-<li>Fix FOLD rule for <tt>string.sub(s, ...) == k</tt>.</li>
-<li>Fix FOLD rule for <tt>STRREF</tt> of <tt>SNEW</tt>.</li>
-<li>Fix frame traversal while searching for error function.</li>
-<li>Prevent GC estimate miscalculation due to buffer growth.</li>
-<li>Prevent adding side traces for stack checks.</li>
-<li>Fix top slot calculation for snapshots with continuations.</li>
-<li>Fix check for reuse of SCEV results in <tt>FORL</tt>.</li>
-<li>Add PS Vita port.</li>
-<li>Fix compatibility issues with Illumos.</li>
-<li>Fix DragonFly build (unsupported).</li>
-<li>OpenBSD/x86: Better executable memory allocation for W^X mode.</li>
-<li>x86: Fix argument checks for <tt>ipairs()</tt> iterator.</li>
-<li>x86: <tt>lj_math_random_step()</tt> clobbers XMM regs on OSX Clang.</li>
-<li>x86: Fix code generation for unused result of <tt>math.random()</tt>.</li>
-<li>x64: Allow building with <tt>LUAJIT_USE_SYSMALLOC</tt> and <tt>LUAJIT_USE_VALGRIND</tt>.</li>
-<li>x86/x64: Fix argument check for bit shifts.</li>
-<li>x86/x64: Fix code generation for fused test/arith ops.</li>
-<li>ARM: Fix write barrier check in <tt>BC_USETS</tt>.</li>
-<li>PPC: Fix red zone overflow in machine code generation.</li>
-<li>PPC: Don't use <tt>mcrxr</tt> on PPE.</li>
-<li>Various archs: Fix excess stack growth in interpreter.</li>
-<li>FFI: Fix FOLD rule for <tt>TOBIT</tt> + <tt>CONV num.u32</tt>.</li>
-<li>FFI: Prevent DSE across <tt>ffi.string()</tt>.</li>
-<li>FFI: No meta fallback when indexing pointer to incomplete struct.</li>
-<li>FFI: Fix initialization of unions of subtypes.</li>
-<li>FFI: Fix cdata vs. non-cdata arithmetic and comparisons.</li>
-<li>FFI: Fix <tt>__index</tt>/<tt>__newindex</tt> metamethod resolution for ctypes.</li>
-<li>FFI: Fix compilation of reference field access.</li>
-<li>FFI: Fix frame traversal for backtraces with FFI callbacks.</li>
-<li>FFI: Fix recording of indexing a struct pointer ctype object itself.</li>
-<li>FFI: Allow non-scalar cdata to be compared for equality by address.</li>
-<li>FFI: Fix pseudo type conversions for type punning.</li>
-</ul>
-
-<h2 id="LuaJIT-2.0.3">LuaJIT 2.0.3 &mdash; 2014-03-12</h2>
-<ul>
-<li>Add PS4 port.</li>
-<li>Add support for multilib distro builds.</li>
-<li>Fix OSX build.</li>
-<li>Fix MinGW build.</li>
-<li>Fix Xbox 360 build.</li>
-<li>Improve ULOAD forwarding for open upvalues.</li>
-<li>Fix GC steps threshold handling when called by JIT-compiled code.</li>
-<li>Fix argument checks for <tt>math.deg()</tt> and <tt>math.rad()</tt>.</li>
-<li>Fix <tt>jit.flush(func|true)</tt>.</li>
-<li>Respect <tt>jit.off(func)</tt> when returning to a function, too.</li>
-<li>Fix compilation of <tt>string.byte(s, nil, n)</tt>.</li>
-<li>Fix line number for relocated bytecode after closure fixup</li>
-<li>Fix frame traversal for backtraces.</li>
-<li>Fix ABC elimination.</li>
-<li>Fix handling of redundant PHIs.</li>
-<li>Fix snapshot restore for exit to function header.</li>
-<li>Fix type punning alias analysis for constified pointers</li>
-<li>Fix call unroll checks in the presence of metamethod frames.</li>
-<li>Fix initial maxslot for down-recursive traces.</li>
-<li>Prevent BASE register coalescing if parent uses <tt>IR_RETF</tt>.</li>
-<li>Don't purge modified function from stack slots in <tt>BC_RET</tt>.</li>
-<li>Fix recording of <tt>BC_VARG</tt>.</li>
-<li>Don't access dangling reference to reallocated IR.</li>
-<li>Fix frame depth display for bytecode dump in <tt>-jdump</tt>.</li>
-<li>ARM: Fix register allocation when rematerializing FPRs.</li>
-<li>x64: Fix store to upvalue for lightuserdata values.</li>
-<li>FFI: Add missing GC steps for callback argument conversions.</li>
-<li>FFI: Properly unload loaded DLLs.</li>
-<li>FFI: Fix argument checks for <tt>ffi.string()</tt>.</li>
-<li>FFI/x64: Fix passing of vector arguments to calls.</li>
-<li>FFI: Rehash finalizer table after GC cycle, if needed.</li>
-<li>FFI: Fix <tt>cts-&gt;L</tt> for cdata unsinking in snapshot restore.</li>
-</ul>
-
-<h2 id="LuaJIT-2.0.2">LuaJIT 2.0.2 &mdash; 2013-06-03</h2>
-<ul>
-<li>Fix memory access check for fast string interning.</li>
-<li>Fix MSVC intrinsics for older versions.</li>
-<li>Add missing GC steps for <tt>io.*</tt> functions.</li>
-<li>Fix spurious red zone overflows in machine code generation.</li>
-<li>Fix jump-range constrained mcode allocation.</li>
-<li>Inhibit DSE for implicit loads via calls.</li>
-<li>Fix builtin string to number conversion for overflow digits.</li>
-<li>Fix optional argument handling while recording builtins.</li>
-<li>Fix optional argument handling in <tt>table.concat()</tt>.</li>
-<li>Add partial support for building with MingW64 GCC 4.8-SEH.</li>
-<li>Add missing PHI barrier to <tt>string.sub(str, a, b) == kstr</tt> FOLD rule.</li>
-<li>Fix compatibility issues with Illumos.</li>
-<li>ARM: Fix cache flush/sync for exit stubs of JIT-compiled code.</li>
-<li>MIPS: Fix cache flush/sync for JIT-compiled code jump area.</li>
-<li>PPC: Add <tt>plt</tt> suffix for external calls from assembler code.</li>
-<li>FFI: Fix snapshot substitution in SPLIT pass.</li>
-<li>FFI/x86: Fix register allocation for 64 bit comparisons.</li>
-<li>FFI: Fix tailcall in lowest frame to C&nbsp;function with bool result.</li>
-<li>FFI: Ignore <tt>long</tt> type specifier in <tt>ffi.istype()</tt>.</li>
-<li>FFI: Fix calling conventions for 32 bit OSX and iOS simulator (struct returns).</li>
-<li>FFI: Fix calling conventions for ARM hard-float EABI (nested structs).</li>
-<li>FFI: Improve error messages for arithmetic and comparison operators.</li>
-<li>FFI: Insert no-op type conversion for pointer to integer cast.</li>
-<li>FFI: Fix unroll limit for <tt>ffi.fill()</tt>.</li>
-<li>FFI: Must sink <tt>XBAR</tt> together with <tt>XSTORE</tt>s.</li>
-<li>FFI: Preserve intermediate string for <tt>const&nbsp;char&nbsp;*</tt> conversion.</li>
-</ul>
-
-<h2 id="LuaJIT-2.0.1">LuaJIT 2.0.1 &mdash; 2013-02-19</h2>
-<ul>
-<li>Don't clear frame for out-of-memory error.</li>
-<li>Leave hook when resume catches error thrown from hook.</li>
-<li>Add missing GC steps for template table creation.</li>
-<li>Fix discharge order of comparisons in Lua parser.</li>
-<li>Improve buffer handling for <tt>io.read()</tt>.</li>
-<li>OSX: Add support for Mach-O object files to <tt>-b</tt> option.</li>
-<li>Fix PS3 port.</li>
-<li>Fix/enable Xbox 360 port.</li>
-<li>x86/x64: Always mark ref for shift count as non-weak.</li>
-<li>x64: Don't fuse implicitly 32-to-64 extended operands.</li>
-<li>ARM: Fix armhf call argument handling.</li>
-<li>ARM: Fix code generation for integer math.min/math.max.</li>
-<li>PPC/e500: Fix <tt>lj_vm_floor()</tt> for Inf/NaN.</li>
-<li>FFI: Change priority of table initializer variants for structs.</li>
-<li>FFI: Fix code generation for bool call result check on x86/x64.</li>
-<li>FFI: Load FFI library on-demand for bytecode with cdata literals.</li>
-<li>FFI: Fix handling of qualified transparent structs/unions.</li>
-</ul>
-
-<h2 id="LuaJIT-2.0.0">LuaJIT 2.0.0 &mdash; 2012-11-08</h2>
-<ul>
-<li>Correctness and completeness:
-<ul>
-  <li>Fix Android/x86 build.</li>
-  <li>Fix recording of equality comparisons with <tt>__eq</tt> metamethods.</li>
-  <li>Fix detection of immutable upvalues.</li>
-  <li>Replace error with PANIC for callbacks from JIT-compiled code.</li>
-  <li>Fix builtin string to number conversion for <tt>INT_MIN</tt>.</li>
-  <li>Don't create unneeded array part for template tables.</li>
-  <li>Fix <tt>CONV.num.int</tt> sinking.</li>
-  <li>Don't propagate implicitly widened number to index metamethods.</li>
-  <li>ARM: Fix ordered comparisons of number vs. non-number.</li>
-  <li>FFI: Fix code generation for replay of sunk float fields.</li>
-  <li>FFI: Fix signedness of bool.</li>
-  <li>FFI: Fix recording of bool call result check on x86/x64.</li>
-  <li>FFI: Fix stack-adjustment for <tt>__thiscall</tt> callbacks.</li>
-</ul></li>
-</ul>
-
-<h2 id="LuaJIT-2.0.0-beta11">LuaJIT 2.0.0-beta11 &mdash; 2012-10-16</h2>
-<ul>
-<li>New features:
-<ul>
-  <li>Use ARM VFP instructions, if available (build-time detection).</li>
-  <li>Add support for ARM hard-float EABI (<tt>armhf</tt>).</li>
-  <li>Add PS3 port.</li>
-  <li>Add many features from Lua&nbsp;5.2, e.g. <tt>goto</tt>/labels.
-  Refer to <a href="extensions.html#lua52">this list</a>.</li>
-  <li>FFI: Add parameterized C types.</li>
-  <li>FFI: Add support for copy constructors.</li>
-  <li>FFI: Equality comparisons never raise an error (treat as unequal instead).</li>
-  <li>FFI: Box all accessed or returned enums.</li>
-  <li>FFI: Check for <tt>__new</tt> metamethod when calling a constructor.</li>
-  <li>FFI: Handle <tt>__pairs</tt>/<tt>__ipairs</tt> metamethods for cdata objects.</li>
-  <li>FFI: Convert <tt>io.*</tt> file handle to <tt>FILE *</tt> pointer (but as a <tt>void *</tt>).</li>
-  <li>FFI: Detect and support type punning through unions.</li>
-  <li>FFI: Improve various error messages.</li>
-</ul></li>
-<li>Build-system reorganization:
-<ul>
-  <li>Reorganize directory layout:<br>
-  <tt>lib/*</tt> &rarr; <tt>src/jit/*</tt><br>
-  <tt>src/buildvm_*.dasc</tt> &rarr; <tt>src/vm_*.dasc</tt><br>
-  <tt>src/buildvm_*.h</tt> &rarr; removed<br>
-  <tt>src/buildvm*</tt> &rarr; <tt>src/host/*</tt></li>
-  <li>Add minified Lua interpreter plus Lua BitOp (<tt>minilua</tt>) to run DynASM.</li>
-  <li>Change DynASM bit operations to use Lua BitOp</li>
-  <li>Translate only <tt>vm_*.dasc</tt> for detected target architecture.</li>
-  <li>Improve target detection for <tt>msvcbuild.bat</tt>.</li>
-  <li>Fix build issues on Cygwin and MinGW with optional MSys.</li>
-  <li>Handle cross-compiles with FPU/no-FPU or hard-fp/soft-fp ABI mismatch.</li>
-  <li>Remove some library functions for no-JIT/no-FFI builds.</li>
-  <li>Add uninstall target to top-level Makefile.</li>
-</ul></li>
-<li>Correctness and completeness:
-<ul>
-  <li>Preserve snapshot #0 PC for all traces.</li>
-  <li>Fix argument checks for <tt>coroutine.create()</tt>.</li>
-  <li>Command line prints version and JIT status to <tt>stdout</tt>, not <tt>stderr</tt>.</li>
-  <li>Fix userdata <tt>__gc</tt> separations at Lua state close.</li>
-  <li>Fix <tt>TDUP</tt> to <tt>HLOAD</tt> forwarding for <tt>LJ_DUALNUM</tt> builds.</li>
-  <li>Fix buffer check in bytecode writer.</li>
-  <li>Make <tt>os.date()</tt> thread-safe.</li>
-  <li>Add missing declarations for MSVC intrinsics.</li>
-  <li>Fix dispatch table modifications for return hooks.</li>
-  <li>Workaround for MSVC conversion bug (<tt>double</tt> &rarr; <tt>uint32_t</tt> &rarr; <tt>int32_t</tt>).</li>
-  <li>Fix FOLD rule <tt>(i-j)-i => 0-j</tt>.</li>
-  <li>Never use DWARF unwinder on Windows.</li>
-  <li>Fix shrinking of direct mapped blocks in builtin allocator.</li>
-  <li>Limit recursion depth in <tt>string.match()</tt> et al.</li>
-  <li>Fix late despecialization of <tt>ITERN</tt> after loop has been entered.</li>
-  <li>Fix <tt>'f'</tt> and <tt>'L'</tt> options for <tt>debug.getinfo()</tt> and <tt>lua_getinfo()</tt>.</li>
-  <li>Fix <tt>package.searchpath()</tt>.</li>
-  <li>OSX: Change dylib names to be consistent with other platforms.</li>
-  <li>Android: Workaround for broken <tt>sprintf("%g",&nbsp;-0.0)</tt>.</li>
-  <li>x86: Remove support for ancient CPUs without <tt>CMOV</tt> (before Pentium Pro).</li>
-  <li>x86: Fix register allocation for calls returning register pair.</li>
-  <li>x86/x64: Fix fusion of unsigned byte comparisons with swapped operands.</li>
-  <li>ARM: Fix <tt>tonumber()</tt> argument check.</li>
-  <li>ARM: Fix modulo operator and <tt>math.floor()</tt>/<tt>math.ceil()</tt> for <tt>inf</tt>/<tt>nan</tt>.</li>
-  <li>ARM: Invoke SPLIT pass for leftover <tt>IR_TOBIT</tt>.</li>
-  <li>ARM: Fix BASE register coalescing.</li>
-  <li>PPC: Fix interpreter state setup in callbacks.</li>
-  <li>PPC: Fix <tt>string.sub()</tt> range check.</li>
-  <li>MIPS: Support generation of MIPS/MIPSEL bytecode object files.</li>
-  <li>MIPS: Fix calls to <tt>floor()</tt>/<tt>ceil()</tt><tt>/trunc()</tt>.</li>
-  <li>ARM/PPC: Detect more target architecture variants.</li>
-  <li>ARM/PPC/e500/MIPS: Fix tailcalls from fast functions, esp. <tt>tostring()</tt>.</li>
-  <li>ARM/PPC/MIPS: Fix rematerialization of FP constants.</li>
-  <li>FFI: Don't call <tt>FreeLibrary()</tt> on our own EXE/DLL.</li>
-  <li>FFI: Resolve metamethods for constructors, too.</li>
-  <li>FFI: Properly disable callbacks on iOS (would require executable memory).</li>
-  <li>FFI: Fix cdecl string parsing during recording.</li>
-  <li>FFI: Show address pointed to for <tt>tostring(ref)</tt>, too.</li>
-  <li>FFI: Fix alignment of C call argument/return structure.</li>
-  <li>FFI: Initialize all fields of standard types.</li>
-  <li>FFI: Fix callback handling when new C&nbsp;types are declared in callback.</li>
-  <li>FFI: Fix recording of constructors for pointers.</li>
-  <li>FFI: Always resolve metamethods for pointers to structs.</li>
-  <li>FFI: Correctly propagate alignment when interning nested types.</li>
-</ul></li>
-<li>Structural and performance enhancements:
-<ul>
-  <li>Add allocation sinking and store sinking optimization.</li>
-  <li>Constify immutable upvalues.</li>
-  <li>Add builtin string to integer or FP number conversion. Improves cross-platform consistency and correctness.</li>
-  <li>Create string hash slots in template tables for non-const values, too. Avoids later table resizes.</li>
-  <li>Eliminate <tt>HREFK</tt> guard for template table references.</li>
-  <li>Add various new FOLD rules.</li>
-  <li>Don't use stack unwinding for <tt>lua_yield()</tt> (slow on x64).</li>
-  <li>ARM, PPC, MIPS: Improve <tt>XLOAD</tt> operand fusion and register hinting.</li>
-  <li>PPC, MIPS: Compile <tt>math.sqrt()</tt> to sqrt instruction, if available.</li>
-  <li>FFI: Fold <tt>KPTR</tt> + constant offset in SPLIT pass.</li>
-  <li>FFI: Optimize/inline <tt>ffi.copy()</tt> and <tt>ffi.fill()</tt>.</li>
-  <li>FFI: Compile and optimize array/struct copies.</li>
-  <li>FFI: Compile <tt>ffi.typeof(cdata|ctype)</tt>, <tt>ffi.sizeof()</tt>, <tt>ffi.alignof()</tt>, <tt>ffi.offsetof()</tt> and <tt>ffi.gc()</tt>.</li>
-</ul></li>
-</ul>
-
-<h2 id="LuaJIT-2.0.0-beta10">LuaJIT 2.0.0-beta10 &mdash; 2012-05-09</h2>
-<ul>
-<li>New features:
-<ul>
-<li>The MIPS of LuaJIT is complete. It requires a CPU conforming to the
-MIPS32&nbsp;R1 architecture with hardware FPU. O32 hard-fp ABI,
-little-endian or big-endian.</li>
-<li>Auto-detect target arch via cross-compiler. No need for
-<tt>TARGET=arch</tt> anymore.</li>
-<li>Make DynASM compatible with Lua 5.2.</li>
-<li>From Lua 5.2: Try <tt>__tostring</tt> metamethod on non-string error
-messages..</li>
-</ul></li>
-<li>Correctness and completeness:
-<ul>
-<li>Fix parsing of hex literals with exponents.</li>
-<li>Fix bytecode dump for certain number constants.</li>
-<li>Fix argument type in error message for relative arguments.</li>
-<li>Fix argument error handling on Lua stacks without a frame.</li>
-<li>Add missing mcode limit check in assembler backend.</li>
-<li>Fix compilation on OpenBSD.</li>
-<li>Avoid recursive GC steps after GC-triggered trace exit.</li>
-<li>Replace <tt>&lt;unwind.h&gt;</tt> definitions with our own.</li>
-<li>Fix OSX build issues. Bump minimum required OSX version to 10.4.</li>
-<li>Fix discharge order of comparisons in Lua parser.</li>
-<li>Ensure running <tt>__gc</tt> of userdata created in <tt>__gc</tt>
-at state close.</li>
-<li>Limit number of userdata <tt>__gc</tt> separations at state close.</li>
-<li>Fix bytecode <tt>JMP</tt> slot range when optimizing
-<tt>and</tt>/<tt>or</tt> with constant LHS.</li>
-<li>Fix DSE of <tt>USTORE</tt>.</li>
-<li>Make <tt>lua_concat()</tt> work from C&nbsp;hook with partial frame.</li>
-<li>Add required PHIs for implicit conversions, e.g. via <tt>XREF</tt>
-forwarding.</li>
-<li>Add more comparison variants to Valgrind suppressions file.</li>
-<li>Disable loading bytecode with an extra header (BOM or <tt>#!</tt>).</li>
-<li>Fix PHI stack slot syncing.</li>
-<li>ARM: Reorder type/value tests to silence Valgrind.</li>
-<li>ARM: Fix register allocation for <tt>ldrd</tt>-optimized
-<tt>HREFK</tt>.</li>
-<li>ARM: Fix conditional branch fixup for <tt>OBAR</tt>.</li>
-<li>ARM: Invoke SPLIT pass for <tt>double</tt> args in FFI call.</li>
-<li>ARM: Handle all <tt>CALL*</tt> ops with <tt>double</tt> results in
-SPLIT pass.</li>
-<li>ARM: Fix rejoin of <tt>POW</tt> in SPLIT pass.</li>
-<li>ARM: Fix compilation of <tt>math.sinh</tt>, <tt>math.cosh</tt>,
-<tt>math.tanh</tt>.</li>
-<li>ARM, PPC: Avoid pointless arg clearing in <tt>BC_IFUNCF</tt>.</li>
-<li>PPC: Fix resume after yield from hook.</li>
-<li>PPC: Fix argument checking for <tt>rawget()</tt>.</li>
-<li>PPC: Fix fusion of floating-point <tt>XLOAD</tt>/<tt>XSTORE</tt>.</li>
-<li>PPC: Fix <tt>HREFK</tt> code generation for huge tables.</li>
-<li>PPC: Use builtin D-Cache/I-Cache sync code.</li>
-</ul></li>
-<li>FFI library:
-<ul>
-<li>Ignore empty statements in <tt>ffi.cdef()</tt>.</li>
-<li>Ignore number parsing errors while skipping definitions.</li>
-<li>Don't touch frame in callbacks with tailcalls to fast functions.</li>
-<li>Fix library unloading on POSIX systems.</li>
-<li>Finalize cdata before userdata when closing the state.</li>
-<li>Change <tt>ffi.load()</tt> library name resolution for Cygwin.</li>
-<li>Fix resolving of function name redirects on Windows/x86.</li>
-<li>Fix symbol resolving error messages on Windows.</li>
-<li>Fix blacklisting of C functions calling callbacks.</li>
-<li>Fix result type of pointer difference.</li>
-<li>Use correct PC in FFI metamethod error message.</li>
-<li>Allow <tt>'typedef _Bool int BOOL;'</tt> for the Windows API.</li>
-<li>Don't record test for bool result of call, if ignored.</li>
-</ul></li>
-</ul>
-
-<h2 id="LuaJIT-2.0.0-beta9">LuaJIT 2.0.0-beta9 &mdash; 2011-12-14</h2>
-<ul>
-<li>New features:
-<ul>
-<li>PPC port of LuaJIT is complete. Default is the dual-number port
-(usually faster). Single-number port selectable via <tt>src/Makefile</tt>
-at build time.</li>
-<li>Add FFI callback support.</li>
-<li>Extend <tt>-b</tt> to generate <tt>.c</tt>, <tt>.h</tt> or <tt>.obj/.o</tt>
-files with embedded bytecode.</li>
-<li>Allow loading embedded bytecode with <tt>require()</tt>.</li>
-<li>From Lua 5.2: Change to <tt>'\z'</tt> escape. Reject undefined escape
-sequences.</li>
-</ul></li>
-<li>Correctness and completeness:
-<ul>
-<li>Fix OSX 10.7 build. Fix <tt>install_name</tt> and versioning on OSX.</li>
-<li>Fix iOS build.</li>
-<li>Install <tt>dis_arm.lua</tt>, too.</li>
-<li>Mark installed shared library as executable.</li>
-<li>Add debug option to <tt>msvcbuild.bat</tt> and improve error handling.</li>
-<li>Fix data-flow analysis for iterators.</li>
-<li>Fix forced unwinding triggered by external unwinder.</li>
-<li>Record missing <tt>for</tt> loop slot loads (return to lower frame).</li>
-<li>Always use ANSI variants of Windows system functions.</li>
-<li>Fix GC barrier for multi-result table constructor (<tt>TSETM</tt>).</li>
-<li>Fix/add various FOLD rules.</li>
-<li>Add potential PHI for number conversions due to type instability.</li>
-<li>Do not eliminate PHIs only referenced from other PHIs.</li>
-<li>Correctly anchor implicit number to string conversions in Lua/C API.</li>
-<li>Fix various stack limit checks.</li>
-<li>x64: Use thread-safe exceptions for external unwinding (GCC platforms).</li>
-<li>x64: Fix result type of cdata index conversions.</li>
-<li>x64: Fix <tt>math.random()</tt> and <tt>bit.bswap()</tt> code generation.</li>
-<li>x64: Fix <tt>lightuserdata</tt> comparisons.</li>
-<li>x64: Always extend stack-passed arguments to pointer size.</li>
-<li>ARM: Many fixes to code generation backend.</li>
-<li>PPC/e500: Fix dispatch for binop metamethods.</li>
-<li>PPC/e500: Save/restore condition registers when entering/leaving the VM.</li>
-<li>PPC/e500: Fix write barrier in stores of strings to upvalues.</li>
-</ul></li>
-<li>FFI library:
-<ul>
-<li>Fix C comment parsing.</li>
-<li>Fix snapshot optimization for cdata comparisons.</li>
-<li>Fix recording of const/enum lookups in namespaces.</li>
-<li>Fix call argument and return handling for <tt>I8/U8/I16/U16</tt> types.</li>
-<li>Fix unfused loads of float fields.</li>
-<li>Fix <tt>ffi.string()</tt> recording.</li>
-<li>Save <tt>GetLastError()</tt> around <tt>ffi.load()</tt> and symbol
-resolving, too.</li>
-<li>Improve ld script detection in <tt>ffi.load()</tt>.</li>
-<li>Record loads/stores to external variables in namespaces.</li>
-<li>Compile calls to stdcall, fastcall and vararg functions.</li>
-<li>Treat function ctypes like pointers in comparisons.</li>
-<li>Resolve <tt>__call</tt> metamethod for pointers, too.</li>
-<li>Record C function calls with bool return values.</li>
-<li>Record <tt>ffi.errno()</tt>.</li>
-<li>x86: Fix number to <tt>uint32_t</tt> conversion rounding.</li>
-<li>x86: Fix 64 bit arithmetic in assembler backend.</li>
-<li>x64: Fix struct-by-value calling conventions.</li>
-<li>ARM: Ensure invocation of SPLIT pass for float conversions.</li>
-</ul></li>
-<li>Structural and performance enhancements:
-<ul>
-<li>Display trace types with <tt>-jv</tt> and <tt>-jdump</tt>.</li>
-<li>Record isolated calls. But prefer recording loops over calls.</li>
-<li>Specialize to prototype for non-monomorphic functions. Solves the
-trace-explosion problem for closure-heavy programming styles.</li>
-<li>Always generate a portable <tt>vmdef.lua</tt>. Easier for distros.</li>
-</ul></li>
-</ul>
-
-<h2 id="LuaJIT-2.0.0-beta8">LuaJIT 2.0.0-beta8 &mdash; 2011-06-23</h2>
-<ul>
-<li>New features:
-<ul>
-<li>Soft-float ARM port of LuaJIT is complete.</li>
-<li>Add support for bytecode loading/saving and <tt>-b</tt> command line
-option.</li>
-<li>From Lua 5.2: <tt>__len</tt> metamethod for tables
-(disabled by default).</li>
-</ul></li>
-<li>Correctness and completeness:
-<ul>
-<li>ARM: Misc. fixes for interpreter.</li>
-<li>x86/x64: Fix <tt>bit.*</tt> argument checking in interpreter.</li>
-<li>Catch early out-of-memory in memory allocator initialization.</li>
-<li>Fix data-flow analysis for paths leading to an upvalue close.</li>
-<li>Fix check for missing arguments in <tt>string.format()</tt>.</li>
-<li>Fix Solaris/x86 build (note: not a supported target).</li>
-<li>Fix recording of loops with instable directions in side traces.</li>
-<li>x86/x64: Fix fusion of comparisons with <tt>u8</tt>/<tt>u16</tt>
-<tt>XLOAD</tt>.</li>
-<li>x86/x64: Fix register allocation for variable shifts.</li>
-</ul></li>
-<li>FFI library:
-<ul>
-<li>Add <tt>ffi.errno()</tt>. Save <tt>errno</tt>/<tt>GetLastError()</tt>
-around allocations etc.</li>
-<li>Fix <tt>__gc</tt> for VLA/VLS cdata objects.</li>
-<li>Fix recording of casts from 32 bit cdata pointers to integers.</li>
-<li><tt>tonumber(cdata)</tt> returns <tt>nil</tt> for non-numbers.</li>
-<li>Show address pointed to for <tt>tostring(pointer)</tt>.</li>
-<li>Print <tt>NULL</tt> pointers as <tt>"cdata&lt;... *&gt;: NULL"</tt>.</li>
-<li>Support <tt>__tostring</tt> metamethod for pointers to structs, too.</li>
-</ul></li>
-<li>Structural and performance enhancements:
-<ul>
-<li>More tuning for loop unrolling heuristics.</li>
-<li>Flatten and compress in-memory debug info (saves ~70%).</li>
-</ul></li>
-</ul>
-
-<h2 id="LuaJIT-2.0.0-beta7">LuaJIT 2.0.0-beta7 &mdash; 2011-05-05</h2>
-<ul>
-<li>New features:
-<ul>
-<li>ARM port of the LuaJIT interpreter is complete.</li>
-<li>FFI library: Add <tt>ffi.gc()</tt>, <tt>ffi.metatype()</tt>,
-<tt>ffi.istype()</tt>.</li>
-<li>FFI library: Resolve ld script redirection in <tt>ffi.load()</tt>.</li>
-<li>From Lua 5.2: <tt>package.searchpath()</tt>, <tt>fp:read("*L")</tt>,
-<tt>load(string)</tt>.</li>
-<li>From Lua 5.2, disabled by default: empty statement,
-<tt>table.unpack()</tt>, modified <tt>coroutine.running()</tt>.</li>
-</ul></li>
-<li>Correctness and completeness:
-<ul>
-<li>FFI library: numerous fixes.</li>
-<li>Fix type mismatches in store-to-load forwarding.</li>
-<li>Fix error handling within metamethods.</li>
-<li>Fix <tt>table.maxn()</tt>.</li>
-<li>Improve accuracy of <tt>x^-k</tt> on x64.</li>
-<li>Fix code generation for Intel Atom in x64 mode.</li>
-<li>Fix narrowing of POW.</li>
-<li>Fix recording of retried fast functions.</li>
-<li>Fix code generation for <tt>bit.bnot()</tt> and multiplies.</li>
-<li>Fix error location within cpcall frames.</li>
-<li>Add workaround for old libgcc unwind bug.</li>
-<li>Fix <tt>lua_yield()</tt> and <tt>getmetatable(lightuserdata)</tt> on x64.</li>
-<li>Misc. fixes for PPC/e500 interpreter.</li>
-<li>Fix stack slot updates for down-recursion.</li>
-</ul></li>
-<li>Structural and performance enhancements:
-<ul>
-<li>Add dual-number mode (int/double) for the VM. Enabled for ARM.</li>
-<li>Improve narrowing of arithmetic operators and <tt>for</tt> loops.</li>
-<li>Tune loop unrolling heuristics and increase trace recorder limits.</li>
-<li>Eliminate dead slots in snapshots using bytecode data-flow analysis.</li>
-<li>Avoid phantom stores to proxy tables.</li>
-<li>Optimize lookups in empty proxy tables.</li>
-<li>Improve bytecode optimization of <tt>and</tt>/<tt>or</tt> operators.</li>
-</ul></li>
-</ul>
-
-<h2 id="LuaJIT-2.0.0-beta6">LuaJIT 2.0.0-beta6 &mdash; 2011-02-11</h2>
-<ul>
-<li>New features:
-<ul>
-<li>PowerPC/e500v2 port of the LuaJIT interpreter is complete.</li>
-<li>Various minor features from Lua 5.2: Hex escapes in literals,
-<tt>'\*'</tt> escape, reversible <tt>string.format("%q",s)</tt>,
-<tt>"%g"</tt> pattern, <tt>table.sort</tt> checks callbacks,
-<tt>os.exit(status|true|false[,close])</tt>.</li>
-<li>Lua 5.2 <tt>__pairs</tt> and <tt>__ipairs</tt> metamethods
-(disabled by default).</li>
-<li>Initial release of the FFI library.</li>
-</ul></li>
-<li>Correctness and completeness:
-<ul>
-<li>Fix <tt>string.format()</tt> for non-finite numbers.</li>
-<li>Fix memory leak when compiled to use the built-in allocator.</li>
-<li>x86/x64: Fix unnecessary resize in <tt>TSETM</tt> bytecode.</li>
-<li>Fix various GC issues with traces and <tt>jit.flush()</tt>.</li>
-<li>x64: Fix fusion of indexes for array references.</li>
-<li>x86/x64: Fix stack overflow handling for coroutine results.</li>
-<li>Enable low-2GB memory allocation on FreeBSD/x64.</li>
-<li>Fix <tt>collectgarbage("count")</tt> result if more than 2GB is in use.</li>
-<li>Fix parsing of hex floats.</li>
-<li>x86/x64: Fix loop branch inversion with trailing
-<tt>HREF+NE/EQ</tt>.</li>
-<li>Add <tt>jit.os</tt> string.</li>
-<li><tt>coroutine.create()</tt> permits running C functions, too.</li>
-<li>Fix OSX build to work with newer ld64 versions.</li>
-<li>Fix bytecode optimization of <tt>and</tt>/<tt>or</tt> operators.</li>
-</ul></li>
-<li>Structural and performance enhancements:
-<ul>
-<li>Emit specialized bytecode for <tt>pairs()</tt>/<tt>next()</tt>.</li>
-<li>Improve bytecode coalescing of <tt>nil</tt> constants.</li>
-<li>Compile calls to vararg functions.</li>
-<li>Compile <tt>select()</tt>.</li>
-<li>Improve alias analysis, esp. for loads from allocations.</li>
-<li>Tuning of various compiler heuristics.</li>
-<li>Refactor and extend IR conversion instructions.</li>
-<li>x86/x64: Various backend enhancements related to the FFI.</li>
-<li>Add SPLIT pass to split 64 bit IR instructions for 32 bit CPUs.</li>
-</ul></li>
-</ul>
-
-<h2 id="LuaJIT-2.0.0-beta5">LuaJIT 2.0.0-beta5 &mdash; 2010-08-24</h2>
-<ul>
-<li>Correctness and completeness:
-<ul>
-<li>Fix trace exit dispatch to function headers.</li>
-<li>Fix Windows and OSX builds with LUAJIT_DISABLE_JIT.</li>
-<li>Reorganize and fix placement of generated machine code on x64.</li>
-<li>Fix TNEW in x64 interpreter.</li>
-<li>Do not eliminate PHIs for values only referenced from side exits.</li>
-<li>OS-independent canonicalization of strings for non-finite numbers.</li>
-<li>Fix <tt>string.char()</tt> range check on x64.</li>
-<li>Fix <tt>tostring()</tt> resolving within <tt>print()</tt>.</li>
-<li>Fix error handling for <tt>next()</tt>.</li>
-<li>Fix passing of constant arguments to external calls on x64.</li>
-<li>Fix interpreter argument check for two-argument SSE math functions.</li>
-<li>Fix C frame chain corruption caused by <tt>lua_cpcall()</tt>.</li>
-<li>Fix return from <tt>pcall()</tt> within active hook.</li>
-</ul></li>
-<li>Structural and performance enhancements:
-<ul>
-<li>Replace on-trace GC frame syncing with interpreter exit.</li>
-<li>Improve hash lookup specialization by not removing dead keys during GC.</li>
-<li>Turn traces into true GC objects.</li>
-<li>Avoid starting a GC cycle immediately after library init.</li>
-<li>Add weak guards to improve dead-code elimination.</li>
-<li>Speed up string interning.</li>
-</ul></li>
-</ul>
-
-<h2 id="LuaJIT-2.0.0-beta4">LuaJIT 2.0.0-beta4 &mdash; 2010-03-28</h2>
-<ul>
-<li>Correctness and completeness:
-<ul>
-<li>Fix precondition for on-trace creation of table keys.</li>
-<li>Fix <tt>{f()}</tt> on x64 when table is resized.</li>
-<li>Fix folding of ordered comparisons with same references.</li>
-<li>Fix snapshot restores for multi-result bytecodes.</li>
-<li>Fix potential hang when recording bytecode with nested closures.</li>
-<li>Fix recording of <tt>getmetatable()</tt>, <tt>tonumber()</tt> and bad argument types.</li>
-<li>Fix SLOAD fusion across returns to lower frames.</li>
-</ul></li>
-<li>Structural and performance enhancements:
-<ul>
-<li>Add array bounds check elimination. <tt>-Oabc</tt> is enabled by default.</li>
-<li>More tuning for x64, e.g. smaller table objects.</li>
-</ul></li>
-</ul>
-
-<h2 id="LuaJIT-2.0.0-beta3">LuaJIT 2.0.0-beta3 &mdash; 2010-03-07</h2>
-<ul>
-<li>LuaJIT x64 port:
-<ul>
-<li>Port integrated memory allocator to Linux/x64, Windows/x64 and OSX/x64.</li>
-<li>Port interpreter and JIT compiler to x64.</li>
-<li>Port DynASM to x64.</li>
-<li>Many 32/64 bit cleanups in the VM.</li>
-<li>Allow building the interpreter with either x87 or SSE2 arithmetics.</li>
-<li>Add external unwinding and C++ exception interop (default on x64).</li>
-</ul></li>
-<li>Correctness and completeness:
-<ul>
-<li>Fix constructor bytecode generation for certain conditional values.</li>
-<li>Fix some cases of ordered string comparisons.</li>
-<li>Fix <tt>lua_tocfunction()</tt>.</li>
-<li>Fix cutoff register in JMP bytecode for some conditional expressions.</li>
-<li>Fix PHI marking algorithm for references from variant slots.</li>
-<li>Fix <tt>package.cpath</tt> for non-default PREFIX.</li>
-<li>Fix DWARF2 frame unwind information for interpreter on OSX.</li>
-<li>Drive the GC forward on string allocations in the parser.</li>
-<li>Implement call/return hooks (zero-cost if disabled).</li>
-<li>Implement yield from C hooks.</li>
-<li>Disable JIT compiler on older non-SSE2 CPUs instead of aborting.</li>
-</ul></li>
-<li>Structural and performance enhancements:
-<ul>
-<li>Compile recursive code (tail-, up- and down-recursion).</li>
-<li>Improve heuristics for bytecode penalties and blacklisting.</li>
-<li>Split CALL/FUNC recording and clean up fast function call semantics.</li>
-<li>Major redesign of internal function call handling.</li>
-<li>Improve FOR loop const specialization and integerness checks.</li>
-<li>Switch to pre-initialized stacks. Avoid frame-clearing.</li>
-<li>Colocation of prototypes and related data: bytecode, constants, debug info.</li>
-<li>Cleanup parser and streamline bytecode generation.</li>
-<li>Add support for weak IR references to register allocator.</li>
-<li>Switch to compressed, extensible snapshots.</li>
-<li>Compile returns to frames below the start frame.</li>
-<li>Improve alias analysis of upvalues using a disambiguation hash value.</li>
-<li>Compile floor/ceil/trunc to SSE2 helper calls or SSE4.1 instructions.</li>
-<li>Add generic C call handling to IR and backend.</li>
-<li>Improve KNUM fuse vs. load heuristics.</li>
-<li>Compile various <tt>io.*()</tt> functions.</li>
-<li>Compile <tt>math.sinh()</tt>, <tt>math.cosh()</tt>, <tt>math.tanh()</tt>
-and <tt>math.random()</tt>.</li>
-</ul></li>
-</ul>
-
-<h2 id="LuaJIT-2.0.0-beta2">LuaJIT 2.0.0-beta2 &mdash; 2009-11-09</h2>
-<ul>
-<li>Reorganize build system. Build static+shared library on POSIX.</li>
-<li>Allow C++ exception conversion on all platforms
-using a wrapper function.</li>
-<li>Automatically catch C++ exceptions and rethrow Lua error
-(DWARF2 only).</li>
-<li>Check for the correct x87 FPU precision at strategic points.</li>
-<li>Always use wrappers for libm functions.</li>
-<li>Resurrect metamethod name strings before copying them.</li>
-<li>Mark current trace, even if compiler is idle.</li>
-<li>Ensure FILE metatable is created only once.</li>
-<li>Fix type comparisons when different integer types are involved.</li>
-<li>Fix <tt>getmetatable()</tt> recording.</li>
-<li>Fix TDUP with dead keys in template table.</li>
-<li><tt>jit.flush(tr)</tt> returns status.
-Prevent manual flush of a trace that's still linked.</li>
-<li>Improve register allocation heuristics for invariant references.</li>
-<li>Compile the push/pop variants of <tt>table.insert()</tt> and
-<tt>table.remove()</tt>.</li>
-<li>Compatibility with MSVC <tt>link&nbsp/debug</tt>.</li>
-<li>Fix <tt>lua_iscfunction()</tt>.</li>
-<li>Fix <tt>math.random()</tt> when compiled with <tt>-fpic</tt> (OSX).</li>
-<li>Fix <tt>table.maxn()</tt>.</li>
-<li>Bump <tt>MACOSX_DEPLOYMENT_TARGET</tt> to <tt>10.4</tt></li>
-<li><tt>luaL_check*()</tt> and <tt>luaL_opt*()</tt> now support
-negative arguments, too.<br>
-This matches the behavior of Lua 5.1, but not the specification.</li>
-</ul>
-
-<h2 id="LuaJIT-2.0.0-beta1">LuaJIT 2.0.0-beta1 &mdash; 2009-10-31</h2>
-<ul>
-<li>This is the first public release of LuaJIT 2.0.</li>
-<li>The whole VM has been rewritten from the ground up, so there's
-no point in listing differences over earlier versions.</li>
-</ul>
-</div>
-
-<div class="major" style="background: #ffff80;">
-<h2 id="LuaJIT-1.1.8">LuaJIT 1.1.8 &mdash; 2012-04-16</h2>
-<ul>
-<li>Merged with Lua 5.1.5. Also integrated fixes for all
-<a href="http://www.lua.org/bugs.html#5.1.5"><span class="ext">&raquo;</span>&nbsp;<span class="ext">&raquo;</span>&nbsp;currently known bugs in Lua 5.1.5</a>.</li>
-</ul>
-
-<h2 id="LuaJIT-1.1.7">LuaJIT 1.1.7 &mdash; 2011-05-05</h2>
-<ul>
-<li>Added fixes for the
-<a href="http://www.lua.org/bugs.html#5.1.4"><span class="ext">&raquo;</span>&nbsp;currently known bugs in Lua 5.1.4</a>.</li>
-</ul>
-
-<h2 id="LuaJIT-1.1.6">LuaJIT 1.1.6 &mdash; 2010-03-28</h2>
-<ul>
-<li>Added fixes for the
-<a href="http://www.lua.org/bugs.html#5.1.4"><span class="ext">&raquo;</span>&nbsp;currently known bugs in Lua 5.1.4</a>.</li>
-<li>Removed wrong GC check in <tt>jit_createstate()</tt>.
-Thanks to Tim Mensch.</li>
-<li>Fixed bad assertions while compiling <tt>table.insert()</tt> and
-<tt>table.remove()</tt>.</li>
-</ul>
-
-<h2 id="LuaJIT-1.1.5">LuaJIT 1.1.5 &mdash; 2008-10-25</h2>
-<ul>
-<li>Merged with Lua 5.1.4. Fixes all
-<a href="http://www.lua.org/bugs.html#5.1.3"><span class="ext">&raquo;</span>&nbsp;known bugs in Lua 5.1.3</a>.</li>
-</ul>
-
-<h2 id="LuaJIT-1.1.4">LuaJIT 1.1.4 &mdash; 2008-02-05</h2>
-<ul>
-<li>Merged with Lua 5.1.3. Fixes all
-<a href="http://www.lua.org/bugs.html#5.1.2"><span class="ext">&raquo;</span>&nbsp;known bugs in Lua 5.1.2</a>.</li>
-<li>Fixed possible (but unlikely) stack corruption while compiling
-<tt>k^x</tt> expressions.</li>
-<li>Fixed DynASM template for cmpss instruction.</li>
-</ul>
-
-<h2 id="LuaJIT-1.1.3">LuaJIT 1.1.3 &mdash; 2007-05-24</h2>
-<ul>
-<li>Merged with Lua 5.1.2. Fixes all
-<a href="http://www.lua.org/bugs.html#5.1.1"><span class="ext">&raquo;</span>&nbsp;known bugs in Lua 5.1.1</a>.</li>
-<li>Merged pending Lua 5.1.x fixes: "return -nil" bug, spurious count hook call.</li>
-<li>Remove a (sometimes) wrong assertion in <tt>luaJIT_findpc()</tt>.</li>
-<li>DynASM now allows labels for displacements and <tt>.aword</tt>.</li>
-<li>Fix some compiler warnings for DynASM glue (internal API change).</li>
-<li>Correct naming for SSSE3 (temporarily known as SSE4) in DynASM and x86 disassembler.</li>
-<li>The loadable debug modules now handle redirection to stdout
-(e.g. <tt>-j&nbsp;trace=-</tt>).</li>
-</ul>
-
-<h2 id="LuaJIT-1.1.2">LuaJIT 1.1.2 &mdash; 2006-06-24</h2>
-<ul>
-<li>Fix MSVC inline assembly: use only local variables with
-<tt>lua_number2int()</tt>.</li>
-<li>Fix "attempt to call a thread value" bug on Mac OS X:
-make values of consts used as lightuserdata keys unique
-to avoid joining by the compiler/linker.</li>
-</ul>
-
-<h2 id="LuaJIT-1.1.1">LuaJIT 1.1.1 &mdash; 2006-06-20</h2>
-<ul>
-<li>Merged with Lua 5.1.1. Fixes all
-<a href="http://www.lua.org/bugs.html#5.1"><span class="ext">&raquo;</span>&nbsp;known bugs in Lua 5.1</a>.</li>
-<li>Enforce (dynamic) linker error for EXE/DLL version mismatches.</li>
-<li>Minor changes to DynASM: faster pre-processing, smaller encoding
-for some immediates.</li>
-</ul>
-<p>
-This release is in sync with Coco 1.1.1 (see the
-<a href="http://coco.luajit.org/changes.html"><span class="ext">&raquo;</span>&nbsp;Coco Change History</a>).
-</p>
-
-<h2 id="LuaJIT-1.1.0">LuaJIT 1.1.0 &mdash; 2006-03-13</h2>
-<ul>
-<li>Merged with Lua 5.1 (final).</li>
-
-<li>New JIT call frame setup:
-<ul>
-<li>The C stack is kept 16 byte aligned (faster).
-Mandatory for Mac OS X on Intel, too.</li>
-<li>Faster calling conventions for internal C helper functions.</li>
-<li>Better instruction scheduling for function prologue, OP_CALL and
-OP_RETURN.</li>
-</ul></li>
-
-<li>Miscellaneous optimizations:
-<ul>
-<li>Faster loads of FP constants. Remove narrow-to-wide store-to-load
-forwarding stalls.</li>
-<li>Use (scalar) SSE2 ops (if the CPU supports it) to speed up slot moves
-and FP to integer conversions.</li>
-<li>Optimized the two-argument form of <tt>OP_CONCAT</tt> (<tt>a..b</tt>).</li>
-<li>Inlined <tt>OP_MOD</tt> (<tt>a%b</tt>).
-With better accuracy than the C variant, too.</li>
-<li>Inlined <tt>OP_POW</tt> (<tt>a^b</tt>). Unroll <tt>x^k</tt> or
-use <tt>k^x = 2^(log2(k)*x)</tt> or call <tt>pow()</tt>.</li>
-</ul></li>
-
-<li>Changes in the optimizer:
-<ul>
-<li>Improved hinting for table keys derived from table values
-(<tt>t1[t2[x]]</tt>).</li>
-<li>Lookup hinting now works with arbitrary object types and
-supports index chains, too.</li>
-<li>Generate type hints for arithmetic and comparison operators,
-OP_LEN, OP_CONCAT and OP_FORPREP.</li>
-<li>Remove several hint definitions in favour of a generic COMBINE hint.</li>
-<li>Complete rewrite of <tt>jit.opt_inline</tt> module
-(ex <tt>jit.opt_lib</tt>).</li>
-</ul></li>
-
-<li>Use adaptive deoptimization:
-<ul>
-<li>If runtime verification of a contract fails, the affected
-instruction is recompiled and patched on-the-fly.
-Regular programs will trigger deoptimization only occasionally.</li>
-<li>This avoids generating code for uncommon fallback cases
-most of the time. Generated code is up to 30% smaller compared to
-LuaJIT&nbsp;1.0.3.</li>
-<li>Deoptimization is used for many opcodes and contracts:
-<ul>
-<li>OP_CALL, OP_TAILCALL: type mismatch for callable.</li>
-<li>Inlined calls: closure mismatch, parameter number and type mismatches.</li>
-<li>OP_GETTABLE, OP_SETTABLE: table or key type and range mismatches.</li>
-<li>All arithmetic and comparison operators, OP_LEN, OP_CONCAT,
-OP_FORPREP: operand type and range mismatches.</li>
-</ul></li>
-<li>Complete redesign of the debug and traceback info
-(bytecode &harr; mcode) to support deoptimization.
-Much more flexible and needs only 50% of the space.</li>
-<li>The modules <tt>jit.trace</tt>, <tt>jit.dumphints</tt> and
-<tt>jit.dump</tt> handle deoptimization.</li>
-</ul></li>
-
-<li>Inlined many popular library functions
-(for commonly used arguments only):
-<ul>
-<li>Most <tt>math.*</tt> functions (the 18 most used ones)
-[2x-10x faster].</li>
-<li><tt>string.len</tt>, <tt>string.sub</tt> and <tt>string.char</tt>
-[2x-10x faster].</li>
-<li><tt>table.insert</tt>, <tt>table.remove</tt> and <tt>table.getn</tt>
-[3x-5x faster].</li>
-<li><tt>coroutine.yield</tt> and <tt>coroutine.resume</tt>
-[3x-5x faster].</li>
-<li><tt>pairs</tt>, <tt>ipairs</tt> and the corresponding iterators
-[8x-15x faster].</li>
-</ul></li>
-
-<li>Changes in the core and loadable modules and the stand-alone executable:
-<ul>
-<li>Added <tt>jit.version</tt>, <tt>jit.version_num</tt>
-and <tt>jit.arch</tt>.</li>
-<li>Reorganized some internal API functions (<tt>jit.util.*mcode*</tt>).</li>
-<li>The <tt>-j dump</tt> output now shows JSUB names, too.</li>
-<li>New x86 disassembler module written in pure Lua. No dependency
-on ndisasm anymore. Flexible API, very compact (500 lines)
-and complete (x87, MMX, SSE, SSE2, SSE3, SSSE3, privileged instructions).</li>
-<li><tt>luajit -v</tt> prints the LuaJIT version and copyright
-on a separate line.</li>
-</ul></li>
-
-<li>Added SSE, SSE2, SSE3 and SSSE3 support to DynASM.</li>
-<li>Miscellaneous doc changes. Added a section about
-<a href="install.html#embedding">embedding LuaJIT</a>.</li>
-</ul>
-<p>
-This release is in sync with Coco 1.1.0 (see the
-<a href="http://coco.luajit.org/changes.html"><span class="ext">&raquo;</span>&nbsp;Coco Change History</a>).
-</p>
-</div>
-
-<div class="major" style="background: #ffffd0;">
-<h2 id="LuaJIT-1.0.3">LuaJIT 1.0.3 &mdash; 2005-09-08</h2>
-<ul>
-<li>Even more docs.</li>
-<li>Unified closure checks in <tt>jit.*</tt>.</li>
-<li>Fixed some range checks in <tt>jit.util.*</tt>.</li>
-<li>Fixed __newindex call originating from <tt>jit_settable_str()</tt>.</li>
-<li>Merged with Lua 5.1 alpha (including early bug fixes).</li>
-</ul>
-<p>
-This is the first public release of LuaJIT.
-</p>
-
-<h2 id="LuaJIT-1.0.2">LuaJIT 1.0.2 &mdash; 2005-09-02</h2>
-<ul>
-<li>Add support for flushing the Valgrind translation cache <br>
-(<tt>MYCFLAGS= -DUSE_VALGRIND</tt>).</li>
-<li>Add support for freeing executable mcode memory to the <tt>mmap()</tt>-based
-variant for POSIX systems.</li>
-<li>Reorganized the C&nbsp;function signature handling in
-<tt>jit.opt_lib</tt>.</li>
-<li>Changed to index-based hints for inlining C&nbsp;functions.
-Still no support in the backend for inlining.</li>
-<li>Hardcode <tt>HEAP_CREATE_ENABLE_EXECUTE</tt> value if undefined.</li>
-<li>Misc. changes to the <tt>jit.*</tt> modules.</li>
-<li>Misc. changes to the Makefiles.</li>
-<li>Lots of new docs.</li>
-<li>Complete doc reorg.</li>
-</ul>
-<p>
-Not released because Lua 5.1 alpha came out today.
-</p>
-
-<h2 id="LuaJIT-1.0.1">LuaJIT 1.0.1 &mdash; 2005-08-31</h2>
-<ul>
-<li>Missing GC step in <tt>OP_CONCAT</tt>.</li>
-<li>Fix result handling for C &ndash;> JIT calls.</li>
-<li>Detect CPU feature bits.</li>
-<li>Encode conditional moves (<tt>fucomip</tt>) only when supported.</li>
-<li>Add fallback instructions for FP compares.</li>
-<li>Add support for <tt>LUA_COMPAT_VARARG</tt>. Still disabled by default.</li>
-<li>MSVC needs a specific place for the <tt>CALLBACK</tt> attribute
-(David Burgess).</li>
-<li>Misc. doc updates.</li>
-</ul>
-<p>
-Interim non-public release.
-Special thanks to Adam D. Moss for reporting most of the bugs.
-</p>
-
-<h2 id="LuaJIT-1.0.0">LuaJIT 1.0.0 &mdash; 2005-08-29</h2>
-<p>
-This is the initial non-public release of LuaJIT.
-</p>
-</div>
-<br class="flush">
-</div>
-<div id="foot">
-<hr class="hide">
-Copyright &copy; 2005-2020
-<span class="noprint">
-&middot;
-<a href="contact.html">Contact</a>
-</span>
-</div>
-</body>
-</html>
diff --git a/doc/contact.html b/doc/contact.html
index fbab370c..b5e390a7 100644
--- a/doc/contact.html
+++ b/doc/contact.html
@@ -10,7 +10,7 @@
 </head>
 <body>
 <div id="site">
-<a href="http://luajit.org"><span>Lua<span id="logo">JIT</span></span></a>
+<a href="https://luajit.org"><span>Lua<span id="logo">JIT</span></span></a>
 </div>
 <div id="head">
 <h1>Contact</h1>
@@ -19,7 +19,7 @@
 <ul><li>
 <a href="luajit.html">LuaJIT</a>
 <ul><li>
-<a href="http://luajit.org/download.html">Download <span class="ext">&raquo;</span></a>
+<a href="https://luajit.org/download.html">Download <span class="ext">&raquo;</span></a>
 </li><li>
 <a href="install.html">Installation</a>
 </li><li>
@@ -43,17 +43,12 @@
 </li></ul>
 </li><li>
 <a href="status.html">Status</a>
-<ul><li>
-<a href="changes.html">Changes</a>
-</li></ul>
 </li><li>
 <a href="faq.html">FAQ</a>
 </li><li>
-<a href="http://luajit.org/performance.html">Performance <span class="ext">&raquo;</span></a>
-</li><li>
 <a href="http://wiki.luajit.org/">Wiki <span class="ext">&raquo;</span></a>
 </li><li>
-<a href="http://luajit.org/list.html">Mailing List <span class="ext">&raquo;</span></a>
+<a href="https://luajit.org/list.html">Mailing List <span class="ext">&raquo;</span></a>
 </li></ul>
 </div>
 <div id="main">
@@ -64,7 +59,7 @@ please use the
 </p>
 <p>
 Please send general questions to the
-<a href="http://luajit.org/list.html"><span class="ext">&raquo;</span>&nbsp;LuaJIT mailing list</a>.
+<a href="https://luajit.org/list.html">LuaJIT mailing list</a>.
 </p>
 <p>
 You can also send any questions you have directly to me:
diff --git a/doc/ext_c_api.html b/doc/ext_c_api.html
index 88017ace..18558995 100644
--- a/doc/ext_c_api.html
+++ b/doc/ext_c_api.html
@@ -10,7 +10,7 @@
 </head>
 <body>
 <div id="site">
-<a href="http://luajit.org"><span>Lua<span id="logo">JIT</span></span></a>
+<a href="https://luajit.org"><span>Lua<span id="logo">JIT</span></span></a>
 </div>
 <div id="head">
 <h1>Lua/C API Extensions</h1>
@@ -19,7 +19,7 @@
 <ul><li>
 <a href="luajit.html">LuaJIT</a>
 <ul><li>
-<a href="http://luajit.org/download.html">Download <span class="ext">&raquo;</span></a>
+<a href="https://luajit.org/download.html">Download <span class="ext">&raquo;</span></a>
 </li><li>
 <a href="install.html">Installation</a>
 </li><li>
@@ -43,17 +43,12 @@
 </li></ul>
 </li><li>
 <a href="status.html">Status</a>
-<ul><li>
-<a href="changes.html">Changes</a>
-</li></ul>
 </li><li>
 <a href="faq.html">FAQ</a>
 </li><li>
-<a href="http://luajit.org/performance.html">Performance <span class="ext">&raquo;</span></a>
-</li><li>
 <a href="http://wiki.luajit.org/">Wiki <span class="ext">&raquo;</span></a>
 </li><li>
-<a href="http://luajit.org/list.html">Mailing List <span class="ext">&raquo;</span></a>
+<a href="https://luajit.org/list.html">Mailing List <span class="ext">&raquo;</span></a>
 </li></ul>
 </div>
 <div id="main">
diff --git a/doc/ext_ffi.html b/doc/ext_ffi.html
index fe74a1d8..6b846c41 100644
--- a/doc/ext_ffi.html
+++ b/doc/ext_ffi.html
@@ -10,7 +10,7 @@
 </head>
 <body>
 <div id="site">
-<a href="http://luajit.org"><span>Lua<span id="logo">JIT</span></span></a>
+<a href="https://luajit.org"><span>Lua<span id="logo">JIT</span></span></a>
 </div>
 <div id="head">
 <h1>FFI Library</h1>
@@ -19,7 +19,7 @@
 <ul><li>
 <a href="luajit.html">LuaJIT</a>
 <ul><li>
-<a href="http://luajit.org/download.html">Download <span class="ext">&raquo;</span></a>
+<a href="https://luajit.org/download.html">Download <span class="ext">&raquo;</span></a>
 </li><li>
 <a href="install.html">Installation</a>
 </li><li>
@@ -43,17 +43,12 @@
 </li></ul>
 </li><li>
 <a href="status.html">Status</a>
-<ul><li>
-<a href="changes.html">Changes</a>
-</li></ul>
 </li><li>
 <a href="faq.html">FAQ</a>
 </li><li>
-<a href="http://luajit.org/performance.html">Performance <span class="ext">&raquo;</span></a>
-</li><li>
 <a href="http://wiki.luajit.org/">Wiki <span class="ext">&raquo;</span></a>
 </li><li>
-<a href="http://luajit.org/list.html">Mailing List <span class="ext">&raquo;</span></a>
+<a href="https://luajit.org/list.html">Mailing List <span class="ext">&raquo;</span></a>
 </li></ul>
 </div>
 <div id="main">
diff --git a/doc/ext_ffi_api.html b/doc/ext_ffi_api.html
index 40fc694b..9772aa5d 100644
--- a/doc/ext_ffi_api.html
+++ b/doc/ext_ffi_api.html
@@ -15,7 +15,7 @@ td.abiparam { font-weight: bold; width: 6em; }
 </head>
 <body>
 <div id="site">
-<a href="http://luajit.org"><span>Lua<span id="logo">JIT</span></span></a>
+<a href="https://luajit.org"><span>Lua<span id="logo">JIT</span></span></a>
 </div>
 <div id="head">
 <h1><tt>ffi.*</tt> API Functions</h1>
@@ -24,7 +24,7 @@ td.abiparam { font-weight: bold; width: 6em; }
 <ul><li>
 <a href="luajit.html">LuaJIT</a>
 <ul><li>
-<a href="http://luajit.org/download.html">Download <span class="ext">&raquo;</span></a>
+<a href="https://luajit.org/download.html">Download <span class="ext">&raquo;</span></a>
 </li><li>
 <a href="install.html">Installation</a>
 </li><li>
@@ -48,17 +48,12 @@ td.abiparam { font-weight: bold; width: 6em; }
 </li></ul>
 </li><li>
 <a href="status.html">Status</a>
-<ul><li>
-<a href="changes.html">Changes</a>
-</li></ul>
 </li><li>
 <a href="faq.html">FAQ</a>
 </li><li>
-<a href="http://luajit.org/performance.html">Performance <span class="ext">&raquo;</span></a>
-</li><li>
 <a href="http://wiki.luajit.org/">Wiki <span class="ext">&raquo;</span></a>
 </li><li>
-<a href="http://luajit.org/list.html">Mailing List <span class="ext">&raquo;</span></a>
+<a href="https://luajit.org/list.html">Mailing List <span class="ext">&raquo;</span></a>
 </li></ul>
 </div>
 <div id="main">
diff --git a/doc/ext_ffi_semantics.html b/doc/ext_ffi_semantics.html
index a21e5bd5..ce6313d7 100644
--- a/doc/ext_ffi_semantics.html
+++ b/doc/ext_ffi_semantics.html
@@ -15,7 +15,7 @@ td.convop { font-style: italic; width: 40%; }
 </head>
 <body>
 <div id="site">
-<a href="http://luajit.org"><span>Lua<span id="logo">JIT</span></span></a>
+<a href="https://luajit.org"><span>Lua<span id="logo">JIT</span></span></a>
 </div>
 <div id="head">
 <h1>FFI Semantics</h1>
@@ -24,7 +24,7 @@ td.convop { font-style: italic; width: 40%; }
 <ul><li>
 <a href="luajit.html">LuaJIT</a>
 <ul><li>
-<a href="http://luajit.org/download.html">Download <span class="ext">&raquo;</span></a>
+<a href="https://luajit.org/download.html">Download <span class="ext">&raquo;</span></a>
 </li><li>
 <a href="install.html">Installation</a>
 </li><li>
@@ -48,17 +48,12 @@ td.convop { font-style: italic; width: 40%; }
 </li></ul>
 </li><li>
 <a href="status.html">Status</a>
-<ul><li>
-<a href="changes.html">Changes</a>
-</li></ul>
 </li><li>
 <a href="faq.html">FAQ</a>
 </li><li>
-<a href="http://luajit.org/performance.html">Performance <span class="ext">&raquo;</span></a>
-</li><li>
 <a href="http://wiki.luajit.org/">Wiki <span class="ext">&raquo;</span></a>
 </li><li>
-<a href="http://luajit.org/list.html">Mailing List <span class="ext">&raquo;</span></a>
+<a href="https://luajit.org/list.html">Mailing List <span class="ext">&raquo;</span></a>
 </li></ul>
 </div>
 <div id="main">
diff --git a/doc/ext_ffi_tutorial.html b/doc/ext_ffi_tutorial.html
index 7ca14018..ae376b1f 100644
--- a/doc/ext_ffi_tutorial.html
+++ b/doc/ext_ffi_tutorial.html
@@ -17,7 +17,7 @@ td.idiomlua b { font-weight: normal; color: #2142bf; }
 </head>
 <body>
 <div id="site">
-<a href="http://luajit.org"><span>Lua<span id="logo">JIT</span></span></a>
+<a href="https://luajit.org"><span>Lua<span id="logo">JIT</span></span></a>
 </div>
 <div id="head">
 <h1>FFI Tutorial</h1>
@@ -26,7 +26,7 @@ td.idiomlua b { font-weight: normal; color: #2142bf; }
 <ul><li>
 <a href="luajit.html">LuaJIT</a>
 <ul><li>
-<a href="http://luajit.org/download.html">Download <span class="ext">&raquo;</span></a>
+<a href="https://luajit.org/download.html">Download <span class="ext">&raquo;</span></a>
 </li><li>
 <a href="install.html">Installation</a>
 </li><li>
@@ -50,17 +50,12 @@ td.idiomlua b { font-weight: normal; color: #2142bf; }
 </li></ul>
 </li><li>
 <a href="status.html">Status</a>
-<ul><li>
-<a href="changes.html">Changes</a>
-</li></ul>
 </li><li>
 <a href="faq.html">FAQ</a>
 </li><li>
-<a href="http://luajit.org/performance.html">Performance <span class="ext">&raquo;</span></a>
-</li><li>
 <a href="http://wiki.luajit.org/">Wiki <span class="ext">&raquo;</span></a>
 </li><li>
-<a href="http://luajit.org/list.html">Mailing List <span class="ext">&raquo;</span></a>
+<a href="https://luajit.org/list.html">Mailing List <span class="ext">&raquo;</span></a>
 </li></ul>
 </div>
 <div id="main">
@@ -219,7 +214,7 @@ a fascinating best-selling game is left as an exercise for the reader.
 <h2 id="zlib">Accessing the zlib Compression Library</h2>
 <p>
 The following code shows how to access the <a
-href="http://zlib.net/">zlib</a> compression library from Lua code.
+href="https://zlib.net/">zlib</a> compression library from Lua code.
 We'll define two convenience wrapper functions that take a string and
 compress or uncompress it to another string:
 </p>
@@ -302,7 +297,7 @@ comes pre-installed. Since <tt>ffi.load()</tt> automatically adds any
 missing standard prefixes/suffixes, we can simply load the
 <tt>"z"</tt> library. On Windows it's named <tt>zlib1.dll</tt> and
 you'll have to download it first from the
-<a href="http://zlib.net/"><span class="ext">&raquo;</span>&nbsp;zlib site</a>. The check for
+<a href="https://zlib.net/">zlib site</a>. The check for
 <tt>ffi.os</tt> makes sure we pass the right name to
 <tt>ffi.load()</tt>.
 </p>
diff --git a/doc/ext_jit.html b/doc/ext_jit.html
index 018b4396..c9fcb9cc 100644
--- a/doc/ext_jit.html
+++ b/doc/ext_jit.html
@@ -10,7 +10,7 @@
 </head>
 <body>
 <div id="site">
-<a href="http://luajit.org"><span>Lua<span id="logo">JIT</span></span></a>
+<a href="https://luajit.org"><span>Lua<span id="logo">JIT</span></span></a>
 </div>
 <div id="head">
 <h1><tt>jit.*</tt> Library</h1>
@@ -19,7 +19,7 @@
 <ul><li>
 <a href="luajit.html">LuaJIT</a>
 <ul><li>
-<a href="http://luajit.org/download.html">Download <span class="ext">&raquo;</span></a>
+<a href="https://luajit.org/download.html">Download <span class="ext">&raquo;</span></a>
 </li><li>
 <a href="install.html">Installation</a>
 </li><li>
@@ -43,17 +43,12 @@
 </li></ul>
 </li><li>
 <a href="status.html">Status</a>
-<ul><li>
-<a href="changes.html">Changes</a>
-</li></ul>
 </li><li>
 <a href="faq.html">FAQ</a>
 </li><li>
-<a href="http://luajit.org/performance.html">Performance <span class="ext">&raquo;</span></a>
-</li><li>
 <a href="http://wiki.luajit.org/">Wiki <span class="ext">&raquo;</span></a>
 </li><li>
-<a href="http://luajit.org/list.html">Mailing List <span class="ext">&raquo;</span></a>
+<a href="https://luajit.org/list.html">Mailing List <span class="ext">&raquo;</span></a>
 </li></ul>
 </div>
 <div id="main">
diff --git a/doc/extensions.html b/doc/extensions.html
index 25d2f7fd..b36e2855 100644
--- a/doc/extensions.html
+++ b/doc/extensions.html
@@ -27,7 +27,7 @@ td.excinterop {
 </head>
 <body>
 <div id="site">
-<a href="http://luajit.org"><span>Lua<span id="logo">JIT</span></span></a>
+<a href="https://luajit.org"><span>Lua<span id="logo">JIT</span></span></a>
 </div>
 <div id="head">
 <h1>Extensions</h1>
@@ -36,7 +36,7 @@ td.excinterop {
 <ul><li>
 <a href="luajit.html">LuaJIT</a>
 <ul><li>
-<a href="http://luajit.org/download.html">Download <span class="ext">&raquo;</span></a>
+<a href="https://luajit.org/download.html">Download <span class="ext">&raquo;</span></a>
 </li><li>
 <a href="install.html">Installation</a>
 </li><li>
@@ -60,25 +60,20 @@ td.excinterop {
 </li></ul>
 </li><li>
 <a href="status.html">Status</a>
-<ul><li>
-<a href="changes.html">Changes</a>
-</li></ul>
 </li><li>
 <a href="faq.html">FAQ</a>
 </li><li>
-<a href="http://luajit.org/performance.html">Performance <span class="ext">&raquo;</span></a>
-</li><li>
 <a href="http://wiki.luajit.org/">Wiki <span class="ext">&raquo;</span></a>
 </li><li>
-<a href="http://luajit.org/list.html">Mailing List <span class="ext">&raquo;</span></a>
+<a href="https://luajit.org/list.html">Mailing List <span class="ext">&raquo;</span></a>
 </li></ul>
 </div>
 <div id="main">
 <p>
 LuaJIT is fully upwards-compatible with Lua 5.1. It supports all
-<a href="http://www.lua.org/manual/5.1/manual.html#5"><span class="ext">&raquo;</span>&nbsp;standard Lua
+<a href="https://www.lua.org/manual/5.1/manual.html#5">standard Lua
 library functions</a> and the full set of
-<a href="http://www.lua.org/manual/5.1/manual.html#3"><span class="ext">&raquo;</span>&nbsp;Lua/C API
+<a href="https://www.lua.org/manual/5.1/manual.html#3">Lua/C API
 functions</a>.
 </p>
 <p>
@@ -102,7 +97,7 @@ LuaJIT comes with several built-in extension modules:
 <h3 id="bit"><tt>bit.*</tt> &mdash; Bitwise operations</h3>
 <p>
 LuaJIT supports all bitwise operations as defined by
-<a href="http://bitop.luajit.org"><span class="ext">&raquo;</span>&nbsp;Lua BitOp</a>:
+<a href="https://bitop.luajit.org">Lua BitOp</a>:
 </p>
 <pre class="code">
 bit.tobit  bit.tohex  bit.bnot    bit.band bit.bor  bit.bxor
@@ -111,7 +106,7 @@ bit.lshift bit.rshift bit.arshift bit.rol  bit.ror  bit.bswap
 <p>
 This module is a LuaJIT built-in &mdash; you don't need to download or
 install Lua BitOp. The Lua BitOp site has full documentation for all
-<a href="http://bitop.luajit.org/api.html"><span class="ext">&raquo;</span>&nbsp;Lua BitOp API functions</a>.
+<a href="https://bitop.luajit.org/api.html">Lua BitOp API functions</a>.
 </p>
 <p>
 Please make sure to <tt>require</tt> the module before using any of
diff --git a/doc/faq.html b/doc/faq.html
index be4d9f61..6208882b 100644
--- a/doc/faq.html
+++ b/doc/faq.html
@@ -13,7 +13,7 @@ dd { margin-left: 1.5em; }
 </head>
 <body>
 <div id="site">
-<a href="http://luajit.org"><span>Lua<span id="logo">JIT</span></span></a>
+<a href="https://luajit.org"><span>Lua<span id="logo">JIT</span></span></a>
 </div>
 <div id="head">
 <h1>Frequently Asked Questions (FAQ)</h1>
@@ -22,7 +22,7 @@ dd { margin-left: 1.5em; }
 <ul><li>
 <a href="luajit.html">LuaJIT</a>
 <ul><li>
-<a href="http://luajit.org/download.html">Download <span class="ext">&raquo;</span></a>
+<a href="https://luajit.org/download.html">Download <span class="ext">&raquo;</span></a>
 </li><li>
 <a href="install.html">Installation</a>
 </li><li>
@@ -46,17 +46,12 @@ dd { margin-left: 1.5em; }
 </li></ul>
 </li><li>
 <a href="status.html">Status</a>
-<ul><li>
-<a href="changes.html">Changes</a>
-</li></ul>
 </li><li>
 <a class="current" href="faq.html">FAQ</a>
 </li><li>
-<a href="http://luajit.org/performance.html">Performance <span class="ext">&raquo;</span></a>
-</li><li>
 <a href="http://wiki.luajit.org/">Wiki <span class="ext">&raquo;</span></a>
 </li><li>
-<a href="http://luajit.org/list.html">Mailing List <span class="ext">&raquo;</span></a>
+<a href="https://luajit.org/list.html">Mailing List <span class="ext">&raquo;</span></a>
 </li></ul>
 </div>
 <div id="main">
@@ -64,16 +59,16 @@ dd { margin-left: 1.5em; }
 <dt>Q: Where can I learn more about LuaJIT and Lua?</dt>
 <dd>
 <ul style="padding: 0;">
-<li>The <a href="http://luajit.org/list.html"><span class="ext">&raquo;</span>&nbsp;LuaJIT mailing list</a> focuses on topics
+<li>The <a href="https://luajit.org/list.html">LuaJIT mailing list</a> focuses on topics
 related to LuaJIT.</li>
 <li>The <a href="http://wiki.luajit.org/"><span class="ext">&raquo;</span>&nbsp;LuaJIT wiki</a> gathers community
 resources about LuaJIT.</li>
 <li>News about Lua itself can be found at the
-<a href="http://www.lua.org/lua-l.html"><span class="ext">&raquo;</span>&nbsp;Lua mailing list</a>.
+<a href="https://www.lua.org/lua-l.html">Lua mailing list</a>.
 The mailing list archives are worth checking out for older postings
 about LuaJIT.</li>
-<li>The <a href="http://lua.org"><span class="ext">&raquo;</span>&nbsp;main Lua.org site</a> has complete
-<a href="http://www.lua.org/docs.html"><span class="ext">&raquo;</span>&nbsp;documentation</a> of the language
+<li>The <a href="https://lua.org">main Lua.org site</a> has complete
+<a href="https://www.lua.org/docs.html">documentation</a> of the language
 and links to books and papers about Lua.</li>
 <li>The community-managed <a href="http://lua-users.org/wiki/"><span class="ext">&raquo;</span>&nbsp;Lua Wiki</a>
 has information about diverse topics.</li>
@@ -86,12 +81,12 @@ has information about diverse topics.</li>
 I'm planning to write more documentation about the internals of LuaJIT.
 In the meantime, please use the following Google Scholar searches
 to find relevant papers:<br>
-Search for: <a href="http://scholar.google.com/scholar?q=Trace+Compiler"><span class="ext">&raquo;</span>&nbsp;Trace Compiler</a><br>
-Search for: <a href="http://scholar.google.com/scholar?q=JIT+Compiler"><span class="ext">&raquo;</span>&nbsp;JIT Compiler</a><br>
-Search for: <a href="http://scholar.google.com/scholar?q=Dynamic+Language+Optimizations"><span class="ext">&raquo;</span>&nbsp;Dynamic Language Optimizations</a><br>
-Search for: <a href="http://scholar.google.com/scholar?q=SSA+Form"><span class="ext">&raquo;</span>&nbsp;SSA Form</a><br>
-Search for: <a href="http://scholar.google.com/scholar?q=Linear+Scan+Register+Allocation"><span class="ext">&raquo;</span>&nbsp;Linear Scan Register Allocation</a><br>
-Here is a list of the <a href="http://article.gmane.org/gmane.comp.lang.lua.general/58908"><span class="ext">&raquo;</span>&nbsp;innovative features in LuaJIT</a>.<br>
+Search for: <a href="https://scholar.google.com/scholar?q=Trace+Compiler">Trace Compiler</a><br>
+Search for: <a href="https://scholar.google.com/scholar?q=JIT+Compiler">JIT Compiler</a><br>
+Search for: <a href="https://scholar.google.com/scholar?q=Dynamic+Language+Optimizations">Dynamic Language Optimizations</a><br>
+Search for: <a href="https://scholar.google.com/scholar?q=SSA+Form">SSA Form</a><br>
+Search for: <a href="https://scholar.google.com/scholar?q=Linear+Scan+Register+Allocation">Linear Scan Register Allocation</a><br>
+Here is a list of the <a href="http://lua-users.org/lists/lua-l/2009-11/msg00089.html"><span class="ext">&raquo;</span>&nbsp;innovative features in LuaJIT</a>.<br>
 And, you know, reading the source is of course the only way to enlightenment. :-)
 </dd>
 </dl>
@@ -102,7 +97,7 @@ Q: My vararg functions fail after switching to LuaJIT!</dt>
 <dd>LuaJIT is compatible to the Lua 5.1 language standard. It doesn't
 support the implicit <tt>arg</tt> parameter for old-style vararg
 functions from Lua 5.0.<br>Please convert your code to the
-<a href="http://www.lua.org/manual/5.1/manual.html#2.5.9"><span class="ext">&raquo;</span>&nbsp;Lua 5.1
+<a href="https://www.lua.org/manual/5.1/manual.html#2.5.9">Lua 5.1
 vararg syntax</a>.</dd>
 </dl>
 
diff --git a/doc/install.html b/doc/install.html
index 68de0c10..60665360 100644
--- a/doc/install.html
+++ b/doc/install.html
@@ -38,7 +38,7 @@ td.compatno {
 </head>
 <body>
 <div id="site">
-<a href="http://luajit.org"><span>Lua<span id="logo">JIT</span></span></a>
+<a href="https://luajit.org"><span>Lua<span id="logo">JIT</span></span></a>
 </div>
 <div id="head">
 <h1>Installation</h1>
@@ -47,7 +47,7 @@ td.compatno {
 <ul><li>
 <a href="luajit.html">LuaJIT</a>
 <ul><li>
-<a href="http://luajit.org/download.html">Download <span class="ext">&raquo;</span></a>
+<a href="https://luajit.org/download.html">Download <span class="ext">&raquo;</span></a>
 </li><li>
 <a class="current" href="install.html">Installation</a>
 </li><li>
@@ -71,17 +71,12 @@ td.compatno {
 </li></ul>
 </li><li>
 <a href="status.html">Status</a>
-<ul><li>
-<a href="changes.html">Changes</a>
-</li></ul>
 </li><li>
 <a href="faq.html">FAQ</a>
 </li><li>
-<a href="http://luajit.org/performance.html">Performance <span class="ext">&raquo;</span></a>
-</li><li>
 <a href="http://wiki.luajit.org/">Wiki <span class="ext">&raquo;</span></a>
 </li><li>
-<a href="http://luajit.org/list.html">Mailing List <span class="ext">&raquo;</span></a>
+<a href="https://luajit.org/list.html">Mailing List <span class="ext">&raquo;</span></a>
 </li></ul>
 </div>
 <div id="main">
@@ -241,7 +236,7 @@ Obviously the prefixes given during build and installation need to be the same.
 <p>
 Either install one of the open source SDKs
 (<a href="http://mingw.org/"><span class="ext">&raquo;</span>&nbsp;MinGW</a> or
-<a href="http://www.cygwin.com/"><span class="ext">&raquo;</span>&nbsp;Cygwin</a>), which come with a modified
+<a href="https://www.cygwin.com/">Cygwin</a>), which come with a modified
 GCC plus the required development headers.
 Or install Microsoft's Visual Studio (MSVC).
 </p>
@@ -363,7 +358,7 @@ make HOST_CC="gcc -m32" CROSS=mips-linux-
 make HOST_CC="gcc -m32" CROSS=mipsel-linux-
 </pre>
 <p>
-You can cross-compile for <b id="android">Android</b> using the <a href="http://developer.android.com/ndk/"><span class="ext">&raquo;</span>&nbsp;Android NDK</a>.
+You can cross-compile for <b id="android">Android</b> using the <a href="https://developer.android.com/ndk/">Android NDK</a>.
 Please adapt the environment variables to match the install locations and the
 desired target platform. E.g. Android&nbsp;4.1 corresponds to ABI level&nbsp;16.
 </p>
@@ -493,7 +488,7 @@ Make sure the <tt>jit</tt> library is loaded or the JIT compiler
 will not be activated.</li>
 <li>The <tt>bit.*</tt> module for bitwise operations
 is already built-in. There's no need to statically link
-<a href="http://bitop.luajit.org/"><span class="ext">&raquo;</span>&nbsp;Lua BitOp</a> to your application.</li>
+<a href="https://bitop.luajit.org/">Lua BitOp</a> to your application.</li>
 </ul>
 
 <h2 id="distro">Hints for Distribution Maintainers</h2>
diff --git a/doc/luajit.html b/doc/luajit.html
index 3f360a93..c71831bb 100644
--- a/doc/luajit.html
+++ b/doc/luajit.html
@@ -95,7 +95,7 @@ table.feature small {
 </head>
 <body>
 <div id="site">
-<a href="http://luajit.org"><span>Lua<span id="logo">JIT</span></span></a>
+<a href="https://luajit.org"><span>Lua<span id="logo">JIT</span></span></a>
 </div>
 <div id="head">
 <h1>LuaJIT</h1>
@@ -104,7 +104,7 @@ table.feature small {
 <ul><li>
 <a class="current" href="luajit.html">LuaJIT</a>
 <ul><li>
-<a href="http://luajit.org/download.html">Download <span class="ext">&raquo;</span></a>
+<a href="https://luajit.org/download.html">Download <span class="ext">&raquo;</span></a>
 </li><li>
 <a href="install.html">Installation</a>
 </li><li>
@@ -128,29 +128,24 @@ table.feature small {
 </li></ul>
 </li><li>
 <a href="status.html">Status</a>
-<ul><li>
-<a href="changes.html">Changes</a>
-</li></ul>
 </li><li>
 <a href="faq.html">FAQ</a>
 </li><li>
-<a href="http://luajit.org/performance.html">Performance <span class="ext">&raquo;</span></a>
-</li><li>
 <a href="http://wiki.luajit.org/">Wiki <span class="ext">&raquo;</span></a>
 </li><li>
-<a href="http://luajit.org/list.html">Mailing List <span class="ext">&raquo;</span></a>
+<a href="https://luajit.org/list.html">Mailing List <span class="ext">&raquo;</span></a>
 </li></ul>
 </div>
 <div id="main">
 <p>
 LuaJIT is a <b>Just-In-Time Compiler</b> (JIT) for the
-<a href="http://www.lua.org/"><span class="ext">&raquo;</span>&nbsp;Lua</a> programming language.
+<a href="https://www.lua.org/">Lua</a> programming language.
 Lua is a powerful, dynamic and light-weight programming language.
 It may be embedded or used as a general-purpose, stand-alone language.
 </p>
 <p>
 LuaJIT is Copyright &copy; 2005-2020 Mike Pall, released under the
-<a href="http://www.opensource.org/licenses/mit-license.php"><span class="ext">&raquo;</span>&nbsp;MIT open source license</a>.
+<a href="https://www.opensource.org/licenses/mit-license.php">MIT open source license</a>.
 </p>
 <p>
 </p>
@@ -191,7 +186,7 @@ LuaJIT has been successfully used as a <b>scripting middleware</b> in
 games, appliances, network and graphics apps, numerical simulations,
 trading platforms and many other specialty applications. It scales from
 embedded devices, smartphones, desktops up to server farms. It combines
-high flexibility with <a href="http://luajit.org/performance.html"><span class="ext">&raquo;</span>&nbsp;high performance</a>
+high flexibility with high performance
 and an unmatched <b>low memory footprint</b>.
 </p>
 <p>
diff --git a/doc/running.html b/doc/running.html
index 5cfdcc5e..a8c71af0 100644
--- a/doc/running.html
+++ b/doc/running.html
@@ -32,7 +32,7 @@ td.param_default {
 </head>
 <body>
 <div id="site">
-<a href="http://luajit.org"><span>Lua<span id="logo">JIT</span></span></a>
+<a href="https://luajit.org"><span>Lua<span id="logo">JIT</span></span></a>
 </div>
 <div id="head">
 <h1>Running LuaJIT</h1>
@@ -41,7 +41,7 @@ td.param_default {
 <ul><li>
 <a href="luajit.html">LuaJIT</a>
 <ul><li>
-<a href="http://luajit.org/download.html">Download <span class="ext">&raquo;</span></a>
+<a href="https://luajit.org/download.html">Download <span class="ext">&raquo;</span></a>
 </li><li>
 <a href="install.html">Installation</a>
 </li><li>
@@ -65,17 +65,12 @@ td.param_default {
 </li></ul>
 </li><li>
 <a href="status.html">Status</a>
-<ul><li>
-<a href="changes.html">Changes</a>
-</li></ul>
 </li><li>
 <a href="faq.html">FAQ</a>
 </li><li>
-<a href="http://luajit.org/performance.html">Performance <span class="ext">&raquo;</span></a>
-</li><li>
 <a href="http://wiki.luajit.org/">Wiki <span class="ext">&raquo;</span></a>
 </li><li>
-<a href="http://luajit.org/list.html">Mailing List <span class="ext">&raquo;</span></a>
+<a href="https://luajit.org/list.html">Mailing List <span class="ext">&raquo;</span></a>
 </li></ul>
 </div>
 <div id="main">
@@ -92,7 +87,7 @@ The <tt>luajit</tt> stand-alone executable is just a slightly modified
 version of the regular <tt>lua</tt> stand-alone executable.
 It supports the same basic options, too. <tt>luajit&nbsp;-h</tt>
 prints a short list of the available options. Please have a look at the
-<a href="http://www.lua.org/manual/5.1/manual.html#6"><span class="ext">&raquo;</span>&nbsp;Lua manual</a>
+<a href="https://www.lua.org/manual/5.1/manual.html#6">Lua manual</a>
 for details.
 </p>
 <p>
diff --git a/doc/status.html b/doc/status.html
index 175f6a29..0d357613 100644
--- a/doc/status.html
+++ b/doc/status.html
@@ -13,7 +13,7 @@ ul li { padding-bottom: 0.3em; }
 </head>
 <body>
 <div id="site">
-<a href="http://luajit.org"><span>Lua<span id="logo">JIT</span></span></a>
+<a href="https://luajit.org"><span>Lua<span id="logo">JIT</span></span></a>
 </div>
 <div id="head">
 <h1>Status</h1>
@@ -22,7 +22,7 @@ ul li { padding-bottom: 0.3em; }
 <ul><li>
 <a href="luajit.html">LuaJIT</a>
 <ul><li>
-<a href="http://luajit.org/download.html">Download <span class="ext">&raquo;</span></a>
+<a href="https://luajit.org/download.html">Download <span class="ext">&raquo;</span></a>
 </li><li>
 <a href="install.html">Installation</a>
 </li><li>
@@ -46,17 +46,12 @@ ul li { padding-bottom: 0.3em; }
 </li></ul>
 </li><li>
 <a class="current" href="status.html">Status</a>
-<ul><li>
-<a href="changes.html">Changes</a>
-</li></ul>
 </li><li>
 <a href="faq.html">FAQ</a>
 </li><li>
-<a href="http://luajit.org/performance.html">Performance <span class="ext">&raquo;</span></a>
-</li><li>
 <a href="http://wiki.luajit.org/">Wiki <span class="ext">&raquo;</span></a>
 </li><li>
-<a href="http://luajit.org/list.html">Mailing List <span class="ext">&raquo;</span></a>
+<a href="https://luajit.org/list.html">Mailing List <span class="ext">&raquo;</span></a>
 </li></ul>
 </div>
 <div id="main">

commit 6d267ff6134e1c20e97cde9024e428a6d6fe0417
Merge: 694d69ae 18c9cf7d
Author: Mike Pall <mike>
Date:   Sat Jan 25 17:38:49 2020 +0100

    Merge branch 'master' into v2.1

commit 18c9cf7d3788a8f7408df45df92fc4ae3bcc0d80
Author: Mike Pall <mike>
Date:   Sat Jan 25 17:37:12 2020 +0100

    Fix POSIX install with missing or incompatible ldconfig.

diff --git a/Makefile b/Makefile
index 07bc70fa..bff53f28 100644
--- a/Makefile
+++ b/Makefile
@@ -74,7 +74,7 @@ SYMLINK= ln -sf
 INSTALL_X= install -m 0755
 INSTALL_F= install -m 0644
 UNINSTALL= $(RM)
-LDCONFIG= ldconfig -n
+LDCONFIG= ldconfig -n 2>/dev/null
 SED_PC= sed -e "s|^prefix=.*|prefix=$(PREFIX)|" \
             -e "s|^multilib=.*|multilib=$(MULTILIB)|"
 
@@ -118,7 +118,7 @@ install: $(INSTALL_DEP)
 	$(RM) $(INSTALL_TSYM) $(INSTALL_DYN) $(INSTALL_SHORT1) $(INSTALL_SHORT2)
 	cd src && test -f $(FILE_SO) && \
 	  $(INSTALL_X) $(FILE_SO) $(INSTALL_DYN) && \
-	  $(LDCONFIG) $(INSTALL_LIB) && \
+	  ( $(LDCONFIG) $(INSTALL_LIB) || : ) && \
 	  $(SYMLINK) $(INSTALL_SONAME) $(INSTALL_SHORT1) && \
 	  $(SYMLINK) $(INSTALL_SONAME) $(INSTALL_SHORT2) || :
 	cd etc && $(INSTALL_F) $(FILE_MAN) $(INSTALL_MAN)

commit 694d69aed910e524d4ad6ebbda7ac4e925c56202
Merge: 87b111f0 62903bac
Author: Mike Pall <mike>
Date:   Wed Jan 22 02:39:26 2020 +0100

    Merge branch 'master' into v2.1

commit 62903bacf4abbb1c6df0f395553eeaf1f68352c6
Author: Mike Pall <mike>
Date:   Wed Jan 22 02:37:21 2020 +0100

    Fix C file generation in jit.bcsave.
    
    Thanks to codicodi.

diff --git a/src/jit/bcsave.lua b/src/jit/bcsave.lua
index 6c6ba86e..58351c16 100644
--- a/src/jit/bcsave.lua
+++ b/src/jit/bcsave.lua
@@ -119,7 +119,7 @@ local function bcsave_c(ctx, output, s)
   local fp = savefile(output, "w")
   if ctx.type == "c" then
     fp:write(string.format([[
-#ifdef _cplusplus
+#ifdef __cplusplus
 extern "C"
 #endif
 #ifdef _WIN32

commit 87b111f0fe18788d38dbafd9d768d720f77f052b
Merge: 981ec8d2 38a5ed4b
Author: Mike Pall <mike>
Date:   Mon Jan 20 23:34:21 2020 +0100

    Merge branch 'master' into v2.1

commit 38a5ed4b434618662372c0c1665ed08782f5faa5
Author: Mike Pall <mike>
Date:   Mon Jan 20 23:26:51 2020 +0100

    Bump copyright date.

diff --git a/COPYRIGHT b/COPYRIGHT
index 6ed40025..44144197 100644
--- a/COPYRIGHT
+++ b/COPYRIGHT
@@ -1,7 +1,7 @@
 ===============================================================================
 LuaJIT -- a Just-In-Time Compiler for Lua. http://luajit.org/
 
-Copyright (C) 2005-2017 Mike Pall. All rights reserved.
+Copyright (C) 2005-2020 Mike Pall. All rights reserved.
 
 Permission is hereby granted, free of charge, to any person obtaining a copy
 of this software and associated documentation files (the "Software"), to deal
diff --git a/Makefile b/Makefile
index ecce9ec5..07bc70fa 100644
--- a/Makefile
+++ b/Makefile
@@ -10,7 +10,7 @@
 # For MSVC, please follow the instructions given in src/msvcbuild.bat.
 # For MinGW and Cygwin, cd to src and run make with the Makefile there.
 #
-# Copyright (C) 2005-2017 Mike Pall. See Copyright Notice in luajit.h
+# Copyright (C) 2005-2020 Mike Pall. See Copyright Notice in luajit.h
 ##############################################################################
 
 MAJVER=  2
diff --git a/README b/README
index 6cb7cebb..aa177ae2 100644
--- a/README
+++ b/README
@@ -5,7 +5,7 @@ LuaJIT is a Just-In-Time (JIT) compiler for the Lua programming language.
 
 Project Homepage: http://luajit.org/
 
-LuaJIT is Copyright (C) 2005-2017 Mike Pall.
+LuaJIT is Copyright (C) 2005-2020 Mike Pall.
 LuaJIT is free software, released under the MIT license.
 See full Copyright Notice in the COPYRIGHT file or in luajit.h.
 
diff --git a/doc/bluequad-print.css b/doc/bluequad-print.css
index d5a3ea3a..13ee876f 100644
--- a/doc/bluequad-print.css
+++ b/doc/bluequad-print.css
@@ -1,4 +1,4 @@
-/* Copyright (C) 2004-2018 Mike Pall.
+/* Copyright (C) 2004-2020 Mike Pall.
  *
  * You are welcome to use the general ideas of this design for your own sites.
  * But please do not steal the stylesheet, the layout or the color scheme.
diff --git a/doc/bluequad.css b/doc/bluequad.css
index cfc889af..978719e8 100644
--- a/doc/bluequad.css
+++ b/doc/bluequad.css
@@ -1,4 +1,4 @@
-/* Copyright (C) 2004-2018 Mike Pall.
+/* Copyright (C) 2004-2020 Mike Pall.
  *
  * You are welcome to use the general ideas of this design for your own sites.
  * But please do not steal the stylesheet, the layout or the color scheme.
diff --git a/doc/changes.html b/doc/changes.html
index c1848e8e..a20295f2 100644
--- a/doc/changes.html
+++ b/doc/changes.html
@@ -3,7 +3,7 @@
 <head>
 <title>LuaJIT Change History</title>
 <meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1">
-<meta name="Copyright" content="Copyright (C) 2005-2018">
+<meta name="Copyright" content="Copyright (C) 2005-2020">
 <meta name="Language" content="en">
 <link rel="stylesheet" type="text/css" href="bluequad.css" media="screen">
 <link rel="stylesheet" type="text/css" href="bluequad-print.css" media="print">
@@ -1009,7 +1009,7 @@ This is the initial non-public release of LuaJIT.
 </div>
 <div id="foot">
 <hr class="hide">
-Copyright &copy; 2005-2018
+Copyright &copy; 2005-2020
 <span class="noprint">
 &middot;
 <a href="contact.html">Contact</a>
diff --git a/doc/contact.html b/doc/contact.html
index 54ddf742..fbab370c 100644
--- a/doc/contact.html
+++ b/doc/contact.html
@@ -3,7 +3,7 @@
 <head>
 <title>Contact</title>
 <meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1">
-<meta name="Copyright" content="Copyright (C) 2005-2018">
+<meta name="Copyright" content="Copyright (C) 2005-2020">
 <meta name="Language" content="en">
 <link rel="stylesheet" type="text/css" href="bluequad.css" media="screen">
 <link rel="stylesheet" type="text/css" href="bluequad-print.css" media="print">
@@ -90,7 +90,7 @@ xD("fyZKB8xv\"FJytmz8.KAB0u52D")
 <h2>Copyright</h2>
 <p>
 All documentation is
-Copyright &copy; 2005-2018 Mike Pall.
+Copyright &copy; 2005-2020 Mike Pall.
 </p>
 
 
@@ -98,7 +98,7 @@ Copyright &copy; 2005-2018 Mike Pall.
 </div>
 <div id="foot">
 <hr class="hide">
-Copyright &copy; 2005-2018
+Copyright &copy; 2005-2020
 <span class="noprint">
 &middot;
 <a href="contact.html">Contact</a>
diff --git a/doc/ext_c_api.html b/doc/ext_c_api.html
index 38259566..88017ace 100644
--- a/doc/ext_c_api.html
+++ b/doc/ext_c_api.html
@@ -3,7 +3,7 @@
 <head>
 <title>Lua/C API Extensions</title>
 <meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1">
-<meta name="Copyright" content="Copyright (C) 2005-2018">
+<meta name="Copyright" content="Copyright (C) 2005-2020">
 <meta name="Language" content="en">
 <link rel="stylesheet" type="text/css" href="bluequad.css" media="screen">
 <link rel="stylesheet" type="text/css" href="bluequad-print.css" media="print">
@@ -176,7 +176,7 @@ Also note that this mechanism is not without overhead.
 </div>
 <div id="foot">
 <hr class="hide">
-Copyright &copy; 2005-2018
+Copyright &copy; 2005-2020
 <span class="noprint">
 &middot;
 <a href="contact.html">Contact</a>
diff --git a/doc/ext_ffi.html b/doc/ext_ffi.html
index 74ca2944..fe74a1d8 100644
--- a/doc/ext_ffi.html
+++ b/doc/ext_ffi.html
@@ -3,7 +3,7 @@
 <head>
 <title>FFI Library</title>
 <meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1">
-<meta name="Copyright" content="Copyright (C) 2005-2018">
+<meta name="Copyright" content="Copyright (C) 2005-2020">
 <meta name="Language" content="en">
 <link rel="stylesheet" type="text/css" href="bluequad.css" media="screen">
 <link rel="stylesheet" type="text/css" href="bluequad-print.css" media="print">
@@ -319,7 +319,7 @@ without undue conversion penalties.
 </div>
 <div id="foot">
 <hr class="hide">
-Copyright &copy; 2005-2018
+Copyright &copy; 2005-2020
 <span class="noprint">
 &middot;
 <a href="contact.html">Contact</a>
diff --git a/doc/ext_ffi_api.html b/doc/ext_ffi_api.html
index 10f2d022..40fc694b 100644
--- a/doc/ext_ffi_api.html
+++ b/doc/ext_ffi_api.html
@@ -3,7 +3,7 @@
 <head>
 <title>ffi.* API Functions</title>
 <meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1">
-<meta name="Copyright" content="Copyright (C) 2005-2018">
+<meta name="Copyright" content="Copyright (C) 2005-2020">
 <meta name="Language" content="en">
 <link rel="stylesheet" type="text/css" href="bluequad.css" media="screen">
 <link rel="stylesheet" type="text/css" href="bluequad-print.css" media="print">
@@ -555,7 +555,7 @@ named <tt>i</tt>.
 </div>
 <div id="foot">
 <hr class="hide">
-Copyright &copy; 2005-2018
+Copyright &copy; 2005-2020
 <span class="noprint">
 &middot;
 <a href="contact.html">Contact</a>
diff --git a/doc/ext_ffi_semantics.html b/doc/ext_ffi_semantics.html
index 218049d4..a21e5bd5 100644
--- a/doc/ext_ffi_semantics.html
+++ b/doc/ext_ffi_semantics.html
@@ -3,7 +3,7 @@
 <head>
 <title>FFI Semantics</title>
 <meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1">
-<meta name="Copyright" content="Copyright (C) 2005-2018">
+<meta name="Copyright" content="Copyright (C) 2005-2020">
 <meta name="Language" content="en">
 <link rel="stylesheet" type="text/css" href="bluequad.css" media="screen">
 <link rel="stylesheet" type="text/css" href="bluequad-print.css" media="print">
@@ -1234,7 +1234,7 @@ compiled.</li>
 </div>
 <div id="foot">
 <hr class="hide">
-Copyright &copy; 2005-2018
+Copyright &copy; 2005-2020
 <span class="noprint">
 &middot;
 <a href="contact.html">Contact</a>
diff --git a/doc/ext_ffi_tutorial.html b/doc/ext_ffi_tutorial.html
index cd455cf1..7ca14018 100644
--- a/doc/ext_ffi_tutorial.html
+++ b/doc/ext_ffi_tutorial.html
@@ -3,7 +3,7 @@
 <head>
 <title>FFI Tutorial</title>
 <meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1">
-<meta name="Copyright" content="Copyright (C) 2005-2018">
+<meta name="Copyright" content="Copyright (C) 2005-2020">
 <meta name="Language" content="en">
 <link rel="stylesheet" type="text/css" href="bluequad.css" media="screen">
 <link rel="stylesheet" type="text/css" href="bluequad-print.css" media="print">
@@ -590,7 +590,7 @@ it to a local variable in the function scope is unnecessary.
 </div>
 <div id="foot">
 <hr class="hide">
-Copyright &copy; 2005-2018
+Copyright &copy; 2005-2020
 <span class="noprint">
 &middot;
 <a href="contact.html">Contact</a>
diff --git a/doc/ext_jit.html b/doc/ext_jit.html
index ce6dcd61..018b4396 100644
--- a/doc/ext_jit.html
+++ b/doc/ext_jit.html
@@ -3,7 +3,7 @@
 <head>
 <title>jit.* Library</title>
 <meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1">
-<meta name="Copyright" content="Copyright (C) 2005-2018">
+<meta name="Copyright" content="Copyright (C) 2005-2020">
 <meta name="Language" content="en">
 <link rel="stylesheet" type="text/css" href="bluequad.css" media="screen">
 <link rel="stylesheet" type="text/css" href="bluequad-print.css" media="print">
@@ -188,7 +188,7 @@ if you want to know more.
 </div>
 <div id="foot">
 <hr class="hide">
-Copyright &copy; 2005-2018
+Copyright &copy; 2005-2020
 <span class="noprint">
 &middot;
 <a href="contact.html">Contact</a>
diff --git a/doc/extensions.html b/doc/extensions.html
index 9da38359..25d2f7fd 100644
--- a/doc/extensions.html
+++ b/doc/extensions.html
@@ -3,7 +3,7 @@
 <head>
 <title>Extensions</title>
 <meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1">
-<meta name="Copyright" content="Copyright (C) 2005-2018">
+<meta name="Copyright" content="Copyright (C) 2005-2020">
 <meta name="Language" content="en">
 <link rel="stylesheet" type="text/css" href="bluequad.css" media="screen">
 <link rel="stylesheet" type="text/css" href="bluequad-print.css" media="print">
@@ -401,7 +401,7 @@ lead to the termination of the process.</li>
 </div>
 <div id="foot">
 <hr class="hide">
-Copyright &copy; 2005-2018
+Copyright &copy; 2005-2020
 <span class="noprint">
 &middot;
 <a href="contact.html">Contact</a>
diff --git a/doc/faq.html b/doc/faq.html
index 9338be48..be4d9f61 100644
--- a/doc/faq.html
+++ b/doc/faq.html
@@ -3,7 +3,7 @@
 <head>
 <title>Frequently Asked Questions (FAQ)</title>
 <meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1">
-<meta name="Copyright" content="Copyright (C) 2005-2018">
+<meta name="Copyright" content="Copyright (C) 2005-2020">
 <meta name="Language" content="en">
 <link rel="stylesheet" type="text/css" href="bluequad.css" media="screen">
 <link rel="stylesheet" type="text/css" href="bluequad-print.css" media="print">
@@ -173,7 +173,7 @@ the development of certain features, if they are important to you.
 </div>
 <div id="foot">
 <hr class="hide">
-Copyright &copy; 2005-2018
+Copyright &copy; 2005-2020
 <span class="noprint">
 &middot;
 <a href="contact.html">Contact</a>
diff --git a/doc/install.html b/doc/install.html
index d6e099ed..68de0c10 100644
--- a/doc/install.html
+++ b/doc/install.html
@@ -3,7 +3,7 @@
 <head>
 <title>Installation</title>
 <meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1">
-<meta name="Copyright" content="Copyright (C) 2005-2018">
+<meta name="Copyright" content="Copyright (C) 2005-2020">
 <meta name="Language" content="en">
 <link rel="stylesheet" type="text/css" href="bluequad.css" media="screen">
 <link rel="stylesheet" type="text/css" href="bluequad-print.css" media="print">
@@ -560,7 +560,7 @@ to me (the upstream) and not you (the package maintainer), anyway.
 </div>
 <div id="foot">
 <hr class="hide">
-Copyright &copy; 2005-2018
+Copyright &copy; 2005-2020
 <span class="noprint">
 &middot;
 <a href="contact.html">Contact</a>
diff --git a/doc/luajit.html b/doc/luajit.html
index d8f531d5..3f360a93 100644
--- a/doc/luajit.html
+++ b/doc/luajit.html
@@ -3,7 +3,7 @@
 <head>
 <title>LuaJIT</title>
 <meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1">
-<meta name="Copyright" content="Copyright (C) 2005-2018">
+<meta name="Copyright" content="Copyright (C) 2005-2020">
 <meta name="Language" content="en">
 <link rel="stylesheet" type="text/css" href="bluequad.css" media="screen">
 <link rel="stylesheet" type="text/css" href="bluequad-print.css" media="print">
@@ -149,7 +149,7 @@ Lua is a powerful, dynamic and light-weight programming language.
 It may be embedded or used as a general-purpose, stand-alone language.
 </p>
 <p>
-LuaJIT is Copyright &copy; 2005-2018 Mike Pall, released under the
+LuaJIT is Copyright &copy; 2005-2020 Mike Pall, released under the
 <a href="http://www.opensource.org/licenses/mit-license.php"><span class="ext">&raquo;</span>&nbsp;MIT open source license</a>.
 </p>
 <p>
@@ -223,7 +223,7 @@ Please select a sub-topic in the navigation bar to learn more about LuaJIT.
 </div>
 <div id="foot">
 <hr class="hide">
-Copyright &copy; 2005-2018
+Copyright &copy; 2005-2020
 <span class="noprint">
 &middot;
 <a href="contact.html">Contact</a>
diff --git a/doc/running.html b/doc/running.html
index 08d7f710..5cfdcc5e 100644
--- a/doc/running.html
+++ b/doc/running.html
@@ -3,7 +3,7 @@
 <head>
 <title>Running LuaJIT</title>
 <meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1">
-<meta name="Copyright" content="Copyright (C) 2005-2018">
+<meta name="Copyright" content="Copyright (C) 2005-2020">
 <meta name="Language" content="en">
 <link rel="stylesheet" type="text/css" href="bluequad.css" media="screen">
 <link rel="stylesheet" type="text/css" href="bluequad-print.css" media="print">
@@ -295,7 +295,7 @@ Here are the parameters and their default settings:
 </div>
 <div id="foot">
 <hr class="hide">
-Copyright &copy; 2005-2018
+Copyright &copy; 2005-2020
 <span class="noprint">
 &middot;
 <a href="contact.html">Contact</a>
diff --git a/doc/status.html b/doc/status.html
index ea61db19..175f6a29 100644
--- a/doc/status.html
+++ b/doc/status.html
@@ -3,7 +3,7 @@
 <head>
 <title>Status</title>
 <meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1">
-<meta name="Copyright" content="Copyright (C) 2005-2018">
+<meta name="Copyright" content="Copyright (C) 2005-2020">
 <meta name="Language" content="en">
 <link rel="stylesheet" type="text/css" href="bluequad.css" media="screen">
 <link rel="stylesheet" type="text/css" href="bluequad-print.css" media="print">
@@ -99,7 +99,7 @@ garbage collector.
 </div>
 <div id="foot">
 <hr class="hide">
-Copyright &copy; 2005-2018
+Copyright &copy; 2005-2020
 <span class="noprint">
 &middot;
 <a href="contact.html">Contact</a>
diff --git a/dynasm/dasm_arm.h b/dynasm/dasm_arm.h
index 1d404ccd..b0df914e 100644
--- a/dynasm/dasm_arm.h
+++ b/dynasm/dasm_arm.h
@@ -1,6 +1,6 @@
 /*
 ** DynASM ARM encoding engine.
-** Copyright (C) 2005-2017 Mike Pall. All rights reserved.
+** Copyright (C) 2005-2020 Mike Pall. All rights reserved.
 ** Released under the MIT license. See dynasm.lua for full copyright notice.
 */
 
diff --git a/dynasm/dasm_arm.lua b/dynasm/dasm_arm.lua
index 9ece1d7f..21fb5022 100644
--- a/dynasm/dasm_arm.lua
+++ b/dynasm/dasm_arm.lua
@@ -1,7 +1,7 @@
 ------------------------------------------------------------------------------
 -- DynASM ARM module.
 --
--- Copyright (C) 2005-2017 Mike Pall. All rights reserved.
+-- Copyright (C) 2005-2020 Mike Pall. All rights reserved.
 -- See dynasm.lua for full copyright notice.
 ------------------------------------------------------------------------------
 
diff --git a/dynasm/dasm_mips.h b/dynasm/dasm_mips.h
index 46af0349..1b309edd 100644
--- a/dynasm/dasm_mips.h
+++ b/dynasm/dasm_mips.h
@@ -1,6 +1,6 @@
 /*
 ** DynASM MIPS encoding engine.
-** Copyright (C) 2005-2017 Mike Pall. All rights reserved.
+** Copyright (C) 2005-2020 Mike Pall. All rights reserved.
 ** Released under the MIT license. See dynasm.lua for full copyright notice.
 */
 
diff --git a/dynasm/dasm_mips.lua b/dynasm/dasm_mips.lua
index af530427..9ef280e3 100644
--- a/dynasm/dasm_mips.lua
+++ b/dynasm/dasm_mips.lua
@@ -1,7 +1,7 @@
 ------------------------------------------------------------------------------
 -- DynASM MIPS module.
 --
--- Copyright (C) 2005-2017 Mike Pall. All rights reserved.
+-- Copyright (C) 2005-2020 Mike Pall. All rights reserved.
 -- See dynasm.lua for full copyright notice.
 ------------------------------------------------------------------------------
 
diff --git a/dynasm/dasm_ppc.h b/dynasm/dasm_ppc.h
index 81b9a76b..699d5c31 100644
--- a/dynasm/dasm_ppc.h
+++ b/dynasm/dasm_ppc.h
@@ -1,6 +1,6 @@
 /*
 ** DynASM PPC encoding engine.
-** Copyright (C) 2005-2017 Mike Pall. All rights reserved.
+** Copyright (C) 2005-2020 Mike Pall. All rights reserved.
 ** Released under the MIT license. See dynasm.lua for full copyright notice.
 */
 
diff --git a/dynasm/dasm_ppc.lua b/dynasm/dasm_ppc.lua
index 77031fb2..05981760 100644
--- a/dynasm/dasm_ppc.lua
+++ b/dynasm/dasm_ppc.lua
@@ -1,7 +1,7 @@
 ------------------------------------------------------------------------------
 -- DynASM PPC module.
 --
--- Copyright (C) 2005-2017 Mike Pall. All rights reserved.
+-- Copyright (C) 2005-2020 Mike Pall. All rights reserved.
 -- See dynasm.lua for full copyright notice.
 ------------------------------------------------------------------------------
 
diff --git a/dynasm/dasm_proto.h b/dynasm/dasm_proto.h
index f5e79c7a..a7278e85 100644
--- a/dynasm/dasm_proto.h
+++ b/dynasm/dasm_proto.h
@@ -1,6 +1,6 @@
 /*
 ** DynASM encoding engine prototypes.
-** Copyright (C) 2005-2017 Mike Pall. All rights reserved.
+** Copyright (C) 2005-2020 Mike Pall. All rights reserved.
 ** Released under the MIT license. See dynasm.lua for full copyright notice.
 */
 
diff --git a/dynasm/dasm_x64.lua b/dynasm/dasm_x64.lua
index e8bdeb37..916d1d14 100644
--- a/dynasm/dasm_x64.lua
+++ b/dynasm/dasm_x64.lua
@@ -1,7 +1,7 @@
 ------------------------------------------------------------------------------
 -- DynASM x64 module.
 --
--- Copyright (C) 2005-2017 Mike Pall. All rights reserved.
+-- Copyright (C) 2005-2020 Mike Pall. All rights reserved.
 -- See dynasm.lua for full copyright notice.
 ------------------------------------------------------------------------------
 -- This module just sets 64 bit mode for the combined x86/x64 module.
diff --git a/dynasm/dasm_x86.h b/dynasm/dasm_x86.h
index 8ae911df..84b9d17f 100644
--- a/dynasm/dasm_x86.h
+++ b/dynasm/dasm_x86.h
@@ -1,6 +1,6 @@
 /*
 ** DynASM x86 encoding engine.
-** Copyright (C) 2005-2017 Mike Pall. All rights reserved.
+** Copyright (C) 2005-2020 Mike Pall. All rights reserved.
 ** Released under the MIT license. See dynasm.lua for full copyright notice.
 */
 
diff --git a/dynasm/dasm_x86.lua b/dynasm/dasm_x86.lua
index 21c20865..13aa68ff 100644
--- a/dynasm/dasm_x86.lua
+++ b/dynasm/dasm_x86.lua
@@ -1,7 +1,7 @@
 ------------------------------------------------------------------------------
 -- DynASM x86/x64 module.
 --
--- Copyright (C) 2005-2017 Mike Pall. All rights reserved.
+-- Copyright (C) 2005-2020 Mike Pall. All rights reserved.
 -- See dynasm.lua for full copyright notice.
 ------------------------------------------------------------------------------
 
diff --git a/dynasm/dynasm.lua b/dynasm/dynasm.lua
index c46e956e..5fda425b 100644
--- a/dynasm/dynasm.lua
+++ b/dynasm/dynasm.lua
@@ -2,7 +2,7 @@
 -- DynASM. A dynamic assembler for code generation engines.
 -- Originally designed and implemented for LuaJIT.
 --
--- Copyright (C) 2005-2017 Mike Pall. All rights reserved.
+-- Copyright (C) 2005-2020 Mike Pall. All rights reserved.
 -- See below for full copyright notice.
 ------------------------------------------------------------------------------
 
@@ -17,7 +17,7 @@ local _info = {
   url =		"http://luajit.org/dynasm.html",
   license =	"MIT",
   copyright =	[[
-Copyright (C) 2005-2017 Mike Pall. All rights reserved.
+Copyright (C) 2005-2020 Mike Pall. All rights reserved.
 
 Permission is hereby granted, free of charge, to any person obtaining
 a copy of this software and associated documentation files (the
diff --git a/etc/luajit.1 b/etc/luajit.1
index 0d263db7..2071c155 100644
--- a/etc/luajit.1
+++ b/etc/luajit.1
@@ -74,7 +74,7 @@ luajit \-jv \-e "for i=1,10 do for j=1,10 do for k=1,100 do end end end"
 Runs some nested loops and shows the resulting traces.
 .SH COPYRIGHT
 .PP
-\fBLuaJIT\fR is Copyright \(co 2005-2017 Mike Pall.
+\fBLuaJIT\fR is Copyright \(co 2005-2020 Mike Pall.
 .br
 \fBLuaJIT\fR is open source software, released under the MIT license.
 .SH SEE ALSO
diff --git a/src/Makefile b/src/Makefile
index cde4b9f7..a588dc3d 100644
--- a/src/Makefile
+++ b/src/Makefile
@@ -7,7 +7,7 @@
 # Also works with MinGW and Cygwin on Windows.
 # Please check msvcbuild.bat for building with MSVC on Windows.
 #
-# Copyright (C) 2005-2017 Mike Pall. See Copyright Notice in luajit.h
+# Copyright (C) 2005-2020 Mike Pall. See Copyright Notice in luajit.h
 ##############################################################################
 
 MAJVER=  2
diff --git a/src/host/buildvm.c b/src/host/buildvm.c
index b9560f31..05e0dbdb 100644
--- a/src/host/buildvm.c
+++ b/src/host/buildvm.c
@@ -1,6 +1,6 @@
 /*
 ** LuaJIT VM builder.
-** Copyright (C) 2005-2017 Mike Pall. See Copyright Notice in luajit.h
+** Copyright (C) 2005-2020 Mike Pall. See Copyright Notice in luajit.h
 **
 ** This is a tool to build the hand-tuned assembler code required for
 ** LuaJIT's bytecode interpreter. It supports a variety of output formats
diff --git a/src/host/buildvm.h b/src/host/buildvm.h
index e6dd3dcb..a440cfc3 100644
--- a/src/host/buildvm.h
+++ b/src/host/buildvm.h
@@ -1,6 +1,6 @@
 /*
 ** LuaJIT VM builder.
-** Copyright (C) 2005-2017 Mike Pall. See Copyright Notice in luajit.h
+** Copyright (C) 2005-2020 Mike Pall. See Copyright Notice in luajit.h
 */
 
 #ifndef _BUILDVM_H
diff --git a/src/host/buildvm_asm.c b/src/host/buildvm_asm.c
index 81a3969a..2cb7d451 100644
--- a/src/host/buildvm_asm.c
+++ b/src/host/buildvm_asm.c
@@ -1,6 +1,6 @@
 /*
 ** LuaJIT VM builder: Assembler source code emitter.
-** Copyright (C) 2005-2017 Mike Pall. See Copyright Notice in luajit.h
+** Copyright (C) 2005-2020 Mike Pall. See Copyright Notice in luajit.h
 */
 
 #include "buildvm.h"
diff --git a/src/host/buildvm_fold.c b/src/host/buildvm_fold.c
index d579f4d4..65e19e26 100644
--- a/src/host/buildvm_fold.c
+++ b/src/host/buildvm_fold.c
@@ -1,6 +1,6 @@
 /*
 ** LuaJIT VM builder: IR folding hash table generator.
-** Copyright (C) 2005-2017 Mike Pall. See Copyright Notice in luajit.h
+** Copyright (C) 2005-2020 Mike Pall. See Copyright Notice in luajit.h
 */
 
 #include "buildvm.h"
diff --git a/src/host/buildvm_lib.c b/src/host/buildvm_lib.c
index 569e2caf..3c64626c 100644
--- a/src/host/buildvm_lib.c
+++ b/src/host/buildvm_lib.c
@@ -1,6 +1,6 @@
 /*
 ** LuaJIT VM builder: library definition compiler.
-** Copyright (C) 2005-2017 Mike Pall. See Copyright Notice in luajit.h
+** Copyright (C) 2005-2020 Mike Pall. See Copyright Notice in luajit.h
 */
 
 #include "buildvm.h"
diff --git a/src/host/buildvm_peobj.c b/src/host/buildvm_peobj.c
index aab00d68..876b0add 100644
--- a/src/host/buildvm_peobj.c
+++ b/src/host/buildvm_peobj.c
@@ -1,6 +1,6 @@
 /*
 ** LuaJIT VM builder: PE object emitter.
-** Copyright (C) 2005-2017 Mike Pall. See Copyright Notice in luajit.h
+** Copyright (C) 2005-2020 Mike Pall. See Copyright Notice in luajit.h
 **
 ** Only used for building on Windows, since we cannot assume the presence
 ** of a suitable assembler. The host and target byte order must match.
diff --git a/src/host/genminilua.lua b/src/host/genminilua.lua
index 50feff01..c23e2365 100644
--- a/src/host/genminilua.lua
+++ b/src/host/genminilua.lua
@@ -2,7 +2,7 @@
 -- Lua script to generate a customized, minified version of Lua.
 -- The resulting 'minilua' is used for the build process of LuaJIT.
 ----------------------------------------------------------------------------
--- Copyright (C) 2005-2017 Mike Pall. All rights reserved.
+-- Copyright (C) 2005-2020 Mike Pall. All rights reserved.
 -- Released under the MIT license. See Copyright Notice in luajit.h
 ----------------------------------------------------------------------------
 
diff --git a/src/jit/bc.lua b/src/jit/bc.lua
index a2f84aaf..7ca4c61c 100644
--- a/src/jit/bc.lua
+++ b/src/jit/bc.lua
@@ -1,7 +1,7 @@
 ----------------------------------------------------------------------------
 -- LuaJIT bytecode listing module.
 --
--- Copyright (C) 2005-2017 Mike Pall. All rights reserved.
+-- Copyright (C) 2005-2020 Mike Pall. All rights reserved.
 -- Released under the MIT license. See Copyright Notice in luajit.h
 ----------------------------------------------------------------------------
 --
diff --git a/src/jit/bcsave.lua b/src/jit/bcsave.lua
index c94064e4..6c6ba86e 100644
--- a/src/jit/bcsave.lua
+++ b/src/jit/bcsave.lua
@@ -1,7 +1,7 @@
 ----------------------------------------------------------------------------
 -- LuaJIT module to save/list bytecode.
 --
--- Copyright (C) 2005-2017 Mike Pall. All rights reserved.
+-- Copyright (C) 2005-2020 Mike Pall. All rights reserved.
 -- Released under the MIT license. See Copyright Notice in luajit.h
 ----------------------------------------------------------------------------
 --
diff --git a/src/jit/dis_arm.lua b/src/jit/dis_arm.lua
index 91ebb7d5..152d91bb 100644
--- a/src/jit/dis_arm.lua
+++ b/src/jit/dis_arm.lua
@@ -1,7 +1,7 @@
 ----------------------------------------------------------------------------
 -- LuaJIT ARM disassembler module.
 --
--- Copyright (C) 2005-2017 Mike Pall. All rights reserved.
+-- Copyright (C) 2005-2020 Mike Pall. All rights reserved.
 -- Released under the MIT license. See Copyright Notice in luajit.h
 ----------------------------------------------------------------------------
 -- This is a helper module used by the LuaJIT machine code dumper module.
diff --git a/src/jit/dis_mips.lua b/src/jit/dis_mips.lua
index 02dfc172..c720b537 100644
--- a/src/jit/dis_mips.lua
+++ b/src/jit/dis_mips.lua
@@ -1,7 +1,7 @@
 ----------------------------------------------------------------------------
 -- LuaJIT MIPS disassembler module.
 --
--- Copyright (C) 2005-2017 Mike Pall. All rights reserved.
+-- Copyright (C) 2005-2020 Mike Pall. All rights reserved.
 -- Released under the MIT/X license. See Copyright Notice in luajit.h
 ----------------------------------------------------------------------------
 -- This is a helper module used by the LuaJIT machine code dumper module.
diff --git a/src/jit/dis_mipsel.lua b/src/jit/dis_mipsel.lua
index c9c2e245..a2d05690 100644
--- a/src/jit/dis_mipsel.lua
+++ b/src/jit/dis_mipsel.lua
@@ -1,7 +1,7 @@
 ----------------------------------------------------------------------------
 -- LuaJIT MIPSEL disassembler wrapper module.
 --
--- Copyright (C) 2005-2017 Mike Pall. All rights reserved.
+-- Copyright (C) 2005-2020 Mike Pall. All rights reserved.
 -- Released under the MIT license. See Copyright Notice in luajit.h
 ----------------------------------------------------------------------------
 -- This module just exports the little-endian functions from the
diff --git a/src/jit/dis_ppc.lua b/src/jit/dis_ppc.lua
index 4043aeb8..dfc6cbce 100644
--- a/src/jit/dis_ppc.lua
+++ b/src/jit/dis_ppc.lua
@@ -1,7 +1,7 @@
 ----------------------------------------------------------------------------
 -- LuaJIT PPC disassembler module.
 --
--- Copyright (C) 2005-2017 Mike Pall. All rights reserved.
+-- Copyright (C) 2005-2020 Mike Pall. All rights reserved.
 -- Released under the MIT/X license. See Copyright Notice in luajit.h
 ----------------------------------------------------------------------------
 -- This is a helper module used by the LuaJIT machine code dumper module.
diff --git a/src/jit/dis_x64.lua b/src/jit/dis_x64.lua
index 08918035..1027b5a1 100644
--- a/src/jit/dis_x64.lua
+++ b/src/jit/dis_x64.lua
@@ -1,7 +1,7 @@
 ----------------------------------------------------------------------------
 -- LuaJIT x64 disassembler wrapper module.
 --
--- Copyright (C) 2005-2017 Mike Pall. All rights reserved.
+-- Copyright (C) 2005-2020 Mike Pall. All rights reserved.
 -- Released under the MIT license. See Copyright Notice in luajit.h
 ----------------------------------------------------------------------------
 -- This module just exports the 64 bit functions from the combined
diff --git a/src/jit/dis_x86.lua b/src/jit/dis_x86.lua
index 74d0f529..9246820d 100644
--- a/src/jit/dis_x86.lua
+++ b/src/jit/dis_x86.lua
@@ -1,7 +1,7 @@
 ----------------------------------------------------------------------------
 -- LuaJIT x86/x64 disassembler module.
 --
--- Copyright (C) 2005-2017 Mike Pall. All rights reserved.
+-- Copyright (C) 2005-2020 Mike Pall. All rights reserved.
 -- Released under the MIT license. See Copyright Notice in luajit.h
 ----------------------------------------------------------------------------
 -- This is a helper module used by the LuaJIT machine code dumper module.
diff --git a/src/jit/dump.lua b/src/jit/dump.lua
index 666ba438..6a2632c3 100644
--- a/src/jit/dump.lua
+++ b/src/jit/dump.lua
@@ -1,7 +1,7 @@
 ----------------------------------------------------------------------------
 -- LuaJIT compiler dump module.
 --
--- Copyright (C) 2005-2017 Mike Pall. All rights reserved.
+-- Copyright (C) 2005-2020 Mike Pall. All rights reserved.
 -- Released under the MIT license. See Copyright Notice in luajit.h
 ----------------------------------------------------------------------------
 --
diff --git a/src/jit/v.lua b/src/jit/v.lua
index 47ee3941..9696f67f 100644
--- a/src/jit/v.lua
+++ b/src/jit/v.lua
@@ -1,7 +1,7 @@
 ----------------------------------------------------------------------------
 -- Verbose mode of the LuaJIT compiler.
 --
--- Copyright (C) 2005-2017 Mike Pall. All rights reserved.
+-- Copyright (C) 2005-2020 Mike Pall. All rights reserved.
 -- Released under the MIT license. See Copyright Notice in luajit.h
 ----------------------------------------------------------------------------
 --
diff --git a/src/lib_aux.c b/src/lib_aux.c
index 7af1cd43..f29ca848 100644
--- a/src/lib_aux.c
+++ b/src/lib_aux.c
@@ -1,6 +1,6 @@
 /*
 ** Auxiliary library for the Lua/C API.
-** Copyright (C) 2005-2017 Mike Pall. See Copyright Notice in luajit.h
+** Copyright (C) 2005-2020 Mike Pall. See Copyright Notice in luajit.h
 **
 ** Major parts taken verbatim or adapted from the Lua interpreter.
 ** Copyright (C) 1994-2008 Lua.org, PUC-Rio. See Copyright Notice in lua.h
diff --git a/src/lib_base.c b/src/lib_base.c
index 98ed3d60..dae61fe1 100644
--- a/src/lib_base.c
+++ b/src/lib_base.c
@@ -1,6 +1,6 @@
 /*
 ** Base and coroutine library.
-** Copyright (C) 2005-2017 Mike Pall. See Copyright Notice in luajit.h
+** Copyright (C) 2005-2020 Mike Pall. See Copyright Notice in luajit.h
 **
 ** Major portions taken verbatim or adapted from the Lua interpreter.
 ** Copyright (C) 1994-2011 Lua.org, PUC-Rio. See Copyright Notice in lua.h
diff --git a/src/lib_bit.c b/src/lib_bit.c
index 6dffdfac..c374d7a0 100644
--- a/src/lib_bit.c
+++ b/src/lib_bit.c
@@ -1,6 +1,6 @@
 /*
 ** Bit manipulation library.
-** Copyright (C) 2005-2017 Mike Pall. See Copyright Notice in luajit.h
+** Copyright (C) 2005-2020 Mike Pall. See Copyright Notice in luajit.h
 */
 
 #define lib_bit_c
diff --git a/src/lib_debug.c b/src/lib_debug.c
index 54c3b7e2..a485ff8e 100644
--- a/src/lib_debug.c
+++ b/src/lib_debug.c
@@ -1,6 +1,6 @@
 /*
 ** Debug library.
-** Copyright (C) 2005-2017 Mike Pall. See Copyright Notice in luajit.h
+** Copyright (C) 2005-2020 Mike Pall. See Copyright Notice in luajit.h
 **
 ** Major portions taken verbatim or adapted from the Lua interpreter.
 ** Copyright (C) 1994-2008 Lua.org, PUC-Rio. See Copyright Notice in lua.h
diff --git a/src/lib_ffi.c b/src/lib_ffi.c
index 83483d95..5851eea5 100644
--- a/src/lib_ffi.c
+++ b/src/lib_ffi.c
@@ -1,6 +1,6 @@
 /*
 ** FFI library.
-** Copyright (C) 2005-2017 Mike Pall. See Copyright Notice in luajit.h
+** Copyright (C) 2005-2020 Mike Pall. See Copyright Notice in luajit.h
 */
 
 #define lib_ffi_c
diff --git a/src/lib_init.c b/src/lib_init.c
index 2ed370e9..15ac3562 100644
--- a/src/lib_init.c
+++ b/src/lib_init.c
@@ -1,6 +1,6 @@
 /*
 ** Library initialization.
-** Copyright (C) 2005-2017 Mike Pall. See Copyright Notice in luajit.h
+** Copyright (C) 2005-2020 Mike Pall. See Copyright Notice in luajit.h
 **
 ** Major parts taken verbatim from the Lua interpreter.
 ** Copyright (C) 1994-2008 Lua.org, PUC-Rio. See Copyright Notice in lua.h
diff --git a/src/lib_io.c b/src/lib_io.c
index 9cdcfcfc..f13cf048 100644
--- a/src/lib_io.c
+++ b/src/lib_io.c
@@ -1,6 +1,6 @@
 /*
 ** I/O library.
-** Copyright (C) 2005-2017 Mike Pall. See Copyright Notice in luajit.h
+** Copyright (C) 2005-2020 Mike Pall. See Copyright Notice in luajit.h
 **
 ** Major portions taken verbatim or adapted from the Lua interpreter.
 ** Copyright (C) 1994-2011 Lua.org, PUC-Rio. See Copyright Notice in lua.h
diff --git a/src/lib_jit.c b/src/lib_jit.c
index d2fcf21b..6e98229e 100644
--- a/src/lib_jit.c
+++ b/src/lib_jit.c
@@ -1,6 +1,6 @@
 /*
 ** JIT library.
-** Copyright (C) 2005-2017 Mike Pall. See Copyright Notice in luajit.h
+** Copyright (C) 2005-2020 Mike Pall. See Copyright Notice in luajit.h
 */
 
 #define lib_jit_c
diff --git a/src/lib_math.c b/src/lib_math.c
index 4c708a47..9d324d7e 100644
--- a/src/lib_math.c
+++ b/src/lib_math.c
@@ -1,6 +1,6 @@
 /*
 ** Math library.
-** Copyright (C) 2005-2017 Mike Pall. See Copyright Notice in luajit.h
+** Copyright (C) 2005-2020 Mike Pall. See Copyright Notice in luajit.h
 */
 
 #include <math.h>
diff --git a/src/lib_os.c b/src/lib_os.c
index 8c96b86c..a8e1708f 100644
--- a/src/lib_os.c
+++ b/src/lib_os.c
@@ -1,6 +1,6 @@
 /*
 ** OS library.
-** Copyright (C) 2005-2017 Mike Pall. See Copyright Notice in luajit.h
+** Copyright (C) 2005-2020 Mike Pall. See Copyright Notice in luajit.h
 **
 ** Major portions taken verbatim or adapted from the Lua interpreter.
 ** Copyright (C) 1994-2008 Lua.org, PUC-Rio. See Copyright Notice in lua.h
diff --git a/src/lib_package.c b/src/lib_package.c
index 01b63d63..a8bdcf17 100644
--- a/src/lib_package.c
+++ b/src/lib_package.c
@@ -1,6 +1,6 @@
 /*
 ** Package library.
-** Copyright (C) 2005-2017 Mike Pall. See Copyright Notice in luajit.h
+** Copyright (C) 2005-2020 Mike Pall. See Copyright Notice in luajit.h
 **
 ** Major portions taken verbatim or adapted from the Lua interpreter.
 ** Copyright (C) 1994-2012 Lua.org, PUC-Rio. See Copyright Notice in lua.h
diff --git a/src/lib_string.c b/src/lib_string.c
index c1e595c9..d0b79160 100644
--- a/src/lib_string.c
+++ b/src/lib_string.c
@@ -1,6 +1,6 @@
 /*
 ** String library.
-** Copyright (C) 2005-2017 Mike Pall. See Copyright Notice in luajit.h
+** Copyright (C) 2005-2020 Mike Pall. See Copyright Notice in luajit.h
 **
 ** Major portions taken verbatim or adapted from the Lua interpreter.
 ** Copyright (C) 1994-2008 Lua.org, PUC-Rio. See Copyright Notice in lua.h
diff --git a/src/lib_table.c b/src/lib_table.c
index b2856ee2..9842513b 100644
--- a/src/lib_table.c
+++ b/src/lib_table.c
@@ -1,6 +1,6 @@
 /*
 ** Table library.
-** Copyright (C) 2005-2017 Mike Pall. See Copyright Notice in luajit.h
+** Copyright (C) 2005-2020 Mike Pall. See Copyright Notice in luajit.h
 **
 ** Major portions taken verbatim or adapted from the Lua interpreter.
 ** Copyright (C) 1994-2008 Lua.org, PUC-Rio. See Copyright Notice in lua.h
diff --git a/src/lj_api.c b/src/lj_api.c
index 7b0b3f9d..e2d7e533 100644
--- a/src/lj_api.c
+++ b/src/lj_api.c
@@ -1,6 +1,6 @@
 /*
 ** Public Lua/C API.
-** Copyright (C) 2005-2017 Mike Pall. See Copyright Notice in luajit.h
+** Copyright (C) 2005-2020 Mike Pall. See Copyright Notice in luajit.h
 **
 ** Major portions taken verbatim or adapted from the Lua interpreter.
 ** Copyright (C) 1994-2008 Lua.org, PUC-Rio. See Copyright Notice in lua.h
diff --git a/src/lj_arch.h b/src/lj_arch.h
index 5f7e4456..320ccf97 100644
--- a/src/lj_arch.h
+++ b/src/lj_arch.h
@@ -1,6 +1,6 @@
 /*
 ** Target architecture selection.
-** Copyright (C) 2005-2017 Mike Pall. See Copyright Notice in luajit.h
+** Copyright (C) 2005-2020 Mike Pall. See Copyright Notice in luajit.h
 */
 
 #ifndef _LJ_ARCH_H
diff --git a/src/lj_asm.c b/src/lj_asm.c
index e486b03c..9b17421e 100644
--- a/src/lj_asm.c
+++ b/src/lj_asm.c
@@ -1,6 +1,6 @@
 /*
 ** IR assembler (SSA IR -> machine code).
-** Copyright (C) 2005-2017 Mike Pall. See Copyright Notice in luajit.h
+** Copyright (C) 2005-2020 Mike Pall. See Copyright Notice in luajit.h
 */
 
 #define lj_asm_c
diff --git a/src/lj_asm.h b/src/lj_asm.h
index 2819481b..c7524da5 100644
--- a/src/lj_asm.h
+++ b/src/lj_asm.h
@@ -1,6 +1,6 @@
 /*
 ** IR assembler (SSA IR -> machine code).
-** Copyright (C) 2005-2017 Mike Pall. See Copyright Notice in luajit.h
+** Copyright (C) 2005-2020 Mike Pall. See Copyright Notice in luajit.h
 */
 
 #ifndef _LJ_ASM_H
diff --git a/src/lj_asm_arm.h b/src/lj_asm_arm.h
index ccd20545..087530b2 100644
--- a/src/lj_asm_arm.h
+++ b/src/lj_asm_arm.h
@@ -1,6 +1,6 @@
 /*
 ** ARM IR assembler (SSA IR -> machine code).
-** Copyright (C) 2005-2017 Mike Pall. See Copyright Notice in luajit.h
+** Copyright (C) 2005-2020 Mike Pall. See Copyright Notice in luajit.h
 */
 
 /* -- Register allocator extensions --------------------------------------- */
diff --git a/src/lj_asm_mips.h b/src/lj_asm_mips.h
index 76311903..190a55eb 100644
--- a/src/lj_asm_mips.h
+++ b/src/lj_asm_mips.h
@@ -1,6 +1,6 @@
 /*
 ** MIPS IR assembler (SSA IR -> machine code).
-** Copyright (C) 2005-2017 Mike Pall. See Copyright Notice in luajit.h
+** Copyright (C) 2005-2020 Mike Pall. See Copyright Notice in luajit.h
 */
 
 /* -- Register allocator extensions --------------------------------------- */
diff --git a/src/lj_asm_ppc.h b/src/lj_asm_ppc.h
index d8a14c83..dc092db2 100644
--- a/src/lj_asm_ppc.h
+++ b/src/lj_asm_ppc.h
@@ -1,6 +1,6 @@
 /*
 ** PPC IR assembler (SSA IR -> machine code).
-** Copyright (C) 2005-2017 Mike Pall. See Copyright Notice in luajit.h
+** Copyright (C) 2005-2020 Mike Pall. See Copyright Notice in luajit.h
 */
 
 /* -- Register allocator extensions --------------------------------------- */
diff --git a/src/lj_asm_x86.h b/src/lj_asm_x86.h
index 10468bb7..2c38d1ec 100644
--- a/src/lj_asm_x86.h
+++ b/src/lj_asm_x86.h
@@ -1,6 +1,6 @@
 /*
 ** x86/x64 IR assembler (SSA IR -> machine code).
-** Copyright (C) 2005-2017 Mike Pall. See Copyright Notice in luajit.h
+** Copyright (C) 2005-2020 Mike Pall. See Copyright Notice in luajit.h
 */
 
 /* -- Guard handling ------------------------------------------------------ */
diff --git a/src/lj_bc.c b/src/lj_bc.c
index a597692c..48ba041e 100644
--- a/src/lj_bc.c
+++ b/src/lj_bc.c
@@ -1,6 +1,6 @@
 /*
 ** Bytecode instruction modes.
-** Copyright (C) 2005-2017 Mike Pall. See Copyright Notice in luajit.h
+** Copyright (C) 2005-2020 Mike Pall. See Copyright Notice in luajit.h
 */
 
 #define lj_bc_c
diff --git a/src/lj_bc.h b/src/lj_bc.h
index 108c10f2..8fd7a2ed 100644
--- a/src/lj_bc.h
+++ b/src/lj_bc.h
@@ -1,6 +1,6 @@
 /*
 ** Bytecode instruction format.
-** Copyright (C) 2005-2017 Mike Pall. See Copyright Notice in luajit.h
+** Copyright (C) 2005-2020 Mike Pall. See Copyright Notice in luajit.h
 */
 
 #ifndef _LJ_BC_H
diff --git a/src/lj_bcdump.h b/src/lj_bcdump.h
index ba53c0a1..ad564619 100644
--- a/src/lj_bcdump.h
+++ b/src/lj_bcdump.h
@@ -1,6 +1,6 @@
 /*
 ** Bytecode dump definitions.
-** Copyright (C) 2005-2017 Mike Pall. See Copyright Notice in luajit.h
+** Copyright (C) 2005-2020 Mike Pall. See Copyright Notice in luajit.h
 */
 
 #ifndef _LJ_BCDUMP_H
diff --git a/src/lj_bcread.c b/src/lj_bcread.c
index 62695ef4..b88794eb 100644
--- a/src/lj_bcread.c
+++ b/src/lj_bcread.c
@@ -1,6 +1,6 @@
 /*
 ** Bytecode reader.
-** Copyright (C) 2005-2017 Mike Pall. See Copyright Notice in luajit.h
+** Copyright (C) 2005-2020 Mike Pall. See Copyright Notice in luajit.h
 */
 
 #define lj_bcread_c
diff --git a/src/lj_bcwrite.c b/src/lj_bcwrite.c
index 171a8d6d..f57fcfd6 100644
--- a/src/lj_bcwrite.c
+++ b/src/lj_bcwrite.c
@@ -1,6 +1,6 @@
 /*
 ** Bytecode writer.
-** Copyright (C) 2005-2017 Mike Pall. See Copyright Notice in luajit.h
+** Copyright (C) 2005-2020 Mike Pall. See Copyright Notice in luajit.h
 */
 
 #define lj_bcwrite_c
diff --git a/src/lj_carith.c b/src/lj_carith.c
index c34596ca..b33b1f36 100644
--- a/src/lj_carith.c
+++ b/src/lj_carith.c
@@ -1,6 +1,6 @@
 /*
 ** C data arithmetic.
-** Copyright (C) 2005-2017 Mike Pall. See Copyright Notice in luajit.h
+** Copyright (C) 2005-2020 Mike Pall. See Copyright Notice in luajit.h
 */
 
 #include "lj_obj.h"
diff --git a/src/lj_carith.h b/src/lj_carith.h
index 82fc8245..bac3e1a4 100644
--- a/src/lj_carith.h
+++ b/src/lj_carith.h
@@ -1,6 +1,6 @@
 /*
 ** C data arithmetic.
-** Copyright (C) 2005-2017 Mike Pall. See Copyright Notice in luajit.h
+** Copyright (C) 2005-2020 Mike Pall. See Copyright Notice in luajit.h
 */
 
 #ifndef _LJ_CARITH_H
diff --git a/src/lj_ccall.c b/src/lj_ccall.c
index 65076e77..fe1e0a3a 100644
--- a/src/lj_ccall.c
+++ b/src/lj_ccall.c
@@ -1,6 +1,6 @@
 /*
 ** FFI C call handling.
-** Copyright (C) 2005-2017 Mike Pall. See Copyright Notice in luajit.h
+** Copyright (C) 2005-2020 Mike Pall. See Copyright Notice in luajit.h
 */
 
 #include "lj_obj.h"
diff --git a/src/lj_ccall.h b/src/lj_ccall.h
index 9089e6c7..5f6d5101 100644
--- a/src/lj_ccall.h
+++ b/src/lj_ccall.h
@@ -1,6 +1,6 @@
 /*
 ** FFI C call handling.
-** Copyright (C) 2005-2017 Mike Pall. See Copyright Notice in luajit.h
+** Copyright (C) 2005-2020 Mike Pall. See Copyright Notice in luajit.h
 */
 
 #ifndef _LJ_CCALL_H
diff --git a/src/lj_ccallback.c b/src/lj_ccallback.c
index 06a74019..26377f82 100644
--- a/src/lj_ccallback.c
+++ b/src/lj_ccallback.c
@@ -1,6 +1,6 @@
 /*
 ** FFI C callback handling.
-** Copyright (C) 2005-2017 Mike Pall. See Copyright Notice in luajit.h
+** Copyright (C) 2005-2020 Mike Pall. See Copyright Notice in luajit.h
 */
 
 #include "lj_obj.h"
diff --git a/src/lj_ccallback.h b/src/lj_ccallback.h
index a8cdad38..29eb462b 100644
--- a/src/lj_ccallback.h
+++ b/src/lj_ccallback.h
@@ -1,6 +1,6 @@
 /*
 ** FFI C callback handling.
-** Copyright (C) 2005-2017 Mike Pall. See Copyright Notice in luajit.h
+** Copyright (C) 2005-2020 Mike Pall. See Copyright Notice in luajit.h
 */
 
 #ifndef _LJ_CCALLBACK_H
diff --git a/src/lj_cconv.c b/src/lj_cconv.c
index ab398adc..99776b0e 100644
--- a/src/lj_cconv.c
+++ b/src/lj_cconv.c
@@ -1,6 +1,6 @@
 /*
 ** C type conversions.
-** Copyright (C) 2005-2017 Mike Pall. See Copyright Notice in luajit.h
+** Copyright (C) 2005-2020 Mike Pall. See Copyright Notice in luajit.h
 */
 
 #include "lj_obj.h"
diff --git a/src/lj_cconv.h b/src/lj_cconv.h
index 0a0b66c9..2fd5a71c 100644
--- a/src/lj_cconv.h
+++ b/src/lj_cconv.h
@@ -1,6 +1,6 @@
 /*
 ** C type conversions.
-** Copyright (C) 2005-2017 Mike Pall. See Copyright Notice in luajit.h
+** Copyright (C) 2005-2020 Mike Pall. See Copyright Notice in luajit.h
 */
 
 #ifndef _LJ_CCONV_H
diff --git a/src/lj_cdata.c b/src/lj_cdata.c
index 49b1aa50..4aeb0ce3 100644
--- a/src/lj_cdata.c
+++ b/src/lj_cdata.c
@@ -1,6 +1,6 @@
 /*
 ** C data management.
-** Copyright (C) 2005-2017 Mike Pall. See Copyright Notice in luajit.h
+** Copyright (C) 2005-2020 Mike Pall. See Copyright Notice in luajit.h
 */
 
 #include "lj_obj.h"
diff --git a/src/lj_cdata.h b/src/lj_cdata.h
index 4bb65db2..2ce90bdf 100644
--- a/src/lj_cdata.h
+++ b/src/lj_cdata.h
@@ -1,6 +1,6 @@
 /*
 ** C data management.
-** Copyright (C) 2005-2017 Mike Pall. See Copyright Notice in luajit.h
+** Copyright (C) 2005-2020 Mike Pall. See Copyright Notice in luajit.h
 */
 
 #ifndef _LJ_CDATA_H
diff --git a/src/lj_clib.c b/src/lj_clib.c
index 41a8738e..df20aca3 100644
--- a/src/lj_clib.c
+++ b/src/lj_clib.c
@@ -1,6 +1,6 @@
 /*
 ** FFI C library loader.
-** Copyright (C) 2005-2017 Mike Pall. See Copyright Notice in luajit.h
+** Copyright (C) 2005-2020 Mike Pall. See Copyright Notice in luajit.h
 */
 
 #include "lj_obj.h"
diff --git a/src/lj_clib.h b/src/lj_clib.h
index fcc9dac5..afaaa458 100644
--- a/src/lj_clib.h
+++ b/src/lj_clib.h
@@ -1,6 +1,6 @@
 /*
 ** FFI C library loader.
-** Copyright (C) 2005-2017 Mike Pall. See Copyright Notice in luajit.h
+** Copyright (C) 2005-2020 Mike Pall. See Copyright Notice in luajit.h
 */
 
 #ifndef _LJ_CLIB_H
diff --git a/src/lj_cparse.c b/src/lj_cparse.c
index f111537d..50bb76ad 100644
--- a/src/lj_cparse.c
+++ b/src/lj_cparse.c
@@ -1,6 +1,6 @@
 /*
 ** C declaration parser.
-** Copyright (C) 2005-2017 Mike Pall. See Copyright Notice in luajit.h
+** Copyright (C) 2005-2020 Mike Pall. See Copyright Notice in luajit.h
 */
 
 #include "lj_obj.h"
diff --git a/src/lj_cparse.h b/src/lj_cparse.h
index bad1060b..87eb3ff4 100644
--- a/src/lj_cparse.h
+++ b/src/lj_cparse.h
@@ -1,6 +1,6 @@
 /*
 ** C declaration parser.
-** Copyright (C) 2005-2017 Mike Pall. See Copyright Notice in luajit.h
+** Copyright (C) 2005-2020 Mike Pall. See Copyright Notice in luajit.h
 */
 
 #ifndef _LJ_CPARSE_H
diff --git a/src/lj_crecord.c b/src/lj_crecord.c
index bc88d635..99344b79 100644
--- a/src/lj_crecord.c
+++ b/src/lj_crecord.c
@@ -1,6 +1,6 @@
 /*
 ** Trace recorder for C data operations.
-** Copyright (C) 2005-2017 Mike Pall. See Copyright Notice in luajit.h
+** Copyright (C) 2005-2020 Mike Pall. See Copyright Notice in luajit.h
 */
 
 #define lj_ffrecord_c
diff --git a/src/lj_crecord.h b/src/lj_crecord.h
index 8e0afd18..941c8adb 100644
--- a/src/lj_crecord.h
+++ b/src/lj_crecord.h
@@ -1,6 +1,6 @@
 /*
 ** Trace recorder for C data operations.
-** Copyright (C) 2005-2017 Mike Pall. See Copyright Notice in luajit.h
+** Copyright (C) 2005-2020 Mike Pall. See Copyright Notice in luajit.h
 */
 
 #ifndef _LJ_CRECORD_H
diff --git a/src/lj_ctype.c b/src/lj_ctype.c
index 9417500c..a338e8e6 100644
--- a/src/lj_ctype.c
+++ b/src/lj_ctype.c
@@ -1,6 +1,6 @@
 /*
 ** C type management.
-** Copyright (C) 2005-2017 Mike Pall. See Copyright Notice in luajit.h
+** Copyright (C) 2005-2020 Mike Pall. See Copyright Notice in luajit.h
 */
 
 #include "lj_obj.h"
diff --git a/src/lj_ctype.h b/src/lj_ctype.h
index 2aefd3b6..8066214f 100644
--- a/src/lj_ctype.h
+++ b/src/lj_ctype.h
@@ -1,6 +1,6 @@
 /*
 ** C type management.
-** Copyright (C) 2005-2017 Mike Pall. See Copyright Notice in luajit.h
+** Copyright (C) 2005-2020 Mike Pall. See Copyright Notice in luajit.h
 */
 
 #ifndef _LJ_CTYPE_H
diff --git a/src/lj_debug.c b/src/lj_debug.c
index 7222e2ac..04fecfaf 100644
--- a/src/lj_debug.c
+++ b/src/lj_debug.c
@@ -1,6 +1,6 @@
 /*
 ** Debugging and introspection.
-** Copyright (C) 2005-2017 Mike Pall. See Copyright Notice in luajit.h
+** Copyright (C) 2005-2020 Mike Pall. See Copyright Notice in luajit.h
 */
 
 #define lj_debug_c
diff --git a/src/lj_debug.h b/src/lj_debug.h
index d10d0da2..75ea927c 100644
--- a/src/lj_debug.h
+++ b/src/lj_debug.h
@@ -1,6 +1,6 @@
 /*
 ** Debugging and introspection.
-** Copyright (C) 2005-2017 Mike Pall. See Copyright Notice in luajit.h
+** Copyright (C) 2005-2020 Mike Pall. See Copyright Notice in luajit.h
 */
 
 #ifndef _LJ_DEBUG_H
diff --git a/src/lj_def.h b/src/lj_def.h
index e9249e0d..b5e26d69 100644
--- a/src/lj_def.h
+++ b/src/lj_def.h
@@ -1,6 +1,6 @@
 /*
 ** LuaJIT common internal definitions.
-** Copyright (C) 2005-2017 Mike Pall. See Copyright Notice in luajit.h
+** Copyright (C) 2005-2020 Mike Pall. See Copyright Notice in luajit.h
 */
 
 #ifndef _LJ_DEF_H
diff --git a/src/lj_dispatch.c b/src/lj_dispatch.c
index 627379a2..644e9028 100644
--- a/src/lj_dispatch.c
+++ b/src/lj_dispatch.c
@@ -1,6 +1,6 @@
 /*
 ** Instruction dispatch handling.
-** Copyright (C) 2005-2017 Mike Pall. See Copyright Notice in luajit.h
+** Copyright (C) 2005-2020 Mike Pall. See Copyright Notice in luajit.h
 */
 
 #define lj_dispatch_c
diff --git a/src/lj_dispatch.h b/src/lj_dispatch.h
index e46a0eee..17bf93da 100644
--- a/src/lj_dispatch.h
+++ b/src/lj_dispatch.h
@@ -1,6 +1,6 @@
 /*
 ** Instruction dispatch handling.
-** Copyright (C) 2005-2017 Mike Pall. See Copyright Notice in luajit.h
+** Copyright (C) 2005-2020 Mike Pall. See Copyright Notice in luajit.h
 */
 
 #ifndef _LJ_DISPATCH_H
diff --git a/src/lj_emit_arm.h b/src/lj_emit_arm.h
index 285c98de..6a136e51 100644
--- a/src/lj_emit_arm.h
+++ b/src/lj_emit_arm.h
@@ -1,6 +1,6 @@
 /*
 ** ARM instruction emitter.
-** Copyright (C) 2005-2017 Mike Pall. See Copyright Notice in luajit.h
+** Copyright (C) 2005-2020 Mike Pall. See Copyright Notice in luajit.h
 */
 
 /* -- Constant encoding --------------------------------------------------- */
diff --git a/src/lj_emit_mips.h b/src/lj_emit_mips.h
index ed62608a..f3dcd1dd 100644
--- a/src/lj_emit_mips.h
+++ b/src/lj_emit_mips.h
@@ -1,6 +1,6 @@
 /*
 ** MIPS instruction emitter.
-** Copyright (C) 2005-2017 Mike Pall. See Copyright Notice in luajit.h
+** Copyright (C) 2005-2020 Mike Pall. See Copyright Notice in luajit.h
 */
 
 /* -- Emit basic instructions --------------------------------------------- */
diff --git a/src/lj_emit_ppc.h b/src/lj_emit_ppc.h
index 14099302..e993d294 100644
--- a/src/lj_emit_ppc.h
+++ b/src/lj_emit_ppc.h
@@ -1,6 +1,6 @@
 /*
 ** PPC instruction emitter.
-** Copyright (C) 2005-2017 Mike Pall. See Copyright Notice in luajit.h
+** Copyright (C) 2005-2020 Mike Pall. See Copyright Notice in luajit.h
 */
 
 /* -- Emit basic instructions --------------------------------------------- */
diff --git a/src/lj_emit_x86.h b/src/lj_emit_x86.h
index 9c371a95..7bbc695b 100644
--- a/src/lj_emit_x86.h
+++ b/src/lj_emit_x86.h
@@ -1,6 +1,6 @@
 /*
 ** x86/x64 instruction emitter.
-** Copyright (C) 2005-2017 Mike Pall. See Copyright Notice in luajit.h
+** Copyright (C) 2005-2020 Mike Pall. See Copyright Notice in luajit.h
 */
 
 /* -- Emit basic instructions --------------------------------------------- */
diff --git a/src/lj_err.c b/src/lj_err.c
index 6619ad79..caa7487f 100644
--- a/src/lj_err.c
+++ b/src/lj_err.c
@@ -1,6 +1,6 @@
 /*
 ** Error handling.
-** Copyright (C) 2005-2017 Mike Pall. See Copyright Notice in luajit.h
+** Copyright (C) 2005-2020 Mike Pall. See Copyright Notice in luajit.h
 */
 
 #define lj_err_c
diff --git a/src/lj_err.h b/src/lj_err.h
index cba5fb71..ed148d79 100644
--- a/src/lj_err.h
+++ b/src/lj_err.h
@@ -1,6 +1,6 @@
 /*
 ** Error handling.
-** Copyright (C) 2005-2017 Mike Pall. See Copyright Notice in luajit.h
+** Copyright (C) 2005-2020 Mike Pall. See Copyright Notice in luajit.h
 */
 
 #ifndef _LJ_ERR_H
diff --git a/src/lj_errmsg.h b/src/lj_errmsg.h
index ac552f40..35b5edd5 100644
--- a/src/lj_errmsg.h
+++ b/src/lj_errmsg.h
@@ -1,6 +1,6 @@
 /*
 ** VM error messages.
-** Copyright (C) 2005-2017 Mike Pall. See Copyright Notice in luajit.h
+** Copyright (C) 2005-2020 Mike Pall. See Copyright Notice in luajit.h
 */
 
 /* This file may be included multiple times with different ERRDEF macros. */
diff --git a/src/lj_ff.h b/src/lj_ff.h
index 31d65a00..7d9a5851 100644
--- a/src/lj_ff.h
+++ b/src/lj_ff.h
@@ -1,6 +1,6 @@
 /*
 ** Fast function IDs.
-** Copyright (C) 2005-2017 Mike Pall. See Copyright Notice in luajit.h
+** Copyright (C) 2005-2020 Mike Pall. See Copyright Notice in luajit.h
 */
 
 #ifndef _LJ_FF_H
diff --git a/src/lj_ffrecord.c b/src/lj_ffrecord.c
index da09dca5..1d428590 100644
--- a/src/lj_ffrecord.c
+++ b/src/lj_ffrecord.c
@@ -1,6 +1,6 @@
 /*
 ** Fast function call recorder.
-** Copyright (C) 2005-2017 Mike Pall. See Copyright Notice in luajit.h
+** Copyright (C) 2005-2020 Mike Pall. See Copyright Notice in luajit.h
 */
 
 #define lj_ffrecord_c
diff --git a/src/lj_ffrecord.h b/src/lj_ffrecord.h
index 3b407450..9216519a 100644
--- a/src/lj_ffrecord.h
+++ b/src/lj_ffrecord.h
@@ -1,6 +1,6 @@
 /*
 ** Fast function call recorder.
-** Copyright (C) 2005-2017 Mike Pall. See Copyright Notice in luajit.h
+** Copyright (C) 2005-2020 Mike Pall. See Copyright Notice in luajit.h
 */
 
 #ifndef _LJ_FFRECORD_H
diff --git a/src/lj_frame.h b/src/lj_frame.h
index eb5df307..e78a28a5 100644
--- a/src/lj_frame.h
+++ b/src/lj_frame.h
@@ -1,6 +1,6 @@
 /*
 ** Stack frames.
-** Copyright (C) 2005-2017 Mike Pall. See Copyright Notice in luajit.h
+** Copyright (C) 2005-2020 Mike Pall. See Copyright Notice in luajit.h
 */
 
 #ifndef _LJ_FRAME_H
diff --git a/src/lj_func.c b/src/lj_func.c
index 639dad87..9afdb638 100644
--- a/src/lj_func.c
+++ b/src/lj_func.c
@@ -1,6 +1,6 @@
 /*
 ** Function handling (prototypes, functions and upvalues).
-** Copyright (C) 2005-2017 Mike Pall. See Copyright Notice in luajit.h
+** Copyright (C) 2005-2020 Mike Pall. See Copyright Notice in luajit.h
 **
 ** Portions taken verbatim or adapted from the Lua interpreter.
 ** Copyright (C) 1994-2008 Lua.org, PUC-Rio. See Copyright Notice in lua.h
diff --git a/src/lj_func.h b/src/lj_func.h
index 901751b9..24d8ef31 100644
--- a/src/lj_func.h
+++ b/src/lj_func.h
@@ -1,6 +1,6 @@
 /*
 ** Function handling (prototypes, functions and upvalues).
-** Copyright (C) 2005-2017 Mike Pall. See Copyright Notice in luajit.h
+** Copyright (C) 2005-2020 Mike Pall. See Copyright Notice in luajit.h
 */
 
 #ifndef _LJ_FUNC_H
diff --git a/src/lj_gc.c b/src/lj_gc.c
index a5d32ea3..86fcd6eb 100644
--- a/src/lj_gc.c
+++ b/src/lj_gc.c
@@ -1,6 +1,6 @@
 /*
 ** Garbage collector.
-** Copyright (C) 2005-2017 Mike Pall. See Copyright Notice in luajit.h
+** Copyright (C) 2005-2020 Mike Pall. See Copyright Notice in luajit.h
 **
 ** Major portions taken verbatim or adapted from the Lua interpreter.
 ** Copyright (C) 1994-2008 Lua.org, PUC-Rio. See Copyright Notice in lua.h
diff --git a/src/lj_gc.h b/src/lj_gc.h
index 57ac7147..e42dbcf0 100644
--- a/src/lj_gc.h
+++ b/src/lj_gc.h
@@ -1,6 +1,6 @@
 /*
 ** Garbage collector.
-** Copyright (C) 2005-2017 Mike Pall. See Copyright Notice in luajit.h
+** Copyright (C) 2005-2020 Mike Pall. See Copyright Notice in luajit.h
 */
 
 #ifndef _LJ_GC_H
diff --git a/src/lj_gdbjit.c b/src/lj_gdbjit.c
index eeb017bb..c2a9e901 100644
--- a/src/lj_gdbjit.c
+++ b/src/lj_gdbjit.c
@@ -1,6 +1,6 @@
 /*
 ** Client for the GDB JIT API.
-** Copyright (C) 2005-2017 Mike Pall. See Copyright Notice in luajit.h
+** Copyright (C) 2005-2020 Mike Pall. See Copyright Notice in luajit.h
 */
 
 #define lj_gdbjit_c
diff --git a/src/lj_gdbjit.h b/src/lj_gdbjit.h
index bbaa1568..c39eef68 100644
--- a/src/lj_gdbjit.h
+++ b/src/lj_gdbjit.h
@@ -1,6 +1,6 @@
 /*
 ** Client for the GDB JIT API.
-** Copyright (C) 2005-2017 Mike Pall. See Copyright Notice in luajit.h
+** Copyright (C) 2005-2020 Mike Pall. See Copyright Notice in luajit.h
 */
 
 #ifndef _LJ_GDBJIT_H
diff --git a/src/lj_ir.c b/src/lj_ir.c
index 1e4860df..38f289cb 100644
--- a/src/lj_ir.c
+++ b/src/lj_ir.c
@@ -1,6 +1,6 @@
 /*
 ** SSA IR (Intermediate Representation) emitter.
-** Copyright (C) 2005-2017 Mike Pall. See Copyright Notice in luajit.h
+** Copyright (C) 2005-2020 Mike Pall. See Copyright Notice in luajit.h
 */
 
 #define lj_ir_c
diff --git a/src/lj_ir.h b/src/lj_ir.h
index ded3e0eb..f91d6d0e 100644
--- a/src/lj_ir.h
+++ b/src/lj_ir.h
@@ -1,6 +1,6 @@
 /*
 ** SSA IR (Intermediate Representation) format.
-** Copyright (C) 2005-2017 Mike Pall. See Copyright Notice in luajit.h
+** Copyright (C) 2005-2020 Mike Pall. See Copyright Notice in luajit.h
 */
 
 #ifndef _LJ_IR_H
diff --git a/src/lj_ircall.h b/src/lj_ircall.h
index 44afde3a..aae9adbb 100644
--- a/src/lj_ircall.h
+++ b/src/lj_ircall.h
@@ -1,6 +1,6 @@
 /*
 ** IR CALL* instruction definitions.
-** Copyright (C) 2005-2017 Mike Pall. See Copyright Notice in luajit.h
+** Copyright (C) 2005-2020 Mike Pall. See Copyright Notice in luajit.h
 */
 
 #ifndef _LJ_IRCALL_H
diff --git a/src/lj_iropt.h b/src/lj_iropt.h
index b5081e06..cf5b4d1f 100644
--- a/src/lj_iropt.h
+++ b/src/lj_iropt.h
@@ -1,6 +1,6 @@
 /*
 ** Common header for IR emitter and optimizations.
-** Copyright (C) 2005-2017 Mike Pall. See Copyright Notice in luajit.h
+** Copyright (C) 2005-2020 Mike Pall. See Copyright Notice in luajit.h
 */
 
 #ifndef _LJ_IROPT_H
diff --git a/src/lj_jit.h b/src/lj_jit.h
index 0bc62583..0e1c4827 100644
--- a/src/lj_jit.h
+++ b/src/lj_jit.h
@@ -1,6 +1,6 @@
 /*
 ** Common definitions for the JIT compiler.
-** Copyright (C) 2005-2017 Mike Pall. See Copyright Notice in luajit.h
+** Copyright (C) 2005-2020 Mike Pall. See Copyright Notice in luajit.h
 */
 
 #ifndef _LJ_JIT_H
diff --git a/src/lj_lex.c b/src/lj_lex.c
index ecfcc015..ca942583 100644
--- a/src/lj_lex.c
+++ b/src/lj_lex.c
@@ -1,6 +1,6 @@
 /*
 ** Lexical analyzer.
-** Copyright (C) 2005-2017 Mike Pall. See Copyright Notice in luajit.h
+** Copyright (C) 2005-2020 Mike Pall. See Copyright Notice in luajit.h
 **
 ** Major portions taken verbatim or adapted from the Lua interpreter.
 ** Copyright (C) 1994-2008 Lua.org, PUC-Rio. See Copyright Notice in lua.h
diff --git a/src/lj_lex.h b/src/lj_lex.h
index f2346593..b1bc4876 100644
--- a/src/lj_lex.h
+++ b/src/lj_lex.h
@@ -1,6 +1,6 @@
 /*
 ** Lexical analyzer.
-** Copyright (C) 2005-2017 Mike Pall. See Copyright Notice in luajit.h
+** Copyright (C) 2005-2020 Mike Pall. See Copyright Notice in luajit.h
 */
 
 #ifndef _LJ_LEX_H
diff --git a/src/lj_lib.c b/src/lj_lib.c
index a1bb6a2a..0c91a1c8 100644
--- a/src/lj_lib.c
+++ b/src/lj_lib.c
@@ -1,6 +1,6 @@
 /*
 ** Library function support.
-** Copyright (C) 2005-2017 Mike Pall. See Copyright Notice in luajit.h
+** Copyright (C) 2005-2020 Mike Pall. See Copyright Notice in luajit.h
 */
 
 #define lj_lib_c
diff --git a/src/lj_lib.h b/src/lj_lib.h
index aa874076..754e7444 100644
--- a/src/lj_lib.h
+++ b/src/lj_lib.h
@@ -1,6 +1,6 @@
 /*
 ** Library function support.
-** Copyright (C) 2005-2017 Mike Pall. See Copyright Notice in luajit.h
+** Copyright (C) 2005-2020 Mike Pall. See Copyright Notice in luajit.h
 */
 
 #ifndef _LJ_LIB_H
diff --git a/src/lj_load.c b/src/lj_load.c
index 20be8ebe..ec6f0aba 100644
--- a/src/lj_load.c
+++ b/src/lj_load.c
@@ -1,6 +1,6 @@
 /*
 ** Load and dump code.
-** Copyright (C) 2005-2017 Mike Pall. See Copyright Notice in luajit.h
+** Copyright (C) 2005-2020 Mike Pall. See Copyright Notice in luajit.h
 */
 
 #include <errno.h>
diff --git a/src/lj_mcode.c b/src/lj_mcode.c
index 5ea89f66..02ade1d4 100644
--- a/src/lj_mcode.c
+++ b/src/lj_mcode.c
@@ -1,6 +1,6 @@
 /*
 ** Machine code management.
-** Copyright (C) 2005-2017 Mike Pall. See Copyright Notice in luajit.h
+** Copyright (C) 2005-2020 Mike Pall. See Copyright Notice in luajit.h
 */
 
 #define lj_mcode_c
diff --git a/src/lj_mcode.h b/src/lj_mcode.h
index f0847e93..2f31bf59 100644
--- a/src/lj_mcode.h
+++ b/src/lj_mcode.h
@@ -1,6 +1,6 @@
 /*
 ** Machine code management.
-** Copyright (C) 2005-2017 Mike Pall. See Copyright Notice in luajit.h
+** Copyright (C) 2005-2020 Mike Pall. See Copyright Notice in luajit.h
 */
 
 #ifndef _LJ_MCODE_H
diff --git a/src/lj_meta.c b/src/lj_meta.c
index 10e34984..6affc18b 100644
--- a/src/lj_meta.c
+++ b/src/lj_meta.c
@@ -1,6 +1,6 @@
 /*
 ** Metamethod handling.
-** Copyright (C) 2005-2017 Mike Pall. See Copyright Notice in luajit.h
+** Copyright (C) 2005-2020 Mike Pall. See Copyright Notice in luajit.h
 **
 ** Portions taken verbatim or adapted from the Lua interpreter.
 ** Copyright (C) 1994-2008 Lua.org, PUC-Rio. See Copyright Notice in lua.h
diff --git a/src/lj_meta.h b/src/lj_meta.h
index e061d99e..bd911e94 100644
--- a/src/lj_meta.h
+++ b/src/lj_meta.h
@@ -1,6 +1,6 @@
 /*
 ** Metamethod handling.
-** Copyright (C) 2005-2017 Mike Pall. See Copyright Notice in luajit.h
+** Copyright (C) 2005-2020 Mike Pall. See Copyright Notice in luajit.h
 */
 
 #ifndef _LJ_META_H
diff --git a/src/lj_obj.c b/src/lj_obj.c
index 4779d26d..9cdce625 100644
--- a/src/lj_obj.c
+++ b/src/lj_obj.c
@@ -1,6 +1,6 @@
 /*
 ** Miscellaneous object handling.
-** Copyright (C) 2005-2017 Mike Pall. See Copyright Notice in luajit.h
+** Copyright (C) 2005-2020 Mike Pall. See Copyright Notice in luajit.h
 */
 
 #define lj_obj_c
diff --git a/src/lj_obj.h b/src/lj_obj.h
index 2ee526cf..5c3c88fc 100644
--- a/src/lj_obj.h
+++ b/src/lj_obj.h
@@ -1,6 +1,6 @@
 /*
 ** LuaJIT VM tags, values and objects.
-** Copyright (C) 2005-2017 Mike Pall. See Copyright Notice in luajit.h
+** Copyright (C) 2005-2020 Mike Pall. See Copyright Notice in luajit.h
 **
 ** Portions taken verbatim or adapted from the Lua interpreter.
 ** Copyright (C) 1994-2008 Lua.org, PUC-Rio. See Copyright Notice in lua.h
diff --git a/src/lj_opt_dce.c b/src/lj_opt_dce.c
index 2417f324..a1df91dd 100644
--- a/src/lj_opt_dce.c
+++ b/src/lj_opt_dce.c
@@ -1,6 +1,6 @@
 /*
 ** DCE: Dead Code Elimination. Pre-LOOP only -- ASM already performs DCE.
-** Copyright (C) 2005-2017 Mike Pall. See Copyright Notice in luajit.h
+** Copyright (C) 2005-2020 Mike Pall. See Copyright Notice in luajit.h
 */
 
 #define lj_opt_dce_c
diff --git a/src/lj_opt_fold.c b/src/lj_opt_fold.c
index 5eeb491a..928d3852 100644
--- a/src/lj_opt_fold.c
+++ b/src/lj_opt_fold.c
@@ -2,7 +2,7 @@
 ** FOLD: Constant Folding, Algebraic Simplifications and Reassociation.
 ** ABCelim: Array Bounds Check Elimination.
 ** CSE: Common-Subexpression Elimination.
-** Copyright (C) 2005-2017 Mike Pall. See Copyright Notice in luajit.h
+** Copyright (C) 2005-2020 Mike Pall. See Copyright Notice in luajit.h
 */
 
 #define lj_opt_fold_c
diff --git a/src/lj_opt_loop.c b/src/lj_opt_loop.c
index cc881110..d5e1eb13 100644
--- a/src/lj_opt_loop.c
+++ b/src/lj_opt_loop.c
@@ -1,6 +1,6 @@
 /*
 ** LOOP: Loop Optimizations.
-** Copyright (C) 2005-2017 Mike Pall. See Copyright Notice in luajit.h
+** Copyright (C) 2005-2020 Mike Pall. See Copyright Notice in luajit.h
 */
 
 #define lj_opt_loop_c
diff --git a/src/lj_opt_mem.c b/src/lj_opt_mem.c
index f7833654..281f29ad 100644
--- a/src/lj_opt_mem.c
+++ b/src/lj_opt_mem.c
@@ -3,7 +3,7 @@
 ** AA: Alias Analysis using high-level semantic disambiguation.
 ** FWD: Load Forwarding (L2L) + Store Forwarding (S2L).
 ** DSE: Dead-Store Elimination.
-** Copyright (C) 2005-2017 Mike Pall. See Copyright Notice in luajit.h
+** Copyright (C) 2005-2020 Mike Pall. See Copyright Notice in luajit.h
 */
 
 #define lj_opt_mem_c
diff --git a/src/lj_opt_narrow.c b/src/lj_opt_narrow.c
index 73365953..28d3c255 100644
--- a/src/lj_opt_narrow.c
+++ b/src/lj_opt_narrow.c
@@ -1,7 +1,7 @@
 /*
 ** NARROW: Narrowing of numbers to integers (double to int32_t).
 ** STRIPOV: Stripping of overflow checks.
-** Copyright (C) 2005-2017 Mike Pall. See Copyright Notice in luajit.h
+** Copyright (C) 2005-2020 Mike Pall. See Copyright Notice in luajit.h
 */
 
 #define lj_opt_narrow_c
diff --git a/src/lj_opt_sink.c b/src/lj_opt_sink.c
index 4efe395e..df7f58af 100644
--- a/src/lj_opt_sink.c
+++ b/src/lj_opt_sink.c
@@ -1,6 +1,6 @@
 /*
 ** SINK: Allocation Sinking and Store Sinking.
-** Copyright (C) 2005-2017 Mike Pall. See Copyright Notice in luajit.h
+** Copyright (C) 2005-2020 Mike Pall. See Copyright Notice in luajit.h
 */
 
 #define lj_opt_sink_c
diff --git a/src/lj_opt_split.c b/src/lj_opt_split.c
index 8d7cd4c2..a517fa8a 100644
--- a/src/lj_opt_split.c
+++ b/src/lj_opt_split.c
@@ -1,6 +1,6 @@
 /*
 ** SPLIT: Split 64 bit IR instructions into 32 bit IR instructions.
-** Copyright (C) 2005-2017 Mike Pall. See Copyright Notice in luajit.h
+** Copyright (C) 2005-2020 Mike Pall. See Copyright Notice in luajit.h
 */
 
 #define lj_opt_split_c
diff --git a/src/lj_parse.c b/src/lj_parse.c
index 67854951..74dd5706 100644
--- a/src/lj_parse.c
+++ b/src/lj_parse.c
@@ -1,6 +1,6 @@
 /*
 ** Lua parser (source code -> bytecode).
-** Copyright (C) 2005-2017 Mike Pall. See Copyright Notice in luajit.h
+** Copyright (C) 2005-2020 Mike Pall. See Copyright Notice in luajit.h
 **
 ** Major portions taken verbatim or adapted from the Lua interpreter.
 ** Copyright (C) 1994-2008 Lua.org, PUC-Rio. See Copyright Notice in lua.h
diff --git a/src/lj_parse.h b/src/lj_parse.h
index ceeab699..fab66da3 100644
--- a/src/lj_parse.h
+++ b/src/lj_parse.h
@@ -1,6 +1,6 @@
 /*
 ** Lua parser (source code -> bytecode).
-** Copyright (C) 2005-2017 Mike Pall. See Copyright Notice in luajit.h
+** Copyright (C) 2005-2020 Mike Pall. See Copyright Notice in luajit.h
 */
 
 #ifndef _LJ_PARSE_H
diff --git a/src/lj_record.c b/src/lj_record.c
index 651bbf55..69822f54 100644
--- a/src/lj_record.c
+++ b/src/lj_record.c
@@ -1,6 +1,6 @@
 /*
 ** Trace recorder (bytecode -> SSA IR).
-** Copyright (C) 2005-2017 Mike Pall. See Copyright Notice in luajit.h
+** Copyright (C) 2005-2020 Mike Pall. See Copyright Notice in luajit.h
 */
 
 #define lj_record_c
diff --git a/src/lj_record.h b/src/lj_record.h
index 2bbbde5b..8ef8b2a7 100644
--- a/src/lj_record.h
+++ b/src/lj_record.h
@@ -1,6 +1,6 @@
 /*
 ** Trace recorder (bytecode -> SSA IR).
-** Copyright (C) 2005-2017 Mike Pall. See Copyright Notice in luajit.h
+** Copyright (C) 2005-2020 Mike Pall. See Copyright Notice in luajit.h
 */
 
 #ifndef _LJ_RECORD_H
diff --git a/src/lj_snap.c b/src/lj_snap.c
index 73f25004..de8068ac 100644
--- a/src/lj_snap.c
+++ b/src/lj_snap.c
@@ -1,6 +1,6 @@
 /*
 ** Snapshot handling.
-** Copyright (C) 2005-2017 Mike Pall. See Copyright Notice in luajit.h
+** Copyright (C) 2005-2020 Mike Pall. See Copyright Notice in luajit.h
 */
 
 #define lj_snap_c
diff --git a/src/lj_snap.h b/src/lj_snap.h
index 2c9ae3d6..816a9b79 100644
--- a/src/lj_snap.h
+++ b/src/lj_snap.h
@@ -1,6 +1,6 @@
 /*
 ** Snapshot handling.
-** Copyright (C) 2005-2017 Mike Pall. See Copyright Notice in luajit.h
+** Copyright (C) 2005-2020 Mike Pall. See Copyright Notice in luajit.h
 */
 
 #ifndef _LJ_SNAP_H
diff --git a/src/lj_state.c b/src/lj_state.c
index f8913519..ab064266 100644
--- a/src/lj_state.c
+++ b/src/lj_state.c
@@ -1,6 +1,6 @@
 /*
 ** State and stack handling.
-** Copyright (C) 2005-2017 Mike Pall. See Copyright Notice in luajit.h
+** Copyright (C) 2005-2020 Mike Pall. See Copyright Notice in luajit.h
 **
 ** Portions taken verbatim or adapted from the Lua interpreter.
 ** Copyright (C) 1994-2008 Lua.org, PUC-Rio. See Copyright Notice in lua.h
diff --git a/src/lj_state.h b/src/lj_state.h
index d5b476b2..18afe55c 100644
--- a/src/lj_state.h
+++ b/src/lj_state.h
@@ -1,6 +1,6 @@
 /*
 ** State and stack handling.
-** Copyright (C) 2005-2017 Mike Pall. See Copyright Notice in luajit.h
+** Copyright (C) 2005-2020 Mike Pall. See Copyright Notice in luajit.h
 */
 
 #ifndef _LJ_STATE_H
diff --git a/src/lj_str.c b/src/lj_str.c
index aae6ec5b..279c5cc3 100644
--- a/src/lj_str.c
+++ b/src/lj_str.c
@@ -1,6 +1,6 @@
 /*
 ** String handling.
-** Copyright (C) 2005-2017 Mike Pall. See Copyright Notice in luajit.h
+** Copyright (C) 2005-2020 Mike Pall. See Copyright Notice in luajit.h
 **
 ** Portions taken verbatim or adapted from the Lua interpreter.
 ** Copyright (C) 1994-2008 Lua.org, PUC-Rio. See Copyright Notice in lua.h
diff --git a/src/lj_str.h b/src/lj_str.h
index be04a975..e7687cb1 100644
--- a/src/lj_str.h
+++ b/src/lj_str.h
@@ -1,6 +1,6 @@
 /*
 ** String handling.
-** Copyright (C) 2005-2017 Mike Pall. See Copyright Notice in luajit.h
+** Copyright (C) 2005-2020 Mike Pall. See Copyright Notice in luajit.h
 */
 
 #ifndef _LJ_STR_H
diff --git a/src/lj_strscan.c b/src/lj_strscan.c
index 1ae68c3f..8614facd 100644
--- a/src/lj_strscan.c
+++ b/src/lj_strscan.c
@@ -1,6 +1,6 @@
 /*
 ** String scanning.
-** Copyright (C) 2005-2017 Mike Pall. See Copyright Notice in luajit.h
+** Copyright (C) 2005-2020 Mike Pall. See Copyright Notice in luajit.h
 */
 
 #include <math.h>
diff --git a/src/lj_strscan.h b/src/lj_strscan.h
index 6fb0dda0..42aa1455 100644
--- a/src/lj_strscan.h
+++ b/src/lj_strscan.h
@@ -1,6 +1,6 @@
 /*
 ** String scanning.
-** Copyright (C) 2005-2017 Mike Pall. See Copyright Notice in luajit.h
+** Copyright (C) 2005-2020 Mike Pall. See Copyright Notice in luajit.h
 */
 
 #ifndef _LJ_STRSCAN_H
diff --git a/src/lj_tab.c b/src/lj_tab.c
index 2ff5eb0d..a45ddaca 100644
--- a/src/lj_tab.c
+++ b/src/lj_tab.c
@@ -1,6 +1,6 @@
 /*
 ** Table handling.
-** Copyright (C) 2005-2017 Mike Pall. See Copyright Notice in luajit.h
+** Copyright (C) 2005-2020 Mike Pall. See Copyright Notice in luajit.h
 **
 ** Major portions taken verbatim or adapted from the Lua interpreter.
 ** Copyright (C) 1994-2008 Lua.org, PUC-Rio. See Copyright Notice in lua.h
diff --git a/src/lj_tab.h b/src/lj_tab.h
index 36ce7cdd..dc3c8dc1 100644
--- a/src/lj_tab.h
+++ b/src/lj_tab.h
@@ -1,6 +1,6 @@
 /*
 ** Table handling.
-** Copyright (C) 2005-2017 Mike Pall. See Copyright Notice in luajit.h
+** Copyright (C) 2005-2020 Mike Pall. See Copyright Notice in luajit.h
 */
 
 #ifndef _LJ_TAB_H
diff --git a/src/lj_target.h b/src/lj_target.h
index 53bfa6bf..a8182596 100644
--- a/src/lj_target.h
+++ b/src/lj_target.h
@@ -1,6 +1,6 @@
 /*
 ** Definitions for target CPU.
-** Copyright (C) 2005-2017 Mike Pall. See Copyright Notice in luajit.h
+** Copyright (C) 2005-2020 Mike Pall. See Copyright Notice in luajit.h
 */
 
 #ifndef _LJ_TARGET_H
diff --git a/src/lj_target_arm.h b/src/lj_target_arm.h
index d02cbf86..4d292dc9 100644
--- a/src/lj_target_arm.h
+++ b/src/lj_target_arm.h
@@ -1,6 +1,6 @@
 /*
 ** Definitions for ARM CPUs.
-** Copyright (C) 2005-2017 Mike Pall. See Copyright Notice in luajit.h
+** Copyright (C) 2005-2020 Mike Pall. See Copyright Notice in luajit.h
 */
 
 #ifndef _LJ_TARGET_ARM_H
diff --git a/src/lj_target_mips.h b/src/lj_target_mips.h
index bed174b8..4bbdc743 100644
--- a/src/lj_target_mips.h
+++ b/src/lj_target_mips.h
@@ -1,6 +1,6 @@
 /*
 ** Definitions for MIPS CPUs.
-** Copyright (C) 2005-2017 Mike Pall. See Copyright Notice in luajit.h
+** Copyright (C) 2005-2020 Mike Pall. See Copyright Notice in luajit.h
 */
 
 #ifndef _LJ_TARGET_MIPS_H
diff --git a/src/lj_target_ppc.h b/src/lj_target_ppc.h
index e57e27df..580995d5 100644
--- a/src/lj_target_ppc.h
+++ b/src/lj_target_ppc.h
@@ -1,6 +1,6 @@
 /*
 ** Definitions for PPC CPUs.
-** Copyright (C) 2005-2017 Mike Pall. See Copyright Notice in luajit.h
+** Copyright (C) 2005-2020 Mike Pall. See Copyright Notice in luajit.h
 */
 
 #ifndef _LJ_TARGET_PPC_H
diff --git a/src/lj_target_x86.h b/src/lj_target_x86.h
index 4426cc8c..8a96cbf2 100644
--- a/src/lj_target_x86.h
+++ b/src/lj_target_x86.h
@@ -1,6 +1,6 @@
 /*
 ** Definitions for x86 and x64 CPUs.
-** Copyright (C) 2005-2017 Mike Pall. See Copyright Notice in luajit.h
+** Copyright (C) 2005-2020 Mike Pall. See Copyright Notice in luajit.h
 */
 
 #ifndef _LJ_TARGET_X86_H
diff --git a/src/lj_trace.c b/src/lj_trace.c
index 6f8dc1a4..311baa73 100644
--- a/src/lj_trace.c
+++ b/src/lj_trace.c
@@ -1,6 +1,6 @@
 /*
 ** Trace management.
-** Copyright (C) 2005-2017 Mike Pall. See Copyright Notice in luajit.h
+** Copyright (C) 2005-2020 Mike Pall. See Copyright Notice in luajit.h
 */
 
 #define lj_trace_c
diff --git a/src/lj_trace.h b/src/lj_trace.h
index edc7af0d..460f10a1 100644
--- a/src/lj_trace.h
+++ b/src/lj_trace.h
@@ -1,6 +1,6 @@
 /*
 ** Trace management.
-** Copyright (C) 2005-2017 Mike Pall. See Copyright Notice in luajit.h
+** Copyright (C) 2005-2020 Mike Pall. See Copyright Notice in luajit.h
 */
 
 #ifndef _LJ_TRACE_H
diff --git a/src/lj_traceerr.h b/src/lj_traceerr.h
index f920e5ed..ecba11a6 100644
--- a/src/lj_traceerr.h
+++ b/src/lj_traceerr.h
@@ -1,6 +1,6 @@
 /*
 ** Trace compiler error messages.
-** Copyright (C) 2005-2017 Mike Pall. See Copyright Notice in luajit.h
+** Copyright (C) 2005-2020 Mike Pall. See Copyright Notice in luajit.h
 */
 
 /* This file may be included multiple times with different TREDEF macros. */
diff --git a/src/lj_udata.c b/src/lj_udata.c
index bd0321b8..9eb55e0a 100644
--- a/src/lj_udata.c
+++ b/src/lj_udata.c
@@ -1,6 +1,6 @@
 /*
 ** Userdata handling.
-** Copyright (C) 2005-2017 Mike Pall. See Copyright Notice in luajit.h
+** Copyright (C) 2005-2020 Mike Pall. See Copyright Notice in luajit.h
 */
 
 #define lj_udata_c
diff --git a/src/lj_udata.h b/src/lj_udata.h
index f271a42d..d3fb1e13 100644
--- a/src/lj_udata.h
+++ b/src/lj_udata.h
@@ -1,6 +1,6 @@
 /*
 ** Userdata handling.
-** Copyright (C) 2005-2017 Mike Pall. See Copyright Notice in luajit.h
+** Copyright (C) 2005-2020 Mike Pall. See Copyright Notice in luajit.h
 */
 
 #ifndef _LJ_UDATA_H
diff --git a/src/lj_vm.h b/src/lj_vm.h
index 3ffa76bf..5b10adf3 100644
--- a/src/lj_vm.h
+++ b/src/lj_vm.h
@@ -1,6 +1,6 @@
 /*
 ** Assembler VM interface definitions.
-** Copyright (C) 2005-2017 Mike Pall. See Copyright Notice in luajit.h
+** Copyright (C) 2005-2020 Mike Pall. See Copyright Notice in luajit.h
 */
 
 #ifndef _LJ_VM_H
diff --git a/src/lj_vmevent.c b/src/lj_vmevent.c
index 7b6d7bf3..1d496748 100644
--- a/src/lj_vmevent.c
+++ b/src/lj_vmevent.c
@@ -1,6 +1,6 @@
 /*
 ** VM event handling.
-** Copyright (C) 2005-2017 Mike Pall. See Copyright Notice in luajit.h
+** Copyright (C) 2005-2020 Mike Pall. See Copyright Notice in luajit.h
 */
 
 #include <stdio.h>
diff --git a/src/lj_vmevent.h b/src/lj_vmevent.h
index 050fb4dd..4df35f96 100644
--- a/src/lj_vmevent.h
+++ b/src/lj_vmevent.h
@@ -1,6 +1,6 @@
 /*
 ** VM event handling.
-** Copyright (C) 2005-2017 Mike Pall. See Copyright Notice in luajit.h
+** Copyright (C) 2005-2020 Mike Pall. See Copyright Notice in luajit.h
 */
 
 #ifndef _LJ_VMEVENT_H
diff --git a/src/lj_vmmath.c b/src/lj_vmmath.c
index 73fc667f..50a2cbba 100644
--- a/src/lj_vmmath.c
+++ b/src/lj_vmmath.c
@@ -1,6 +1,6 @@
 /*
 ** Math helper functions for assembler VM.
-** Copyright (C) 2005-2017 Mike Pall. See Copyright Notice in luajit.h
+** Copyright (C) 2005-2020 Mike Pall. See Copyright Notice in luajit.h
 */
 
 #define lj_vmmath_c
diff --git a/src/ljamalg.c b/src/ljamalg.c
index 654fe82f..21b46314 100644
--- a/src/ljamalg.c
+++ b/src/ljamalg.c
@@ -1,6 +1,6 @@
 /*
 ** LuaJIT core and libraries amalgamation.
-** Copyright (C) 2005-2017 Mike Pall. See Copyright Notice in luajit.h
+** Copyright (C) 2005-2020 Mike Pall. See Copyright Notice in luajit.h
 */
 
 /*
diff --git a/src/luaconf.h b/src/luaconf.h
index b33e91b7..20feaca8 100644
--- a/src/luaconf.h
+++ b/src/luaconf.h
@@ -1,6 +1,6 @@
 /*
 ** Configuration header.
-** Copyright (C) 2005-2017 Mike Pall. See Copyright Notice in luajit.h
+** Copyright (C) 2005-2020 Mike Pall. See Copyright Notice in luajit.h
 */
 
 #ifndef luaconf_h
diff --git a/src/luajit.c b/src/luajit.c
index 9ede59c1..3901762d 100644
--- a/src/luajit.c
+++ b/src/luajit.c
@@ -1,6 +1,6 @@
 /*
 ** LuaJIT frontend. Runs commands, scripts, read-eval-print (REPL) etc.
-** Copyright (C) 2005-2017 Mike Pall. See Copyright Notice in luajit.h
+** Copyright (C) 2005-2020 Mike Pall. See Copyright Notice in luajit.h
 **
 ** Major portions taken verbatim or adapted from the Lua interpreter.
 ** Copyright (C) 1994-2008 Lua.org, PUC-Rio. See Copyright Notice in lua.h
diff --git a/src/luajit.h b/src/luajit.h
index c5ff3acb..5f5b3887 100644
--- a/src/luajit.h
+++ b/src/luajit.h
@@ -1,7 +1,7 @@
 /*
 ** LuaJIT -- a Just-In-Time Compiler for Lua. http://luajit.org/
 **
-** Copyright (C) 2005-2017 Mike Pall. All rights reserved.
+** Copyright (C) 2005-2020 Mike Pall. All rights reserved.
 **
 ** Permission is hereby granted, free of charge, to any person obtaining
 ** a copy of this software and associated documentation files (the
@@ -33,7 +33,7 @@
 #define LUAJIT_VERSION		"LuaJIT 2.0.5"
 #define LUAJIT_VERSION_NUM	20005  /* Version 2.0.5 = 02.00.05. */
 #define LUAJIT_VERSION_SYM	luaJIT_version_2_0_5
-#define LUAJIT_COPYRIGHT	"Copyright (C) 2005-2017 Mike Pall"
+#define LUAJIT_COPYRIGHT	"Copyright (C) 2005-2020 Mike Pall"
 #define LUAJIT_URL		"http://luajit.org/"
 
 /* Modes for luaJIT_setmode. */
diff --git a/src/lualib.h b/src/lualib.h
index bfc130a1..1de0fe62 100644
--- a/src/lualib.h
+++ b/src/lualib.h
@@ -1,6 +1,6 @@
 /*
 ** Standard library header.
-** Copyright (C) 2005-2017 Mike Pall. See Copyright Notice in luajit.h
+** Copyright (C) 2005-2020 Mike Pall. See Copyright Notice in luajit.h
 */
 
 #ifndef _LUALIB_H
diff --git a/src/msvcbuild.bat b/src/msvcbuild.bat
index 9db76275..499b5f12 100644
--- a/src/msvcbuild.bat
+++ b/src/msvcbuild.bat
@@ -1,5 +1,5 @@
 @rem Script to build LuaJIT with MSVC.
-@rem Copyright (C) 2005-2019 Mike Pall. See Copyright Notice in luajit.h
+@rem Copyright (C) 2005-2020 Mike Pall. See Copyright Notice in luajit.h
 @rem
 @rem Open a "Visual Studio Command Prompt" (either x86 or x64).
 @rem Then cd to this directory and run this script. Use the following
diff --git a/src/vm_arm.dasc b/src/vm_arm.dasc
index be5540ce..c5e0498e 100644
--- a/src/vm_arm.dasc
+++ b/src/vm_arm.dasc
@@ -1,6 +1,6 @@
 |// Low-level VM code for ARM CPUs.
 |// Bytecode interpreter, fast functions and helper functions.
-|// Copyright (C) 2005-2017 Mike Pall. See Copyright Notice in luajit.h
+|// Copyright (C) 2005-2020 Mike Pall. See Copyright Notice in luajit.h
 |
 |.arch arm
 |.section code_op, code_sub
diff --git a/src/vm_mips.dasc b/src/vm_mips.dasc
index 5a8d3d48..e6b53e0d 100644
--- a/src/vm_mips.dasc
+++ b/src/vm_mips.dasc
@@ -1,6 +1,6 @@
 |// Low-level VM code for MIPS CPUs.
 |// Bytecode interpreter, fast functions and helper functions.
-|// Copyright (C) 2005-2017 Mike Pall. See Copyright Notice in luajit.h
+|// Copyright (C) 2005-2020 Mike Pall. See Copyright Notice in luajit.h
 |
 |.arch mips
 |.section code_op, code_sub
diff --git a/src/vm_ppc.dasc b/src/vm_ppc.dasc
index 91f50037..6b973d4e 100644
--- a/src/vm_ppc.dasc
+++ b/src/vm_ppc.dasc
@@ -1,6 +1,6 @@
 |// Low-level VM code for PowerPC CPUs.
 |// Bytecode interpreter, fast functions and helper functions.
-|// Copyright (C) 2005-2017 Mike Pall. See Copyright Notice in luajit.h
+|// Copyright (C) 2005-2020 Mike Pall. See Copyright Notice in luajit.h
 |
 |.arch ppc
 |.section code_op, code_sub
diff --git a/src/vm_ppcspe.dasc b/src/vm_ppcspe.dasc
index 2a57a41f..5542f8a2 100644
--- a/src/vm_ppcspe.dasc
+++ b/src/vm_ppcspe.dasc
@@ -1,6 +1,6 @@
 |// Low-level VM code for PowerPC/e500 CPUs.
 |// Bytecode interpreter, fast functions and helper functions.
-|// Copyright (C) 2005-2017 Mike Pall. See Copyright Notice in luajit.h
+|// Copyright (C) 2005-2020 Mike Pall. See Copyright Notice in luajit.h
 |
 |.arch ppc
 |.section code_op, code_sub
diff --git a/src/vm_x86.dasc b/src/vm_x86.dasc
index 359ad4f4..2ccc671f 100644
--- a/src/vm_x86.dasc
+++ b/src/vm_x86.dasc
@@ -1,6 +1,6 @@
 |// Low-level VM code for x86 CPUs.
 |// Bytecode interpreter, fast functions and helper functions.
-|// Copyright (C) 2005-2017 Mike Pall. See Copyright Notice in luajit.h
+|// Copyright (C) 2005-2020 Mike Pall. See Copyright Notice in luajit.h
 |
 |.if P64
 |.arch x64

commit 981ec8d2aac5cac76bdedd4015b6d32447b29597
Author: Mike Pall <mike>
Date:   Mon Jan 20 22:56:47 2020 +0100

    Remove support for de-facto dead archs.

diff --git a/src/Makefile b/src/Makefile
index 386f279f..1777cbe6 100644
--- a/src/Makefile
+++ b/src/Makefile
@@ -461,9 +461,6 @@ ifeq (ppc,$(TARGET_LJARCH))
   ifeq (PS3,$(TARGET_SYS))
     DASM_AFLAGS+= -D PPE -D TOC
   endif
-  ifneq (,$(findstring LJ_ARCH_PPC64 ,$(TARGET_TESTARCH)))
-    DASM_ARCH= ppc64
-  endif
 endif
 endif
 endif
diff --git a/src/host/buildvm_asm.c b/src/host/buildvm_asm.c
index 43595b31..85ce79f9 100644
--- a/src/host/buildvm_asm.c
+++ b/src/host/buildvm_asm.c
@@ -144,14 +144,6 @@ static void emit_asm_wordreloc(BuildCtx *ctx, uint8_t *p, int n,
     fprintf(ctx->fp, "\t%s %d, %d, " TOCPREFIX "%s\n",
 	    (ins & 1) ? "bcl" : "bc", (ins >> 21) & 31, (ins >> 16) & 31, sym);
   } else if ((ins >> 26) == 18) {
-#if LJ_ARCH_PPC64
-    const char *suffix = strchr(sym, '@');
-    if (suffix && suffix[1] == 'h') {
-      fprintf(ctx->fp, "\taddis 11, 2, %s\n", sym);
-    } else if (suffix && suffix[1] == 'l') {
-      fprintf(ctx->fp, "\tld 12, %s\n", sym);
-    } else
-#endif
     fprintf(ctx->fp, "\t%s " TOCPREFIX "%s\n", (ins & 1) ? "bl" : "b", sym);
   } else {
     fprintf(stderr,
@@ -250,9 +242,6 @@ void emit_asm(BuildCtx *ctx)
   int i, rel;
 
   fprintf(ctx->fp, "\t.file \"buildvm_%s.dasc\"\n", ctx->dasm_arch);
-#if LJ_ARCH_PPC64
-  fprintf(ctx->fp, "\t.abiversion 2\n");
-#endif
   fprintf(ctx->fp, "\t.text\n");
   emit_asm_align(ctx, 4);
 
diff --git a/src/host/buildvm_peobj.c b/src/host/buildvm_peobj.c
index 2eb2bb7b..280ea8d2 100644
--- a/src/host/buildvm_peobj.c
+++ b/src/host/buildvm_peobj.c
@@ -9,7 +9,7 @@
 #include "buildvm.h"
 #include "lj_bc.h"
 
-#if LJ_TARGET_X86ORX64 || LJ_TARGET_PPC
+#if LJ_TARGET_X86ORX64
 
 /* Context for PE object emitter. */
 static char *strtab;
@@ -93,12 +93,6 @@ typedef struct PEsymaux {
 #define PEOBJ_RELOC_ADDR32NB	0x03
 #define PEOBJ_RELOC_OFS		0
 #define PEOBJ_TEXT_FLAGS	0x60500020  /* 60=r+x, 50=align16, 20=code. */
-#elif LJ_TARGET_PPC
-#define PEOBJ_ARCH_TARGET	0x01f2
-#define PEOBJ_RELOC_REL32	0x06
-#define PEOBJ_RELOC_DIR32	0x02
-#define PEOBJ_RELOC_OFS		(-4)
-#define PEOBJ_TEXT_FLAGS	0x60400020  /* 60=r+x, 40=align8, 20=code. */
 #endif
 
 /* Section numbers (0-based). */
@@ -251,15 +245,8 @@ void emit_peobj(BuildCtx *ctx)
   /* Write .text section. */
   host_endian.u = 1;
   if (host_endian.b != LJ_ENDIAN_SELECT(1, 0)) {
-#if LJ_TARGET_PPC
-    uint32_t *p = (uint32_t *)ctx->code;
-    int n = (int)(ctx->codesz >> 2);
-    for (i = 0; i < n; i++, p++)
-      *p = lj_bswap(*p);  /* Byteswap .text section. */
-#else
     fprintf(stderr, "Error: different byte order for host and target\n");
     exit(1);
-#endif
   }
   owrite(ctx, ctx->code, ctx->codesz);
   for (i = 0; i < ctx->nreloc; i++) {
diff --git a/src/lj_arch.h b/src/lj_arch.h
index cd1a0568..d561917b 100644
--- a/src/lj_arch.h
+++ b/src/lj_arch.h
@@ -296,9 +296,7 @@
 #define LJ_ARCH_PPC32ON64	1
 #define LJ_ARCH_NOFFI		1
 #elif LJ_ARCH_BITS == 64
-#define LJ_ARCH_PPC64		1
-#define LJ_TARGET_GC64		1
-#define LJ_ARCH_NOJIT		1	/* NYI */
+#error "No support for PPC64"
 #endif
 
 #if _ARCH_PWR7
@@ -465,7 +463,7 @@
 #error "No support for ILP32 model on ARM64"
 #endif
 #elif LJ_TARGET_PPC
-#if !LJ_ARCH_PPC64 && (defined(_LITTLE_ENDIAN) && (!defined(_BYTE_ORDER) || (_BYTE_ORDER == _LITTLE_ENDIAN)))
+#if defined(_LITTLE_ENDIAN) && (!defined(_BYTE_ORDER) || (_BYTE_ORDER == _LITTLE_ENDIAN))
 #error "No support for little-endian PPC32"
 #endif
 #if defined(__NO_FPRS__) && !defined(_SOFT_FLOAT)
diff --git a/src/vm_ppc.dasc b/src/vm_ppc.dasc
index 0839668c..51543397 100644
--- a/src/vm_ppc.dasc
+++ b/src/vm_ppc.dasc
@@ -18,7 +18,6 @@
 |// DynASM defines used by the PPC port:
 |//
 |// P64     64 bit pointers (only for GPR64 testing).
-|//         Note: see vm_ppc64.dasc for a full PPC64 _LP64 port.
 |// GPR64   64 bit registers (but possibly 32 bit pointers, e.g. PS3).
 |//         Affects reg saves, stack layout, carry/overflow/dot flags etc.
 |// FRAME32 Use 32 bit frame layout, even with GPR64 (Xbox 360).

commit 9749952b55d2003de012c6b0aa6507c06eb320b8
Author: Mike Pall <mike>
Date:   Mon Jan 20 22:23:17 2020 +0100

    DynASM/x86: Fix BMI instructions.
    
    Thanks to Peter Cawley.

diff --git a/dynasm/dasm_x86.lua b/dynasm/dasm_x86.lua
index 7f536afa..39124d5b 100644
--- a/dynasm/dasm_x86.lua
+++ b/dynasm/dasm_x86.lua
@@ -1852,7 +1852,7 @@ end
 
 ------------------------------------------------------------------------------
 
-local map_vexarg = { u = false, v = 1, V = 2 }
+local map_vexarg = { u = false, v = 1, V = 2, w = 3 }
 
 -- Process pattern string.
 local function dopattern(pat, args, sz, op, needrex)

commit 54484e257f24c47d71b8233844e2ec8664db8071
Author: Mike Pall <mike>
Date:   Mon Jan 20 22:20:55 2020 +0100

    Minor fixes.

diff --git a/src/lib_base.c b/src/lib_base.c
index 83c7663c..492cb594 100644
--- a/src/lib_base.c
+++ b/src/lib_base.c
@@ -503,7 +503,7 @@ LJLIB_CF(print)
     tv = L->top-1;
   }
   shortcut = (tvisfunc(tv) && funcV(tv)->c.ffid == FF_tostring)
-              && !gcrefu(basemt_it(G(L), LJ_TNUMX));
+	      && !gcrefu(basemt_it(G(L), LJ_TNUMX));
   for (i = 0; i < nargs; i++) {
     cTValue *o = &L->base[i];
     const char *str;
diff --git a/src/lj_gc.c b/src/lj_gc.c
index 012d0879..d3f548ca 100644
--- a/src/lj_gc.c
+++ b/src/lj_gc.c
@@ -25,6 +25,7 @@
 #include "lj_cdata.h"
 #endif
 #include "lj_trace.h"
+#include "lj_dispatch.h"
 #include "lj_vm.h"
 
 #define GCSTEPSIZE	1024u

commit 94d0b53004a5fa368defa4307a17edcdb87fe727
Author: Mike Pall <mike>
Date:   Mon Jan 20 22:15:45 2020 +0100

    MIPS: Add MIPS64 R6 port.
    
    Contributed by Hua Zhang, YunQiang Su from Wave Computing,
    and Radovan Birdic from RT-RK.
    Sponsored by Wave Computing.

diff --git a/dynasm/dasm_mips.h b/dynasm/dasm_mips.h
index 71a835b2..7d06aa72 100644
--- a/dynasm/dasm_mips.h
+++ b/dynasm/dasm_mips.h
@@ -355,14 +355,15 @@ int dasm_encode(Dst_DECL, void *buffer)
 	  CK(n >= 0, UNDEF_PC);
 	  n = *DASM_POS2PTR(D, n);
 	  if (ins & 2048)
-	    n = n - (int)((char *)cp - base);
-	  else
 	    n = (n + (int)(size_t)base) & 0x0fffffff;
-	patchrel:
+	  else
+	    n = n - (int)((char *)cp - base);
+	patchrel: {
+	  unsigned int e = 16 + ((ins >> 12) & 15);
 	  CK((n & 3) == 0 &&
-	     ((n + ((ins & 2048) ? 0x00020000 : 0)) >>
-	       ((ins & 2048) ? 18 : 28)) == 0, RANGE_REL);
-	  cp[-1] |= ((n>>2) & ((ins & 2048) ? 0x0000ffff: 0x03ffffff));
+	     ((n + ((ins & 2048) ? 0 : (1<<(e+1)))) >> (e+2)) == 0, RANGE_REL);
+	  cp[-1] |= ((n>>2) & ((1<<e)-1));
+	  }
 	  break;
 	case DASM_LABEL_LG:
 	  ins &= 2047; if (ins >= 20) D->globals[ins-10] = (void *)(base + n);
diff --git a/dynasm/dasm_mips.lua b/dynasm/dasm_mips.lua
index bd2a2b43..ccdc53cd 100644
--- a/dynasm/dasm_mips.lua
+++ b/dynasm/dasm_mips.lua
@@ -6,6 +6,7 @@
 ------------------------------------------------------------------------------
 
 local mips64 = mips64
+local mipsr6 = _map_def.MIPSR6
 
 -- Module information:
 local _info = {
@@ -238,7 +239,6 @@ local map_op = {
   bne_3 =	"14000000STB",
   blez_2 =	"18000000SB",
   bgtz_2 =	"1c000000SB",
-  addi_3 =	"20000000TSI",
   li_2 =	"24000000TI",
   addiu_3 =	"24000000TSI",
   slti_3 =	"28000000TSI",
@@ -248,40 +248,22 @@ local map_op = {
   ori_3 =	"34000000TSU",
   xori_3 =	"38000000TSU",
   lui_2 =	"3c000000TU",
-  beqzl_2 =	"50000000SB",
-  beql_3 =	"50000000STB",
-  bnezl_2 =	"54000000SB",
-  bnel_3 =	"54000000STB",
-  blezl_2 =	"58000000SB",
-  bgtzl_2 =	"5c000000SB",
-  daddi_3 =	mips64 and "60000000TSI",
   daddiu_3 =	mips64 and "64000000TSI",
   ldl_2 =	mips64 and "68000000TO",
   ldr_2 =	mips64 and "6c000000TO",
   lb_2 =	"80000000TO",
   lh_2 =	"84000000TO",
-  lwl_2 =	"88000000TO",
   lw_2 =	"8c000000TO",
   lbu_2 =	"90000000TO",
   lhu_2 =	"94000000TO",
-  lwr_2 =	"98000000TO",
   lwu_2 =	mips64 and "9c000000TO",
   sb_2 =	"a0000000TO",
   sh_2 =	"a4000000TO",
-  swl_2 =	"a8000000TO",
   sw_2 =	"ac000000TO",
-  sdl_2 =	mips64 and "b0000000TO",
-  sdr_2 =	mips64 and "b1000000TO",
-  swr_2 =	"b8000000TO",
-  cache_2 =	"bc000000NO",
-  ll_2 =	"c0000000TO",
   lwc1_2 =	"c4000000HO",
-  pref_2 =	"cc000000NO",
   ldc1_2 =	"d4000000HO",
   ld_2 =	mips64 and "dc000000TO",
-  sc_2 =	"e0000000TO",
   swc1_2 =	"e4000000HO",
-  scd_2 =	mips64 and "f0000000TO",
   sdc1_2 =	"f4000000HO",
   sd_2 =	mips64 and "fc000000TO",
 
@@ -289,10 +271,6 @@ local map_op = {
   nop_0 =	"00000000",
   sll_3 =	"00000000DTA",
   sextw_2 =	"00000000DT",
-  movf_2 =	"00000001DS",
-  movf_3 =	"00000001DSC",
-  movt_2 =	"00010001DS",
-  movt_3 =	"00010001DSC",
   srl_3 =	"00000002DTA",
   rotr_3 =	"00200002DTA",
   sra_3 =	"00000003DTA",
@@ -301,31 +279,16 @@ local map_op = {
   rotrv_3 =	"00000046DTS",
   drotrv_3 =	mips64 and "00000056DTS",
   srav_3 =	"00000007DTS",
-  jr_1 =	"00000008S",
   jalr_1 =	"0000f809S",
   jalr_2 =	"00000009DS",
-  movz_3 =	"0000000aDST",
-  movn_3 =	"0000000bDST",
   syscall_0 =	"0000000c",
   syscall_1 =	"0000000cY",
   break_0 =	"0000000d",
   break_1 =	"0000000dY",
   sync_0 =	"0000000f",
-  mfhi_1 =	"00000010D",
-  mthi_1 =	"00000011S",
-  mflo_1 =	"00000012D",
-  mtlo_1 =	"00000013S",
   dsllv_3 =	mips64 and "00000014DTS",
   dsrlv_3 =	mips64 and "00000016DTS",
   dsrav_3 =	mips64 and "00000017DTS",
-  mult_2 =	"00000018ST",
-  multu_2 =	"00000019ST",
-  div_2 =	"0000001aST",
-  divu_2 =	"0000001bST",
-  dmult_2 =	mips64 and "0000001cST",
-  dmultu_2 =	mips64 and "0000001dST",
-  ddiv_2 =	mips64 and "0000001eST",
-  ddivu_2 =	mips64 and "0000001fST",
   add_3 =	"00000020DST",
   move_2 =	mips64 and "00000025DS" or "00000021DS",
   addu_3 =	"00000021DST",
@@ -369,32 +332,9 @@ local map_op = {
   bgez_2 =	"04010000SB",
   bltzl_2 =	"04020000SB",
   bgezl_2 =	"04030000SB",
-  tgei_2 =	"04080000SI",
-  tgeiu_2 =	"04090000SI",
-  tlti_2 =	"040a0000SI",
-  tltiu_2 =	"040b0000SI",
-  teqi_2 =	"040c0000SI",
-  tnei_2 =	"040e0000SI",
-  bltzal_2 =	"04100000SB",
   bal_1 =	"04110000B",
-  bgezal_2 =	"04110000SB",
-  bltzall_2 =	"04120000SB",
-  bgezall_2 =	"04130000SB",
   synci_1 =	"041f0000O",
 
-  -- Opcode SPECIAL2.
-  madd_2 =	"70000000ST",
-  maddu_2 =	"70000001ST",
-  mul_3 =	"70000002DST",
-  msub_2 =	"70000004ST",
-  msubu_2 =	"70000005ST",
-  clz_2 =	"70000020DS=",
-  clo_2 =	"70000021DS=",
-  dclz_2 =	mips64 and "70000024DS=",
-  dclo_2 =	mips64 and "70000025DS=",
-  sdbbp_0 =	"7000003f",
-  sdbbp_1 =	"7000003fY",
-
   -- Opcode SPECIAL3.
   ext_4 =	"7c000000TSAM", -- Note: last arg is msbd = size-1
   dextm_4 =	mips64 and "7c000001TSAM", -- Args: pos    | size-1-32
@@ -445,15 +385,6 @@ local map_op = {
   ctc1_2 =	"44c00000TG",
   mthc1_2 =	"44e00000TG",
 
-  bc1f_1 =	"45000000B",
-  bc1f_2 =	"45000000CB",
-  bc1t_1 =	"45010000B",
-  bc1t_2 =	"45010000CB",
-  bc1fl_1 =	"45020000B",
-  bc1fl_2 =	"45020000CB",
-  bc1tl_1 =	"45030000B",
-  bc1tl_2 =	"45030000CB",
-
   ["add.s_3"] =		"46000000FGH",
   ["sub.s_3"] =		"46000001FGH",
   ["mul.s_3"] =		"46000002FGH",
@@ -470,51 +401,11 @@ local map_op = {
   ["trunc.w.s_2"] =	"4600000dFG",
   ["ceil.w.s_2"] =	"4600000eFG",
   ["floor.w.s_2"] =	"4600000fFG",
-  ["movf.s_2"] =	"46000011FG",
-  ["movf.s_3"] =	"46000011FGC",
-  ["movt.s_2"] =	"46010011FG",
-  ["movt.s_3"] =	"46010011FGC",
-  ["movz.s_3"] =	"46000012FGT",
-  ["movn.s_3"] =	"46000013FGT",
   ["recip.s_2"] =	"46000015FG",
   ["rsqrt.s_2"] =	"46000016FG",
   ["cvt.d.s_2"] =	"46000021FG",
   ["cvt.w.s_2"] =	"46000024FG",
   ["cvt.l.s_2"] =	"46000025FG",
-  ["cvt.ps.s_3"] =	"46000026FGH",
-  ["c.f.s_2"] =		"46000030GH",
-  ["c.f.s_3"] =		"46000030VGH",
-  ["c.un.s_2"] =	"46000031GH",
-  ["c.un.s_3"] =	"46000031VGH",
-  ["c.eq.s_2"] =	"46000032GH",
-  ["c.eq.s_3"] =	"46000032VGH",
-  ["c.ueq.s_2"] =	"46000033GH",
-  ["c.ueq.s_3"] =	"46000033VGH",
-  ["c.olt.s_2"] =	"46000034GH",
-  ["c.olt.s_3"] =	"46000034VGH",
-  ["c.ult.s_2"] =	"46000035GH",
-  ["c.ult.s_3"] =	"46000035VGH",
-  ["c.ole.s_2"] =	"46000036GH",
-  ["c.ole.s_3"] =	"46000036VGH",
-  ["c.ule.s_2"] =	"46000037GH",
-  ["c.ule.s_3"] =	"46000037VGH",
-  ["c.sf.s_2"] =	"46000038GH",
-  ["c.sf.s_3"] =	"46000038VGH",
-  ["c.ngle.s_2"] =	"46000039GH",
-  ["c.ngle.s_3"] =	"46000039VGH",
-  ["c.seq.s_2"] =	"4600003aGH",
-  ["c.seq.s_3"] =	"4600003aVGH",
-  ["c.ngl.s_2"] =	"4600003bGH",
-  ["c.ngl.s_3"] =	"4600003bVGH",
-  ["c.lt.s_2"] =	"4600003cGH",
-  ["c.lt.s_3"] =	"4600003cVGH",
-  ["c.nge.s_2"] =	"4600003dGH",
-  ["c.nge.s_3"] =	"4600003dVGH",
-  ["c.le.s_2"] =	"4600003eGH",
-  ["c.le.s_3"] =	"4600003eVGH",
-  ["c.ngt.s_2"] =	"4600003fGH",
-  ["c.ngt.s_3"] =	"4600003fVGH",
-
   ["add.d_3"] =		"46200000FGH",
   ["sub.d_3"] =		"46200001FGH",
   ["mul.d_3"] =		"46200002FGH",
@@ -531,130 +422,410 @@ local map_op = {
   ["trunc.w.d_2"] =	"4620000dFG",
   ["ceil.w.d_2"] =	"4620000eFG",
   ["floor.w.d_2"] =	"4620000fFG",
-  ["movf.d_2"] =	"46200011FG",
-  ["movf.d_3"] =	"46200011FGC",
-  ["movt.d_2"] =	"46210011FG",
-  ["movt.d_3"] =	"46210011FGC",
-  ["movz.d_3"] =	"46200012FGT",
-  ["movn.d_3"] =	"46200013FGT",
   ["recip.d_2"] =	"46200015FG",
   ["rsqrt.d_2"] =	"46200016FG",
   ["cvt.s.d_2"] =	"46200020FG",
   ["cvt.w.d_2"] =	"46200024FG",
   ["cvt.l.d_2"] =	"46200025FG",
-  ["c.f.d_2"] =		"46200030GH",
-  ["c.f.d_3"] =		"46200030VGH",
-  ["c.un.d_2"] =	"46200031GH",
-  ["c.un.d_3"] =	"46200031VGH",
-  ["c.eq.d_2"] =	"46200032GH",
-  ["c.eq.d_3"] =	"46200032VGH",
-  ["c.ueq.d_2"] =	"46200033GH",
-  ["c.ueq.d_3"] =	"46200033VGH",
-  ["c.olt.d_2"] =	"46200034GH",
-  ["c.olt.d_3"] =	"46200034VGH",
-  ["c.ult.d_2"] =	"46200035GH",
-  ["c.ult.d_3"] =	"46200035VGH",
-  ["c.ole.d_2"] =	"46200036GH",
-  ["c.ole.d_3"] =	"46200036VGH",
-  ["c.ule.d_2"] =	"46200037GH",
-  ["c.ule.d_3"] =	"46200037VGH",
-  ["c.sf.d_2"] =	"46200038GH",
-  ["c.sf.d_3"] =	"46200038VGH",
-  ["c.ngle.d_2"] =	"46200039GH",
-  ["c.ngle.d_3"] =	"46200039VGH",
-  ["c.seq.d_2"] =	"4620003aGH",
-  ["c.seq.d_3"] =	"4620003aVGH",
-  ["c.ngl.d_2"] =	"4620003bGH",
-  ["c.ngl.d_3"] =	"4620003bVGH",
-  ["c.lt.d_2"] =	"4620003cGH",
-  ["c.lt.d_3"] =	"4620003cVGH",
-  ["c.nge.d_2"] =	"4620003dGH",
-  ["c.nge.d_3"] =	"4620003dVGH",
-  ["c.le.d_2"] =	"4620003eGH",
-  ["c.le.d_3"] =	"4620003eVGH",
-  ["c.ngt.d_2"] =	"4620003fGH",
-  ["c.ngt.d_3"] =	"4620003fVGH",
-
-  ["add.ps_3"] =	"46c00000FGH",
-  ["sub.ps_3"] =	"46c00001FGH",
-  ["mul.ps_3"] =	"46c00002FGH",
-  ["abs.ps_2"] =	"46c00005FG",
-  ["mov.ps_2"] =	"46c00006FG",
-  ["neg.ps_2"] =	"46c00007FG",
-  ["movf.ps_2"] =	"46c00011FG",
-  ["movf.ps_3"] =	"46c00011FGC",
-  ["movt.ps_2"] =	"46c10011FG",
-  ["movt.ps_3"] =	"46c10011FGC",
-  ["movz.ps_3"] =	"46c00012FGT",
-  ["movn.ps_3"] =	"46c00013FGT",
-  ["cvt.s.pu_2"] =	"46c00020FG",
-  ["cvt.s.pl_2"] =	"46c00028FG",
-  ["pll.ps_3"] =	"46c0002cFGH",
-  ["plu.ps_3"] =	"46c0002dFGH",
-  ["pul.ps_3"] =	"46c0002eFGH",
-  ["puu.ps_3"] =	"46c0002fFGH",
-  ["c.f.ps_2"] =	"46c00030GH",
-  ["c.f.ps_3"] =	"46c00030VGH",
-  ["c.un.ps_2"] =	"46c00031GH",
-  ["c.un.ps_3"] =	"46c00031VGH",
-  ["c.eq.ps_2"] =	"46c00032GH",
-  ["c.eq.ps_3"] =	"46c00032VGH",
-  ["c.ueq.ps_2"] =	"46c00033GH",
-  ["c.ueq.ps_3"] =	"46c00033VGH",
-  ["c.olt.ps_2"] =	"46c00034GH",
-  ["c.olt.ps_3"] =	"46c00034VGH",
-  ["c.ult.ps_2"] =	"46c00035GH",
-  ["c.ult.ps_3"] =	"46c00035VGH",
-  ["c.ole.ps_2"] =	"46c00036GH",
-  ["c.ole.ps_3"] =	"46c00036VGH",
-  ["c.ule.ps_2"] =	"46c00037GH",
-  ["c.ule.ps_3"] =	"46c00037VGH",
-  ["c.sf.ps_2"] =	"46c00038GH",
-  ["c.sf.ps_3"] =	"46c00038VGH",
-  ["c.ngle.ps_2"] =	"46c00039GH",
-  ["c.ngle.ps_3"] =	"46c00039VGH",
-  ["c.seq.ps_2"] =	"46c0003aGH",
-  ["c.seq.ps_3"] =	"46c0003aVGH",
-  ["c.ngl.ps_2"] =	"46c0003bGH",
-  ["c.ngl.ps_3"] =	"46c0003bVGH",
-  ["c.lt.ps_2"] =	"46c0003cGH",
-  ["c.lt.ps_3"] =	"46c0003cVGH",
-  ["c.nge.ps_2"] =	"46c0003dGH",
-  ["c.nge.ps_3"] =	"46c0003dVGH",
-  ["c.le.ps_2"] =	"46c0003eGH",
-  ["c.le.ps_3"] =	"46c0003eVGH",
-  ["c.ngt.ps_2"] =	"46c0003fGH",
-  ["c.ngt.ps_3"] =	"46c0003fVGH",
-
   ["cvt.s.w_2"] =	"46800020FG",
   ["cvt.d.w_2"] =	"46800021FG",
-
   ["cvt.s.l_2"] =	"46a00020FG",
   ["cvt.d.l_2"] =	"46a00021FG",
-
-  -- Opcode COP1X.
-  lwxc1_2 =		"4c000000FX",
-  ldxc1_2 =		"4c000001FX",
-  luxc1_2 =		"4c000005FX",
-  swxc1_2 =		"4c000008FX",
-  sdxc1_2 =		"4c000009FX",
-  suxc1_2 =		"4c00000dFX",
-  prefx_2 =		"4c00000fMX",
-  ["alnv.ps_4"] =	"4c00001eFGHS",
-  ["madd.s_4"] =	"4c000020FRGH",
-  ["madd.d_4"] =	"4c000021FRGH",
-  ["madd.ps_4"] =	"4c000026FRGH",
-  ["msub.s_4"] =	"4c000028FRGH",
-  ["msub.d_4"] =	"4c000029FRGH",
-  ["msub.ps_4"] =	"4c00002eFRGH",
-  ["nmadd.s_4"] =	"4c000030FRGH",
-  ["nmadd.d_4"] =	"4c000031FRGH",
-  ["nmadd.ps_4"] =	"4c000036FRGH",
-  ["nmsub.s_4"] =	"4c000038FRGH",
-  ["nmsub.d_4"] =	"4c000039FRGH",
-  ["nmsub.ps_4"] =	"4c00003eFRGH",
 }
 
+if mipsr6 then -- Instructions added with MIPSR6.
+
+  for k,v in pairs({
+
+    -- Add immediate to upper bits.
+    aui_3 =	"3c000000TSI",
+    daui_3 =	mips64 and "74000000TSI",
+    dahi_2 =	mips64 and "04060000SI",
+    dati_2 =	mips64 and "041e0000SI",
+
+    -- TODO: addiupc, auipc, aluipc, lwpc, lwupc, ldpc.
+
+    -- Compact branches.
+    blezalc_2 =	"18000000TB",	-- rt != 0.
+    bgezalc_2 =	"18000000T=SB",	-- rt != 0.
+    bgtzalc_2 =	"1c000000TB",	-- rt != 0.
+    bltzalc_2 =	"1c000000T=SB",	-- rt != 0.
+
+    blezc_2 =	"58000000TB",	-- rt != 0.
+    bgezc_2 =	"58000000T=SB",	-- rt != 0.
+    bgec_3 =	"58000000STB",	-- rs != rt.
+    blec_3 =	"58000000TSB",	-- rt != rs.
+
+    bgtzc_2 =	"5c000000TB",	-- rt != 0.
+    bltzc_2 =	"5c000000T=SB",	-- rt != 0.
+    bltc_3 =	"5c000000STB",	-- rs != rt.
+    bgtc_3 =	"5c000000TSB",	-- rt != rs.
+
+    bgeuc_3 =	"18000000STB",	-- rs != rt.
+    bleuc_3 =	"18000000TSB",	-- rt != rs.
+    bltuc_3 =	"1c000000STB",	-- rs != rt.
+    bgtuc_3 =	"1c000000TSB",	-- rt != rs.
+
+    beqzalc_2 =	"20000000TB",	-- rt != 0.
+    bnezalc_2 =	"60000000TB",	-- rt != 0.
+    beqc_3 =	"20000000STB",	-- rs < rt.
+    bnec_3 =	"60000000STB",	-- rs < rt.
+    bovc_3 =	"20000000STB",	-- rs >= rt.
+    bnvc_3 =	"60000000STB",	-- rs >= rt.
+
+    beqzc_2 =	"d8000000SK",	-- rs != 0.
+    bnezc_2 =	"f8000000SK",	-- rs != 0.
+    jic_2 =	"d8000000TI",
+    jialc_2 =	"f8000000TI",
+    bc_1 =	"c8000000L",
+    balc_1 =	"e8000000L",
+
+    -- Opcode SPECIAL.
+    jr_1 =	"00000009S",
+    sdbbp_0 =	"0000000e",
+    sdbbp_1 =	"0000000eY",
+    lsa_4 =	"00000005DSTA",
+    dlsa_4 =	mips64 and "00000015DSTA",
+    seleqz_3 =	"00000035DST",
+    selnez_3 =	"00000037DST",
+    clz_2 =	"00000050DS",
+    clo_2 =	"00000051DS",
+    dclz_2 =	mips64 and "00000052DS",
+    dclo_2 =	mips64 and "00000053DS",
+    mul_3 =	"00000098DST",
+    muh_3 =	"000000d8DST",
+    mulu_3 =	"00000099DST",
+    muhu_3 =	"000000d9DST",
+    div_3 =	"0000009aDST",
+    mod_3 =	"000000daDST",
+    divu_3 =	"0000009bDST",
+    modu_3 =	"000000dbDST",
+    dmul_3 =	mips64 and "0000009cDST",
+    dmuh_3 =	mips64 and "000000dcDST",
+    dmulu_3 =	mips64 and "0000009dDST",
+    dmuhu_3 =	mips64 and "000000ddDST",
+    ddiv_3 =	mips64 and "0000009eDST",
+    dmod_3 =	mips64 and "000000deDST",
+    ddivu_3 =	mips64 and "0000009fDST",
+    dmodu_3 =	mips64 and "000000dfDST",
+
+    -- Opcode SPECIAL3.
+    align_4 =		"7c000220DSTA",
+    dalign_4 =		mips64 and "7c000224DSTA",
+    bitswap_2 =		"7c000020DT",
+    dbitswap_2 =	mips64 and "7c000024DT",
+
+    -- Opcode COP1.
+    bc1eqz_2 =	"45200000HB",
+    bc1nez_2 =	"45a00000HB",
+
+    ["sel.s_3"] =	"46000010FGH",
+    ["seleqz.s_3"] =	"46000014FGH",
+    ["selnez.s_3"] =	"46000017FGH",
+    ["maddf.s_3"] =	"46000018FGH",
+    ["msubf.s_3"] =	"46000019FGH",
+    ["rint.s_2"] =	"4600001aFG",
+    ["class.s_2"] =	"4600001bFG",
+    ["min.s_3"] =	"4600001cFGH",
+    ["mina.s_3"] =	"4600001dFGH",
+    ["max.s_3"] =	"4600001eFGH",
+    ["maxa.s_3"] =	"4600001fFGH",
+    ["cmp.af.s_3"] =	"46800000FGH",
+    ["cmp.un.s_3"] =	"46800001FGH",
+    ["cmp.or.s_3"] =	"46800011FGH",
+    ["cmp.eq.s_3"] =	"46800002FGH",
+    ["cmp.une.s_3"] =	"46800012FGH",
+    ["cmp.ueq.s_3"] =	"46800003FGH",
+    ["cmp.ne.s_3"] =	"46800013FGH",
+    ["cmp.lt.s_3"] =	"46800004FGH",
+    ["cmp.ult.s_3"] =	"46800005FGH",
+    ["cmp.le.s_3"] =	"46800006FGH",
+    ["cmp.ule.s_3"] =	"46800007FGH",
+    ["cmp.saf.s_3"] =	"46800008FGH",
+    ["cmp.sun.s_3"] =	"46800009FGH",
+    ["cmp.sor.s_3"] =	"46800019FGH",
+    ["cmp.seq.s_3"] =	"4680000aFGH",
+    ["cmp.sune.s_3"] =	"4680001aFGH",
+    ["cmp.sueq.s_3"] =	"4680000bFGH",
+    ["cmp.sne.s_3"] =	"4680001bFGH",
+    ["cmp.slt.s_3"] =	"4680000cFGH",
+    ["cmp.sult.s_3"] =	"4680000dFGH",
+    ["cmp.sle.s_3"] =	"4680000eFGH",
+    ["cmp.sule.s_3"] =	"4680000fFGH",
+
+    ["sel.d_3"] =	"46200010FGH",
+    ["seleqz.d_3"] =	"46200014FGH",
+    ["selnez.d_3"] =	"46200017FGH",
+    ["maddf.d_3"] =	"46200018FGH",
+    ["msubf.d_3"] =	"46200019FGH",
+    ["rint.d_2"] =	"4620001aFG",
+    ["class.d_2"] =	"4620001bFG",
+    ["min.d_3"] =	"4620001cFGH",
+    ["mina.d_3"] =	"4620001dFGH",
+    ["max.d_3"] =	"4620001eFGH",
+    ["maxa.d_3"] =	"4620001fFGH",
+    ["cmp.af.d_3"] =	"46a00000FGH",
+    ["cmp.un.d_3"] =	"46a00001FGH",
+    ["cmp.or.d_3"] =	"46a00011FGH",
+    ["cmp.eq.d_3"] =	"46a00002FGH",
+    ["cmp.une.d_3"] =	"46a00012FGH",
+    ["cmp.ueq.d_3"] =	"46a00003FGH",
+    ["cmp.ne.d_3"] =	"46a00013FGH",
+    ["cmp.lt.d_3"] =	"46a00004FGH",
+    ["cmp.ult.d_3"] =	"46a00005FGH",
+    ["cmp.le.d_3"] =	"46a00006FGH",
+    ["cmp.ule.d_3"] =	"46a00007FGH",
+    ["cmp.saf.d_3"] =	"46a00008FGH",
+    ["cmp.sun.d_3"] =	"46a00009FGH",
+    ["cmp.sor.d_3"] =	"46a00019FGH",
+    ["cmp.seq.d_3"] =	"46a0000aFGH",
+    ["cmp.sune.d_3"] =	"46a0001aFGH",
+    ["cmp.sueq.d_3"] =	"46a0000bFGH",
+    ["cmp.sne.d_3"] =	"46a0001bFGH",
+    ["cmp.slt.d_3"] =	"46a0000cFGH",
+    ["cmp.sult.d_3"] =	"46a0000dFGH",
+    ["cmp.sle.d_3"] =	"46a0000eFGH",
+    ["cmp.sule.d_3"] =	"46a0000fFGH",
+
+  }) do map_op[k] = v end
+
+else -- Instructions removed by MIPSR6.
+
+  for k,v in pairs({
+    -- Traps, don't use.
+    addi_3 =	"20000000TSI",
+    daddi_3 =	mips64 and "60000000TSI",
+
+    -- Branch on likely, don't use.
+    beqzl_2 =	"50000000SB",
+    beql_3 =	"50000000STB",
+    bnezl_2 =	"54000000SB",
+    bnel_3 =	"54000000STB",
+    blezl_2 =	"58000000SB",
+    bgtzl_2 =	"5c000000SB",
+
+    lwl_2 =	"88000000TO",
+    lwr_2 =	"98000000TO",
+    swl_2 =	"a8000000TO",
+    sdl_2 =	mips64 and "b0000000TO",
+    sdr_2 =	mips64 and "b1000000TO",
+    swr_2 =	"b8000000TO",
+    cache_2 =	"bc000000NO",
+    ll_2 =	"c0000000TO",
+    pref_2 =	"cc000000NO",
+    sc_2 =	"e0000000TO",
+    scd_2 =	mips64 and "f0000000TO",
+
+    -- Opcode SPECIAL.
+    movf_2 =	"00000001DS",
+    movf_3 =	"00000001DSC",
+    movt_2 =	"00010001DS",
+    movt_3 =	"00010001DSC",
+    jr_1 =	"00000008S",
+    movz_3 =	"0000000aDST",
+    movn_3 =	"0000000bDST",
+    mfhi_1 =	"00000010D",
+    mthi_1 =	"00000011S",
+    mflo_1 =	"00000012D",
+    mtlo_1 =	"00000013S",
+    mult_2 =	"00000018ST",
+    multu_2 =	"00000019ST",
+    div_3 =	"0000001aST",
+    divu_3 =	"0000001bST",
+    ddiv_3 =	mips64 and "0000001eST",
+    ddivu_3 =	mips64 and "0000001fST",
+    dmult_2 =	mips64 and "0000001cST",
+    dmultu_2 =	mips64 and "0000001dST",
+
+    -- Opcode REGIMM.
+    tgei_2 =	"04080000SI",
+    tgeiu_2 =	"04090000SI",
+    tlti_2 =	"040a0000SI",
+    tltiu_2 =	"040b0000SI",
+    teqi_2 =	"040c0000SI",
+    tnei_2 =	"040e0000SI",
+    bltzal_2 =	"04100000SB",
+    bgezal_2 =	"04110000SB",
+    bltzall_2 =	"04120000SB",
+    bgezall_2 =	"04130000SB",
+
+    -- Opcode SPECIAL2.
+    madd_2 =	"70000000ST",
+    maddu_2 =	"70000001ST",
+    mul_3 =	"70000002DST",
+    msub_2 =	"70000004ST",
+    msubu_2 =	"70000005ST",
+    clz_2 =	"70000020D=TS",
+    clo_2 =	"70000021D=TS",
+    dclz_2 =	mips64 and "70000024D=TS",
+    dclo_2 =	mips64 and "70000025D=TS",
+    sdbbp_0 =	"7000003f",
+    sdbbp_1 =	"7000003fY",
+
+    -- Opcode COP1.
+    bc1f_1 =	"45000000B",
+    bc1f_2 =	"45000000CB",
+    bc1t_1 =	"45010000B",
+    bc1t_2 =	"45010000CB",
+    bc1fl_1 =	"45020000B",
+    bc1fl_2 =	"45020000CB",
+    bc1tl_1 =	"45030000B",
+    bc1tl_2 =	"45030000CB",
+
+    ["movf.s_2"] =	"46000011FG",
+    ["movf.s_3"] =	"46000011FGC",
+    ["movt.s_2"] =	"46010011FG",
+    ["movt.s_3"] =	"46010011FGC",
+    ["movz.s_3"] =	"46000012FGT",
+    ["movn.s_3"] =	"46000013FGT",
+    ["cvt.ps.s_3"] =	"46000026FGH",
+    ["c.f.s_2"] =	"46000030GH",
+    ["c.f.s_3"] =	"46000030VGH",
+    ["c.un.s_2"] =	"46000031GH",
+    ["c.un.s_3"] =	"46000031VGH",
+    ["c.eq.s_2"] =	"46000032GH",
+    ["c.eq.s_3"] =	"46000032VGH",
+    ["c.ueq.s_2"] =	"46000033GH",
+    ["c.ueq.s_3"] =	"46000033VGH",
+    ["c.olt.s_2"] =	"46000034GH",
+    ["c.olt.s_3"] =	"46000034VGH",
+    ["c.ult.s_2"] =	"46000035GH",
+    ["c.ult.s_3"] =	"46000035VGH",
+    ["c.ole.s_2"] =	"46000036GH",
+    ["c.ole.s_3"] =	"46000036VGH",
+    ["c.ule.s_2"] =	"46000037GH",
+    ["c.ule.s_3"] =	"46000037VGH",
+    ["c.sf.s_2"] =	"46000038GH",
+    ["c.sf.s_3"] =	"46000038VGH",
+    ["c.ngle.s_2"] =	"46000039GH",
+    ["c.ngle.s_3"] =	"46000039VGH",
+    ["c.seq.s_2"] =	"4600003aGH",
+    ["c.seq.s_3"] =	"4600003aVGH",
+    ["c.ngl.s_2"] =	"4600003bGH",
+    ["c.ngl.s_3"] =	"4600003bVGH",
+    ["c.lt.s_2"] =	"4600003cGH",
+    ["c.lt.s_3"] =	"4600003cVGH",
+    ["c.nge.s_2"] =	"4600003dGH",
+    ["c.nge.s_3"] =	"4600003dVGH",
+    ["c.le.s_2"] =	"4600003eGH",
+    ["c.le.s_3"] =	"4600003eVGH",
+    ["c.ngt.s_2"] =	"4600003fGH",
+    ["c.ngt.s_3"] =	"4600003fVGH",
+    ["movf.d_2"] =	"46200011FG",
+    ["movf.d_3"] =	"46200011FGC",
+    ["movt.d_2"] =	"46210011FG",
+    ["movt.d_3"] =	"46210011FGC",
+    ["movz.d_3"] =	"46200012FGT",
+    ["movn.d_3"] =	"46200013FGT",
+    ["c.f.d_2"] =	"46200030GH",
+    ["c.f.d_3"] =	"46200030VGH",
+    ["c.un.d_2"] =	"46200031GH",
+    ["c.un.d_3"] =	"46200031VGH",
+    ["c.eq.d_2"] =	"46200032GH",
+    ["c.eq.d_3"] =	"46200032VGH",
+    ["c.ueq.d_2"] =	"46200033GH",
+    ["c.ueq.d_3"] =	"46200033VGH",
+    ["c.olt.d_2"] =	"46200034GH",
+    ["c.olt.d_3"] =	"46200034VGH",
+    ["c.ult.d_2"] =	"46200035GH",
+    ["c.ult.d_3"] =	"46200035VGH",
+    ["c.ole.d_2"] =	"46200036GH",
+    ["c.ole.d_3"] =	"46200036VGH",
+    ["c.ule.d_2"] =	"46200037GH",
+    ["c.ule.d_3"] =	"46200037VGH",
+    ["c.sf.d_2"] =	"46200038GH",
+    ["c.sf.d_3"] =	"46200038VGH",
+    ["c.ngle.d_2"] =	"46200039GH",
+    ["c.ngle.d_3"] =	"46200039VGH",
+    ["c.seq.d_2"] =	"4620003aGH",
+    ["c.seq.d_3"] =	"4620003aVGH",
+    ["c.ngl.d_2"] =	"4620003bGH",
+    ["c.ngl.d_3"] =	"4620003bVGH",
+    ["c.lt.d_2"] =	"4620003cGH",
+    ["c.lt.d_3"] =	"4620003cVGH",
+    ["c.nge.d_2"] =	"4620003dGH",
+    ["c.nge.d_3"] =	"4620003dVGH",
+    ["c.le.d_2"] =	"4620003eGH",
+    ["c.le.d_3"] =	"4620003eVGH",
+    ["c.ngt.d_2"] =	"4620003fGH",
+    ["c.ngt.d_3"] =	"4620003fVGH",
+    ["add.ps_3"] =	"46c00000FGH",
+    ["sub.ps_3"] =	"46c00001FGH",
+    ["mul.ps_3"] =	"46c00002FGH",
+    ["abs.ps_2"] =	"46c00005FG",
+    ["mov.ps_2"] =	"46c00006FG",
+    ["neg.ps_2"] =	"46c00007FG",
+    ["movf.ps_2"] =	"46c00011FG",
+    ["movf.ps_3"] =	"46c00011FGC",
+    ["movt.ps_2"] =	"46c10011FG",
+    ["movt.ps_3"] =	"46c10011FGC",
+    ["movz.ps_3"] =	"46c00012FGT",
+    ["movn.ps_3"] =	"46c00013FGT",
+    ["cvt.s.pu_2"] =	"46c00020FG",
+    ["cvt.s.pl_2"] =	"46c00028FG",
+    ["pll.ps_3"] =	"46c0002cFGH",
+    ["plu.ps_3"] =	"46c0002dFGH",
+    ["pul.ps_3"] =	"46c0002eFGH",
+    ["puu.ps_3"] =	"46c0002fFGH",
+    ["c.f.ps_2"] =	"46c00030GH",
+    ["c.f.ps_3"] =	"46c00030VGH",
+    ["c.un.ps_2"] =	"46c00031GH",
+    ["c.un.ps_3"] =	"46c00031VGH",
+    ["c.eq.ps_2"] =	"46c00032GH",
+    ["c.eq.ps_3"] =	"46c00032VGH",
+    ["c.ueq.ps_2"] =	"46c00033GH",
+    ["c.ueq.ps_3"] =	"46c00033VGH",
+    ["c.olt.ps_2"] =	"46c00034GH",
+    ["c.olt.ps_3"] =	"46c00034VGH",
+    ["c.ult.ps_2"] =	"46c00035GH",
+    ["c.ult.ps_3"] =	"46c00035VGH",
+    ["c.ole.ps_2"] =	"46c00036GH",
+    ["c.ole.ps_3"] =	"46c00036VGH",
+    ["c.ule.ps_2"] =	"46c00037GH",
+    ["c.ule.ps_3"] =	"46c00037VGH",
+    ["c.sf.ps_2"] =	"46c00038GH",
+    ["c.sf.ps_3"] =	"46c00038VGH",
+    ["c.ngle.ps_2"] =	"46c00039GH",
+    ["c.ngle.ps_3"] =	"46c00039VGH",
+    ["c.seq.ps_2"] =	"46c0003aGH",
+    ["c.seq.ps_3"] =	"46c0003aVGH",
+    ["c.ngl.ps_2"] =	"46c0003bGH",
+    ["c.ngl.ps_3"] =	"46c0003bVGH",
+    ["c.lt.ps_2"] =	"46c0003cGH",
+    ["c.lt.ps_3"] =	"46c0003cVGH",
+    ["c.nge.ps_2"] =	"46c0003dGH",
+    ["c.nge.ps_3"] =	"46c0003dVGH",
+    ["c.le.ps_2"] =	"46c0003eGH",
+    ["c.le.ps_3"] =	"46c0003eVGH",
+    ["c.ngt.ps_2"] =	"46c0003fGH",
+    ["c.ngt.ps_3"] =	"46c0003fVGH",
+
+    -- Opcode COP1X.
+    lwxc1_2 =	"4c000000FX",
+    ldxc1_2 =	"4c000001FX",
+    luxc1_2 =	"4c000005FX",
+    swxc1_2 =	"4c000008FX",
+    sdxc1_2 =	"4c000009FX",
+    suxc1_2 =	"4c00000dFX",
+    prefx_2 =	"4c00000fMX",
+    ["alnv.ps_4"] =	"4c00001eFGHS",
+    ["madd.s_4"] =	"4c000020FRGH",
+    ["madd.d_4"] =	"4c000021FRGH",
+    ["madd.ps_4"] =	"4c000026FRGH",
+    ["msub.s_4"] =	"4c000028FRGH",
+    ["msub.d_4"] =	"4c000029FRGH",
+    ["msub.ps_4"] =	"4c00002eFRGH",
+    ["nmadd.s_4"] =	"4c000030FRGH",
+    ["nmadd.d_4"] =	"4c000031FRGH",
+    ["nmadd.ps_4"] =	"4c000036FRGH",
+    ["nmsub.s_4"] =	"4c000038FRGH",
+    ["nmsub.d_4"] =	"4c000039FRGH",
+    ["nmsub.ps_4"] =	"4c00003eFRGH",
+
+  }) do map_op[k] = v end
+
+end
+
 ------------------------------------------------------------------------------
 
 local function parse_gpr(expr)
@@ -808,9 +979,11 @@ map_op[".template__"] = function(params, template, nparams)
       op = op + parse_disp(params[n]); n = n + 1
     elseif p == "X" then
       op = op + parse_index(params[n]); n = n + 1
-    elseif p == "B" or p == "J" then
+    elseif p == "B" or p == "J" or p == "K" or p == "L" then
       local mode, m, s = parse_label(params[n], false)
-      if p == "B" then m = m + 2048 end
+      if p == "J" then m = m + 0xa800
+      elseif p == "K" then m = m + 0x5000
+      elseif p == "L" then m = m + 0xa000 end
       waction("REL_"..mode, m, s, 1)
       n = n + 1
     elseif p == "A" then
@@ -833,7 +1006,7 @@ map_op[".template__"] = function(params, template, nparams)
     elseif p == "Z" then
       op = op + parse_imm(params[n], 10, 6, 0, false); n = n + 1
     elseif p == "=" then
-      op = op + shl(band(op, 0xf800), 5) -- Copy D to T for clz, clo.
+      n = n - 1 -- Re-use previous parameter for next template char.
     else
       assert(false)
     end
diff --git a/dynasm/dynasm.lua b/dynasm/dynasm.lua
index 5ec21a79..46ebfca8 100644
--- a/dynasm/dynasm.lua
+++ b/dynasm/dynasm.lua
@@ -630,6 +630,7 @@ end
 -- Load architecture-specific module.
 local function loadarch(arch)
   if not match(arch, "^[%w_]+$") then return "bad arch name" end
+  _G._map_def = map_def
   local ok, m_arch = pcall(require, "dasm_"..arch)
   if not ok then return "cannot load module: "..m_arch end
   g_arch = m_arch
diff --git a/src/Makefile b/src/Makefile
index ad80642b..386f279f 100644
--- a/src/Makefile
+++ b/src/Makefile
@@ -445,6 +445,9 @@ ifeq (arm,$(TARGET_LJARCH))
     DASM_AFLAGS+= -D IOS
   endif
 else
+ifneq (,$(findstring LJ_TARGET_MIPSR6 ,$(TARGET_TESTARCH)))
+  DASM_AFLAGS+= -D MIPSR6
+endif
 ifeq (ppc,$(TARGET_LJARCH))
   ifneq (,$(findstring LJ_ARCH_SQRT 1,$(TARGET_TESTARCH)))
     DASM_AFLAGS+= -D SQRT
diff --git a/src/jit/bcsave.lua b/src/jit/bcsave.lua
index 2553d97e..41081184 100644
--- a/src/jit/bcsave.lua
+++ b/src/jit/bcsave.lua
@@ -17,6 +17,10 @@ local bit = require("bit")
 -- Symbol name prefix for LuaJIT bytecode.
 local LJBC_PREFIX = "luaJIT_BC_"
 
+local type, assert = type, assert
+local format = string.format
+local tremove, tconcat = table.remove, table.concat
+
 ------------------------------------------------------------------------------
 
 local function usage()
@@ -63,8 +67,18 @@ local map_type = {
 }
 
 local map_arch = {
-  x86 = true, x64 = true, arm = true, arm64 = true, arm64be = true,
-  ppc = true, mips = true, mipsel = true,
+  x86 =		{ e = "le", b = 32, m = 3, p = 0x14c, },
+  x64 =		{ e = "le", b = 64, m = 62, p = 0x8664, },
+  arm =		{ e = "le", b = 32, m = 40, p = 0x1c0, },
+  arm64 =	{ e = "le", b = 64, m = 183, p = 0xaa64, },
+  arm64be =	{ e = "be", b = 64, m = 183, },
+  ppc =		{ e = "be", b = 32, m = 20, },
+  mips =	{ e = "be", b = 32, m = 8, f = 0x50001006, },
+  mipsel =	{ e = "le", b = 32, m = 8, f = 0x50001006, },
+  mips64 =	{ e = "be", b = 64, m = 8, f = 0x80000007, },
+  mips64el =	{ e = "le", b = 64, m = 8, f = 0x80000007, },
+  mips64r6 =	{ e = "be", b = 64, m = 8, f = 0xa0000407, },
+  mips64r6el =	{ e = "le", b = 64, m = 8, f = 0xa0000407, },
 }
 
 local map_os = {
@@ -73,33 +87,33 @@ local map_os = {
 }
 
 local function checkarg(str, map, err)
-  str = string.lower(str)
+  str = str:lower()
   local s = check(map[str], "unknown ", err)
-  return s == true and str or s
+  return type(s) == "string" and s or str
 end
 
 local function detecttype(str)
-  local ext = string.match(string.lower(str), "%.(%a+)$")
+  local ext = str:lower():match("%.(%a+)$")
   return map_type[ext] or "raw"
 end
 
 local function checkmodname(str)
-  check(string.match(str, "^[%w_.%-]+$"), "bad module name")
-  return string.gsub(str, "[%.%-]", "_")
+  check(str:match("^[%w_.%-]+$"), "bad module name")
+  return str:gsub("[%.%-]", "_")
 end
 
 local function detectmodname(str)
   if type(str) == "string" then
-    local tail = string.match(str, "[^/\\]+$")
+    local tail = str:match("[^/\\]+$")
     if tail then str = tail end
-    local head = string.match(str, "^(.*)%.[^.]*$")
+    local head = str:match("^(.*)%.[^.]*$")
     if head then str = head end
-    str = string.match(str, "^[%w_.%-]+")
+    str = str:match("^[%w_.%-]+")
   else
     str = nil
   end
   check(str, "cannot derive module name, use -n name")
-  return string.gsub(str, "[%.%-]", "_")
+  return str:gsub("[%.%-]", "_")
 end
 
 ------------------------------------------------------------------------------
@@ -118,7 +132,7 @@ end
 local function bcsave_c(ctx, output, s)
   local fp = savefile(output, "w")
   if ctx.type == "c" then
-    fp:write(string.format([[
+    fp:write(format([[
 #ifdef _cplusplus
 extern "C"
 #endif
@@ -128,7 +142,7 @@ __declspec(dllexport)
 const unsigned char %s%s[] = {
 ]], LJBC_PREFIX, ctx.modname))
   else
-    fp:write(string.format([[
+    fp:write(format([[
 #define %s%s_SIZE %d
 static const unsigned char %s%s[] = {
 ]], LJBC_PREFIX, ctx.modname, #s, LJBC_PREFIX, ctx.modname))
@@ -138,13 +152,13 @@ static const unsigned char %s%s[] = {
     local b = tostring(string.byte(s, i))
     m = m + #b + 1
     if m > 78 then
-      fp:write(table.concat(t, ",", 1, n), ",\n")
+      fp:write(tconcat(t, ",", 1, n), ",\n")
       n, m = 0, #b + 1
     end
     n = n + 1
     t[n] = b
   end
-  bcsave_tail(fp, output, table.concat(t, ",", 1, n).."\n};\n")
+  bcsave_tail(fp, output, tconcat(t, ",", 1, n).."\n};\n")
 end
 
 local function bcsave_elfobj(ctx, output, s, ffi)
@@ -199,12 +213,8 @@ typedef struct {
 } ELF64obj;
 ]]
   local symname = LJBC_PREFIX..ctx.modname
-  local is64, isbe = false, false
-  if ctx.arch == "x64" or ctx.arch == "arm64" or ctx.arch == "arm64be" then
-    is64 = true
-  elseif ctx.arch == "ppc" or ctx.arch == "mips" then
-    isbe = true
-  end
+  local ai = assert(map_arch[ctx.arch])
+  local is64, isbe = ai.b == 64, ai.e == "be"
 
   -- Handle different host/target endianess.
   local function f32(x) return x end
@@ -237,10 +247,8 @@ typedef struct {
   hdr.eendian = isbe and 2 or 1
   hdr.eversion = 1
   hdr.type = f16(1)
-  hdr.machine = f16(({ x86=3, x64=62, arm=40, arm64=183, arm64be=183, ppc=20, mips=8, mipsel=8 })[ctx.arch])
-  if ctx.arch == "mips" or ctx.arch == "mipsel" then
-    hdr.flags = f32(0x50001006)
-  end
+  hdr.machine = f16(ai.m)
+  hdr.flags = f32(ai.f or 0)
   hdr.version = f32(1)
   hdr.shofs = fofs(ffi.offsetof(o, "sect"))
   hdr.ehsize = f16(ffi.sizeof(hdr))
@@ -336,12 +344,8 @@ typedef struct {
 } PEobj;
 ]]
   local symname = LJBC_PREFIX..ctx.modname
-  local is64 = false
-  if ctx.arch == "x86" then
-    symname = "_"..symname
-  elseif ctx.arch == "x64" then
-    is64 = true
-  end
+  local ai = assert(map_arch[ctx.arch])
+  local is64 = ai.b == 64
   local symexport = "   /EXPORT:"..symname..",DATA "
 
   -- The file format is always little-endian. Swap if the host is big-endian.
@@ -355,7 +359,7 @@ typedef struct {
   -- Create PE object and fill in header.
   local o = ffi.new("PEobj")
   local hdr = o.hdr
-  hdr.arch = f16(({ x86=0x14c, x64=0x8664, arm=0x1c0, ppc=0x1f2, mips=0x366, mipsel=0x366 })[ctx.arch])
+  hdr.arch = f16(assert(ai.p))
   hdr.nsects = f16(2)
   hdr.symtabofs = f32(ffi.offsetof(o, "sym0"))
   hdr.nsyms = f32(6)
@@ -605,16 +609,16 @@ local function docmd(...)
   local n = 1
   local list = false
   local ctx = {
-    strip = true, arch = jit.arch, os = string.lower(jit.os),
+    strip = true, arch = jit.arch, os = jit.os:lower(),
     type = false, modname = false,
   }
   while n <= #arg do
     local a = arg[n]
-    if type(a) == "string" and string.sub(a, 1, 1) == "-" and a ~= "-" then
-      table.remove(arg, n)
+    if type(a) == "string" and a:sub(1, 1) == "-" and a ~= "-" then
+      tremove(arg, n)
       if a == "--" then break end
       for m=2,#a do
-	local opt = string.sub(a, m, m)
+	local opt = a:sub(m, m)
 	if opt == "l" then
 	  list = true
 	elseif opt == "s" then
@@ -627,13 +631,13 @@ local function docmd(...)
 	    if n ~= 1 then usage() end
 	    arg[1] = check(loadstring(arg[1]))
 	  elseif opt == "n" then
-	    ctx.modname = checkmodname(table.remove(arg, n))
+	    ctx.modname = checkmodname(tremove(arg, n))
 	  elseif opt == "t" then
-	    ctx.type = checkarg(table.remove(arg, n), map_type, "file type")
+	    ctx.type = checkarg(tremove(arg, n), map_type, "file type")
 	  elseif opt == "a" then
-	    ctx.arch = checkarg(table.remove(arg, n), map_arch, "architecture")
+	    ctx.arch = checkarg(tremove(arg, n), map_arch, "architecture")
 	  elseif opt == "o" then
-	    ctx.os = checkarg(table.remove(arg, n), map_os, "OS name")
+	    ctx.os = checkarg(tremove(arg, n), map_os, "OS name")
 	  else
 	    usage()
 	  end
diff --git a/src/jit/dis_mips.lua b/src/jit/dis_mips.lua
index a12b8e62..c003b984 100644
--- a/src/jit/dis_mips.lua
+++ b/src/jit/dis_mips.lua
@@ -19,13 +19,34 @@ local band, bor, tohex = bit.band, bit.bor, bit.tohex
 local lshift, rshift, arshift = bit.lshift, bit.rshift, bit.arshift
 
 ------------------------------------------------------------------------------
--- Primary and extended opcode maps
+-- Extended opcode maps common to all MIPS releases
 ------------------------------------------------------------------------------
 
-local map_movci = { shift = 16, mask = 1, [0] = "movfDSC", "movtDSC", }
 local map_srl = { shift = 21, mask = 1, [0] = "srlDTA", "rotrDTA", }
 local map_srlv = { shift = 6, mask = 1, [0] = "srlvDTS", "rotrvDTS", }
 
+local map_cop0 = {
+  shift = 25, mask = 1,
+  [0] = {
+    shift = 21, mask = 15,
+    [0] = "mfc0TDW", [4] = "mtc0TDW",
+    [10] = "rdpgprDT",
+    [11] = { shift = 5, mask = 1, [0] = "diT0", "eiT0", },
+    [14] = "wrpgprDT",
+  }, {
+    shift = 0, mask = 63,
+    [1] = "tlbr", [2] = "tlbwi", [6] = "tlbwr", [8] = "tlbp",
+    [24] = "eret", [31] = "deret",
+    [32] = "wait",
+  },
+}
+
+------------------------------------------------------------------------------
+-- Primary and extended opcode maps for MIPS R1-R5
+------------------------------------------------------------------------------
+
+local map_movci = { shift = 16, mask = 1, [0] = "movfDSC", "movtDSC", }
+
 local map_special = {
   shift = 0, mask = 63,
   [0] = { shift = 0, mask = -1, [0] = "nop", _ = "sllDTA" },
@@ -87,22 +108,6 @@ local map_regimm = {
   false,	false,		false,		"synciSO",
 }
 
-local map_cop0 = {
-  shift = 25, mask = 1,
-  [0] = {
-    shift = 21, mask = 15,
-    [0] = "mfc0TDW", [4] = "mtc0TDW",
-    [10] = "rdpgprDT",
-    [11] = { shift = 5, mask = 1, [0] = "diT0", "eiT0", },
-    [14] = "wrpgprDT",
-  }, {
-    shift = 0, mask = 63,
-    [1] = "tlbr", [2] = "tlbwi", [6] = "tlbwr", [8] = "tlbp",
-    [24] = "eret", [31] = "deret",
-    [32] = "wait",
-  },
-}
-
 local map_cop1s = {
   shift = 0, mask = 63,
   [0] = "add.sFGH",	"sub.sFGH",	"mul.sFGH",	"div.sFGH",
@@ -233,6 +238,208 @@ local map_pri = {
   false,	"sdc1HSO",	"sdc2TSO",	"sdTSO",
 }
 
+------------------------------------------------------------------------------
+-- Primary and extended opcode maps for MIPS R6
+------------------------------------------------------------------------------
+
+local map_mul_r6 =   { shift = 6, mask = 3, [2] = "mulDST",   [3] = "muhDST" }
+local map_mulu_r6 =  { shift = 6, mask = 3, [2] = "muluDST",  [3] = "muhuDST" }
+local map_div_r6 =   { shift = 6, mask = 3, [2] = "divDST",   [3] = "modDST" }
+local map_divu_r6 =  { shift = 6, mask = 3, [2] = "divuDST",  [3] = "moduDST" }
+local map_dmul_r6 =  { shift = 6, mask = 3, [2] = "dmulDST",  [3] = "dmuhDST" }
+local map_dmulu_r6 = { shift = 6, mask = 3, [2] = "dmuluDST", [3] = "dmuhuDST" }
+local map_ddiv_r6 =  { shift = 6, mask = 3, [2] = "ddivDST",  [3] = "dmodDST" }
+local map_ddivu_r6 = { shift = 6, mask = 3, [2] = "ddivuDST", [3] = "dmoduDST" }
+
+local map_special_r6 = {
+  shift = 0, mask = 63,
+  [0] = { shift = 0, mask = -1, [0] = "nop", _ = "sllDTA" },
+  false,	map_srl,	"sraDTA",
+  "sllvDTS",	false,		map_srlv,	"sravDTS",
+  "jrS",	"jalrD1S",	false,		false,
+  "syscallY",	"breakY",	false,		"sync",
+  "clzDS",	"cloDS",	"dclzDS",	"dcloDS",
+  "dsllvDST",	"dlsaDSTA",	"dsrlvDST",	"dsravDST",
+  map_mul_r6,	map_mulu_r6,	map_div_r6,	map_divu_r6,
+  map_dmul_r6,	map_dmulu_r6,	map_ddiv_r6,	map_ddivu_r6,
+  "addDST",	"addu|moveDST0", "subDST",	"subu|neguDS0T",
+  "andDST",	"or|moveDST0",	"xorDST",	"nor|notDST0",
+  false,	false,		"sltDST",	"sltuDST",
+  "daddDST",	"dadduDST",	"dsubDST",	"dsubuDST",
+  "tgeSTZ",	"tgeuSTZ",	"tltSTZ",	"tltuSTZ",
+  "teqSTZ",	"seleqzDST",	"tneSTZ",	"selnezDST",
+  "dsllDTA",	false,		"dsrlDTA",	"dsraDTA",
+  "dsll32DTA",	false,		"dsrl32DTA",	"dsra32DTA",
+}
+
+local map_bshfl_r6 = {
+  shift = 9, mask = 3,
+  [1] = "alignDSTa",
+  _ = {
+    shift = 6, mask = 31,
+    [0] = "bitswapDT",
+    [2] = "wsbhDT",
+    [16] = "sebDT",
+    [24] = "sehDT",
+  }
+}
+
+local map_dbshfl_r6 = {
+  shift = 9, mask = 3,
+  [1] = "dalignDSTa",
+  _ = {
+    shift = 6, mask = 31,
+    [0] = "dbitswapDT",
+    [2] = "dsbhDT",
+    [5] = "dshdDT",
+  }
+}
+
+local map_special3_r6 = {
+  shift = 0, mask = 63,
+  [0]  = "extTSAK", [1]  = "dextmTSAP", [3]  = "dextTSAK",
+  [4]  = "insTSAL", [6]  = "dinsuTSEQ", [7]  = "dinsTSAL",
+  [32] = map_bshfl_r6, [36] = map_dbshfl_r6,  [59] = "rdhwrTD",
+}
+
+local map_regimm_r6 = {
+  shift = 16, mask = 31,
+  [0] = "bltzSB", [1] = "bgezSB",
+  [6] = "dahiSI", [30] = "datiSI",
+  [23] = "sigrieI", [31] = "synciSO",
+}
+
+local map_pcrel_r6 = {
+  shift = 19, mask = 3,
+  [0] = "addiupcS2", "lwpcS2", "lwupcS2", {
+    shift = 18, mask = 1,
+    [0] = "ldpcS3", { shift = 16, mask = 3, [2] = "auipcSI", [3] = "aluipcSI" }
+  }
+}
+
+local map_cop1s_r6 = {
+  shift = 0, mask = 63,
+  [0] = "add.sFGH",	"sub.sFGH",	"mul.sFGH",	"div.sFGH",
+  "sqrt.sFG",		"abs.sFG",	"mov.sFG",	"neg.sFG",
+  "round.l.sFG",	"trunc.l.sFG",	"ceil.l.sFG",	"floor.l.sFG",
+  "round.w.sFG",	"trunc.w.sFG",	"ceil.w.sFG",	"floor.w.sFG",
+  "sel.sFGH",		false,		false,		false,
+  "seleqz.sFGH",	"recip.sFG",	"rsqrt.sFG",	"selnez.sFGH",
+  "maddf.sFGH",		"msubf.sFGH",	"rint.sFG",	"class.sFG",
+  "min.sFGH",		"mina.sFGH",	"max.sFGH",	"maxa.sFGH",
+  false,		"cvt.d.sFG",	false,		false,
+  "cvt.w.sFG",		"cvt.l.sFG",
+}
+
+local map_cop1d_r6 = {
+  shift = 0, mask = 63,
+  [0] = "add.dFGH",	"sub.dFGH",	"mul.dFGH",	"div.dFGH",
+  "sqrt.dFG",		"abs.dFG",	"mov.dFG",	"neg.dFG",
+  "round.l.dFG",	"trunc.l.dFG",	"ceil.l.dFG",	"floor.l.dFG",
+  "round.w.dFG",	"trunc.w.dFG",	"ceil.w.dFG",	"floor.w.dFG",
+  "sel.dFGH",		false,		false,		false,
+  "seleqz.dFGH",	"recip.dFG",	"rsqrt.dFG",	"selnez.dFGH",
+  "maddf.dFGH",		"msubf.dFGH",	"rint.dFG",	"class.dFG",
+  "min.dFGH",		"mina.dFGH",	"max.dFGH",	"maxa.dFGH",
+  "cvt.s.dFG",		false,		false,		false,
+  "cvt.w.dFG",		"cvt.l.dFG",
+}
+
+local map_cop1w_r6 = {
+  shift = 0, mask = 63,
+  [0] = "cmp.af.sFGH",	"cmp.un.sFGH",	"cmp.eq.sFGH",	"cmp.ueq.sFGH",
+  "cmp.lt.sFGH",	"cmp.ult.sFGH",	"cmp.le.sFGH",	"cmp.ule.sFGH",
+  "cmp.saf.sFGH",	"cmp.sun.sFGH",	"cmp.seq.sFGH",	"cmp.sueq.sFGH",
+  "cmp.slt.sFGH",	"cmp.sult.sFGH",	"cmp.sle.sFGH",	"cmp.sule.sFGH",
+  false,		"cmp.or.sFGH",	"cmp.une.sFGH",	"cmp.ne.sFGH",
+  false,		false,		false,		false,
+  false,		"cmp.sor.sFGH",	"cmp.sune.sFGH",	"cmp.sne.sFGH",
+  false,		false,		false,		false,
+  "cvt.s.wFG", "cvt.d.wFG",
+}
+
+local map_cop1l_r6 = {
+  shift = 0, mask = 63,
+  [0] = "cmp.af.dFGH",	"cmp.un.dFGH",	"cmp.eq.dFGH",	"cmp.ueq.dFGH",
+  "cmp.lt.dFGH",	"cmp.ult.dFGH",	"cmp.le.dFGH",	"cmp.ule.dFGH",
+  "cmp.saf.dFGH",	"cmp.sun.dFGH",	"cmp.seq.dFGH",	"cmp.sueq.dFGH",
+  "cmp.slt.dFGH",	"cmp.sult.dFGH",	"cmp.sle.dFGH",	"cmp.sule.dFGH",
+  false,		"cmp.or.dFGH",	"cmp.une.dFGH",	"cmp.ne.dFGH",
+  false,		false,		false,		false,
+  false,		"cmp.sor.dFGH",	"cmp.sune.dFGH",	"cmp.sne.dFGH",
+  false,		false,		false,		false,
+  "cvt.s.lFG", "cvt.d.lFG",
+}
+
+local map_cop1_r6 = {
+  shift = 21, mask = 31,
+  [0] = "mfc1TG", "dmfc1TG",	"cfc1TG",	"mfhc1TG",
+  "mtc1TG",	"dmtc1TG",	"ctc1TG",	"mthc1TG",
+  false,	"bc1eqzHB",	false,		false,
+  false,	"bc1nezHB",	false,		false,
+  map_cop1s_r6,	map_cop1d_r6,	false,		false,
+  map_cop1w_r6,	map_cop1l_r6,
+}
+
+local function maprs_popTS(rs, rt)
+  if rt == 0 then return 0 elseif rs == 0 then return 1
+  elseif rs == rt then return 2 else return 3 end
+end
+
+local map_pop06_r6 = {
+  maprs = maprs_popTS, [0] = "blezSB", "blezalcTB", "bgezalcTB", "bgeucSTB"
+}
+local map_pop07_r6 = {
+  maprs = maprs_popTS, [0] = "bgtzSB", "bgtzalcTB", "bltzalcTB", "bltucSTB"
+}
+local map_pop26_r6 = {
+  maprs = maprs_popTS, "blezcTB", "bgezcTB", "bgecSTB"
+}
+local map_pop27_r6 = {
+  maprs = maprs_popTS, "bgtzcTB", "bltzcTB", "bltcSTB"
+}
+
+local function maprs_popS(rs, rt)
+  if rs == 0 then return 0 else return 1 end
+end
+
+local map_pop66_r6 = {
+  maprs = maprs_popS, [0] = "jicTI", "beqzcSb"
+}
+local map_pop76_r6 = {
+  maprs = maprs_popS, [0] = "jialcTI", "bnezcSb"
+}
+
+local function maprs_popST(rs, rt)
+  if rs >= rt then return 0 elseif rs == 0 then return 1 else return 2 end
+end
+
+local map_pop10_r6 = {
+  maprs = maprs_popST, [0] = "bovcSTB", "beqzalcTB", "beqcSTB"
+}
+local map_pop30_r6 = {
+  maprs = maprs_popST, [0] = "bnvcSTB", "bnezalcTB", "bnecSTB"
+}
+
+local map_pri_r6 = {
+  [0] = map_special_r6,	map_regimm_r6,	"jJ",	"jalJ",
+  "beq|beqz|bST00B",	"bne|bnezST0B",		map_pop06_r6,	map_pop07_r6,
+  map_pop10_r6,	"addiu|liTS0I",	"sltiTSI",	"sltiuTSI",
+  "andiTSU",	"ori|liTS0U",	"xoriTSU",	"aui|luiTS0U",
+  map_cop0,	map_cop1_r6,	false,		false,
+  false,	false,		map_pop26_r6,	map_pop27_r6,
+  map_pop30_r6,	"daddiuTSI",	false,		false,
+  false,	"dauiTSI",	false,		map_special3_r6,
+  "lbTSO",	"lhTSO",	false,		"lwTSO",
+  "lbuTSO",	"lhuTSO",	false,		false,
+  "sbTSO",	"shTSO",	false,		"swTSO",
+  false,	false,		false,		false,
+  false,	"lwc1HSO",	"bc#",		false,
+  false,	"ldc1HSO",	map_pop66_r6,	"ldTSO",
+  false,	"swc1HSO",	"balc#",	map_pcrel_r6,
+  false,	"sdc1HSO",	map_pop76_r6,	"sdTSO",
+}
+
 ------------------------------------------------------------------------------
 
 local map_gpr = {
@@ -287,10 +494,14 @@ local function disass_ins(ctx)
   ctx.op = op
   ctx.rel = nil
 
-  local opat = map_pri[rshift(op, 26)]
+  local opat = ctx.map_pri[rshift(op, 26)]
   while type(opat) ~= "string" do
     if not opat then return unknown(ctx) end
-    opat = opat[band(rshift(op, opat.shift), opat.mask)] or opat._
+    if opat.maprs then
+      opat = opat[opat.maprs(band(rshift(op,21),31), band(rshift(op,16),31))]
+    else
+      opat = opat[band(rshift(op, opat.shift), opat.mask)] or opat._
+    end
   end
   local name, pat = match(opat, "^([a-z0-9_.]*)(.*)")
   local altname, pat2 = match(pat, "|([a-z0-9_.|]*)(.*)")
@@ -314,6 +525,8 @@ local function disass_ins(ctx)
       x = "f"..band(rshift(op, 21), 31)
     elseif p == "A" then
       x = band(rshift(op, 6), 31)
+    elseif p == "a" then
+      x = band(rshift(op, 6), 7)
     elseif p == "E" then
       x = band(rshift(op, 6), 31) + 32
     elseif p == "M" then
@@ -333,6 +546,10 @@ local function disass_ins(ctx)
       x = band(rshift(op, 11), 31) - last + 33
     elseif p == "I" then
       x = arshift(lshift(op, 16), 16)
+    elseif p == "2" then
+      x = arshift(lshift(op, 13), 11)
+    elseif p == "3" then
+      x = arshift(lshift(op, 14), 11)
     elseif p == "U" then
       x = band(op, 0xffff)
     elseif p == "O" then
@@ -342,7 +559,15 @@ local function disass_ins(ctx)
       local index = map_gpr[band(rshift(op, 16), 31)]
       operands[#operands] = format("%s(%s)", index, last)
     elseif p == "B" then
-      x = ctx.addr + ctx.pos + arshift(lshift(op, 16), 16)*4 + 4
+      x = ctx.addr + ctx.pos + arshift(lshift(op, 16), 14) + 4
+      ctx.rel = x
+      x = format("0x%08x", x)
+    elseif p == "b" then
+      x = ctx.addr + ctx.pos + arshift(lshift(op, 11), 9) + 4
+      ctx.rel = x
+      x = format("0x%08x", x)
+    elseif p == "#" then
+      x = ctx.addr + ctx.pos + arshift(lshift(op, 6), 4) + 4
       ctx.rel = x
       x = format("0x%08x", x)
     elseif p == "J" then
@@ -408,6 +633,7 @@ local function create(code, addr, out)
   ctx.disass = disass_block
   ctx.hexdump = 8
   ctx.get = get_be
+  ctx.map_pri = map_pri
   return ctx
 end
 
@@ -417,6 +643,19 @@ local function create_el(code, addr, out)
   return ctx
 end
 
+local function create_r6(code, addr, out)
+  local ctx = create(code, addr, out)
+  ctx.map_pri = map_pri_r6
+  return ctx
+end
+
+local function create_r6_el(code, addr, out)
+  local ctx = create(code, addr, out)
+  ctx.get = get_le
+  ctx.map_pri = map_pri_r6
+  return ctx
+end
+
 -- Simple API: disassemble code (a string) at address and output via out.
 local function disass(code, addr, out)
   create(code, addr, out):disass()
@@ -426,6 +665,14 @@ local function disass_el(code, addr, out)
   create_el(code, addr, out):disass()
 end
 
+local function disass_r6(code, addr, out)
+  create_r6(code, addr, out):disass()
+end
+
+local function disass_r6_el(code, addr, out)
+  create_r6_el(code, addr, out):disass()
+end
+
 -- Return register name for RID.
 local function regname(r)
   if r < 32 then return map_gpr[r] end
@@ -436,8 +683,12 @@ end
 return {
   create = create,
   create_el = create_el,
+  create_r6 = create_r6,
+  create_r6_el = create_r6_el,
   disass = disass,
   disass_el = disass_el,
+  disass_r6 = disass_r6,
+  disass_r6_el = disass_r6_el,
   regname = regname
 }
 
diff --git a/src/jit/dis_mips64r6.lua b/src/jit/dis_mips64r6.lua
new file mode 100644
index 00000000..023c05ab
--- /dev/null
+++ b/src/jit/dis_mips64r6.lua
@@ -0,0 +1,17 @@
+----------------------------------------------------------------------------
+-- LuaJIT MIPS64R6 disassembler wrapper module.
+--
+-- Copyright (C) 2005-2017 Mike Pall. All rights reserved.
+-- Released under the MIT license. See Copyright Notice in luajit.h
+----------------------------------------------------------------------------
+-- This module just exports the r6 big-endian functions from the
+-- MIPS disassembler module. All the interesting stuff is there.
+------------------------------------------------------------------------------
+
+local dis_mips = require((string.match(..., ".*%.") or "").."dis_mips")
+return {
+  create = dis_mips.create_r6,
+  disass = dis_mips.disass_r6,
+  regname = dis_mips.regname
+}
+
diff --git a/src/jit/dis_mips64r6el.lua b/src/jit/dis_mips64r6el.lua
new file mode 100644
index 00000000..f2988339
--- /dev/null
+++ b/src/jit/dis_mips64r6el.lua
@@ -0,0 +1,17 @@
+----------------------------------------------------------------------------
+-- LuaJIT MIPS64R6EL disassembler wrapper module.
+--
+-- Copyright (C) 2005-2017 Mike Pall. All rights reserved.
+-- Released under the MIT license. See Copyright Notice in luajit.h
+----------------------------------------------------------------------------
+-- This module just exports the r6 little-endian functions from the
+-- MIPS disassembler module. All the interesting stuff is there.
+------------------------------------------------------------------------------
+
+local dis_mips = require((string.match(..., ".*%.") or "").."dis_mips")
+return {
+  create = dis_mips.create_r6_el,
+  disass = dis_mips.disass_r6_el,
+  regname = dis_mips.regname
+}
+
diff --git a/src/lj_arch.h b/src/lj_arch.h
index 903d6c64..cd1a0568 100644
--- a/src/lj_arch.h
+++ b/src/lj_arch.h
@@ -330,18 +330,38 @@
 #elif LUAJIT_TARGET == LUAJIT_ARCH_MIPS32 || LUAJIT_TARGET == LUAJIT_ARCH_MIPS64
 
 #if defined(__MIPSEL__) || defined(__MIPSEL) || defined(_MIPSEL)
+#if __mips_isa_rev >= 6
+#define LJ_TARGET_MIPSR6	1
+#define LJ_TARGET_UNALIGNED	1
+#endif
 #if LUAJIT_TARGET == LUAJIT_ARCH_MIPS32
+#if LJ_TARGET_MIPSR6
+#define LJ_ARCH_NAME		"mips32r6el"
+#else
 #define LJ_ARCH_NAME		"mipsel"
+#endif
+#else
+#if LJ_TARGET_MIPSR6
+#define LJ_ARCH_NAME		"mips64r6el"
 #else
 #define LJ_ARCH_NAME		"mips64el"
 #endif
+#endif
 #define LJ_ARCH_ENDIAN		LUAJIT_LE
 #else
 #if LUAJIT_TARGET == LUAJIT_ARCH_MIPS32
+#if LJ_TARGET_MIPSR6
+#define LJ_ARCH_NAME		"mips32r6"
+#else
 #define LJ_ARCH_NAME		"mips"
+#endif
+#else
+#if LJ_TARGET_MIPSR6
+#define LJ_ARCH_NAME		"mips64r6"
 #else
 #define LJ_ARCH_NAME		"mips64"
 #endif
+#endif
 #define LJ_ARCH_ENDIAN		LUAJIT_BE
 #endif
 
@@ -377,7 +397,9 @@
 #define LJ_TARGET_UNIFYROT	2	/* Want only IR_BROR. */
 #define LJ_ARCH_NUMMODE		LJ_NUMMODE_DUAL
 
-#if _MIPS_ARCH_MIPS32R2 || _MIPS_ARCH_MIPS64R2
+#if LJ_TARGET_MIPSR6
+#define LJ_ARCH_VERSION		60
+#elif _MIPS_ARCH_MIPS32R2 || _MIPS_ARCH_MIPS64R2
 #define LJ_ARCH_VERSION		20
 #else
 #define LJ_ARCH_VERSION		10
@@ -453,8 +475,13 @@
 #if !((defined(_MIPS_SIM_ABI32) && _MIPS_SIM == _MIPS_SIM_ABI32) || (defined(_ABIO32) && _MIPS_SIM == _ABIO32))
 #error "Only o32 ABI supported for MIPS32"
 #endif
+#if LJ_TARGET_MIPSR6
+/* Not that useful, since most available r6 CPUs are 64 bit. */
+#error "No support for MIPS32R6"
+#endif
 #elif LJ_TARGET_MIPS64
 #if !((defined(_MIPS_SIM_ABI64) && _MIPS_SIM == _MIPS_SIM_ABI64) || (defined(_ABI64) && _MIPS_SIM == _ABI64))
+/* MIPS32ON64 aka n32 ABI support might be desirable, but difficult. */
 #error "Only n64 ABI supported for MIPS64"
 #endif
 #endif
diff --git a/src/lj_asm.c b/src/lj_asm.c
index c4c5dfdd..4f171edd 100644
--- a/src/lj_asm.c
+++ b/src/lj_asm.c
@@ -2112,8 +2112,8 @@ static void asm_setup_regsp(ASMState *as)
 	  ir->prev = REGSP_HINT(RID_FPRET);
 	  continue;
 	}
-	/* fallthrough */
 #endif
+      /* fallthrough */
       case IR_CALLN: case IR_CALLXS:
 #if LJ_SOFTFP
       case IR_MIN: case IR_MAX:
diff --git a/src/lj_asm_mips.h b/src/lj_asm_mips.h
index 3a4679b8..3dbe836d 100644
--- a/src/lj_asm_mips.h
+++ b/src/lj_asm_mips.h
@@ -101,7 +101,12 @@ static void asm_guard(ASMState *as, MIPSIns mi, Reg rs, Reg rt)
     as->invmcp = NULL;
     as->loopinv = 1;
     as->mcp = p+1;
+#if !LJ_TARGET_MIPSR6
     mi = mi ^ ((mi>>28) == 1 ? 0x04000000u : 0x00010000u);  /* Invert cond. */
+#else
+    mi = mi ^ ((mi>>28) == 1 ? 0x04000000u :
+	       (mi>>28) == 4 ? 0x00800000u : 0x00010000u);  /* Invert cond. */
+#endif
     target = p;  /* Patch target later in asm_loop_fixup. */
   }
   emit_ti(as, MIPSI_LI, RID_TMP, as->snapno);
@@ -410,7 +415,11 @@ static void asm_callround(ASMState *as, IRIns *ir, IRCallID id)
 {
   /* The modified regs must match with the *.dasc implementation. */
   RegSet drop = RID2RSET(RID_R1)|RID2RSET(RID_R12)|RID2RSET(RID_FPRET)|
-		RID2RSET(RID_F2)|RID2RSET(RID_F4)|RID2RSET(REGARG_FIRSTFPR);
+		RID2RSET(RID_F2)|RID2RSET(RID_F4)|RID2RSET(REGARG_FIRSTFPR)
+#if LJ_TARGET_MIPSR6
+		|RID2RSET(RID_F21)
+#endif
+		;
   if (ra_hasreg(ir->r)) rset_clear(drop, ir->r);
   ra_evictset(as, drop);
   ra_destreg(as, ir, RID_FPRET);
@@ -444,8 +453,13 @@ static void asm_tointg(ASMState *as, IRIns *ir, Reg left)
 {
   Reg tmp = ra_scratch(as, rset_exclude(RSET_FPR, left));
   Reg dest = ra_dest(as, ir, RSET_GPR);
+#if !LJ_TARGET_MIPSR6
   asm_guard(as, MIPSI_BC1F, 0, 0);
   emit_fgh(as, MIPSI_C_EQ_D, 0, tmp, left);
+#else
+  asm_guard(as, MIPSI_BC1EQZ, 0, (tmp&31));
+  emit_fgh(as, MIPSI_CMP_EQ_D, tmp, tmp, left);
+#endif
   emit_fg(as, MIPSI_CVT_D_W, tmp, tmp);
   emit_tg(as, MIPSI_MFC1, dest, tmp);
   emit_fg(as, MIPSI_CVT_W_D, tmp, left);
@@ -599,8 +613,13 @@ static void asm_conv(ASMState *as, IRIns *ir)
 		     (void *)&as->J->k64[LJ_K64_M2P64],
 		     rset_exclude(RSET_GPR, dest));
 	  emit_fg(as, MIPSI_TRUNC_L_D, tmp, left);  /* Delay slot. */
-	  emit_branch(as, MIPSI_BC1T, 0, 0, l_end);
-	  emit_fgh(as, MIPSI_C_OLT_D, 0, left, tmp);
+#if !LJ_TARGET_MIPSR6
+	 emit_branch(as, MIPSI_BC1T, 0, 0, l_end);
+	 emit_fgh(as, MIPSI_C_OLT_D, 0, left, tmp);
+#else
+	 emit_branch(as, MIPSI_BC1NEZ, 0, (left&31), l_end);
+	 emit_fgh(as, MIPSI_CMP_LT_D, left, left, tmp);
+#endif
 	  emit_lsptr(as, MIPSI_LDC1, (tmp & 31),
 		     (void *)&as->J->k64[LJ_K64_2P63],
 		     rset_exclude(RSET_GPR, dest));
@@ -611,8 +630,13 @@ static void asm_conv(ASMState *as, IRIns *ir)
 		     (void *)&as->J->k32[LJ_K32_M2P64],
 		     rset_exclude(RSET_GPR, dest));
 	  emit_fg(as, MIPSI_TRUNC_L_S, tmp, left);  /* Delay slot. */
-	  emit_branch(as, MIPSI_BC1T, 0, 0, l_end);
-	  emit_fgh(as, MIPSI_C_OLT_S, 0, left, tmp);
+#if !LJ_TARGET_MIPSR6
+	 emit_branch(as, MIPSI_BC1T, 0, 0, l_end);
+	 emit_fgh(as, MIPSI_C_OLT_S, 0, left, tmp);
+#else
+	 emit_branch(as, MIPSI_BC1NEZ, 0, (left&31), l_end);
+	 emit_fgh(as, MIPSI_CMP_LT_S, left, left, tmp);
+#endif
 	  emit_lsptr(as, MIPSI_LWC1, (tmp & 31),
 		     (void *)&as->J->k32[LJ_K32_2P63],
 		     rset_exclude(RSET_GPR, dest));
@@ -840,8 +864,12 @@ static void asm_aref(ASMState *as, IRIns *ir)
   }
   base = ra_alloc1(as, ir->op1, RSET_GPR);
   idx = ra_alloc1(as, ir->op2, rset_exclude(RSET_GPR, base));
+#if !LJ_TARGET_MIPSR6
   emit_dst(as, MIPSI_AADDU, dest, RID_TMP, base);
   emit_dta(as, MIPSI_SLL, RID_TMP, idx, 3);
+#else
+  emit_dst(as, MIPSI_ALSA | MIPSF_A(3-1), dest, idx, base);
+#endif
 }
 
 /* Inlined hash lookup. Specialized for key type and for const keys.
@@ -944,8 +972,13 @@ static void asm_href(ASMState *as, IRIns *ir, IROp merge)
     l_end = asm_exitstub_addr(as);
   }
   if (!LJ_SOFTFP && irt_isnum(kt)) {
+#if !LJ_TARGET_MIPSR6
     emit_branch(as, MIPSI_BC1T, 0, 0, l_end);
     emit_fgh(as, MIPSI_C_EQ_D, 0, tmpnum, key);
+#else
+    emit_branch(as, MIPSI_BC1NEZ, 0, (tmpnum&31), l_end);
+    emit_fgh(as, MIPSI_CMP_EQ_D, tmpnum, tmpnum, key);
+#endif
     *--as->mcp = MIPSI_NOP;  /* Avoid NaN comparison overhead. */
     emit_branch(as, MIPSI_BEQ, tmp1, RID_ZERO, l_next);
     emit_tsi(as, MIPSI_SLTIU, tmp1, tmp1, (int32_t)LJ_TISNUM);
@@ -1196,7 +1229,9 @@ static MIPSIns asm_fxloadins(IRIns *ir)
   case IRT_I16: return MIPSI_LH;
   case IRT_U16: return MIPSI_LHU;
   case IRT_NUM: lua_assert(!LJ_SOFTFP32); if (!LJ_SOFTFP) return MIPSI_LDC1;
+  /* fallthrough */
   case IRT_FLOAT: if (!LJ_SOFTFP) return MIPSI_LWC1;
+  /* fallthrough */
   default: return (LJ_64 && irt_is64(ir->t)) ? MIPSI_LD : MIPSI_LW;
   }
 }
@@ -1207,7 +1242,9 @@ static MIPSIns asm_fxstoreins(IRIns *ir)
   case IRT_I8: case IRT_U8: return MIPSI_SB;
   case IRT_I16: case IRT_U16: return MIPSI_SH;
   case IRT_NUM: lua_assert(!LJ_SOFTFP32); if (!LJ_SOFTFP) return MIPSI_SDC1;
+  /* fallthrough */
   case IRT_FLOAT: if (!LJ_SOFTFP) return MIPSI_SWC1;
+  /* fallthrough */
   default: return (LJ_64 && irt_is64(ir->t)) ? MIPSI_SD : MIPSI_SW;
   }
 }
@@ -1253,7 +1290,7 @@ static void asm_xload(ASMState *as, IRIns *ir)
 {
   Reg dest = ra_dest(as, ir,
     (!LJ_SOFTFP && irt_isfp(ir->t)) ? RSET_FPR : RSET_GPR);
-  lua_assert(!(ir->op2 & IRXLOAD_UNALIGNED));
+  lua_assert(LJ_TARGET_UNALIGNED || !(ir->op2 & IRXLOAD_UNALIGNED));
   asm_fusexref(as, asm_fxloadins(ir), dest, ir->op1, RSET_GPR, 0);
 }
 
@@ -1544,7 +1581,7 @@ static void asm_cnew(ASMState *as, IRIns *ir)
       ofs -= 4; if (LJ_BE) ir++; else ir--;
     }
 #else
-    emit_tsi(as, MIPSI_SD, ra_alloc1(as, ir->op2, allow),
+    emit_tsi(as, sz == 8 ? MIPSI_SD : MIPSI_SW, ra_alloc1(as, ir->op2, allow),
 	     RID_RET, sizeof(GCcdata));
 #endif
     lua_assert(sz == 4 || sz == 8);
@@ -1672,6 +1709,7 @@ static void asm_add(ASMState *as, IRIns *ir)
   } else
 #endif
   {
+    /* TODO MIPSR6: Fuse ADD(BSHL(a,1-4),b) or ADD(ADD(a,a),b) to MIPSI_ALSA. */
     Reg dest = ra_dest(as, ir, RSET_GPR);
     Reg right, left = ra_hintalloc(as, ir->op1, dest, RSET_GPR);
     if (irref_isk(ir->op2)) {
@@ -1716,8 +1754,12 @@ static void asm_mul(ASMState *as, IRIns *ir)
     Reg right, left = ra_alloc2(as, ir, RSET_GPR);
     right = (left >> 8); left &= 255;
     if (LJ_64 && irt_is64(ir->t)) {
+#if !LJ_TARGET_MIPSR6
       emit_dst(as, MIPSI_MFLO, dest, 0, 0);
       emit_dst(as, MIPSI_DMULT, 0, left, right);
+#else
+      emit_dst(as, MIPSI_DMUL, dest, left, right);
+#endif
     } else {
       emit_dst(as, MIPSI_MUL, dest, left, right);
     }
@@ -1801,6 +1843,7 @@ static void asm_abs(ASMState *as, IRIns *ir)
 
 static void asm_arithov(ASMState *as, IRIns *ir)
 {
+  /* TODO MIPSR6: bovc/bnvc. Caveat: no delay slot to load RID_TMP. */
   Reg right, left, tmp, dest = ra_dest(as, ir, RSET_GPR);
   lua_assert(!irt_is64(ir->t));
   if (irref_isk(ir->op2)) {
@@ -1845,9 +1888,14 @@ static void asm_mulov(ASMState *as, IRIns *ir)
 						 right), dest));
   asm_guard(as, MIPSI_BNE, RID_TMP, tmp);
   emit_dta(as, MIPSI_SRA, RID_TMP, dest, 31);
+#if !LJ_TARGET_MIPSR6
   emit_dst(as, MIPSI_MFHI, tmp, 0, 0);
   emit_dst(as, MIPSI_MFLO, dest, 0, 0);
   emit_dst(as, MIPSI_MULT, 0, left, right);
+#else
+  emit_dst(as, MIPSI_MUL, dest, left, right);
+  emit_dst(as, MIPSI_MUH, tmp, left, right);
+#endif
 }
 
 #if LJ_32 && LJ_HASFFI
@@ -2071,6 +2119,7 @@ static void asm_min_max(ASMState *as, IRIns *ir, int ismax)
     Reg dest = ra_dest(as, ir, RSET_FPR);
     Reg right, left = ra_alloc2(as, ir, RSET_FPR);
     right = (left >> 8); left &= 255;
+#if !LJ_TARGET_MIPSR6
     if (dest == left) {
       emit_fg(as, MIPSI_MOVT_D, dest, right);
     } else {
@@ -2078,19 +2127,37 @@ static void asm_min_max(ASMState *as, IRIns *ir, int ismax)
       if (dest != right) emit_fg(as, MIPSI_MOV_D, dest, right);
     }
     emit_fgh(as, MIPSI_C_OLT_D, 0, ismax ? left : right, ismax ? right : left);
+#else
+    emit_fgh(as, ismax ? MIPSI_MAX_D : MIPSI_MIN_D, dest, left, right);
+#endif
 #endif
   } else {
     Reg dest = ra_dest(as, ir, RSET_GPR);
     Reg right, left = ra_alloc2(as, ir, RSET_GPR);
     right = (left >> 8); left &= 255;
-    if (dest == left) {
-      emit_dst(as, MIPSI_MOVN, dest, right, RID_TMP);
+    if (left == right) {
+      if (dest != left) emit_move(as, dest, left);
     } else {
-      emit_dst(as, MIPSI_MOVZ, dest, left, RID_TMP);
-      if (dest != right) emit_move(as, dest, right);
+#if !LJ_TARGET_MIPSR6
+      if (dest == left) {
+	emit_dst(as, MIPSI_MOVN, dest, right, RID_TMP);
+      } else {
+	emit_dst(as, MIPSI_MOVZ, dest, left, RID_TMP);
+	if (dest != right) emit_move(as, dest, right);
+      }
+#else
+      emit_dst(as, MIPSI_OR, dest, dest, RID_TMP);
+      if (dest != right) {
+	emit_dst(as, MIPSI_SELNEZ, RID_TMP, right, RID_TMP);
+	emit_dst(as, MIPSI_SELEQZ, dest, left, RID_TMP);
+      } else {
+	emit_dst(as, MIPSI_SELEQZ, RID_TMP, left, RID_TMP);
+	emit_dst(as, MIPSI_SELNEZ, dest, right, RID_TMP);
+      }
+#endif
+      emit_dst(as, MIPSI_SLT, RID_TMP,
+	       ismax ? left : right, ismax ? right : left);
     }
-    emit_dst(as, MIPSI_SLT, RID_TMP,
-	     ismax ? left : right, ismax ? right : left);
   }
 }
 
@@ -2174,10 +2241,18 @@ static void asm_comp(ASMState *as, IRIns *ir)
 #if LJ_SOFTFP
     asm_sfpcomp(as, ir);
 #else
+#if !LJ_TARGET_MIPSR6
     Reg right, left = ra_alloc2(as, ir, RSET_FPR);
     right = (left >> 8); left &= 255;
     asm_guard(as, (op&1) ? MIPSI_BC1T : MIPSI_BC1F, 0, 0);
     emit_fgh(as, MIPSI_C_OLT_D + ((op&3) ^ ((op>>2)&1)), 0, left, right);
+#else
+    Reg tmp, right, left = ra_alloc2(as, ir, RSET_FPR);
+    right = (left >> 8); left &= 255;
+    tmp = ra_scratch(as, rset_exclude(rset_exclude(RSET_FPR, left), right));
+    asm_guard(as, (op&1) ? MIPSI_BC1NEZ : MIPSI_BC1EQZ, 0, (tmp&31));
+    emit_fgh(as, MIPSI_CMP_LT_D + ((op&3) ^ ((op>>2)&1)), tmp, left, right);
+#endif
 #endif
   } else {
     Reg right, left = ra_alloc1(as, ir->op1, RSET_GPR);
@@ -2213,9 +2288,13 @@ static void asm_equal(ASMState *as, IRIns *ir)
   if (!LJ_SOFTFP32 && irt_isnum(ir->t)) {
 #if LJ_SOFTFP
     asm_sfpcomp(as, ir);
-#else
+#elif !LJ_TARGET_MIPSR6
     asm_guard(as, (ir->o & 1) ? MIPSI_BC1T : MIPSI_BC1F, 0, 0);
     emit_fgh(as, MIPSI_C_EQ_D, 0, left, right);
+#else
+    Reg tmp = ra_scratch(as, rset_exclude(rset_exclude(RSET_FPR, left), right));
+    asm_guard(as, (ir->o & 1) ? MIPSI_BC1NEZ : MIPSI_BC1EQZ, 0, (tmp&31));
+    emit_fgh(as, MIPSI_CMP_EQ_D, tmp, left, right);
 #endif
   } else {
     asm_guard(as, (ir->o & 1) ? MIPSI_BEQ : MIPSI_BNE, left, right);
@@ -2618,7 +2697,12 @@ void lj_asm_patchexit(jit_State *J, GCtrace *T, ExitNo exitno, MCode *target)
       if (((p[-1] ^ (px-p)) & 0xffffu) == 0 &&
 	  ((p[-1] & 0xf0000000u) == MIPSI_BEQ ||
 	   (p[-1] & 0xfc1e0000u) == MIPSI_BLTZ ||
-	   (p[-1] & 0xffe00000u) == MIPSI_BC1F)) {
+#if !LJ_TARGET_MIPSR6
+	   (p[-1] & 0xffe00000u) == MIPSI_BC1F
+#else
+	   (p[-1] & 0xff600000u) == MIPSI_BC1EQZ
+#endif
+	  )) {
 	ptrdiff_t delta = target - p;
 	if (((delta + 0x8000) >> 16) == 0) {  /* Patch in-range branch. */
 	patchbranch:
diff --git a/src/lj_emit_mips.h b/src/lj_emit_mips.h
index bb6593ae..313d030a 100644
--- a/src/lj_emit_mips.h
+++ b/src/lj_emit_mips.h
@@ -138,6 +138,7 @@ static void emit_loadu64(ASMState *as, Reg r, uint64_t u64)
     } else if (emit_kdelta1(as, r, (intptr_t)u64)) {
       return;
     } else {
+      /* TODO MIPSR6: Use DAHI & DATI. Caveat: sign-extension. */
       if ((u64 & 0xffff)) {
 	emit_tsi(as, MIPSI_ORI, r, r, u64 & 0xffff);
       }
@@ -236,10 +237,22 @@ static void emit_jmp(ASMState *as, MCode *target)
 static void emit_call(ASMState *as, void *target, int needcfa)
 {
   MCode *p = as->mcp;
-  *--p = MIPSI_NOP;
+#if LJ_TARGET_MIPSR6
+  ptrdiff_t delta = (char *)target - (char *)p;
+  if ((((delta>>2) + 0x02000000) >> 26) == 0) {  /* Try compact call first. */
+    *--p = MIPSI_BALC | (((uintptr_t)delta >>2) & 0x03ffffffu);
+    as->mcp = p;
+    return;
+  }
+#endif
+  *--p = MIPSI_NOP;  /* Delay slot. */
   if ((((uintptr_t)target ^ (uintptr_t)p) >> 28) == 0) {
+#if !LJ_TARGET_MIPSR6
     *--p = (((uintptr_t)target & 1) ? MIPSI_JALX : MIPSI_JAL) |
 	   (((uintptr_t)target >>2) & 0x03ffffffu);
+#else
+    *--p = MIPSI_JAL | (((uintptr_t)target >>2) & 0x03ffffffu);
+#endif
   } else {  /* Target out of range: need indirect call. */
     *--p = MIPSI_JALR | MIPSF_S(RID_CFUNCADDR);
     needcfa = 1;
diff --git a/src/lj_jit.h b/src/lj_jit.h
index 5d41ef4b..0d9a9afe 100644
--- a/src/lj_jit.h
+++ b/src/lj_jit.h
@@ -51,10 +51,18 @@
 /* Names for the CPU-specific flags. Must match the order above. */
 #define JIT_F_CPU_FIRST		JIT_F_MIPSXXR2
 #if LJ_TARGET_MIPS32
+#if LJ_TARGET_MIPSR6
+#define JIT_F_CPUSTRING		"\010MIPS32R6"
+#else
 #define JIT_F_CPUSTRING		"\010MIPS32R2"
+#endif
+#else
+#if LJ_TARGET_MIPSR6
+#define JIT_F_CPUSTRING		"\010MIPS64R6"
 #else
 #define JIT_F_CPUSTRING		"\010MIPS64R2"
 #endif
+#endif
 #else
 #define JIT_F_CPU_FIRST		0
 #define JIT_F_CPUSTRING		""
diff --git a/src/lj_target_mips.h b/src/lj_target_mips.h
index 740687b3..84db6012 100644
--- a/src/lj_target_mips.h
+++ b/src/lj_target_mips.h
@@ -223,6 +223,8 @@ typedef enum MIPSIns {
   MIPSI_ADDIU = 0x24000000,
   MIPSI_SUB = 0x00000022,
   MIPSI_SUBU = 0x00000023,
+
+#if !LJ_TARGET_MIPSR6
   MIPSI_MUL = 0x70000002,
   MIPSI_DIV = 0x0000001a,
   MIPSI_DIVU = 0x0000001b,
@@ -232,6 +234,15 @@ typedef enum MIPSIns {
   MIPSI_MFHI = 0x00000010,
   MIPSI_MFLO = 0x00000012,
   MIPSI_MULT = 0x00000018,
+#else
+  MIPSI_MUL = 0x00000098,
+  MIPSI_MUH = 0x000000d8,
+  MIPSI_DIV = 0x0000009a,
+  MIPSI_DIVU = 0x0000009b,
+
+  MIPSI_SELEQZ = 0x00000035,
+  MIPSI_SELNEZ = 0x00000037,
+#endif
 
   MIPSI_SLL = 0x00000000,
   MIPSI_SRL = 0x00000002,
@@ -253,8 +264,13 @@ typedef enum MIPSIns {
   MIPSI_B = 0x10000000,
   MIPSI_J = 0x08000000,
   MIPSI_JAL = 0x0c000000,
+#if !LJ_TARGET_MIPSR6
   MIPSI_JALX = 0x74000000,
   MIPSI_JR = 0x00000008,
+#else
+  MIPSI_JR = 0x00000009,
+  MIPSI_BALC = 0xe8000000,
+#endif
   MIPSI_JALR = 0x0000f809,
 
   MIPSI_BEQ = 0x10000000,
@@ -282,15 +298,23 @@ typedef enum MIPSIns {
 
   /* MIPS64 instructions. */
   MIPSI_DADD = 0x0000002c,
-  MIPSI_DADDI = 0x60000000,
   MIPSI_DADDU = 0x0000002d,
   MIPSI_DADDIU = 0x64000000,
   MIPSI_DSUB = 0x0000002e,
   MIPSI_DSUBU = 0x0000002f,
+#if !LJ_TARGET_MIPSR6
   MIPSI_DDIV = 0x0000001e,
   MIPSI_DDIVU = 0x0000001f,
   MIPSI_DMULT = 0x0000001c,
   MIPSI_DMULTU = 0x0000001d,
+#else
+  MIPSI_DDIV = 0x0000009e,
+  MIPSI_DMOD = 0x000000de,
+  MIPSI_DDIVU = 0x0000009f,
+  MIPSI_DMODU = 0x000000df,
+  MIPSI_DMUL = 0x0000009c,
+  MIPSI_DMUH = 0x000000dc,
+#endif
 
   MIPSI_DSLL = 0x00000038,
   MIPSI_DSRL = 0x0000003a,
@@ -308,6 +332,11 @@ typedef enum MIPSIns {
   MIPSI_ASUBU = LJ_32 ? MIPSI_SUBU : MIPSI_DSUBU,
   MIPSI_AL = LJ_32 ? MIPSI_LW : MIPSI_LD,
   MIPSI_AS = LJ_32 ? MIPSI_SW : MIPSI_SD,
+#if LJ_TARGET_MIPSR6
+  MIPSI_LSA = 0x00000005,
+  MIPSI_DLSA = 0x00000015,
+  MIPSI_ALSA = LJ_32 ? MIPSI_LSA : MIPSI_DLSA,
+#endif
 
   /* Extract/insert instructions. */
   MIPSI_DEXTM = 0x7c000001,
@@ -317,18 +346,19 @@ typedef enum MIPSIns {
   MIPSI_DINSU = 0x7c000006,
   MIPSI_DINS = 0x7c000007,
 
-  MIPSI_RINT_D = 0x4620001a,
-  MIPSI_RINT_S = 0x4600001a,
-  MIPSI_RINT = 0x4400001a,
   MIPSI_FLOOR_D = 0x4620000b,
-  MIPSI_CEIL_D = 0x4620000a,
-  MIPSI_ROUND_D = 0x46200008,
 
   /* FP instructions. */
   MIPSI_MOV_S = 0x46000006,
   MIPSI_MOV_D = 0x46200006,
+#if !LJ_TARGET_MIPSR6
   MIPSI_MOVT_D = 0x46210011,
   MIPSI_MOVF_D = 0x46200011,
+#else
+  MIPSI_MIN_D = 0x4620001C,
+  MIPSI_MAX_D = 0x4620001E,
+  MIPSI_SEL_D = 0x46200010,
+#endif
 
   MIPSI_ABS_D = 0x46200005,
   MIPSI_NEG_D = 0x46200007,
@@ -363,15 +393,23 @@ typedef enum MIPSIns {
   MIPSI_DMTC1 = 0x44a00000,
   MIPSI_DMFC1 = 0x44200000,
 
+#if !LJ_TARGET_MIPSR6
   MIPSI_BC1F = 0x45000000,
   MIPSI_BC1T = 0x45010000,
-
   MIPSI_C_EQ_D = 0x46200032,
   MIPSI_C_OLT_S = 0x46000034,
   MIPSI_C_OLT_D = 0x46200034,
   MIPSI_C_ULT_D = 0x46200035,
   MIPSI_C_OLE_D = 0x46200036,
   MIPSI_C_ULE_D = 0x46200037,
+#else
+  MIPSI_BC1EQZ = 0x45200000,
+  MIPSI_BC1NEZ = 0x45a00000,
+  MIPSI_CMP_EQ_D = 0x46a00002,
+  MIPSI_CMP_LT_S = 0x46800004,
+  MIPSI_CMP_LT_D = 0x46a00004,
+#endif
+
 } MIPSIns;
 
 #endif
diff --git a/src/vm_mips64.dasc b/src/vm_mips64.dasc
index 1682c81e..91c12216 100644
--- a/src/vm_mips64.dasc
+++ b/src/vm_mips64.dasc
@@ -83,6 +83,10 @@
 |
 |.define FRET1,		f0
 |.define FRET2,		f2
+|
+|.define FTMP0,		f20
+|.define FTMP1,		f21
+|.define FTMP2,		f22
 |.endif
 |
 |// Stack layout while in interpreter. Must match with lj_frame.h.
@@ -310,10 +314,10 @@
 |.endmacro
 |
 |// Assumes DISPATCH is relative to GL.
-#define DISPATCH_GL(field)      (GG_DISP2G + (int)offsetof(global_State, field))
-#define DISPATCH_J(field)       (GG_DISP2J + (int)offsetof(jit_State, field))
-#define GG_DISP2GOT             (GG_OFS(got) - GG_OFS(dispatch))
-#define DISPATCH_GOT(name)      (GG_DISP2GOT + sizeof(void*)*LJ_GOT_##name)
+#define DISPATCH_GL(field)	(GG_DISP2G + (int)offsetof(global_State, field))
+#define DISPATCH_J(field)	(GG_DISP2J + (int)offsetof(jit_State, field))
+#define GG_DISP2GOT		(GG_OFS(got) - GG_OFS(dispatch))
+#define DISPATCH_GOT(name)	(GG_DISP2GOT + sizeof(void*)*LJ_GOT_##name)
 |
 #define PC2PROTO(field)  ((int)offsetof(GCproto, field)-(int)sizeof(GCproto))
 |
@@ -492,8 +496,15 @@ static void build_subroutines(BuildCtx *ctx)
   |7:  // Less results wanted.
   |  subu TMP0, RD, TMP2
   |  dsubu TMP0, BASE, TMP0		// Either keep top or shrink it.
+  |.if MIPSR6
+  |  selnez TMP0, TMP0, TMP2		// LUA_MULTRET+1 case?
+  |  seleqz BASE, BASE, TMP2
+  |  b <3
+  |.  or BASE, BASE, TMP0
+  |.else
   |  b <3
   |.  movn BASE, TMP0, TMP2		// LUA_MULTRET+1 case?
+  |.endif
   |
   |8:  // Corner case: need to grow stack for filling up results.
   |  // This can happen if:
@@ -1121,11 +1132,16 @@ static void build_subroutines(BuildCtx *ctx)
   |.endmacro
   |
   |// Inlined GC threshold check. Caveat: uses TMP0 and TMP1 and has delay slot!
+  |// MIPSR6: no delay slot, but a forbidden slot.
   |.macro ffgccheck
   |  ld TMP0, DISPATCH_GL(gc.total)(DISPATCH)
   |  ld TMP1, DISPATCH_GL(gc.threshold)(DISPATCH)
   |  dsubu AT, TMP0, TMP1
+  |.if MIPSR6
+  |  bgezalc AT, ->fff_gcstep
+  |.else
   |  bgezal AT, ->fff_gcstep
+  |.endif
   |.endmacro
   |
   |//-- Base library: checks -----------------------------------------------
@@ -1153,7 +1169,13 @@ static void build_subroutines(BuildCtx *ctx)
   |  sltu TMP1, TISNUM, TMP0
   |  not TMP2, TMP0
   |  li TMP3, ~LJ_TISNUM
+  |.if MIPSR6
+  |  selnez TMP2, TMP2, TMP1
+  |  seleqz TMP3, TMP3, TMP1
+  |  or TMP2, TMP2, TMP3
+  |.else
   |  movz TMP2, TMP3, TMP1
+  |.endif
   |  dsll TMP2, TMP2, 3
   |  daddu TMP2, CFUNC:RB, TMP2
   |  b ->fff_restv
@@ -1165,7 +1187,11 @@ static void build_subroutines(BuildCtx *ctx)
   |  gettp TMP2, CARG1
   |  daddiu TMP0, TMP2, -LJ_TTAB
   |  daddiu TMP1, TMP2, -LJ_TUDATA
+  |.if MIPSR6
+  |  selnez TMP0, TMP1, TMP0
+  |.else
   |  movn TMP0, TMP1, TMP0
+  |.endif
   |  bnez TMP0, >6
   |.  cleartp TAB:CARG1
   |1:  // Field metatable must be at same offset for GCtab and GCudata!
@@ -1204,7 +1230,13 @@ static void build_subroutines(BuildCtx *ctx)
   |
   |6:
   |  sltiu AT, TMP2, LJ_TISNUM
+  |.if MIPSR6
+  |  selnez TMP0, TISNUM, AT
+  |  seleqz AT, TMP2, AT
+  |  or TMP2, TMP0, AT
+  |.else
   |  movn TMP2, TISNUM, AT
+  |.endif
   |  dsll TMP2, TMP2, 3
   |   dsubu TMP0, DISPATCH, TMP2
   |  b <2
@@ -1266,8 +1298,13 @@ static void build_subroutines(BuildCtx *ctx)
   |  or TMP0, TMP0, TMP1
   |  bnez TMP0, ->fff_fallback
   |.  sd BASE, L->base			// Add frame since C call can throw.
+  |.if MIPSR6
+  |  sd PC, SAVE_PC			// Redundant (but a defined value).
+  |  ffgccheck
+  |.else
   |  ffgccheck
   |.  sd PC, SAVE_PC			// Redundant (but a defined value).
+  |.endif
   |  load_got lj_strfmt_number
   |  move CARG1, L
   |  call_intern lj_strfmt_number	// (lua_State *L, cTValue *o)
@@ -1438,8 +1475,15 @@ static void build_subroutines(BuildCtx *ctx)
   |  addiu AT, TMP0, -LUA_YIELD
   |    daddu CARG3, CARG2, TMP0
   |   daddiu TMP3, CARG2, 8
+  |.if MIPSR6
+  |  seleqz CARG2, CARG2, AT
+  |  selnez TMP3, TMP3, AT
+  |  bgtz AT, ->fff_fallback		// st > LUA_YIELD?
+  |.  or CARG2, TMP3, CARG2
+  |.else
   |  bgtz AT, ->fff_fallback		// st > LUA_YIELD?
   |.  movn CARG2, TMP3, AT
+  |.endif
   |   xor TMP2, TMP2, CARG3
   |  bnez TMP1, ->fff_fallback		// cframe != 0?
   |.  or AT, TMP2, TMP0
@@ -1751,7 +1795,7 @@ static void build_subroutines(BuildCtx *ctx)
   |  b ->fff_res
   |.  li RD, (2+1)*8
   |
-  |.macro math_minmax, name, intins, fpins
+  |.macro math_minmax, name, intins, intinsc, fpins
   |  .ffunc_1 name
   |  daddu TMP3, BASE, NARGS8:RC
   |  checkint CARG1, >5
@@ -1763,7 +1807,13 @@ static void build_subroutines(BuildCtx *ctx)
   |.  sextw CARG1, CARG1
   |  lw CARG2, LO(TMP2)
   |.  slt AT, CARG1, CARG2
+  |.if MIPSR6
+  |  intins TMP1, CARG2, AT
+  |  intinsc CARG1, CARG1, AT
+  |  or CARG1, CARG1, TMP1
+  |.else
   |  intins CARG1, CARG2, AT
+  |.endif
   |  daddiu TMP2, TMP2, 8
   |  zextw CARG1, CARG1
   |  b <1
@@ -1799,13 +1849,23 @@ static void build_subroutines(BuildCtx *ctx)
   |.  nop
   |7:
   |.if FPU
+  |.if MIPSR6
+  |  fpins FRET1, FRET1, FARG1
+  |.else
   |  c.olt.d FRET1, FARG1
   |  fpins FRET1, FARG1
+  |.endif
   |.else
   |  bal ->vm_sfcmpolt
   |.  nop
+  |.if MIPSR6
+  |  intins AT, CARG2, CRET1
+  |  intinsc CARG1, CARG1, CRET1
+  |  or CARG1, CARG1, AT
+  |.else
   |  intins CARG1, CARG2, CRET1
   |.endif
+  |.endif
   |  b <6
   |.  daddiu TMP2, TMP2, 8
   |
@@ -1825,8 +1885,13 @@ static void build_subroutines(BuildCtx *ctx)
   |
   |.endmacro
   |
-  |  math_minmax math_min, movz, movf.d
-  |  math_minmax math_max, movn, movt.d
+  |.if MIPSR6
+  |  math_minmax math_min, seleqz, selnez, min.d
+  |  math_minmax math_max, selnez, seleqz, max.d
+  |.else
+  |  math_minmax math_min, movz, _, movf.d
+  |  math_minmax math_max, movn, _, movt.d
+  |.endif
   |
   |//-- String library -----------------------------------------------------
   |
@@ -1851,7 +1916,9 @@ static void build_subroutines(BuildCtx *ctx)
   |
   |.ffunc string_char			// Only handle the 1-arg case here.
   |  ffgccheck
+  |.if not MIPSR6
   |.  nop
+  |.endif
   |  ld CARG1, 0(BASE)
   |  gettp TMP0, CARG1
   |  xori AT, NARGS8:RC, 8		// Exactly 1 argument.
@@ -1881,7 +1948,9 @@ static void build_subroutines(BuildCtx *ctx)
   |
   |.ffunc string_sub
   |  ffgccheck
+  |.if not MIPSR6
   |.  nop
+  |.endif
   |  addiu AT, NARGS8:RC, -16
   |  ld TMP0, 0(BASE)
   |  bltz AT, ->fff_fallback
@@ -1904,8 +1973,30 @@ static void build_subroutines(BuildCtx *ctx)
   |  addiu TMP0, CARG2, 1
   |  addu TMP1, CARG4, TMP0
   |   slt TMP3, CARG3, r0
+  |.if MIPSR6
+  |  seleqz CARG4, CARG4, AT
+  |  selnez TMP1, TMP1, AT
+  |  or CARG4, TMP1, CARG4		// if (end < 0) end += len+1
+  |.else
   |  movn CARG4, TMP1, AT		// if (end < 0) end += len+1
+  |.endif
   |   addu TMP1, CARG3, TMP0
+  |.if MIPSR6
+  |   selnez TMP1, TMP1, TMP3
+  |   seleqz CARG3, CARG3, TMP3
+  |   or CARG3, TMP1, CARG3		// if (start < 0) start += len+1
+  |   li TMP2, 1
+  |  slt AT, CARG4, r0
+  |   slt TMP3, r0, CARG3
+  |  seleqz CARG4, CARG4, AT		// if (end < 0) end = 0
+  |   selnez CARG3, CARG3, TMP3
+  |   seleqz TMP2, TMP2, TMP3
+  |   or CARG3, TMP2, CARG3		// if (start < 1) start = 1
+  |  slt AT, CARG2, CARG4
+  |  seleqz CARG4, CARG4, AT
+  |  selnez CARG2, CARG2, AT
+  |  or CARG4, CARG2, CARG4		// if (end > len) end = len
+  |.else
   |   movn CARG3, TMP1, TMP3		// if (start < 0) start += len+1
   |   li TMP2, 1
   |  slt AT, CARG4, r0
@@ -1914,6 +2005,7 @@ static void build_subroutines(BuildCtx *ctx)
   |   movz CARG3, TMP2, TMP3		// if (start < 1) start = 1
   |  slt AT, CARG2, CARG4
   |  movn CARG4, CARG2, AT		// if (end > len) end = len
+  |.endif
   |   daddu CARG2, STR:CARG1, CARG3
   |  subu CARG3, CARG4, CARG3		// len = end - start
   |   daddiu CARG2, CARG2, sizeof(GCstr)-1
@@ -1975,7 +2067,13 @@ static void build_subroutines(BuildCtx *ctx)
   |  slt AT, CARG1, r0
   |  dsrlv CRET1, TMP0, CARG3
   |  dsubu TMP0, r0, CRET1
+  |.if MIPSR6
+  |  selnez TMP0, TMP0, AT
+  |  seleqz CRET1, CRET1, AT
+  |  or CRET1, CRET1, TMP0
+  |.else
   |  movn CRET1, TMP0, AT
+  |.endif
   |  jr ra
   |.  zextw CRET1, CRET1
   |1:
@@ -1998,14 +2096,28 @@ static void build_subroutines(BuildCtx *ctx)
   |  slt AT, CARG1, r0
   |  dsrlv CRET1, CRET2, TMP0
   |  dsubu CARG1, r0, CRET1
+  |.if MIPSR6
+  |  seleqz CRET1, CRET1, AT
+  |  selnez CARG1, CARG1, AT
+  |  or CRET1, CRET1, CARG1
+  |.else
   |  movn CRET1, CARG1, AT
+  |.endif
   |  li CARG1, 64
   |  subu TMP0, CARG1, TMP0
   |  dsllv CRET2, CRET2, TMP0	// Integer check.
   |  sextw AT, CRET1
   |  xor AT, CRET1, AT		// Range check.
   |  jr ra
+  |.if MIPSR6
+  |  seleqz AT, AT, CRET2
+  |  selnez CRET2, CRET2, CRET2
+  |  jr ra
+  |.  or CRET2, AT, CRET2
+  |.else
+  |  jr ra
   |.  movz CRET2, AT, CRET2
+  |.endif
   |1:
   |  jr ra
   |.  li CRET2, 1
@@ -2515,15 +2627,22 @@ static void build_subroutines(BuildCtx *ctx)
   |
   |// Hard-float round to integer.
   |// Modifies AT, TMP0, FRET1, FRET2, f4. Keeps all others incl. FARG1.
+  |// MIPSR6: Modifies FTMP1, too.
   |.macro vm_round_hf, func
   |  lui TMP0, 0x4330			// Hiword of 2^52 (double).
   |  dsll TMP0, TMP0, 32
   |  dmtc1 TMP0, f4
   |  abs.d FRET2, FARG1			// |x|
   |    dmfc1 AT, FARG1
+  |.if MIPSR6
+  |  cmp.lt.d FTMP1, FRET2, f4
+  |   add.d FRET1, FRET2, f4		// (|x| + 2^52) - 2^52
+  |  bc1eqz FTMP1, >1			// Truncate only if |x| < 2^52.
+  |.else
   |  c.olt.d 0, FRET2, f4
   |   add.d FRET1, FRET2, f4		// (|x| + 2^52) - 2^52
   |  bc1f 0, >1				// Truncate only if |x| < 2^52.
+  |.endif
   |.  sub.d FRET1, FRET1, f4
   |    slt AT, AT, r0
   |.if "func" == "ceil"
@@ -2534,16 +2653,38 @@ static void build_subroutines(BuildCtx *ctx)
   |.if "func" == "trunc"
   |   dsll TMP0, TMP0, 32
   |   dmtc1 TMP0, f4
+  |.if MIPSR6
+  |  cmp.lt.d FTMP1, FRET2, FRET1	// |x| < result?
+  |   sub.d FRET2, FRET1, f4
+  |  sel.d  FTMP1, FRET1, FRET2		// If yes, subtract +1.
+  |  dmtc1 AT, FRET1
+  |  neg.d FRET2, FTMP1
+  |  jr ra
+  |.  sel.d FRET1, FTMP1, FRET2		// Merge sign bit back in.
+  |.else
   |  c.olt.d 0, FRET2, FRET1		// |x| < result?
   |   sub.d FRET2, FRET1, f4
   |  movt.d FRET1, FRET2, 0		// If yes, subtract +1.
   |  neg.d FRET2, FRET1
   |  jr ra
   |.  movn.d FRET1, FRET2, AT		// Merge sign bit back in.
+  |.endif
   |.else
   |  neg.d FRET2, FRET1
   |   dsll TMP0, TMP0, 32
   |   dmtc1 TMP0, f4
+  |.if MIPSR6
+  |  dmtc1 AT, FTMP1
+  |  sel.d FTMP1, FRET1, FRET2
+  |.if "func" == "ceil"
+  |  cmp.lt.d FRET1, FTMP1, FARG1	// x > result?
+  |.else
+  |  cmp.lt.d FRET1, FARG1, FTMP1	// x < result?
+  |.endif
+  |   sub.d FRET2, FTMP1, f4		// If yes, subtract +-1.
+  |  jr ra
+  |.  sel.d FRET1, FTMP1, FRET2
+  |.else
   |  movn.d FRET1, FRET2, AT		// Merge sign bit back in.
   |.if "func" == "ceil"
   |  c.olt.d 0, FRET1, FARG1		// x > result?
@@ -2554,6 +2695,7 @@ static void build_subroutines(BuildCtx *ctx)
   |  jr ra
   |.  movt.d FRET1, FRET2, 0
   |.endif
+  |.endif
   |1:
   |  jr ra
   |.  mov.d FRET1, FARG1
@@ -2698,7 +2840,7 @@ static void build_subroutines(BuildCtx *ctx)
   |.  li CRET1, 0
   |.endif
   |
-  |.macro sfmin_max, name, intins
+  |.macro sfmin_max, name, intins, intinsc
   |->vm_sf .. name:
   |.if JIT and not FPU
   |  move TMP2, ra
@@ -2707,13 +2849,25 @@ static void build_subroutines(BuildCtx *ctx)
   |  move ra, TMP2
   |  move TMP0, CRET1
   |  move CRET1, CARG1
+  |.if MIPSR6
+  |  intins CRET1, CRET1, TMP0
+  |  intinsc TMP0, CARG2, TMP0
+  |  jr ra
+  |.  or CRET1, CRET1, TMP0
+  |.else
   |  jr ra
   |.  intins CRET1, CARG2, TMP0
   |.endif
+  |.endif
   |.endmacro
   |
-  |  sfmin_max min, movz
-  |  sfmin_max max, movn
+  |.if MIPSR6
+  |  sfmin_max min, selnez, seleqz
+  |  sfmin_max max, seleqz, selnez
+  |.else
+  |  sfmin_max min, movz, _
+  |  sfmin_max max, movn, _
+  |.endif
   |
   |//-----------------------------------------------------------------------
   |//-- Miscellaneous functions --------------------------------------------
@@ -2882,7 +3036,11 @@ static void build_ins(BuildCtx *ctx, BCOp op, int defop)
     |    lui TMP3, (-(BCBIAS_J*4 >> 16) & 65535)
     |  slt AT, CARG1, CARG2
     |    addu TMP2, TMP2, TMP3
+    |.if MIPSR6
+    |  movop TMP2, TMP2, AT
+    |.else
     |  movop TMP2, r0, AT
+    |.endif
     |1:
     |  daddu PC, PC, TMP2
     |  ins_next
@@ -2900,16 +3058,28 @@ static void build_ins(BuildCtx *ctx, BCOp op, int defop)
     |.endif
     |3:  // RA and RD are both numbers.
     |.if FPU
-    |  fcomp f20, f22
+    |.if MIPSR6
+    |  fcomp FTMP0, FTMP0, FTMP2
+    |   addu TMP2, TMP2, TMP3
+    |  mfc1 TMP3, FTMP0
+    |  b <1
+    |.  fmovop TMP2, TMP2, TMP3
+    |.else
+    |  fcomp FTMP0, FTMP2
     |   addu TMP2, TMP2, TMP3
     |  b <1
     |.  fmovop TMP2, r0
+    |.endif
     |.else
     |  bal sfcomp
     |.   addu TMP2, TMP2, TMP3
     |  b <1
+    |.if MIPSR6
+    |.  movop TMP2, TMP2, CRET1
+    |.else
     |.  movop TMP2, r0, CRET1
     |.endif
+    |.endif
     |
     |4:  // RA is a number, RD is not a number.
     |  bne CARG4, TISNUM, ->vmeta_comp
@@ -2956,15 +3126,27 @@ static void build_ins(BuildCtx *ctx, BCOp op, int defop)
     |.endif
     |.endmacro
     |
+    |.if MIPSR6
+    if (op == BC_ISLT) {
+      |  bc_comp FTMP0, FTMP2, CARG1, CARG2, selnez, selnez, cmp.lt.d, ->vm_sfcmpolt
+    } else if (op == BC_ISGE) {
+      |  bc_comp FTMP0, FTMP2, CARG1, CARG2, seleqz, seleqz, cmp.lt.d, ->vm_sfcmpolt
+    } else if (op == BC_ISLE) {
+      |  bc_comp FTMP2, FTMP0, CARG2, CARG1, seleqz, seleqz, cmp.ult.d, ->vm_sfcmpult
+    } else {
+      |  bc_comp FTMP2, FTMP0, CARG2, CARG1, selnez, selnez, cmp.ult.d, ->vm_sfcmpult
+    }
+    |.else
     if (op == BC_ISLT) {
-      |  bc_comp f20, f22, CARG1, CARG2, movz, movf, c.olt.d, ->vm_sfcmpolt
+      |  bc_comp FTMP0, FTMP2, CARG1, CARG2, movz, movf, c.olt.d, ->vm_sfcmpolt
     } else if (op == BC_ISGE) {
-      |  bc_comp f20, f22, CARG1, CARG2, movn, movt, c.olt.d, ->vm_sfcmpolt
+      |  bc_comp FTMP0, FTMP2, CARG1, CARG2, movn, movt, c.olt.d, ->vm_sfcmpolt
     } else if (op == BC_ISLE) {
-      |  bc_comp f22, f20, CARG2, CARG1, movn, movt, c.ult.d, ->vm_sfcmpult
+      |  bc_comp FTMP2, FTMP0, CARG2, CARG1, movn, movt, c.ult.d, ->vm_sfcmpult
     } else {
-      |  bc_comp f22, f20, CARG2, CARG1, movz, movf, c.ult.d, ->vm_sfcmpult
+      |  bc_comp FTMP2, FTMP0, CARG2, CARG1, movz, movf, c.ult.d, ->vm_sfcmpult
     }
+    |.endif
     break;
 
   case BC_ISEQV: case BC_ISNEV:
@@ -3010,7 +3192,11 @@ static void build_ins(BuildCtx *ctx, BCOp op, int defop)
     |2:  // Check if the tags are the same and it's a table or userdata.
     |  xor AT, CARG3, CARG4			// Same type?
     |  sltiu TMP0, CARG3, LJ_TISTABUD+1		// Table or userdata?
+    |.if MIPSR6
+    |  seleqz TMP0, TMP0, AT
+    |.else
     |  movn TMP0, r0, AT
+    |.endif
     if (vk) {
       |  beqz TMP0, <1
     } else {
@@ -3060,11 +3246,19 @@ static void build_ins(BuildCtx *ctx, BCOp op, int defop)
     |   lui TMP3, (-(BCBIAS_J*4 >> 16) & 65535)
     |  xor TMP1, CARG1, CARG2
     |   addu TMP2, TMP2, TMP3
+    |.if MIPSR6
+    if (vk) {
+      |  seleqz TMP2, TMP2, TMP1
+    } else {
+      |  selnez TMP2, TMP2, TMP1
+    }
+    |.else
     if (vk) {
       |  movn TMP2, r0, TMP1
     } else {
       |  movz TMP2, r0, TMP1
     }
+    |.endif
     |  daddu PC, PC, TMP2
     |  ins_next
     break;
@@ -3091,6 +3285,19 @@ static void build_ins(BuildCtx *ctx, BCOp op, int defop)
     |  bne CARG4, TISNUM, >6
     |.   addu TMP2, TMP2, TMP3
     |  xor AT, CARG1, CARG2
+    |.if MIPSR6
+    if (vk) {
+      | seleqz TMP2, TMP2, AT
+      |1:
+      |  daddu PC, PC, TMP2
+      |2:
+    } else {
+      |  selnez TMP2, TMP2, AT
+      |1:
+      |2:
+      |  daddu PC, PC, TMP2
+    }
+    |.else
     if (vk) {
       | movn TMP2, r0, AT
       |1:
@@ -3102,6 +3309,7 @@ static void build_ins(BuildCtx *ctx, BCOp op, int defop)
       |2:
       |  daddu PC, PC, TMP2
     }
+    |.endif
     |  ins_next
     |
     |3:  // RA is not an integer.
@@ -3114,30 +3322,49 @@ static void build_ins(BuildCtx *ctx, BCOp op, int defop)
     |.   addu TMP2, TMP2, TMP3
     |  sltu AT, CARG4, TISNUM
     |.if FPU
-    |  ldc1 f20, 0(RA)
-    |   ldc1 f22, 0(RD)
+    |  ldc1 FTMP0, 0(RA)
+    |   ldc1 FTMP2, 0(RD)
     |.endif
     |  beqz AT, >5
     |.  nop
     |4:  // RA and RD are both numbers.
     |.if FPU
-    |  c.eq.d f20, f22
+    |.if MIPSR6
+    |  cmp.eq.d FTMP0, FTMP0, FTMP2
+    |  dmfc1 TMP1, FTMP0
+    |  b <1
+    if (vk) {
+      |.  selnez TMP2, TMP2, TMP1
+    } else {
+      |.  seleqz TMP2, TMP2, TMP1
+    }
+    |.else
+    |  c.eq.d FTMP0, FTMP2
     |  b <1
     if (vk) {
       |.  movf TMP2, r0
     } else {
       |.  movt TMP2, r0
     }
+    |.endif
     |.else
     |  bal ->vm_sfcmpeq
     |.  nop
     |  b <1
+    |.if MIPSR6
+    if (vk) {
+      |.  selnez TMP2, TMP2, CRET1
+    } else {
+      |.  seleqz TMP2, TMP2, CRET1
+    }
+    |.else
     if (vk) {
       |.  movz TMP2, r0, CRET1
     } else {
       |.  movn TMP2, r0, CRET1
     }
     |.endif
+    |.endif
     |
     |5:  // RA is a number, RD is not a number.
     |.if FFI
@@ -3147,9 +3374,9 @@ static void build_ins(BuildCtx *ctx, BCOp op, int defop)
     |.endif
     |  // RA is a number, RD is an integer. Convert RD to a number.
     |.if FPU
-    |.  lwc1 f22, LO(RD)
+    |.  lwc1 FTMP2, LO(RD)
     |  b <4
-    |.  cvt.d.w f22, f22
+    |.  cvt.d.w FTMP2, FTMP2
     |.else
     |.  sextw CARG2, CARG2
     |  bal ->vm_sfi2d_2
@@ -3167,10 +3394,10 @@ static void build_ins(BuildCtx *ctx, BCOp op, int defop)
     |.endif
     |  // RA is an integer, RD is a number. Convert RA to a number.
     |.if FPU
-    |.  lwc1 f20, LO(RA)
-    |   ldc1 f22, 0(RD)
+    |.  lwc1 FTMP0, LO(RA)
+    |   ldc1 FTMP2, 0(RD)
     |  b <4
-    |   cvt.d.w f20, f20
+    |   cvt.d.w FTMP0, FTMP0
     |.else
     |.  sextw CARG1, CARG1
     |  bal ->vm_sfi2d_1
@@ -3213,11 +3440,19 @@ static void build_ins(BuildCtx *ctx, BCOp op, int defop)
     |  decode_RD4b TMP2
     |  lui TMP3, (-(BCBIAS_J*4 >> 16) & 65535)
     |  addu TMP2, TMP2, TMP3
+    |.if MIPSR6
+    if (vk) {
+      |  seleqz TMP2, TMP2, TMP0
+    } else {
+      |  selnez TMP2, TMP2, TMP0
+    }
+    |.else
     if (vk) {
       |  movn TMP2, r0, TMP0
     } else {
       |  movz TMP2, r0, TMP0
     }
+    |.endif
     |  daddu PC, PC, TMP2
     |  ins_next
     break;
@@ -3236,11 +3471,19 @@ static void build_ins(BuildCtx *ctx, BCOp op, int defop)
       |   decode_RD4b TMP2
       |   lui TMP3, (-(BCBIAS_J*4 >> 16) & 65535)
       |   addu TMP2, TMP2, TMP3
+      |.if MIPSR6
+      if (op == BC_IST) {
+	|  selnez TMP2, TMP2, TMP0;
+      } else {
+	|  seleqz TMP2, TMP2, TMP0;
+      }
+      |.else
       if (op == BC_IST) {
 	|  movz TMP2, r0, TMP0
       } else {
 	|  movn TMP2, r0, TMP0
       }
+      |.endif
       |  daddu PC, PC, TMP2
     } else {
       |  ld CRET1, 0(RD)
@@ -3483,9 +3726,15 @@ static void build_ins(BuildCtx *ctx, BCOp op, int defop)
     |  bltz TMP1, ->vmeta_arith
     |.  daddu RA, BASE, RA
     |.elif "intins" == "mult"
+    |.if MIPSR6
+    |.  nop
+    |  mul CRET1, CARG3, CARG4
+    |  muh TMP2, CARG3, CARG4
+    |.else
     |.  intins CARG3, CARG4
     |  mflo CRET1
     |  mfhi TMP2
+    |.endif
     |  sra TMP1, CRET1, 31
     |  bne TMP1, TMP2, ->vmeta_arith
     |.  daddu RA, BASE, RA
@@ -3508,16 +3757,16 @@ static void build_ins(BuildCtx *ctx, BCOp op, int defop)
     |.endif
     |
     |5:  // Check for two numbers.
-    |  .FPU ldc1 f20, 0(RB)
+    |  .FPU ldc1 FTMP0, 0(RB)
     |  sltu AT, TMP0, TISNUM
     |   sltu TMP0, TMP1, TISNUM
-    |  .FPU ldc1 f22, 0(RC)
+    |  .FPU ldc1 FTMP2, 0(RC)
     |   and AT, AT, TMP0
     |   beqz AT, ->vmeta_arith
     |.   daddu RA, BASE, RA
     |
     |.if FPU
-    |  fpins FRET1, f20, f22
+    |  fpins FRET1, FTMP0, FTMP2
     |.elif "fpcall" == "sfpmod"
     |  sfpmod
     |.else
@@ -3847,7 +4096,13 @@ static void build_ins(BuildCtx *ctx, BCOp op, int defop)
       |  li TMP0, 0x801
       |  addiu AT, CARG2, -0x7ff
       |   srl CARG3, RD, 14
+      |.if MIPSR6
+      |  seleqz TMP0, TMP0, AT
+      |  selnez CARG2, CARG2, AT
+      |  or CARG2, CARG2, TMP0
+      |.else
       |  movz CARG2, TMP0, AT
+      |.endif
       |  // (lua_State *L, int32_t asize, uint32_t hbits)
       |  call_intern lj_tab_new
       |.  move CARG1, L
@@ -4128,7 +4383,7 @@ static void build_ins(BuildCtx *ctx, BCOp op, int defop)
     |  daddu NODE:TMP2, NODE:TMP2, TMP1	// node = tab->node + (idx*32-idx*8)
     |   settp STR:RC, TMP3		// Tagged key to look for.
     |.if FPU
-    |   ldc1 f20, 0(RA)
+    |   ldc1 FTMP0, 0(RA)
     |.else
     |   ld CRET1, 0(RA)
     |.endif
@@ -4144,7 +4399,7 @@ static void build_ins(BuildCtx *ctx, BCOp op, int defop)
     |  andi AT, TMP3, LJ_GC_BLACK	// isblack(table)
     |  bnez AT, >7
     |.if FPU
-    |.  sdc1 f20, NODE:TMP2->val
+    |.  sdc1 FTMP0, NODE:TMP2->val
     |.else
     |.  sd CRET1, NODE:TMP2->val
     |.endif
@@ -4185,7 +4440,7 @@ static void build_ins(BuildCtx *ctx, BCOp op, int defop)
     |  ld BASE, L->base
     |.if FPU
     |  b <3				// No 2nd write barrier needed.
-    |.  sdc1 f20, 0(CRET1)
+    |.  sdc1 FTMP0, 0(CRET1)
     |.else
     |  ld CARG1, 0(RA)
     |  b <3				// No 2nd write barrier needed.
@@ -4528,7 +4783,13 @@ static void build_ins(BuildCtx *ctx, BCOp op, int defop)
     |  ld CARG1, 0(RC)
     |  sltu AT, RC, TMP3
     |    daddiu RC, RC, 8
+    |.if MIPSR6
+    |  selnez CARG1, CARG1, AT
+    |  seleqz AT, TISNIL, AT
+    |  or CARG1, CARG1, AT
+    |.else
     |  movz CARG1, TISNIL, AT
+    |.endif
     |  sd CARG1, 0(RA)
     |  sltu AT, RA, TMP2
     |  bnez AT, <1
@@ -4717,7 +4978,13 @@ static void build_ins(BuildCtx *ctx, BCOp op, int defop)
       |  dext AT, CRET1, 31, 0
       |  slt CRET1, CARG2, CARG3
       |  slt TMP1, CARG3, CARG2
+      |.if MIPSR6
+      |  selnez TMP1, TMP1, AT
+      |  seleqz CRET1, CRET1, AT
+      |  or CRET1, CRET1, TMP1
+      |.else
       |  movn CRET1, TMP1, AT
+      |.endif
     } else {
       |  bne CARG3, TISNUM, >5
       |.  ld CARG2, FORL_STEP*8(RA)	// STEP CARG2 - CARG4 type
@@ -4733,20 +5000,34 @@ static void build_ins(BuildCtx *ctx, BCOp op, int defop)
       |  slt CRET1, CRET1, CARG1
       |  slt AT, CARG2, r0
       |   slt TMP0, TMP0, r0		// ((y^a) & (y^b)) < 0: overflow.
+      |.if MIPSR6
+      |  selnez TMP1, TMP1, AT
+      |  seleqz CRET1, CRET1, AT
+      |  or CRET1, CRET1, TMP1
+      |.else
       |  movn CRET1, TMP1, AT
+      |.endif
       |   or CRET1, CRET1, TMP0
       |  zextw CARG1, CARG1
       |  settp CARG1, TISNUM
     }
     |1:
     if (op == BC_FORI) {
+      |.if MIPSR6
+      |  selnez TMP2, TMP2, CRET1
+      |.else
       |  movz TMP2, r0, CRET1
+      |.endif
       |  daddu PC, PC, TMP2
     } else if (op == BC_JFORI) {
       |  daddu PC, PC, TMP2
       |  lhu RD, -4+OFS_RD(PC)
     } else if (op == BC_IFORL) {
+      |.if MIPSR6
+      |  seleqz TMP2, TMP2, CRET1
+      |.else
       |  movn TMP2, r0, CRET1
+      |.endif
       |  daddu PC, PC, TMP2
     }
     if (vk) {
@@ -4776,6 +5057,14 @@ static void build_ins(BuildCtx *ctx, BCOp op, int defop)
       |  and AT, AT, TMP0
       |  beqz AT, ->vmeta_for
       |.  slt TMP3, TMP3, r0
+      |.if MIPSR6
+      |   dmtc1 TMP3, FTMP2
+      |  cmp.lt.d FTMP0, f0, f2
+      |  cmp.lt.d FTMP1, f2, f0
+      |  sel.d FTMP2, FTMP1, FTMP0
+      |  b <1
+      |.  dmfc1 CRET1, FTMP2
+      |.else
       |  c.ole.d 0, f0, f2
       |  c.ole.d 1, f2, f0
       |  li CRET1, 1
@@ -4783,12 +5072,25 @@ static void build_ins(BuildCtx *ctx, BCOp op, int defop)
       |  movt AT, r0, 1
       |  b <1
       |.  movn CRET1, AT, TMP3
+      |.endif
     } else {
       |  ldc1 f0, FORL_IDX*8(RA)
       |   ldc1 f4, FORL_STEP*8(RA)
       |    ldc1 f2, FORL_STOP*8(RA)
       |   ld TMP3, FORL_STEP*8(RA)
       |  add.d f0, f0, f4
+      |.if MIPSR6
+      |   slt TMP3, TMP3, r0
+      |   dmtc1 TMP3, FTMP2
+      |  cmp.lt.d FTMP0, f0, f2
+      |  cmp.lt.d FTMP1, f2, f0
+      |  sel.d FTMP2, FTMP1, FTMP0
+      |  dmfc1 CRET1, FTMP2
+      if (op == BC_IFORL) {
+	|  seleqz TMP2, TMP2, CRET1
+	|  daddu PC, PC, TMP2
+      }
+      |.else
       |  c.ole.d 0, f0, f2
       |  c.ole.d 1, f2, f0
       |   slt TMP3, TMP3, r0
@@ -4801,6 +5103,7 @@ static void build_ins(BuildCtx *ctx, BCOp op, int defop)
 	|  movn TMP2, r0, CRET1
 	|  daddu PC, PC, TMP2
       }
+      |.endif
       |  sdc1 f0, FORL_IDX*8(RA)
       |  ins_next1
       |  b <2
@@ -4976,8 +5279,17 @@ static void build_ins(BuildCtx *ctx, BCOp op, int defop)
     |  ld TMP0, 0(RA)
     |  sltu AT, RA, RC			// Less args than parameters?
     |  move CARG1, TMP0
+    |.if MIPSR6
+    |  selnez TMP0, TMP0, AT
+    |  seleqz TMP3, TISNIL, AT
+    |  or TMP0, TMP0, TMP3
+    |  seleqz TMP3, CARG1, AT
+    |  selnez CARG1, TISNIL, AT
+    |  or CARG1, CARG1, TMP3
+    |.else
     |  movz TMP0, TISNIL, AT		// Clear missing parameters.
     |  movn CARG1, TISNIL, AT		// Clear old fixarg slot (help the GC).
+    |.endif
     |    addiu TMP2, TMP2, -1
     |  sd TMP0, 16(TMP1)
     |    daddiu TMP1, TMP1, 8

commit dfa692b746c9de067857d5fc992a41730be3d99a
Author: Mike Pall <mike>
Date:   Tue Jan 14 11:08:42 2020 +0100

    Fix string.char() recording with no arguments.

diff --git a/src/lj_ffrecord.c b/src/lj_ffrecord.c
index c673d650..b61af94d 100644
--- a/src/lj_ffrecord.c
+++ b/src/lj_ffrecord.c
@@ -866,6 +866,8 @@ static void LJ_FASTCALL recff_string_char(jit_State *J, RecordFFData *rd)
     for (i = 0; J->base[i] != 0; i++)
       tr = emitir(IRT(IR_BUFPUT, IRT_PGC), tr, J->base[i]);
     J->base[0] = emitir(IRT(IR_BUFSTR, IRT_STR), tr, hdr);
+  } else if (i == 0) {
+    J->base[0] = lj_ir_kstr(J, &J2G(J)->strempty);
   }
   UNUSED(rd);
 }

commit e49863eda13d095b1a78fd4ca0fd3a6a9a17d782
Author: Mike Pall <mike>
Date:   Tue Jan 14 11:07:07 2020 +0100

    Followup fix for embedded bytecode loader.

diff --git a/src/lj_lex.c b/src/lj_lex.c
index 1c9923cd..0b58c35c 100644
--- a/src/lj_lex.c
+++ b/src/lj_lex.c
@@ -51,6 +51,7 @@ static LJ_NOINLINE LexChar lex_more(LexState *ls)
   if (sz >= LJ_MAX_BUF) {
     if (sz != ~(size_t)0) lj_err_mem(ls->L);
     sz = ~(uintptr_t)0 - (uintptr_t)p;
+    if (sz >= LJ_MAX_BUF) sz = LJ_MAX_BUF-1;
     ls->endmark = 1;
   }
   ls->pe = p + sz;

commit 1357a25f81f520bf1be104d65d006f403d517ea5
Merge: 0bee44c9 82033996
Author: Mike Pall <mike>
Date:   Mon Jan 13 14:50:30 2020 +0100

    Merge branch 'master' into v2.1

commit 820339960123dc78a7ce03edf53fcf4fdae0e55d
Author: Mike Pall <mike>
Date:   Mon Jan 13 14:28:43 2020 +0100

    Fix embedded bytecode loader.

diff --git a/src/lj_bcread.c b/src/lj_bcread.c
index 6a462bd6..62695ef4 100644
--- a/src/lj_bcread.c
+++ b/src/lj_bcread.c
@@ -80,6 +80,7 @@ static LJ_NOINLINE void bcread_fill(LexState *ls, MSize len, int need)
       ls->current = -1;  /* Only bad if we get called again. */
       break;
     }
+    if (size >= LJ_MAX_MEM - ls->sb.n) lj_err_mem(ls->L);
     if (ls->sb.n) {  /* Append to buffer. */
       MSize n = ls->sb.n + (MSize)size;
       bcread_resize(ls, n < len ? len : n);
@@ -467,7 +468,7 @@ GCproto *lj_bcread(LexState *ls)
     setprotoV(L, L->top, pt);
     incr_top(L);
   }
-  if ((int32_t)ls->n > 0 || L->top-1 != bcread_oldtop(L, ls))
+  if ((ls->n && !ls->endmark) || L->top-1 != bcread_oldtop(L, ls))
     bcread_error(ls, LJ_ERR_BCBAD);
   /* Pop off last prototype. */
   L->top--;
diff --git a/src/lj_lex.c b/src/lj_lex.c
index 1d063f8f..ecfcc015 100644
--- a/src/lj_lex.c
+++ b/src/lj_lex.c
@@ -49,6 +49,10 @@ static int fillbuf(LexState *ls)
   size_t sz;
   const char *buf = ls->rfunc(ls->L, ls->rdata, &sz);
   if (buf == NULL || sz == 0) return END_OF_STREAM;
+  if (sz >= LJ_MAX_MEM) {
+    if (sz != ~(size_t)0) lj_err_mem(ls->L);
+    ls->endmark = 1;
+  }
   ls->n = (MSize)sz - 1;
   ls->p = buf;
   return char2int(*(ls->p++));
@@ -382,6 +386,7 @@ int lj_lex_setup(lua_State *L, LexState *ls)
   ls->lookahead = TK_eof;  /* No look-ahead token. */
   ls->linenumber = 1;
   ls->lastline = 1;
+  ls->endmark = 0;
   lj_str_resizebuf(ls->L, &ls->sb, LJ_MIN_SBUF);
   next(ls);  /* Read-ahead first char. */
   if (ls->current == 0xef && ls->n >= 2 && char2int(ls->p[0]) == 0xbb &&
diff --git a/src/lj_lex.h b/src/lj_lex.h
index 41c03f93..f2346593 100644
--- a/src/lj_lex.h
+++ b/src/lj_lex.h
@@ -72,6 +72,7 @@ typedef struct LexState {
   BCInsLine *bcstack;	/* Stack for bytecode instructions/line numbers. */
   MSize sizebcstack;	/* Size of bytecode stack. */
   uint32_t level;	/* Syntactical nesting level. */
+  int endmark;		/* Trust bytecode end marker, even if not at EOF. */
 } LexState;
 
 LJ_FUNC int lj_lex_setup(lua_State *L, LexState *ls);

commit 38cb695de87cfeadcba5eeaf57f39e41d529aa1f
Author: Thibault Charbonnier <thibaultcha@me.com>
Date:   Mon Jan 6 14:49:05 2020 -0800

    travis-ci: add -DLUAJIT_DISABLE_GC64 mode to the tests matrix.

diff --git a/.travis.yml b/.travis.yml
index 35d107be..e009903c 100644
--- a/.travis.yml
+++ b/.travis.yml
@@ -35,7 +35,7 @@ env:
   - LUAJIT_XCFLAGS="$LUAJIT_COMMON_XCFLAGS"
   - LUAJIT_XCFLAGS="-DLUAJIT_ENABLE_LUA52COMPAT $LUAJIT_COMMON_XCFLAGS" LUA52=1
   - LUAJIT_XCFLAGS="-DLUAJIT_USE_VALGRIND -DLUAJIT_USE_SYSMALLOC -DLUAJIT_ENABLE_LUA52COMPAT $LUAJIT_COMMON_XCFLAGS" LUA52=1 FLAGS=-v
-  - LUAJIT_XCFLAGS="-DLUAJIT_USE_GC64 -DLUAJIT_ENABLE_LUA52COMPAT $LUAJIT_COMMON_XCFLAGS" LUA52=1
+  - LUAJIT_XCFLAGS="-DLUAJIT_DISABLE_GC64 -DLUAJIT_ENABLE_LUA52COMPAT $LUAJIT_COMMON_XCFLAGS" LUA52=1
 
 install:
   - git clone https://github.com/openresty/luajit2-test-suite.git ../luajit2-test-suite
------ diff log end --------
** Summary: check here https://github.com/openresty/luajit2
===================== END LuaJIT =================================
New Commit	: lua-cjson: 22 commits since '2.1.0.8'
------ diff log --------
commit f8e36f87fc7d90be0612e8e53407f56e217fe49b
Author: Yichun Zhang (agentzh) <yichun@openresty.com>
Date:   Thu Jul 9 22:59:52 2020 -0700

    added -g by default.

diff --git a/Makefile b/Makefile
index 2361028..55c2142 100644
--- a/Makefile
+++ b/Makefile
@@ -15,7 +15,7 @@ LUA_VERSION =       5.1
 TARGET =            cjson.so
 PREFIX =            /usr/local
 #CFLAGS =            -g -Wall -pedantic -fno-inline
-CFLAGS =            -O3 -Wall -pedantic -DNDEBUG
+CFLAGS =            -O3 -Wall -pedantic -DNDEBUG -g
 CJSON_CFLAGS =      -fpic
 CJSON_LDFLAGS =     -shared
 LUA_INCLUDE_DIR ?=   $(PREFIX)/include

commit 461c7ef23a49062d4b1bf0e1afb3be294d007861
Author: leaf corcoran <leafot@gmail.com>
Date:   Sun Sep 22 13:21:45 2019 -0700

    write sort_json, use it on perl tests to prevent hash table ordering failures

diff --git a/tests/agentzh.t b/tests/agentzh.t
index 7591902..2e7c8ce 100644
--- a/tests/agentzh.t
+++ b/tests/agentzh.t
@@ -66,8 +66,9 @@ print(cjson.encode({arr = empty_arr}))
 === TEST 6: empty_array_mt and empty tables as objects (explicit)
 --- lua
 local cjson = require "cjson"
+local sort_json = require "tests.sort_json"
 local empty_arr = setmetatable({}, cjson.empty_array_mt)
-print(cjson.encode({obj = {}, arr = empty_arr}))
+print(sort_json(cjson.encode({obj = {}, arr = empty_arr})))
 --- out
 {"arr":[],"obj":{}}
 
@@ -76,6 +77,7 @@ print(cjson.encode({obj = {}, arr = empty_arr}))
 === TEST 7: empty_array_mt and empty tables as objects (explicit)
 --- lua
 local cjson = require "cjson"
+local sort_json = require "tests.sort_json"
 cjson.encode_empty_table_as_object(true)
 local empty_arr = setmetatable({}, cjson.empty_array_mt)
 local data = {
@@ -88,15 +90,16 @@ local data = {
     }
   }
 }
-print(cjson.encode(data))
+print(sort_json(cjson.encode(data)))
 --- out
-{"foo":{"foobar":{"obj":{},"arr":[]},"obj":{}},"arr":[]}
+{"arr":[],"foo":{"foobar":{"arr":[],"obj":{}},"obj":{}}}
 
 
 
 === TEST 8: empty_array_mt on non-empty tables
 --- lua
 local cjson = require "cjson"
+local sort_json = require "tests.sort_json"
 cjson.encode_empty_table_as_object(true)
 local array = {"hello", "world", "lua"}
 setmetatable(array, cjson.empty_array_mt)
@@ -110,9 +113,9 @@ local data = {
     }
   }
 }
-print(cjson.encode(data))
+print(sort_json(cjson.encode(data)))
 --- out
-{"foo":{"foobar":{"obj":{},"arr":[]},"obj":{}},"arr":["hello","world","lua"]}
+{"arr":["hello","world","lua"],"foo":{"foobar":{"arr":[],"obj":{}},"obj":{}}}
 
 
 
diff --git a/tests/sort_json.lua b/tests/sort_json.lua
new file mode 100644
index 0000000..c95ab3c
--- /dev/null
+++ b/tests/sort_json.lua
@@ -0,0 +1,61 @@
+-- NOTE: This will only work for simple tests. It doesn't parse strings so if
+-- you put any symbols like {?[], inside of a string literal then it will break
+-- The point of this function is to test basic structures, and not test JSON
+-- strings
+
+local function sort_callback(str)
+  local inside = str:sub(2, -2)
+
+  local parts = {}
+  local buffer = ""
+  local pos = 1
+
+  while true do
+    if pos > #inside then
+      break
+    end
+
+    local append
+
+    local parens = inside:match("^%b{}", pos)
+    if parens then
+      pos = pos + #parens
+      append = sort_callback(parens)
+    else
+      local array = inside:match("^%b[]", pos)
+      if array then
+        pos = pos + #array
+        append = array
+      else
+        local front = inside:sub(pos, pos)
+        pos = pos + 1
+
+        if front == "," then
+          table.insert(parts, buffer)
+          buffer = ""
+        else
+          append = front
+        end
+      end
+    end
+
+    if append then
+      buffer = buffer .. append
+    end
+  end
+
+  if buffer ~= "" then
+    table.insert(parts, buffer)
+  end
+
+  table.sort(parts)
+
+  return "{" .. table.concat(parts, ",") .. "}"
+end
+
+local function sort_json(str)
+  return (str:gsub("%b{}", sort_callback))
+end
+
+
+return sort_json

commit dbcfb92e12e9016060d1907a2556cc61e82f467d
Author: leaf corcoran <leafot@gmail.com>
Date:   Sun Sep 22 11:13:37 2019 -0700

    run with gcc and clang

diff --git a/.github/workflows/test.yml b/.github/workflows/test.yml
index fc8a49e..a2076f1 100644
--- a/.github/workflows/test.yml
+++ b/.github/workflows/test.yml
@@ -7,6 +7,7 @@ jobs:
     strategy:
       fail-fast: false
       matrix:
+        cc: ["gcc", "clang"]
         luaVersion: ["5.1", "5.2", "5.3", "luajit", "luajit-openresty"]
         include:
           - luaVersion: "luajit"
@@ -21,17 +22,24 @@ jobs:
     steps:
     - uses: actions/checkout@master
 
-    - uses: leafo/gh-actions-lua@v3
+    - uses: leafo/gh-actions-lua@master
+      env:
+        CC: ${{ matrix.cc }}
       with:
         luaVersion: ${{ matrix.luaVersion }}
+        luaCompileFlags: CC=${{ matrix.cc }}
 
     - uses: leafo/gh-actions-luarocks@v2
 
     - name: runtests.sh
+      env:
+        CC: ${{ matrix.cc }}
       run: |
         LUA_DIR=.lua ${{ matrix.runtestEnv }} ./runtests.sh PREFIX=.lua ${{ matrix.runtestArgs }}
 
     - name: setup prove
+      env:
+        CC: ${{ matrix.cc }}
       run: |
         make PREFIX=.lua ${{ matrix.runtestArgs }}
         sudo apt-get install -q valgrind libipc-run3-perl cppcheck cpanminus

commit c3bc1a1c171b002289946794dd187977bf3370d6
Author: leaf corcoran <leafot@gmail.com>
Date:   Sun Sep 22 11:03:30 2019 -0700

    ignore dtoa.c for cppcheck, don't share lua headers (breaks due to define)

diff --git a/.github/workflows/test.yml b/.github/workflows/test.yml
index 45c0c4e..fc8a49e 100644
--- a/.github/workflows/test.yml
+++ b/.github/workflows/test.yml
@@ -38,7 +38,7 @@ jobs:
         sudo cpanm --notest Test::Base Test::LongString
 
     - name: cppcheck
-      run: cppcheck -I .lua/include -i .lua/ -i .install/ --force --error-exitcode=1 --enable=warning .
+      run: cppcheck -i .lua/ -i .install/ -i dtoa.c --force --error-exitcode=1 --enable=warning .
 
     - name: prove
       run: LUA_BIN=lua prove -Itests tests

commit fde219d00e6be5bce6f219d0620fe27c0d81ed87
Author: leaf corcoran <leafot@gmail.com>
Date:   Sun Sep 22 10:49:17 2019 -0700

    bring cppcheck back

diff --git a/.github/workflows/test.yml b/.github/workflows/test.yml
index 4c3f64c..45c0c4e 100644
--- a/.github/workflows/test.yml
+++ b/.github/workflows/test.yml
@@ -34,9 +34,12 @@ jobs:
     - name: setup prove
       run: |
         make PREFIX=.lua ${{ matrix.runtestArgs }}
-        sudo apt-get install valgrind libipc-run3-perl cppcheck cpanminus
+        sudo apt-get install -q valgrind libipc-run3-perl cppcheck cpanminus
         sudo cpanm --notest Test::Base Test::LongString
 
+    - name: cppcheck
+      run: cppcheck -I .lua/include -i .lua/ -i .install/ --force --error-exitcode=1 --enable=warning .
+
     - name: prove
       run: LUA_BIN=lua prove -Itests tests
 

commit 760db1bf7beac29f6fbf124e76d3eb630b544ce7
Author: leaf corcoran <leafot@gmail.com>
Date:   Sun Sep 22 09:57:50 2019 -0700

    attempt to run openresty perl tests

diff --git a/.github/workflows/test.yml b/.github/workflows/test.yml
index c0fd8ee..4c3f64c 100644
--- a/.github/workflows/test.yml
+++ b/.github/workflows/test.yml
@@ -27,10 +27,22 @@ jobs:
 
     - uses: leafo/gh-actions-luarocks@v2
 
-    - name: test
+    - name: runtests.sh
       run: |
         LUA_DIR=.lua ${{ matrix.runtestEnv }} ./runtests.sh PREFIX=.lua ${{ matrix.runtestArgs }}
 
+    - name: setup prove
+      run: |
+        make PREFIX=.lua ${{ matrix.runtestArgs }}
+        sudo apt-get install valgrind libipc-run3-perl cppcheck cpanminus
+        sudo cpanm --notest Test::Base Test::LongString
+
+    - name: prove
+      run: LUA_BIN=lua prove -Itests tests
+
+    - name: prove (valgrind)
+      run: LUA_BIN=lua TEST_LUA_USE_VALGRIND=1 prove -Itests tests
+
     - name: build
       run: |
         luarocks make
diff --git a/tests/TestLua.pm b/tests/TestLua.pm
index 64372ad..e13bfd3 100644
--- a/tests/TestLua.pm
+++ b/tests/TestLua.pm
@@ -32,12 +32,13 @@ sub run_test ($) {
     my ($res, $err);
 
     my @cmd;
+    my $lua_bin = $ENV{LUA_BIN} || "luajit";
 
     if ($ENV{TEST_LUA_USE_VALGRIND}) {
         warn "$name\n";
-        @cmd =  ('valgrind', '-q', '--leak-check=full', 'luajit', 'test_case.lua');
+        @cmd =  ('valgrind', '-q', '--leak-check=full', $lua_bin, 'test_case.lua');
     } else {
-        @cmd =  ('luajit', 'test_case.lua');
+        @cmd =  ($lua_bin, 'test_case.lua');
     }
 
     run3 \@cmd, undef, \$res, \$err;

commit 206cb297178ff46b4c5e5de38744cd648dac4f22
Author: leaf corcoran <leafot@gmail.com>
Date:   Sun Sep 22 09:50:09 2019 -0700

    cmake doesn't support finding luajit, so skip it

diff --git a/.github/workflows/test.yml b/.github/workflows/test.yml
index 395e380..c0fd8ee 100644
--- a/.github/workflows/test.yml
+++ b/.github/workflows/test.yml
@@ -10,9 +10,11 @@ jobs:
         luaVersion: ["5.1", "5.2", "5.3", "luajit", "luajit-openresty"]
         include:
           - luaVersion: "luajit"
-            luaIncludeDir: "LUA_INCLUDE_DIR=.lua/include/luajit-2.1"
+            runtestArgs: "LUA_INCLUDE_DIR=.lua/include/luajit-2.1"
+            runtestEnv: "SKIP_CMAKE=1"
           - luaVersion: "luajit-openresty"
-            luaIncludeDir: "LUA_INCLUDE_DIR=.lua/include/luajit-2.1"
+            runtestArgs: "LUA_INCLUDE_DIR=.lua/include/luajit-2.1"
+            runtestEnv: "SKIP_CMAKE=1"
 
     runs-on: ubuntu-latest
 
@@ -27,7 +29,7 @@ jobs:
 
     - name: test
       run: |
-        LUA_DIR=.lua ./runtests.sh PREFIX=.lua ${{ matrix.luaIncludeDir }}
+        LUA_DIR=.lua ${{ matrix.runtestEnv }} ./runtests.sh PREFIX=.lua ${{ matrix.runtestArgs }}
 
     - name: build
       run: |
diff --git a/runtests.sh b/runtests.sh
index bfb01d9..fe606fa 100755
--- a/runtests.sh
+++ b/runtests.sh
@@ -56,14 +56,20 @@ do_tests
 make clean
 rm -rf tests/cjson{,.so}
 
-echo "===== Testing Cmake build ====="
-mkdir build
-cd build
-cmake ..
-make
-cd ..
-cp -r lua/cjson build/cjson.so tests
-do_tests
-rm -rf build tests/cjson{,.so}
+
+if [ -z "$SKIP_CMAKE" ]; then
+    echo "===== Testing Cmake build ====="
+    mkdir build
+    cd build
+    cmake ..
+    make
+    cd ..
+    cp -r lua/cjson build/cjson.so tests
+    do_tests
+    rm -rf build tests/cjson{,.so}
+else
+    echo "===== Skipping Cmake build ====="
+fi
+
 
 # vi:ai et sw=4 ts=4:

commit 701fda3ed4dccd6dd7e535986567d4e0235c6d02
Author: leaf corcoran <leafot@gmail.com>
Date:   Sat Sep 21 19:57:39 2019 -0700

    attempting to fix luajit cmake build

diff --git a/CMakeLists.txt b/CMakeLists.txt
index c17239b..c1d670d 100644
--- a/CMakeLists.txt
+++ b/CMakeLists.txt
@@ -15,7 +15,7 @@ if(NOT CMAKE_BUILD_TYPE)
         FORCE)
 endif()
 
-find_package(Lua51 REQUIRED)
+find_package(Lua REQUIRED)
 include_directories(${LUA_INCLUDE_DIR})
 
 if(NOT USE_INTERNAL_FPCONV)

commit 5dd400b9bddd4122d774f76c75ea861a25c6cdd1
Author: leaf corcoran <leafot@gmail.com>
Date:   Sat Sep 21 19:53:30 2019 -0700

    use different header path for luajit make builds

diff --git a/.github/workflows/test.yml b/.github/workflows/test.yml
index 04c407c..395e380 100644
--- a/.github/workflows/test.yml
+++ b/.github/workflows/test.yml
@@ -8,6 +8,11 @@ jobs:
       fail-fast: false
       matrix:
         luaVersion: ["5.1", "5.2", "5.3", "luajit", "luajit-openresty"]
+        include:
+          - luaVersion: "luajit"
+            luaIncludeDir: "LUA_INCLUDE_DIR=.lua/include/luajit-2.1"
+          - luaVersion: "luajit-openresty"
+            luaIncludeDir: "LUA_INCLUDE_DIR=.lua/include/luajit-2.1"
 
     runs-on: ubuntu-latest
 
@@ -22,7 +27,7 @@ jobs:
 
     - name: test
       run: |
-        LUA_DIR=.lua ./runtests.sh PREFIX=.lua
+        LUA_DIR=.lua ./runtests.sh PREFIX=.lua ${{ matrix.luaIncludeDir }}
 
     - name: build
       run: |

commit 96187b423dbec0d502bb1c4200094527458d83c2
Author: leaf corcoran <leafot@gmail.com>
Date:   Sat Sep 21 19:22:24 2019 -0700

    support error message testing for modern versions of lua

diff --git a/tests/test.lua b/tests/test.lua
index b2162b9..aeded76 100755
--- a/tests/test.lua
+++ b/tests/test.lua
@@ -294,7 +294,7 @@ local cjson_tests = {
     { "Encode sparse array as object",
       json.encode, { { [1] = "one", [5] = "sparse test" } },
       true, {
-          util.one_of{
+          util.one_of {
               '{"5":"sparse test","1":"one"}',
               '{"1":"one","5":"sparse test"}'
           }
@@ -363,32 +363,71 @@ local cjson_tests = {
       json.encode_keep_buffer, { true }, true, { true } },
 
     -- Test config API errors
-    -- Function is listed as '?' due to pcall
+    -- Function is listed as '?' due to pcall for older versions of Lua
     { "Set encode_number_precision(0) [throw error]",
       json.encode_number_precision, { 0 },
-      false, { "bad argument #1 to '?' (expected integer between 1 and 16)" } },
+      false, {
+          util.one_of {
+              "bad argument #1 to '?' (expected integer between 1 and 16)",
+              "bad argument #1 to 'cjson.encode_number_precision' (expected integer between 1 and 16)"
+          }
+      } },
     { "Set encode_number_precision(\"five\") [throw error]",
       json.encode_number_precision, { "five" },
-      false, { "bad argument #1 to '?' (number expected, got string)" } },
+      false, {
+          util.one_of {
+              "bad argument #1 to '?' (number expected, got string)",
+              "bad argument #1 to 'cjson.encode_number_precision' (number expected, got string)"
+          }
+      } },
     { "Set encode_keep_buffer(nil, true) [throw error]",
       json.encode_keep_buffer, { nil, true },
-      false, { "bad argument #2 to '?' (found too many arguments)" } },
+      false, {
+          util.one_of {
+              "bad argument #2 to '?' (found too many arguments)",
+              "bad argument #2 to 'cjson.encode_keep_buffer' (found too many arguments)"
+          }
+      } },
     { "Set encode_max_depth(\"wrong\") [throw error]",
       json.encode_max_depth, { "wrong" },
-      false, { "bad argument #1 to '?' (number expected, got string)" } },
+      false, {
+          util.one_of {
+              "bad argument #1 to '?' (number expected, got string)",
+              "bad argument #1 to 'cjson.encode_max_depth' (number expected, got string)"
+          }
+      } },
     { "Set decode_max_depth(0) [throw error]",
       json.decode_max_depth, { "0" },
-      false, { "bad argument #1 to '?' (expected integer between 1 and 2147483647)" } },
+      false, {
+          util.one_of {
+              "bad argument #1 to '?' (expected integer between 1 and 2147483647)",
+              "bad argument #1 to 'cjson.decode_max_depth' (expected integer between 1 and 2147483647)"
+          }
+      } },
     { "Set encode_invalid_numbers(-2) [throw error]",
       json.encode_invalid_numbers, { -2 },
-      false, { "bad argument #1 to '?' (invalid option '-2')" } },
+      false, {
+          util.one_of {
+              "bad argument #1 to '?' (invalid option '-2')",
+              "bad argument #1 to 'cjson.encode_invalid_numbers' (invalid option '-2')"
+          }
+      } },
     { "Set decode_invalid_numbers(true, false) [throw error]",
       json.decode_invalid_numbers, { true, false },
-      false, { "bad argument #2 to '?' (found too many arguments)" } },
+      false, {
+          util.one_of {
+              "bad argument #2 to '?' (found too many arguments)",
+              "bad argument #2 to 'cjson.decode_invalid_numbers' (found too many arguments)"
+          }
+      } },
     { "Set encode_sparse_array(\"not quite on\") [throw error]",
       json.encode_sparse_array, { "not quite on" },
-      false, { "bad argument #1 to '?' (invalid option 'not quite on')" } },
-
+      false, {
+          util.one_of {
+              "bad argument #1 to '?' (invalid option 'not quite on')",
+              "bad argument #1 to 'cjson.encode_sparse_array' (invalid option 'not quite on')"
+          }
+      } },
     { "Reset Lua CJSON configuration", function () json = json.new() end },
     -- Wrap in a function to ensure the table returned by json.new() is used
     { "Check encode_sparse_array()",
@@ -400,7 +439,12 @@ local cjson_tests = {
       true, { "true" } },
     { "Encode (safe) argument validation [throw error]",
       json_safe.encode, { "arg1", "arg2" },
-      false, { "bad argument #1 to '?' (expected 1 argument)" } },
+      false, {
+          util.one_of {
+              "bad argument #1 to '?' (expected 1 argument)",
+              "bad argument #1 to 'cjson.safe.encode' (expected 1 argument)"
+          }
+      } },
     { "Decode (safe) error generation",
       json_safe.decode, { "Oops" },
       true, { nil, "Expected value but found invalid token at character 1" } },

commit 3882fac81a08c24c948faafe980dd181a906fa00
Author: leaf corcoran <leafot@gmail.com>
Date:   Sat Sep 21 19:09:00 2019 -0700

    add one_of testing to avoid hash table ordering causing test to fail

diff --git a/lua/cjson/util.lua b/lua/cjson/util.lua
index 2405257..7cf66be 100644
--- a/lua/cjson/util.lua
+++ b/lua/cjson/util.lua
@@ -12,6 +12,17 @@ local maxn = table.maxn or function(t)
     return max
 end
 
+local _one_of_mt = {}
+
+local function one_of(t)
+    setmetatable(t, _one_of_mt)
+    return t
+end
+
+local function is_one_of(t)
+    return type(t) == "table" and getmetatable(t) == _one_of_mt
+end
+
 -- Various common routines used by the Lua CJSON package
 --
 -- Mark Pulford <mark@kyne.com.au>
@@ -59,7 +70,11 @@ local function serialise_table(value, indent, depth)
     local max = is_array(value)
 
     local comma = false
-    local fragment = { "{" .. spacing2 }
+    local prefix = "{"
+    if is_one_of(value) then
+        prefix = "ONE_OF{"
+    end
+    local fragment = { prefix .. spacing2 }
     if max > 0 then
         -- Serialise array
         for i = 1, max do
@@ -146,6 +161,15 @@ local function file_save(filename, data)
 end
 
 local function compare_values(val1, val2)
+    if is_one_of(val2) then
+        for _, option in ipairs(val2) do
+            if compare_values(val1, option) then
+                return true
+            end
+        end
+        return false
+    end
+
     local type1 = type(val1)
     local type2 = type(val2)
     if type1 ~= type2 then
@@ -281,7 +305,8 @@ return {
     run_test_summary = run_test_summary,
     run_test = run_test,
     run_test_group = run_test_group,
-    run_script = run_script
+    run_script = run_script,
+    one_of = one_of
 }
 
 -- vi:ai et sw=4 ts=4:
diff --git a/tests/test.lua b/tests/test.lua
index d1bf7e4..b2162b9 100755
--- a/tests/test.lua
+++ b/tests/test.lua
@@ -293,7 +293,12 @@ local cjson_tests = {
       true, { '["one",null,null,"sparse test"]' } },
     { "Encode sparse array as object",
       json.encode, { { [1] = "one", [5] = "sparse test" } },
-      true, { '{"5":"sparse test","1":"one"}' } },
+      true, {
+          util.one_of{
+              '{"5":"sparse test","1":"one"}',
+              '{"1":"one","5":"sparse test"}'
+          }
+      } },
     { "Encode table with numeric string key as object",
       json.encode, { { ["2"] = "numeric string key test" } },
       true, { '{"2":"numeric string key test"}' } },

commit 0d0c4063d00bc33549832a8d58a00c9836c04df8
Author: leaf corcoran <leafot@gmail.com>
Date:   Sat Sep 21 18:18:18 2019 -0700

    make tests fail when they fail

diff --git a/runtests.sh b/runtests.sh
index 748bd40..bfb01d9 100755
--- a/runtests.sh
+++ b/runtests.sh
@@ -1,9 +1,9 @@
-#!/bin/sh
+#!/bin/bash
+set -eo pipefail
 
 PLATFORM="`uname -s`"
 [ "$1" ] && VERSION="$1" || VERSION="2.1devel"
 
-set -e
 
 # Portable "ggrep -A" replacement.
 # Work around Solaris awk record limit of 2559 bytes.

commit 7f21cad7f007d79d470d38a3546287bc2eab1b18
Author: leaf corcoran <leafot@gmail.com>
Date:   Sat Sep 21 18:11:28 2019 -0700

    tell cmake where lua is

diff --git a/.github/workflows/test.yml b/.github/workflows/test.yml
index f8bea28..04c407c 100644
--- a/.github/workflows/test.yml
+++ b/.github/workflows/test.yml
@@ -22,7 +22,7 @@ jobs:
 
     - name: test
       run: |
-        ./runtests.sh PREFIX=.lua
+        LUA_DIR=.lua ./runtests.sh PREFIX=.lua
 
     - name: build
       run: |

commit e55b93ff0c0aee0449d8cd8e94b91096d11a38e1
Author: leaf corcoran <leafot@gmail.com>
Date:   Sat Sep 21 17:48:46 2019 -0700

    use local lua for makefile build

diff --git a/.github/workflows/test.yml b/.github/workflows/test.yml
index 9c3fa93..f8bea28 100644
--- a/.github/workflows/test.yml
+++ b/.github/workflows/test.yml
@@ -22,7 +22,7 @@ jobs:
 
     - name: test
       run: |
-        ./runtests.sh
+        ./runtests.sh PREFIX=.lua
 
     - name: build
       run: |
diff --git a/runtests.sh b/runtests.sh
index 85b7811..748bd40 100755
--- a/runtests.sh
+++ b/runtests.sh
@@ -50,7 +50,7 @@ luarocks remove --local lua-cjson
 make clean
 
 echo "===== Testing Makefile build ====="
-make
+make "$@"
 cp -r lua/cjson cjson.so tests
 do_tests
 make clean

commit d3685e3477b04ca129863251882f281b5975701f
Author: leaf corcoran <leafot@gmail.com>
Date:   Sat Sep 21 17:40:18 2019 -0700

    build after tests, so tests can do their own build test

diff --git a/.github/workflows/test.yml b/.github/workflows/test.yml
index 1c33dcc..9c3fa93 100644
--- a/.github/workflows/test.yml
+++ b/.github/workflows/test.yml
@@ -20,10 +20,11 @@ jobs:
 
     - uses: leafo/gh-actions-luarocks@v2
 
+    - name: test
+      run: |
+        ./runtests.sh
+
     - name: build
       run: |
         luarocks make
 
-    - name: test
-      run: |
-        ./runtests.sh

commit cfa855df543d8c93d0d9c8fc73bff535b1d56ac8
Author: leaf corcoran <leafot@gmail.com>
Date:   Sat Sep 21 17:37:43 2019 -0700

    fail if tests are blocked

diff --git a/runtests.sh b/runtests.sh
index 82dc8c1..85b7811 100755
--- a/runtests.sh
+++ b/runtests.sh
@@ -39,7 +39,7 @@ then
 Please ensure you do not have the Lua CJSON module installed before
 running these tests.
 EOT
-    exit
+    exit 1
 fi
 cd ..
 

commit 6534a2315c5f9fd3e327ac21214f6c354aa38149
Author: leaf corcoran <leafot@gmail.com>
Date:   Sat Sep 21 17:34:33 2019 -0700

    see what happens if we run tests on github actions

diff --git a/.github/workflows/test.yml b/.github/workflows/test.yml
new file mode 100644
index 0000000..1c33dcc
--- /dev/null
+++ b/.github/workflows/test.yml
@@ -0,0 +1,29 @@
+name: test
+
+on: [push]
+
+jobs:
+  test:
+    strategy:
+      fail-fast: false
+      matrix:
+        luaVersion: ["5.1", "5.2", "5.3", "luajit", "luajit-openresty"]
+
+    runs-on: ubuntu-latest
+
+    steps:
+    - uses: actions/checkout@master
+
+    - uses: leafo/gh-actions-lua@v3
+      with:
+        luaVersion: ${{ matrix.luaVersion }}
+
+    - uses: leafo/gh-actions-luarocks@v2
+
+    - name: build
+      run: |
+        luarocks make
+
+    - name: test
+      run: |
+        ./runtests.sh

commit f5cf8297aebfe8f23ccf086a671d6cacd1c1613e
Author: leaf corcoran <leafot@gmail.com>
Date:   Sun Sep 22 13:43:18 2019 -0700

    use macro instead of header defines for Lua 5.2+ support

diff --git a/lua_cjson.c b/lua_cjson.c
index 020ba21..45ebe78 100644
--- a/lua_cjson.c
+++ b/lua_cjson.c
@@ -36,10 +36,6 @@
  *       difficult to know object/array sizes ahead of time.
  */
 
-
-#define LUA_COMPAT_ALL 1
-#define LUA_COMPAT_5_1 1
-
 #include <assert.h>
 #include <stdint.h>
 #include <string.h>
@@ -106,6 +102,10 @@
 #define json_lightudata_mask(ludata)    (ludata)
 #endif
 
+#if LUA_VERSION_NUM > 501
+#define lua_objlen(L,i)		lua_rawlen(L, (i))
+#endif
+
 static const char * const *json_empty_array;
 static const char * const *json_array;
 

commit dcd5c253ce2839c10cc4e40ca98202fc29270762
Author: leaf corcoran <leafot@gmail.com>
Date:   Sat Sep 21 18:43:47 2019 -0700

    Lua 5.2+ maxn support

diff --git a/lua/cjson/util.lua b/lua/cjson/util.lua
index 48fa33c..2405257 100644
--- a/lua/cjson/util.lua
+++ b/lua/cjson/util.lua
@@ -2,6 +2,16 @@ local json = require "cjson"
 
 local unpack = unpack or table.unpack
 
+local maxn = table.maxn or function(t)
+    local max = 0
+    for k,v in pairs(t) do
+        if type(k) == "number" and k > max then
+            max = k
+        end
+    end
+    return max
+end
+
 -- Various common routines used by the Lua CJSON package
 --
 -- Mark Pulford <mark@kyne.com.au>
@@ -194,7 +204,7 @@ local function run_test(testname, func, input, should_work, output)
     local result = {}
     local tmp = { pcall(func, unpack(input)) }
     local success = tmp[1]
-    for i = 2, table.maxn(tmp) do
+    for i = 2, maxn(tmp) do
         result[i - 1] = tmp[i]
     end
 

commit 3cdf14a8ddd283e9738860359fbdc5ba4e618972
Author: leaf corcoran <leafot@gmail.com>
Date:   Sat Sep 21 18:18:27 2019 -0700

    Lua 5.2+ unpack support

diff --git a/lua/cjson/util.lua b/lua/cjson/util.lua
index 5d80106..48fa33c 100644
--- a/lua/cjson/util.lua
+++ b/lua/cjson/util.lua
@@ -1,5 +1,7 @@
 local json = require "cjson"
 
+local unpack = unpack or table.unpack
+
 -- Various common routines used by the Lua CJSON package
 --
 -- Mark Pulford <mark@kyne.com.au>

commit dbfac1a8b2a6e316a6f61d41a1196b4664883a7b
Author: leaf corcoran <leafot@gmail.com>
Date:   Sat Sep 21 18:01:05 2019 -0700

    support lua 5.3 with LUA_COMPAT_5_1

diff --git a/lua_cjson.c b/lua_cjson.c
index b8dac31..020ba21 100644
--- a/lua_cjson.c
+++ b/lua_cjson.c
@@ -38,6 +38,7 @@
 
 
 #define LUA_COMPAT_ALL 1
+#define LUA_COMPAT_5_1 1
 
 #include <assert.h>
 #include <stdint.h>

commit 5c25e6f98afe0e8c814411e6f0ee4b24f19ddc83
Author: leaf corcoran <leafot@gmail.com>
Date:   Sat Sep 21 17:31:38 2019 -0700

    support lua 5.2 with LUA_COMPAT_ALL

diff --git a/lua_cjson.c b/lua_cjson.c
index 875bdaf..b8dac31 100644
--- a/lua_cjson.c
+++ b/lua_cjson.c
@@ -36,6 +36,9 @@
  *       difficult to know object/array sizes ahead of time.
  */
 
+
+#define LUA_COMPAT_ALL 1
+
 #include <assert.h>
 #include <stdint.h>
 #include <string.h>
------ diff log end --------
** Summary: check here https://github.com/openresty/lua-cjson
===================== END lua-cjson =================================
Pass		: lua-redis-parser: latest!
===================== END lua-redis-parser =================================
New Commit	: lua-rds-parser: 3 commits since 'v0.06'
------ diff log --------
commit 8f0033c42584a1d5a8c25dac4e8050d024de5b90
Author: Ilya Shipitsin <chipitsine@gmail.com>
Date:   Sat Jun 11 12:24:11 2016 +0500

    feature: added travis-ci support.
    
    Signed-off-by: Yichun Zhang (agentzh) <agentzh@gmail.com>

diff --git a/.travis.yml b/.travis.yml
new file mode 100644
index 0000000..561257c
--- /dev/null
+++ b/.travis.yml
@@ -0,0 +1,29 @@
+sudo: required
+dist: trusty
+
+os: linux
+
+language: c
+
+compiler:
+  - gcc
+  - clang
+
+env:
+  matrix:
+    - LUA=lua5.1-dev LUA_DEV=liblua5.1-dev LUA_INCLUDE_DIR=/usr/include/lua5.1 LUA_CMODULE_DIR=/lib LUALIB=-llua5.1
+    - LUA=libluajit-5.1-dev LUA_DEV=libluajit-5.1-dev LUA_INCLUDE_DIR=/usr/include/luajit-2.0 LUA_CMODULE_DIR=/lib LUALIB=-lluajit-5.1
+
+before_install:
+    - git clone https://github.com/openresty/lua-cjson.git
+
+install:
+    - sudo apt-get update
+    - sudo apt-get install -qq -y $LUA luarocks cppcheck valgrind
+    - sudo apt-get install -qq -y cpanminus libipc-run3-perl > build.log 2>&1 || (cat build.log && exit 1)
+    - sudo cpanm --notest Test::Base Test::LongString > build.log 2>&1 || (cat build.log && exit 1)
+
+script:
+  - cppcheck --force --error-exitcode=1 --enable=warning . > build.log 2>&1 || (cat build.log && exit 1)
+  - cd lua-cjson/ && make && sudo make install && cd ..
+  - make test valtest

commit 0844afb3f0f3384c5b2006946376ad325e2bf873
Author: Yichun Zhang (agentzh) <agentzh@gmail.com>
Date:   Mon Jan 25 15:26:40 2016 -0800

    made the README more pretty.

diff --git a/README b/README
deleted file mode 100644
index e8d40b3..0000000
--- a/README
+++ /dev/null
@@ -1,186 +0,0 @@
-Name
-    lua-rds-parser - Resty-DBD-Stream (RDS) parser for Lua written in C
-
-Status
-    This module is production ready.
-
-Synopsis
-    local parser = require "rds.parser"
-
-    local res, err = parser.parse(rds)
-
-    if res == nil then
-        error("failed to parse: " .. err)
-    end
-
-    print(res.errcode)
-    print(res.errstr)
-    print(res.insert_id)
-    print(res.affected_rows)
-
-    local rows = res.resultset
-    if rows then
-        for i, row in ipairs(rows) do
-            for col, val in pairs(row) do
-                if val ~= parser.null then
-                    print(col .. ": " .. val)
-                end
-            end
-        end
-    end
-
-Description
-    This Lua library can be used to parse the Resty-DBD-Stream formatted data
-    generated by ngx_drizzle (http://wiki.nginx.org/HttpDrizzleModule )
-    and ngx_postgres (http://github.com/FRiCKLE/ngx_postgres/ ) into Lua
-    data structures. In the past, we have to use JSON as the intermediate data
-    format which is quite inefficient in terms of both memory and CPU time.
-
-    To maximize speed and minimize memory footprint, this library is implemented
-    in pure C.
-
-    Null values in RDS are turned into the light user data "parser.null"
-    where "parser" is the module object returned by Lua's "require".
-
-JSON Serialization
-    If you want to serialize the parsed result into JSON, please
-    use the lua-cjson library (http://www.kyne.com.au/~mark/software/lua-cjson.php )
-    instead of lua-yajl, because lua-cjson is faster than lua-yajl
-    in many common cases, and more importantly,
-
-        parser.null == cjson.null ~= yajl.null
-
-Using with HttpDrizzleModule
-    To use with ngx_drizzle, here is a small example:
-
-        upstream backend {
-            drizzle_server 127.0.0.1:3306 protocol=mysql
-                           dbname=ngx_test user=ngx_test password=ngx_test;
-            drizzle_keepalive max=10 overflow=ignore mode=single;
-        }
-
-        server {
-            ...
-
-            location /mysql {
-               drizzle_query $echo_request_body;
-               drizzle_pass backend;
-            }
-
-            location /api {
-               content_by_lua '
-                   local sql = "select * from cats"
-                   local resp = ngx.location.capture("/mysql", {
-                       method = ngx.HTTP_POST, body = sql
-                   })
-                   if resp.status ~= ngx.HTTP_OK or not resp.body then
-                       error("failed to query mysql")
-                   end
-
-                   local parser = require "rds.parser"
-                   local res, err = parser.parse(resp.body)
-                   if res == nil then
-                       error("failed to parse RDS: " .. err)
-                   end
-
-                   local rows = res.resultset
-                   if not rows or #rows == 0 then
-                       ngx.say("empty resultset")
-                       ngx.exit(0)
-                   end
-
-                   for i, row in ipairs(rows) do
-                       ngx.print("row ", i, ": ")
-                       for col, val in pairs(row) do
-                           if val ~= parser.null then
-                               ngx.print(col, "=", val, " ")
-                           else
-                               ngx.print(col, "=null ")
-                           end
-                       end
-                       ngx.say()
-                   end
-               ';
-            }
-        }
-
-    On my machine, GET /api will yield
-
-        row 1: id=2 name=null
-        row 2: id=3 name=bob
-
-    of course, the actual output depends on the structure and contents of the
-    "cats" table in the mysql database.
-
-    You can use this Lua library with the ngx_postgres module in a similar way.
-
-Installation
-  Build requirements
-    *   Lua (http://www.lua.org/)
-
-    *   or LuaJIT (http://www.luajit.org/)
-
-    Gnu make and gcc is required to build this module.
-
-  Linux/BSD/Solaris
-        gmake CC=gcc
-        gmake install CC=gcc
-
-  Mac OS X
-        make LDFLAGS='-bundle -undefined dynamic_lookup' CC=gcc
-        make install
-
-    If your Lua or LuaJIT is not installed into the system, specify its
-    include directory like this:
-
-        make LUA_INCLUDE_DIR=/opt/luajit/include/luajit-2.0
-
-    You can specify a custom path for the installation target:
-
-        make install LUA_LIB_DIR=/opt/lualib
-
-    The "DESTDIR" variable is also supported, to ease RPM packaging.
-
-TODO
-    * add support for option "compact" to generate a compact
-      Lua table for the "resultset" field.
-
-Known Issues
-    * The endianness flag in RDS is not supported yet in this library,
-      and it will assume it's of the host's endian. So do not
-      try parsing the RDS stream that is generated by another
-      machine of a different endian.
-
-Author
-    Zhang "agentzh" Yichun <agentzh@gmail.com>
-
-Copyright & License
-    This module is licenced under the BSD license.
-
-    Copyright (C) 2011, Zhang "agentzh" Yichun (章亦春) <agentzh@gmail.com>.
-
-    All rights reserved.
-
-    Redistribution and use in source and binary forms, with or without
-    modification, are permitted provided that the following conditions
-    are met:
-
-        * Redistributions of source code must retain the above copyright
-        notice, this list of conditions and the following disclaimer.
-
-        * Redistributions in binary form must reproduce the above copyright
-        notice, this list of conditions and the following disclaimer in the
-        documentation and/or other materials provided with the distribution.
-
-    THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
-    "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
-    LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
-    A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT
-    HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
-    SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED
-    TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR
-    PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF
-    LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING
-    NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
-    SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
-
diff --git a/README.md b/README.md
new file mode 100644
index 0000000..7c4ff39
--- /dev/null
+++ b/README.md
@@ -0,0 +1,228 @@
+Name
+====
+
+lua-rds-parser - Resty-DBD-Stream (RDS) parser for Lua written in C
+
+Status
+======
+
+This module is production ready.
+
+Synopsis
+========
+
+```lua
+local parser = require "rds.parser"
+
+local res, err = parser.parse(rds)
+
+if res == nil then
+    error("failed to parse: " .. err)
+end
+
+print(res.errcode)
+print(res.errstr)
+print(res.insert_id)
+print(res.affected_rows)
+
+local rows = res.resultset
+if rows then
+    for i, row in ipairs(rows) do
+        for col, val in pairs(row) do
+            if val ~= parser.null then
+                print(col .. ": " .. val)
+            end
+        end
+    end
+end
+```
+
+Description
+===========
+
+This Lua library can be used to parse the Resty-DBD-Stream formatted data
+generated by [ngx_drizzle](https://github.com/openresty/drizzle-nginx-module#readme)
+and [ngx_postgres](https://github.com/FRiCKLE/ngx_postgres/) into Lua
+data structures. In the past, we have to use JSON as the intermediate data
+format which is quite inefficient in terms of both memory and CPU time.
+
+To maximize speed and minimize memory footprint, this library is implemented
+in pure C.
+
+Null values in RDS are turned into the light user data `parser.null` (or `ngx.null`)
+where "parser" is the module object returned by Lua's "require".
+
+JSON Serialization
+==================
+
+If you want to serialize the parsed result into JSON, please
+use the [lua-cjson library](http://www.kyne.com.au/~mark/software/lua-cjson.php)
+instead of lua-yajl, because lua-cjson is faster than lua-yajl
+in many common cases, and more importantly,
+
+```lua
+parser.null == cjson.null ~= yajl.null
+```
+
+Using with HttpDrizzleModule
+============================
+
+To use with `ngx_drizzle`, here is a small example:
+
+```nginx
+upstream backend {
+    drizzle_server 127.0.0.1:3306 protocol=mysql
+                   dbname=ngx_test user=ngx_test password=ngx_test;
+    drizzle_keepalive max=10 overflow=ignore mode=single;
+}
+
+server {
+    ...
+
+    location /mysql {
+       drizzle_query $echo_request_body;
+       drizzle_pass backend;
+    }
+
+    location /api {
+       content_by_lua '
+           local sql = "select * from cats"
+           local resp = ngx.location.capture("/mysql", {
+               method = ngx.HTTP_POST, body = sql
+           })
+           if resp.status ~= ngx.HTTP_OK or not resp.body then
+               error("failed to query mysql")
+           end
+
+           local parser = require "rds.parser"
+           local res, err = parser.parse(resp.body)
+           if res == nil then
+               error("failed to parse RDS: " .. err)
+           end
+
+           local rows = res.resultset
+           if not rows or #rows == 0 then
+               ngx.say("empty resultset")
+               ngx.exit(0)
+           end
+
+           for i, row in ipairs(rows) do
+               ngx.print("row ", i, ": ")
+               for col, val in pairs(row) do
+                   if val ~= parser.null then
+                       ngx.print(col, "=", val, " ")
+                   else
+                       ngx.print(col, "=null ")
+                   end
+               end
+               ngx.say()
+           end
+       ';
+    }
+}
+```
+
+On my machine, GET /api will yield
+
+
+```
+row 1: id=2 name=null
+row 2: id=3 name=bob
+```
+
+of course, the actual output depends on the structure and contents of the
+"cats" table in the mysql database.
+
+You can use this Lua library with the ngx_postgres module in a similar way.
+
+Installation
+============
+
+Build requirements
+
+* Lua (http://www.lua.org/),
+* or LuaJIT (http://www.luajit.org/)
+
+Gnu make and gcc is required to build this module.
+
+Linux/BSD/Solaris
+----------------
+
+```bash
+gmake CC=gcc
+gmake install CC=gcc
+```
+
+Mac OS X
+--------
+
+```bash
+make LDFLAGS='-bundle -undefined dynamic_lookup' CC=gcc
+make install
+```
+
+If your Lua or LuaJIT is not installed into the system, specify its
+include directory like this:
+
+```bash
+make LUA_INCLUDE_DIR=/opt/luajit/include/luajit-2.0
+```
+
+You can specify a custom path for the installation target:
+
+```bash
+make install LUA_LIB_DIR=/opt/lualib
+```
+
+The `DESTDIR` variable is also supported, to ease RPM packaging.
+
+TODO
+====
+
+* add support for option "compact" to generate a compact
+Lua table for the "resultset" field.
+
+Known Issues
+============
+
+* The endianness flag in RDS is not supported yet in this library,
+and it will assume it's of the host's endian. So do not
+try parsing the RDS stream that is generated by another
+machine of a different endian.
+
+Author
+======
+
+Yichun "agentzh" Zhang <agentzh@gmail.com>, CloudFlare Inc.
+
+Copyright & License
+===================
+
+This module is licenced under the BSD license.
+
+Copyright (C) 2011-2016, Zhang "agentzh" Yichun (章亦春) <agentzh@gmail.com>.
+
+All rights reserved.
+
+Redistribution and use in source and binary forms, with or without
+modification, are permitted provided that the following conditions
+are met:
+
+* Redistributions of source code must retain the above copyright
+notice, this list of conditions and the following disclaimer.
+
+* Redistributions in binary form must reproduce the above copyright
+notice, this list of conditions and the following disclaimer in the
+documentation and/or other materials provided with the distribution.
+
+THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
+"AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
+LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
+A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT
+HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
+SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED
+TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR
+PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF
+LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING
+NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
+SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

commit 9df41f4207fbd4aa49dbe0c23df92aab08f1e107
Author: Yichun Zhang (agentzh) <agentzh@gmail.com>
Date:   Mon Nov 23 23:10:40 2015 +0800

    added a .gitattributes file to correct GitHub's language tag.

diff --git a/.gitattributes b/.gitattributes
new file mode 100644
index 0000000..6fe6f35
--- /dev/null
+++ b/.gitattributes
@@ -0,0 +1 @@
+*.t linguist-language=Text
------ diff log end --------
** Summary: check here https://github.com/openresty/lua-rds-parser
===================== END lua-rds-parser =================================
New Commit	: lua-resty-dns: 8 commits since 'v0.21'
------ diff log --------
commit cddf8cd81cda5ff94e5aab26bb622f0384d0324a
Author: Thibault Charbonnier <thibaultcha@me.com>
Date:   Wed Jan 22 15:08:00 2020 -0800

    travis-ci: bumped the NGINX core to 1.17.8.

diff --git a/.travis.yml b/.travis.yml
index 45219dd..d3c391b 100644
--- a/.travis.yml
+++ b/.travis.yml
@@ -29,7 +29,7 @@ env:
     - LD_LIBRARY_PATH=$LUAJIT_LIB:$LD_LIBRARY_PATH
   matrix:
     - NGINX_VERSION=1.9.15
-    - NGINX_VERSION=1.17.4
+    - NGINX_VERSION=1.17.8
 
 install:
     - sudo cpanm --notest Test::Nginx > build.log 2>&1 || (cat build.log && exit 1)

commit 6b20b9d28c5efd5164919c9377fbeece2e86ce21
Author: Thibault Charbonnier <thibaultcha@me.com>
Date:   Mon Sep 30 14:24:12 2019 -0700

    tests: fixed a failing test case due to the deprecation of SPF records.

diff --git a/t/sanity.t b/t/sanity.t
index 0c4f89d..a60fd0d 100644
--- a/t/sanity.t
+++ b/t/sanity.t
@@ -450,6 +450,8 @@ GET /t
 
 
 === TEST 14: SPF query (with ans)
+SPF records are deprecated by RFC 7208 in favor of TXT records, and
+linkedin.com has migrated to such TXT records.
 --- http_config eval: $::HttpConfig
 --- config
     location /t {
@@ -474,8 +476,8 @@ GET /t
     }
 --- request
 GET /t
---- response_body_like chop
-^records: \[\{.*?"spf":"v=spf\d+\s[^"]+".*?\}\]$
+--- response_body
+records: []
 --- no_error_log
 [error]
 --- no_check_leak
@@ -483,7 +485,6 @@ GET /t
 
 
 === TEST 15: SPF query (no ans)
---- SKIP
 --- http_config eval: $::HttpConfig
 --- config
     location /t {
@@ -516,7 +517,44 @@ records: []
 
 
 
-=== TEST 16: generate arpa_str
+=== TEST 16: SPF query (as TXT with ans)
+--- http_config eval: $::HttpConfig
+--- config
+    location /t {
+        content_by_lua '
+            local resolver = require "resty.dns.resolver"
+
+            local r, err = resolver:new{ nameservers = { "$TEST_NGINX_RESOLVER" } }
+            if not r then
+                ngx.say("failed to instantiate resolver: ", err)
+                return
+            end
+
+            local ans, err = r:query("linkedin.com", { qtype = r.TYPE_TXT })
+            if not ans then
+                ngx.say("failed to query: ", err)
+                return
+            end
+
+            for i = 1, #ans do
+                if string.find(ans[i].txt, "v=spf", nil, true) then
+                    local ljson = require "ljson"
+                    ngx.say("ans: ", ljson.encode(ans[i]))
+                end
+            end
+        ';
+    }
+--- request
+GET /t
+--- response_body_like chop
+^ans: \{.*?"txt":"v=spf\d+\s[^"]+".*?\}$
+--- no_error_log
+[error]
+--- no_check_leak
+
+
+
+=== TEST 17: generate arpa_str
 --- http_config eval: $::HttpConfig
 --- config
     location /t {
@@ -549,7 +587,7 @@ a.7.1.4.c.0.0.2.0.0.8.0.8.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.8.0.1.ip6.arpa
 
 
 
-=== TEST 17: SOA records
+=== TEST 18: SOA records
 --- http_config eval: $::HttpConfig
 --- config
     location /t {
@@ -582,7 +620,7 @@ GET /t
 
 
 
-=== TEST 18: RRTYPE larger than 255
+=== TEST 19: RRTYPE larger than 255
 --- http_config eval: $::HttpConfig
 --- config
     location /t {
@@ -615,7 +653,7 @@ GET /t
 
 
 
-=== TEST 19: SOA records
+=== TEST 20: SOA records
 --- http_config eval: $::HttpConfig
 --- config
     location /t {

commit bfac85ff66616c79cfaf241d974753cdd5d60458
Author: Thibault Charbonnier <thibaultcha@me.com>
Date:   Mon Sep 30 12:07:26 2019 -0700

    travis-ci: switched to OpenResty's fork of LuaJIT.
    
    The previously installed LuaJIT version did not have FFI enabled which
    made compilation fail.

diff --git a/.travis.yml b/.travis.yml
index 919e4c7..45219dd 100644
--- a/.travis.yml
+++ b/.travis.yml
@@ -13,7 +13,6 @@ addons:
     packages:
     - axel
     - cpanminus
-    - libluajit-5.1-dev
 
 cache:
   apt: true
@@ -22,11 +21,14 @@ cache:
 
 env:
   global:
-    - NGINX_VERSION=1.9.15
     - JOBS=3
     - TEST_NGINX_SLEEP=0.006
-    - LUA_DEV=libluajit-5.1-dev LUA_INCLUDE_DIR=/usr/include/luajit-2.0 LUALIB=-lluajit-5.1
+    - LUAJIT_PREFIX=/opt/luajit21
+    - LUAJIT_LIB=$LUAJIT_PREFIX/lib
+    - LUAJIT_INC=$LUAJIT_PREFIX/include/luajit-2.1
+    - LD_LIBRARY_PATH=$LUAJIT_LIB:$LD_LIBRARY_PATH
   matrix:
+    - NGINX_VERSION=1.9.15
     - NGINX_VERSION=1.17.4
 
 install:
@@ -37,6 +39,13 @@ install:
     - git clone https://github.com/openresty/lua-resty-lrucache.git ../lua-resty-lrucache
     - git clone https://github.com/openresty/no-pool-nginx.git ../no-pool-nginx
     - git clone https://github.com/openresty/nginx-devel-utils.git
+    - git clone -b v2.1-agentzh https://github.com/openresty/luajit2.git luajit2
+
+before_script:
+    - cd luajit2/
+    - make -j$JOBS CCDEBUG=-g Q= PREFIX=$LUAJIT_PREFIX CC=$CC XCFLAGS='-DLUA_USE_APICHECK -DLUA_USE_ASSERT -msse4.2' > build.log 2>&1 || (cat build.log && exit 1)
+    - sudo make install PREFIX=$LUAJIT_PREFIX > build.log 2>&1 || (cat build.log && exit 1)
+    - cd ..
 
 script:
   - export PATH=$PWD/work/nginx/sbin:$PWD/nginx-devel-utils:$PATH

commit 5625252c57ee189fa93aa8cc05932d33d3213f89
Author: Thibault Charbonnier <thibaultcha@me.com>
Date:   Mon Sep 30 11:53:19 2019 -0700

    travis-ci: bumped the NGINX core to 1.17.4.

diff --git a/.travis.yml b/.travis.yml
index 81e41aa..919e4c7 100644
--- a/.travis.yml
+++ b/.travis.yml
@@ -27,7 +27,7 @@ env:
     - TEST_NGINX_SLEEP=0.006
     - LUA_DEV=libluajit-5.1-dev LUA_INCLUDE_DIR=/usr/include/luajit-2.0 LUALIB=-lluajit-5.1
   matrix:
-    - NGINX_VERSION=1.17.1
+    - NGINX_VERSION=1.17.4
 
 install:
     - sudo cpanm --notest Test::Nginx > build.log 2>&1 || (cat build.log && exit 1)

commit 38f0c931e775f2a536c2d1150f7e942bd64d706d
Author: Thibault Charbonnier <thibaultcha@me.com>
Date:   Thu Jul 11 15:08:18 2019 -0700

    travis: bumped the nginx core version to 1.17.1.

diff --git a/.travis.yml b/.travis.yml
index 253236a..81e41aa 100644
--- a/.travis.yml
+++ b/.travis.yml
@@ -27,7 +27,7 @@ env:
     - TEST_NGINX_SLEEP=0.006
     - LUA_DEV=libluajit-5.1-dev LUA_INCLUDE_DIR=/usr/include/luajit-2.0 LUALIB=-lluajit-5.1
   matrix:
-    - NGINX_VERSION=1.15.8
+    - NGINX_VERSION=1.17.1
 
 install:
     - sudo cpanm --notest Test::Nginx > build.log 2>&1 || (cat build.log && exit 1)

commit fbf8e3117824afba6ef01de91e1c374cc367486a
Author: Thibault Charbonnier <thibaultcha@me.com>
Date:   Thu Jul 11 14:47:15 2019 -0700

    tests: sanity.t: fixed a failing test due to an updated DNS record.

diff --git a/t/sanity.t b/t/sanity.t
index 8982454..0c4f89d 100644
--- a/t/sanity.t
+++ b/t/sanity.t
@@ -344,7 +344,7 @@ GET /t
 --- request
 GET /t
 --- response_body_like chop
-^records: \[\{.*?"ptrdname":"google-public-dns-b\.google\.com".*?\}\]$
+^records: \[\{.*?"ptrdname":"dns\.google".*?\}\]$
 --- no_error_log
 [error]
 --- no_check_leak

commit b14fab4af97a58e5708f1f39cd7c07501895ece0
Author: Thibault Charbonnier <thibaultcha@me.com>
Date:   Tue Jan 29 19:43:41 2019 -0800

    travis: bumped the nginx core version to 1.15.8.

diff --git a/.travis.yml b/.travis.yml
index 3bfc50f..253236a 100644
--- a/.travis.yml
+++ b/.travis.yml
@@ -27,12 +27,14 @@ env:
     - TEST_NGINX_SLEEP=0.006
     - LUA_DEV=libluajit-5.1-dev LUA_INCLUDE_DIR=/usr/include/luajit-2.0 LUALIB=-lluajit-5.1
   matrix:
-    - NGINX_VERSION=1.13.6
+    - NGINX_VERSION=1.15.8
 
 install:
     - sudo cpanm --notest Test::Nginx > build.log 2>&1 || (cat build.log && exit 1)
     - git clone https://github.com/openresty/openresty.git ../openresty
     - git clone https://github.com/openresty/lua-nginx-module.git ../lua-nginx-module
+    - git clone https://github.com/openresty/lua-resty-core.git ../lua-resty-core
+    - git clone https://github.com/openresty/lua-resty-lrucache.git ../lua-resty-lrucache
     - git clone https://github.com/openresty/no-pool-nginx.git ../no-pool-nginx
     - git clone https://github.com/openresty/nginx-devel-utils.git
 

commit bb21982a51cfdab22a8c3bd4a37f92b1c56aa43d
Author: Thibault Charbonnier <thibaultcha@me.com>
Date:   Thu Jan 3 18:09:50 2019 -0800

    doc: updated the copyright year to 2019.

diff --git a/README.markdown b/README.markdown
index 6a2885b..8566006 100644
--- a/README.markdown
+++ b/README.markdown
@@ -479,7 +479,7 @@ Copyright and License
 
 This module is licensed under the BSD license.
 
-Copyright (C) 2012-2018, by Yichun "agentzh" Zhang (章亦春) <agentzh@gmail.com>, OpenResty Inc.
+Copyright (C) 2012-2019, by Yichun "agentzh" Zhang (章亦春) <agentzh@gmail.com>, OpenResty Inc.
 
 All rights reserved.
 
------ diff log end --------
** Summary: check here https://github.com/openresty/lua-resty-dns
===================== END lua-resty-dns =================================
Pass		: lua-resty-memcached: latest!
===================== END lua-resty-memcached =================================
New Commit	: lua-resty-redis: 4 commits since 'v0.28'
------ diff log --------
commit e0efd8702b3bf97ad38dd1e412470e01fc7f9338
Author: Jinhua Tan <312841925@qq.com>
Date:   Tue Aug 11 16:10:36 2020 +0800

    fix: run ngx-build with OPENSSL_PATH to use specific openssl (#209)

diff --git a/.travis.yml b/.travis.yml
index 734c7a0..43a7302 100644
--- a/.travis.yml
+++ b/.travis.yml
@@ -71,7 +71,7 @@ script:
   - cd ..
   - export PATH=$PWD/work/nginx/sbin:$PWD/nginx-devel-utils:$PATH
   - export NGX_BUILD_CC=$CC
-  - ngx-build $NGINX_VERSION --with-ipv6 --with-http_realip_module --with-http_ssl_module --add-module=../echo-nginx-module --add-module=../lua-nginx-module --add-module=../stream-lua-nginx-module --with-stream --with-stream_ssl_module --with-debug
+  - ngx-build $NGINX_VERSION --with-ipv6 --with-http_realip_module --with-http_ssl_module --with-cc-opt="-I$OPENSSL_INC" --with-ld-opt="-L$OPENSSL_LIB -Wl,-rpath,$OPENSSL_LIB" --add-module=../echo-nginx-module --add-module=../lua-nginx-module --add-module=../stream-lua-nginx-module --with-stream --with-stream_ssl_module --with-debug > build.log 2>&1 || (cat build.log && exit 1)
   - nginx -V
   - ldd `which nginx`|grep -E 'luajit|ssl|pcre'
   - TEST_SUBSYSTEM=http prove -r t

commit 1b32e24a764bdcb2c3000cb912a6fc9a702a1cd8
Author: 罗泽轩 <spacewanderlzx@gmail.com>
Date:   Tue Aug 11 15:34:04 2020 +0800

    bugfix: reimplement unsubscribe mechanism (#196)
    
    Close #145, #193.

diff --git a/lib/resty/redis.lua b/lib/resty/redis.lua
index 114f71f..22cb8fe 100644
--- a/lib/resty/redis.lua
+++ b/lib/resty/redis.lua
@@ -7,6 +7,7 @@ local tab_insert = table.insert
 local tab_remove = table.remove
 local tcp = ngx.socket.tcp
 local null = ngx.null
+local ipairs = ipairs
 local type = type
 local pairs = pairs
 local unpack = unpack
@@ -63,7 +64,13 @@ function _M.new(self)
     if not sock then
         return nil, err
     end
-    return setmetatable({ _sock = sock, _subscribed = false }, mt)
+    return setmetatable({ _sock = sock,
+                          _subscribed = false,
+                          _n_channel = {
+                            unsubscribe = 0,
+                            punsubscribe = 0,
+                          },
+                        }, mt)
 end
 
 
@@ -317,7 +324,7 @@ end
 
 local function _check_msg(self, res)
     return rawget(self, "_subscribed") and
-        type(res) == "table" and res[1] == "message"
+        type(res) == "table" and (res[1] == "message" or res[1] == "pmessage")
 end
 
 
@@ -358,14 +365,54 @@ local function _do_cmd(self, ...)
 end
 
 
-local function _check_subscribed(self, res)
+local function _check_unsubscribed(self, res)
     if type(res) == "table"
        and (res[1] == "unsubscribe" or res[1] == "punsubscribe")
-       and res[3] == 0
+    then
+        self._n_channel[res[1]] = self._n_channel[res[1]] - 1
+
+        local buffered_msg = rawget(self, "_buffered_msg")
+        if buffered_msg then
+            -- remove messages of unsubscribed channel
+            local msg_type =
+                (res[1] == "punsubscribe") and "pmessage" or "message"
+            local j = 1
+            for _, msg in ipairs(buffered_msg) do
+                if msg[1] == msg_type and msg[2] ~= res[2] then
+                    -- move messages to overwrite the removed ones
+                    buffered_msg[j] = msg
+                    j = j + 1
+                end
+            end
+
+            -- clear remain messages
+            for i = j, #buffered_msg do
+                buffered_msg[i] = nil
+            end
+
+            if #buffered_msg == 0 then
+                self._buffered_msg = nil
+            end
+        end
+
+        if res[3] == 0 then
+            -- all channels are unsubscribed
+            self._subscribed = false
+        end
+    end
+end
+
+
+local function _check_subscribed(self, res)
+    if type(res) == "table"
+       and (res[1] == "subscribe" or res[1] == "psubscribe")
    then
-        self._subscribed = false
-        -- FIXME: support multiple subscriptions in the next PR
-        self._buffered_msg = nil
+        if res[1] == "subscribe" then
+            self._n_channel.unsubscribe = self._n_channel.unsubscribe + 1
+
+        elseif res[1] == "psubscribe" then
+            self._n_channel.punsubscribe = self._n_channel.punsubscribe + 1
+        end
     end
 end
 
@@ -393,7 +440,7 @@ function _M.read_reply(self)
     end
 
     local res, err = _read_reply(self, sock)
-    _check_subscribed(self, res)
+    _check_unsubscribed(self, res)
 
     return res, err
 end
@@ -409,25 +456,102 @@ for i = 1, #common_cmds do
 end
 
 
+local function handle_subscribe_result(self, cmd, nargs, res)
+    local err
+    _check_subscribed(self, res)
+
+    if nargs <= 1 then
+        return res
+    end
+
+    local results = new_tab(nargs, 0)
+    results[1] = res
+    local sock = rawget(self, "_sock")
+
+    for i = 2, nargs do
+        res, err = _read_reply(self, sock)
+        if not res then
+            return nil, err
+        end
+
+        _check_subscribed(self, res)
+        results[i] = res
+    end
+
+    return results
+end
+
 for i = 1, #sub_commands do
     local cmd = sub_commands[i]
 
     _M[cmd] =
         function (self, ...)
-            self._subscribed = true
-            return _do_cmd(self, cmd, ...)
+            if not rawget(self, "_subscribed") then
+                self._subscribed = true
+            end
+
+            local nargs = select("#", ...)
+
+            local res, err = _do_cmd(self, cmd, ...)
+            if not res then
+                return nil, err
+            end
+
+            return handle_subscribe_result(self, cmd, nargs, res)
         end
 end
 
 
+local function handle_unsubscribe_result(self, cmd, nargs, res)
+    local err
+    _check_unsubscribed(self, res)
+
+    if self._n_channel[cmd] == 0 or nargs == 1 then
+        return res
+    end
+
+    local results = new_tab(nargs, 0)
+    results[1] = res
+    local sock = rawget(self, "_sock")
+    local i = 2
+
+    while nargs == 0 or i <= nargs do
+        res, err = _read_reply(self, sock)
+        if not res then
+            return nil, err
+        end
+
+        results[i] = res
+        i = i + 1
+
+        _check_unsubscribed(self, res)
+        if self._n_channel[cmd] == 0 then
+            -- exit the loop for unsubscribe() call
+            break
+        end
+    end
+
+    return results
+end
+
 for i = 1, #unsub_commands do
     local cmd = unsub_commands[i]
 
     _M[cmd] =
         function (self, ...)
+            -- assume all channels are unsubscribed by only one time
+            if not rawget(self, "_subscribed") then
+                return nil, "not subscribed"
+            end
+
+            local nargs = select("#", ...)
+
             local res, err = _do_cmd(self, cmd, ...)
-            _check_subscribed(self, res)
-            return res, err
+            if not res then
+                return nil, err
+            end
+
+            return handle_unsubscribe_result(self, cmd, nargs, res)
         end
 end
 
diff --git a/t/pubsub.t b/t/pubsub.t
index 395e8f3..4db352c 100644
--- a/t/pubsub.t
+++ b/t/pubsub.t
@@ -158,7 +158,7 @@ __DATA__
 1: unsubscribe: ["unsubscribe","dog",0]
 2: publish: 0
 1: failed to read reply: not subscribed
-1: unsubscribe: ["unsubscribe","dog",0]
+1: failed to unsubscribe: not subscribed
 --- no_error_log
 [error]
 
@@ -262,8 +262,8 @@ __DATA__
 2: publish: 1
 1: receive: \["message","dog","Hello"\]
 1: failed to read reply: timeout
-1: unsubscribe: \["unsubscribe","(?:cat|dog)",1\]
-1: receive: \["unsubscribe","(?:dog|cat)",0\]
+1: unsubscribe: \[\["unsubscribe","(?:cat|dog)",1\],\["unsubscribe","(?:cat|dog)",0\]\]
+1: failed to read reply: not subscribed
 1: failed to read reply: not subscribed$
 
 --- no_error_log
@@ -609,3 +609,321 @@ GET /t
 
 --- no_error_log
 [error]
+
+
+
+=== TEST 9: multiple subscribe
+--- global_config eval: $::GlobalConfig
+--- server_config
+        content_by_lua_block {
+            local cjson = require "cjson"
+            local redis = require "resty.redis"
+
+            local red = redis:new()
+
+            red:set_timeout(1000) -- 1 sec
+
+            local ok, err = red:connect("127.0.0.1", $TEST_NGINX_REDIS_PORT)
+            if not ok then
+                ngx.say("1: failed to connect: ", err)
+                return
+            end
+
+            local res, err = red:subscribe("dog", "cat")
+            if not res then
+                ngx.say("1: failed to subscribe: ", err)
+            else
+                ngx.say("1: subscribe: ", cjson.encode(res))
+            end
+
+            res, err = red:unsubscribe("dog")
+            if not res then
+                ngx.say("1: failed to unsubscribe: ", err)
+            else
+                ngx.say("1: unsubscribe: ", cjson.encode(res))
+            end
+
+            res, err = red:unsubscribe("cat")
+            if not res then
+                ngx.say("1: failed to unsubscribe: ", err)
+            else
+                ngx.say("1: unsubscribe: ", cjson.encode(res))
+            end
+
+            red:close()
+        }
+--- response_body
+1: subscribe: [["subscribe","dog",1],["subscribe","cat",2]]
+1: unsubscribe: ["unsubscribe","dog",1]
+1: unsubscribe: ["unsubscribe","cat",0]
+--- no_error_log
+[error]
+
+
+
+=== TEST 10: multiple unsubscribe
+--- global_config eval: $::GlobalConfig
+--- server_config
+        content_by_lua_block {
+            local cjson = require "cjson"
+            local redis = require "resty.redis"
+
+            local red = redis:new()
+
+            red:set_timeout(1000) -- 1 sec
+
+            local ok, err = red:connect("127.0.0.1", $TEST_NGINX_REDIS_PORT)
+            if not ok then
+                ngx.say("1: failed to connect: ", err)
+                return
+            end
+
+            local res, err = red:subscribe("dog")
+            if not res then
+                ngx.say("1: failed to subscribe: ", err)
+                return
+            end
+
+            res, err = red:subscribe("cat")
+            if not res then
+                ngx.say("1: failed to subscribe: ", err)
+                return
+            end
+
+            res, err = red:unsubscribe()
+            if not res then
+                ngx.say("1: failed to unscribe: ", err)
+            else
+                ngx.say("1: unsubscribe: ", cjson.encode(res))
+            end
+
+            red:close()
+        }
+--- response_body_like
+^1: unsubscribe: \[\["unsubscribe","(?:cat|dog)",1\],\["unsubscribe","(?:cat|dog)",0\]\]$
+--- no_error_log
+[error]
+
+
+
+=== TEST 11: multiple psubscribe
+--- global_config eval: $::GlobalConfig
+--- server_config
+        content_by_lua_block {
+            local cjson = require "cjson"
+            local redis = require "resty.redis"
+
+            local red = redis:new()
+
+            red:set_timeout(1000) -- 1 sec
+
+            local ok, err = red:connect("127.0.0.1", $TEST_NGINX_REDIS_PORT)
+            if not ok then
+                ngx.say("1: failed to connect: ", err)
+                return
+            end
+
+            local res, err = red:psubscribe("dog", "cat")
+            if not res then
+                ngx.say("1: failed to subscribe: ", err)
+            else
+                ngx.say("1: subscribe: ", cjson.encode(res))
+            end
+
+            res, err = red:punsubscribe("dog")
+            if not res then
+                ngx.say("1: failed to unsubscribe: ", err)
+            else
+                ngx.say("1: unsubscribe: ", cjson.encode(res))
+            end
+
+            res, err = red:punsubscribe("cat")
+            if not res then
+                ngx.say("1: failed to unsubscribe: ", err)
+            else
+                ngx.say("1: unsubscribe: ", cjson.encode(res))
+            end
+
+            red:close()
+        }
+--- response_body
+1: subscribe: [["psubscribe","dog",1],["psubscribe","cat",2]]
+1: unsubscribe: ["punsubscribe","dog",1]
+1: unsubscribe: ["punsubscribe","cat",0]
+--- no_error_log
+[error]
+
+
+
+=== TEST 12: multiple punsubscribe
+--- global_config eval: $::GlobalConfig
+--- server_config
+        content_by_lua_block {
+            local cjson = require "cjson"
+            local redis = require "resty.redis"
+
+            local red = redis:new()
+
+            red:set_timeout(1000) -- 1 sec
+
+            local ok, err = red:connect("127.0.0.1", $TEST_NGINX_REDIS_PORT)
+            if not ok then
+                ngx.say("1: failed to connect: ", err)
+                return
+            end
+
+            local res, err = red:psubscribe("dog")
+            if not res then
+                ngx.say("1: failed to subscribe: ", err)
+                return
+            end
+
+            res, err = red:psubscribe("cat")
+            if not res then
+                ngx.say("1: failed to subscribe: ", err)
+                return
+            end
+
+            res, err = red:punsubscribe()
+            if not res then
+                ngx.say("1: failed to unscribe: ", err)
+            else
+                ngx.say("1: unsubscribe: ", cjson.encode(res))
+            end
+
+            red:close()
+        }
+--- response_body_like
+^1: unsubscribe: \[\["punsubscribe","(?:cat|dog)",1\],\["punsubscribe","(?:cat|dog)",0\]\]$
+--- no_error_log
+[error]
+
+
+
+=== TEST 13: mix read_reply, subscribe, and psubscribe
+--- global_config eval: $::GlobalConfig
+--- server_config
+        content_by_lua_block {
+            local cjson = require "cjson"
+            local redis = require "resty.redis"
+
+            local red = redis:new()
+            local red2 = redis:new()
+
+            red:set_timeout(1000) -- 1 sec
+            red2:set_timeout(1000) -- 1 sec
+
+            local ok, err = red:connect("127.0.0.1", $TEST_NGINX_REDIS_PORT)
+            if not ok then
+                ngx.say("1: failed to connect: ", err)
+                return
+            end
+
+            ok, err = red2:connect("127.0.0.1", $TEST_NGINX_REDIS_PORT)
+            if not ok then
+                ngx.say("2: failed to connect: ", err)
+                return
+            end
+
+            local res, err = red:subscribe("two")
+            if not res then
+                ngx.say("1: failed to subscribe: ", err)
+                return
+            end
+
+            res, err = red:psubscribe("t*o")
+            if not res then
+                ngx.say("1: failed to subscribe: ", err)
+                return
+            end
+
+            res, err = red2:publish("two", "foo")
+            if not res then
+                ngx.say("2: failed to publish: ", err)
+                return
+            end
+
+            res, err = red2:publish("too", "bar")
+            if not res then
+                ngx.say("2: failed to publish: ", err)
+                return
+            end
+
+            res, err = red2:publish("too", "baz")
+            if not res then
+                ngx.say("2: failed to publish: ", err)
+                return
+            end
+
+            res, err = red:read_reply()
+            if not res then
+                ngx.say("1: failed to read reply: ", err)
+            else
+                ngx.say("1: receive: ", cjson.encode(res))
+            end
+
+            res, err = red:read_reply()
+            if not res then
+                ngx.say("1: failed to read reply: ", err)
+            else
+                ngx.say("1: receive: ", cjson.encode(res))
+            end
+
+            res, err = red:punsubscribe()
+            if not res then
+                ngx.say("1: failed to unscribe: ", err)
+            else
+                ngx.say("1: unsubscribe: ", cjson.encode(res))
+            end
+
+            local res, err = red:subscribe("three")
+            if not res then
+                ngx.say("1: failed to subscribe: ", err)
+                return
+            end
+
+            res, err = red2:publish("three", "foo")
+            if not res then
+                ngx.say("2: failed to publish: ", err)
+                return
+            end
+
+            res, err = red2:publish("two", "bar")
+            if not res then
+                ngx.say("2: failed to publish: ", err)
+                return
+            end
+
+            res, err = red:unsubscribe("three")
+            if not res then
+                ngx.say("1: failed to unscribe: ", err)
+            else
+                ngx.say("1: unsubscribe: ", cjson.encode(res))
+            end
+
+            res, err = red:read_reply()
+            if not res then
+                ngx.say("1: failed to read reply: ", err)
+            else
+                ngx.say("1: receive: ", cjson.encode(res))
+            end
+
+            res, err = red:unsubscribe()
+            if not res then
+                ngx.say("1: failed to unscribe: ", err)
+            else
+                ngx.say("1: unsubscribe: ", cjson.encode(res))
+            end
+
+            red:close()
+            red2:close()
+        }
+--- response_body_like chop
+^1: receive: \["p?message",("two"|"t\*o","two"),"foo"\]
+1: receive: \["p?message",("two"|"t\*o","two"),"foo"\]
+1: unsubscribe: \["punsubscribe","t\*o",1\]
+1: unsubscribe: \["unsubscribe","three",1\]
+1: receive: \["message","two","bar"\]
+1: unsubscribe: \["unsubscribe","two",0\]
+--- no_error_log
+[error]

commit 28221372e2dc2300a5706866dc0ae35ef95839c4
Author: stone-wind <toemacs@163.com>
Date:   Fri Jul 31 09:17:03 2020 +0800

    bugfix: lack close() when receive timeout

diff --git a/lib/resty/redis.lua b/lib/resty/redis.lua
index feae4b1..114f71f 100644
--- a/lib/resty/redis.lua
+++ b/lib/resty/redis.lua
@@ -230,6 +230,9 @@ local function _read_reply(self, sock)
 
         local dummy, err = sock:receive(2) -- ignore CRLF
         if not dummy then
+            if err == "timeout" then
+                sock:close()
+            end
             return nil, err
         end
 

commit 5ea766adbacbff0b5cf32ebb28612f553059223f
Author: Andreas Fischer <bjoe2k4@users.noreply.github.com>
Date:   Thu Jul 16 03:10:53 2020 +0200

    bugfix: connect to unix socket without opts table (#200)
    
    The second argument of `sock:connect()` cannot be `nil`.
    Fixes #187
    Bug introduced by 79d24214095c921b879319e512b2f20fddf0795e

diff --git a/lib/resty/redis.lua b/lib/resty/redis.lua
index 364b144..feae4b1 100644
--- a/lib/resty/redis.lua
+++ b/lib/resty/redis.lua
@@ -140,9 +140,13 @@ function _M.connect(self, host, port_or_opts, opts)
     local ok, err
 
     if unix then
-        ok, err = sock:connect(host, port_or_opts)
-        opts = port_or_opts
-
+         -- second argument of sock:connect() cannot be nil
+         if port_or_opts ~= nil then
+             ok, err = sock:connect(host, port_or_opts)
+             opts = port_or_opts
+         else
+             ok, err = sock:connect(host)
+         end
     else
         ok, err = sock:connect(host, port_or_opts, opts)
     end
diff --git a/t/ssl.t b/t/ssl.t
index 8944cc9..7e6d7aa 100644
--- a/t/ssl.t
+++ b/t/ssl.t
@@ -244,3 +244,49 @@ failed to connect: failed to do ssl handshake: 18: self signed certificate
     }
 --- response_body
 ok
+
+
+
+=== TEST 6: non-ssl connection to unix socket (issue #187)
+--- config
+    location /t {
+        content_by_lua_block {
+            local redis = require "resty.redis"
+            local red = redis:new()
+
+            red:set_timeout(100)
+
+            local ok, err = red:connect("unix:$TEST_NGINX_HTML_DIR/nginx-ssl.sock")
+            if not ok then
+                ngx.say("failed to connect: ", err)
+                return
+            end
+
+            ngx.say("ok")
+        }
+    }
+--- response_body
+ok
+
+
+
+=== TEST 7: non-ssl connection to unix socket with second argument nil (issue #187)
+--- config
+    location /t {
+        content_by_lua_block {
+            local redis = require "resty.redis"
+            local red = redis:new()
+
+            red:set_timeout(100)
+
+            local ok, err = red:connect("unix:$TEST_NGINX_HTML_DIR/nginx-ssl.sock",nil)
+            if not ok then
+                ngx.say("failed to connect: ", err)
+                return
+            end
+
+            ngx.say("ok")
+        }
+    }
+--- response_body
+ok
------ diff log end --------
** Summary: check here https://github.com/openresty/lua-resty-redis
===================== END lua-resty-redis =================================
New Tag		: lua-resty-mysql: v0.22(new) vs 0.21
New Commit	: lua-resty-mysql: 6 commits since 'v0.22'
------ diff log --------
commit 472a4d7831fcc1e8d444e69bdde19872b49e4f5e
Author: Jinhua Tan <312841925@qq.com>
Date:   Tue Aug 11 21:22:01 2020 +0800

    test: run ngx-build with OPENSSL_PATH to use specific openssl (#108)

diff --git a/.travis.yml b/.travis.yml
index 113c32d..490f3a3 100644
--- a/.travis.yml
+++ b/.travis.yml
@@ -32,6 +32,10 @@ env:
     - LD_LIBRARY_PATH=$LUAJIT_LIB:$LD_LIBRARY_PATH
     - TEST_NGINX_MYSQL_PATH=/var/run/mysqld/mysqld.sock
     - TEST_NGINX_SLEEP=0.006
+    - OPENSSL_PREFIX=/opt/ssl
+    - OPENSSL_LIB=$OPENSSL_PREFIX/lib
+    - OPENSSL_INC=$OPENSSL_PREFIX/include
+    - OPENSSL_VER=1.1.1f
   jobs:
     - NGINX_VERSION=1.17.8 DB_VERSION=mysql:5.5
     - NGINX_VERSION=1.17.8 DB_VERSION=mysql:5.6
@@ -44,6 +48,8 @@ env:
     - NGINX_VERSION=1.17.8 DB_VERSION=mariadb:10.3
 
 install:
+  - if [ ! -d download-cache ]; then mkdir download-cache; fi
+  - if [ ! -f download-cache/openssl-$OPENSSL_VER.tar.gz ]; then wget -O download-cache/openssl-$OPENSSL_VER.tar.gz https://www.openssl.org/source/openssl-$OPENSSL_VER.tar.gz; fi
   - git clone https://github.com/openresty/test-nginx.git
   - git clone https://github.com/openresty/openresty.git ../openresty
   - git clone https://github.com/openresty/nginx-devel-utils.git
@@ -68,8 +74,13 @@ before_script:
   - cd ..
 
 script:
+  - tar zxf download-cache/openssl-$OPENSSL_VER.tar.gz
+  - cd openssl-$OPENSSL_VER/
+  - ./config shared --prefix=$OPENSSL_PREFIX -DPURIFY > build.log 2>&1 || (cat build.log && exit 1)
+  - make -j$JOBS > build.log 2>&1 || (cat build.log && exit 1)
+  - sudo make PATH=$PATH install_sw > build.log 2>&1 || (cat build.log && exit 1) && cd ..
   - cd test-nginx && (sudo cpanm --notest . > build.log 2>&1 || (cat build.log && exit 1)) && cd ..
   - cd lua-cjson && (LUA_INCLUDE_DIR=$LUAJIT_INC make && sudo PATH=$PATH make install) || (cat build.log && exit 1) && cd ..
   - export PATH=$PWD/work/nginx/sbin:$PWD/nginx-devel-utils:$PATH
-  - ngx-build $NGINX_VERSION --with-ipv6 --with-http_realip_module --with-http_ssl_module --with-stream --with-stream_ssl_module --with-stream_ssl_preread_module --add-module=../lua-nginx-module --add-module=../stream-lua-nginx-module --with-debug > build.log 2>&1 || (cat build.log && exit 1)
+  - ngx-build $NGINX_VERSION --with-ipv6 --with-http_realip_module --with-http_ssl_module --with-cc-opt="-I$OPENSSL_INC" --with-ld-opt="-L$OPENSSL_LIB -Wl,-rpath,$OPENSSL_LIB" --with-stream --with-stream_ssl_module --with-stream_ssl_preread_module --add-module=../lua-nginx-module --add-module=../stream-lua-nginx-module --with-debug > build.log 2>&1 || (cat build.log && exit 1)
   - prove -r t

commit c5a0bb9b7cf3388880a015ff7b50ef136f4b0a78
Author: Jinhua Tan <312841925@qq.com>
Date:   Mon Jul 13 10:27:30 2020 +0800

    feature: support sha256 plugin to auth (#105)

diff --git a/.gitignore b/.gitignore
index 3cbc4d8..a2473ca 100644
--- a/.gitignore
+++ b/.gitignore
@@ -9,3 +9,4 @@ tags
 src/
 mysqld.cnf
 download-cache/
+t/data/test.*
diff --git a/.travis.yml b/.travis.yml
index ae67756..113c32d 100644
--- a/.travis.yml
+++ b/.travis.yml
@@ -36,6 +36,7 @@ env:
     - NGINX_VERSION=1.17.8 DB_VERSION=mysql:5.5
     - NGINX_VERSION=1.17.8 DB_VERSION=mysql:5.6
     - NGINX_VERSION=1.17.8 DB_VERSION=mysql:5.7
+    - NGINX_VERSION=1.17.8 DB_VERSION=mysql:8.0
     - NGINX_VERSION=1.17.8 DB_VERSION=mariadb:5.5
     - NGINX_VERSION=1.17.8 DB_VERSION=mariadb:10.0
     - NGINX_VERSION=1.17.8 DB_VERSION=mariadb:10.1
@@ -51,8 +52,12 @@ install:
   - git clone https://github.com/openresty/stream-lua-nginx-module.git ../stream-lua-nginx-module
   - git clone https://github.com/openresty/lua-resty-core.git ../lua-resty-core
   - git clone https://github.com/openresty/lua-resty-lrucache.git ../lua-resty-lrucache
+  - git clone https://github.com/openresty/lua-resty-string.git ../lua-resty-string
   - git clone https://github.com/openresty/no-pool-nginx.git ../no-pool-nginx
   - git clone -b v2.1-agentzh https://github.com/openresty/luajit2.git luajit2
+  - git clone https://github.com/spacewander/lua-resty-rsa.git ../lua-resty-rsa
+  - cp -rf ../lua-resty-rsa/lib/resty/* lib/resty/
+  - cp -rf ../lua-resty-string/lib/resty/* lib/resty/
 
 before_script:
   - sudo service mysql stop
@@ -63,7 +68,7 @@ before_script:
   - cd ..
 
 script:
-  - cd test-nginx && (sudo cpanm . > build.log 2>&1 || (cat build.log && exit 1)) && cd ..
+  - cd test-nginx && (sudo cpanm --notest . > build.log 2>&1 || (cat build.log && exit 1)) && cd ..
   - cd lua-cjson && (LUA_INCLUDE_DIR=$LUAJIT_INC make && sudo PATH=$PATH make install) || (cat build.log && exit 1) && cd ..
   - export PATH=$PWD/work/nginx/sbin:$PWD/nginx-devel-utils:$PATH
   - ngx-build $NGINX_VERSION --with-ipv6 --with-http_realip_module --with-http_ssl_module --with-stream --with-stream_ssl_module --with-stream_ssl_preread_module --add-module=../lua-nginx-module --add-module=../stream-lua-nginx-module --with-debug > build.log 2>&1 || (cat build.log && exit 1)
diff --git a/.travis/initializedb.sh b/.travis/initializedb.sh
index 04b5878..594fde1 100755
--- a/.travis/initializedb.sh
+++ b/.travis/initializedb.sh
@@ -2,12 +2,37 @@
 
 set -ex
 
+if [ $DB_VERSION == 'mysql:8.0' -o $DB_VERSION == 'mariadb:10.3' ]; then
+    sudo cp t/data/test-sha256.crt t/data/test.crt
+    sudo cp t/data/test-sha256.key t/data/test.key
+else
+    sudo cp t/data/test-sha1.crt t/data/test.crt
+    sudo cp t/data/test-sha1.key t/data/test.key
+    sudo cp t/data/test-sha1.pub t/data/test.pub
+fi
+
 cat << EOF >mysqld.cnf
 [mysqld]
 ssl-ca=/etc/mysql/ssl/test.crt
 ssl-cert=/etc/mysql/ssl/test.crt
 ssl-key=/etc/mysql/ssl/test.key
 socket=/var/run/mysqld/mysqld.sock
+EOF
+
+if [ $DB_VERSION != 'mysql:8.0' -a $DB_VERSION != 'mysql:5.7' ]; then
+cat << EOF >>mysqld.cnf
+secure-auth=0
+EOF
+fi
+
+if [ $DB_VERSION == 'mysql:5.6' ]; then
+cat << EOF >>mysqld.cnf
+sha256_password_private_key_path=/etc/mysql/ssl/test.key
+sha256_password_public_key_path=/etc/mysql/ssl/test.pub
+EOF
+fi
+
+cat << EOF >>mysqld.cnf
 
 [client]
 socket=/var/run/mysqld/mysqld.sock
@@ -29,6 +54,7 @@ sudo docker run \
     --volume=$path/mysqld.cnf:/etc/mysql/conf.d/mysqld.cnf \
     --volume=$path/t/data/test.crt:/etc/mysql/ssl/test.crt \
     --volume=$path/t/data/test.key:/etc/mysql/ssl/test.key \
+    --volume=$path/t/data/test.pub:/etc/mysql/ssl/test.pub \
     ${DB_VERSION}
 
 mysql() {
@@ -49,4 +75,46 @@ docker exec mysqld /bin/sh -c "zcat /tmp/world.sql.gz | mysql -uroot"
 mysql -uroot -e 'create database ngx_test;'
 mysql -uroot -e 'create user "ngx_test"@"%" identified by "ngx_test";'
 mysql -uroot -e 'grant all on ngx_test.* to "ngx_test"@"%";'
+
+if [ $DB_VERSION == 'mysql:8.0' -o $DB_VERSION == 'mysql:5.7' ]; then # sha256_password, mysql_native_password
+    mysql -uroot -e 'create user "user_sha256"@"%" identified with "sha256_password" by "pass_sha256";'
+    mysql -uroot -e 'grant all on ngx_test.* to "user_sha256"@"%";'
+    mysql -uroot -e 'create user "nopass_sha256"@"%" identified with "sha256_password";'
+    mysql -uroot -e 'grant all on ngx_test.* to "nopass_sha256"@"%";'
+
+    if [ $DB_VERSION != 'mysql:5.7' ]; then # mysql:8.0 caching_sha2_password
+        mysql -uroot -e 'create user "user_caching_sha2"@"%" identified with "caching_sha2_password" by "pass_caching_sha2";'
+        mysql -uroot -e 'grant all on ngx_test.* to "user_caching_sha2"@"%";'
+        mysql -uroot -e 'create user "nopass_caching_sha2"@"%" identified with "caching_sha2_password";'
+        mysql -uroot -e 'grant all on ngx_test.* to "nopass_caching_sha2"@"%";'
+    fi
+
+    mysql -uroot -e 'create user "user_native"@"%" identified with "mysql_native_password" by "pass_native";'
+else # other: mysql_native_password, mysql_old_password
+    if [ $DB_VERSION == 'mysql:5.6' ]; then # mysql:5.6 sha256_password
+        mysql -uroot -e 'create user "user_sha256"@"%" identified with "sha256_password";'
+        mysql -uroot -e 'set old_passwords = 2;set password for "user_sha256"@"%" = PASSWORD("pass_sha256");'
+        mysql -uroot -e 'grant all on ngx_test.* to "user_sha256"@"%";'
+        mysql -uroot -e 'create user "nopass_sha256"@"%" identified with "sha256_password";'
+        mysql -uroot -e 'grant all on ngx_test.* to "nopass_sha256"@"%";'
+    fi
+
+    mysql -uroot -e 'create user "user_old"@"%" identified with mysql_old_password;'
+    mysql -uroot -e 'set old_passwords = 1;set password for "user_old"@"%" = PASSWORD("pass_old");'
+    mysql -uroot -e 'grant all on ngx_test.* to "user_old"@"%";'
+    mysql -uroot -e 'create user "nopass_old"@"%" identified with mysql_old_password;'
+    mysql -uroot -e 'set password for "nopass_old"@"%" = "";'
+    mysql -uroot -e 'grant all on ngx_test.* to "nopass_old"@"%";'
+
+    mysql -uroot -e 'create user "user_native"@"%" identified with mysql_native_password;'
+    mysql -uroot -e 'set old_passwords = 0;set password for "user_native"@"%" = PASSWORD("pass_native");'
+fi
+
+mysql -uroot -e 'grant all on ngx_test.* to "user_native"@"%";'
+mysql -uroot -e 'create user "nopass_native"@"%" identified with mysql_native_password;'
+mysql -uroot -e 'grant all on ngx_test.* to "nopass_native"@"%";'
+
+mysql -uroot -e 'select * from information_schema.plugins where  plugin_type="AUTHENTICATION"\G';
+mysql -uroot -e 'select User, plugin from mysql.user\G';
+
 mysql -uroot -e 'grant all on world.* to "ngx_test"@"%"; flush privileges;'
diff --git a/README.markdown b/README.markdown
index 2c2bfe0..b269924 100644
--- a/README.markdown
+++ b/README.markdown
@@ -27,6 +27,7 @@ Table of Contents
 * [Debugging](#debugging)
 * [Automatic Error Logging](#automatic-error-logging)
 * [Limitations](#limitations)
+* [More Authentication Method Support](#more-authentication-method-support)
 * [Installation](#installation)
 * [Community](#community)
     * [English Mailing List](#english-mailing-list)
@@ -492,6 +493,15 @@ each request.
 
 [Back to TOC](#table-of-contents)
 
+More Authentication Method Support
+=========
+
+By default, Of all authentication method, only [Old Password Authentication(mysql_old_password)](https://dev.mysql.com/doc/internals/en/old-password-authentication.html) and [Secure Password Authentication(mysql_native_password)](https://dev.mysql.com/doc/internals/en/secure-password-authentication.html) are suppored. If the server requires [sha256_password](https://dev.mysql.com/doc/internals/en/sha256.html) or cache_sha2_password, an error like `auth plugin caching_sha2_password or sha256_password are not supported because resty.rsa is not installed` may be returned.
+
+Need [lua-resty-rsa](https://github.com/spacewander/lua-resty-rsa) when using the `sha256_password` and `cache_sha2_password`.
+
+[Back to TOC](#table-of-contents)
+
 Installation
 ============
 
@@ -556,7 +566,6 @@ TODO
 
 * improve the MySQL connection pool support.
 * implement the MySQL binary row data packets.
-* implement MySQL's old pre-4.0 authentication method.
 * implement MySQL server prepare and execute packets.
 * implement the data compression support in the protocol.
 
diff --git a/lib/resty/mysql.lua b/lib/resty/mysql.lua
index 830ac9b..b72614d 100644
--- a/lib/resty/mysql.lua
+++ b/lib/resty/mysql.lua
@@ -2,6 +2,7 @@
 
 
 local bit = require "bit"
+local resty_sha256 = require "resty.sha256"
 local sub = string.sub
 local tcp = ngx.socket.tcp
 local strbyte = string.byte
@@ -22,14 +23,19 @@ local unpack = unpack
 local setmetatable = setmetatable
 local error = error
 local tonumber = tonumber
+local to_int = math.floor
+
+local has_rsa, resty_rsa = pcall(require, "resty.rsa")
 
 
 if not ngx.config then
     error("ngx_lua 0.9.11+ or ngx_stream_lua required")
 end
 
-if (not ngx.config.subsystem or ngx.config.subsystem == "http") -- subsystem is http
-    and (not ngx.config.ngx_lua_version or ngx.config.ngx_lua_version < 9011) -- old version
+if (not ngx.config.subsystem
+    or ngx.config.subsystem == "http") -- subsystem is http
+   and (not ngx.config.ngx_lua_version
+        or ngx.config.ngx_lua_version < 9011) -- old version
 then
     error("ngx_lua 0.9.11+ required")
 end
@@ -51,10 +57,33 @@ local STATE_COMMAND_SENT = 2
 
 local COM_QUIT = 0x01
 local COM_QUERY = 0x03
-local CLIENT_SSL = 0x0800
+
+-- refer to https://dev.mysql.com/doc/internals/en/capability-flags.html#packet-Protocol::CapabilityFlags
+-- CLIENT_LONG_PASSWORD | CLIENT_FOUND_ROWS | CLIENT_LONG_FLAG
+-- | CLIENT_CONNECT_WITH_DB | CLIENT_ODBC | CLIENT_LOCAL_FILES
+-- | CLIENT_IGNORE_SPACE | CLIENT_PROTOCOL_41 | CLIENT_INTERACTIVE
+-- | CLIENT_IGNORE_SIGPIPE | CLIENT_TRANSACTIONS | CLIENT_RESERVED
+-- | CLIENT_SECURE_CONNECTION | CLIENT_MULTI_STATEMENTS | CLIENT_MULTI_RESULTS
+local DEFAULT_CLIENT_FLAGS = 0x3f7cf
+local CLIENT_SSL = 0x00000800
+local CLIENT_PLUGIN_AUTH = 0x00080000
+local CLIENT_PLUGIN_AUTH_LENENC_CLIENT_DATA = 0x00200000
 
 local SERVER_MORE_RESULTS_EXISTS = 8
 
+local RESP_OK = "OK"
+local RESP_AUTHMOREDATA = "AUTHMOREDATA"
+local RESP_LOCALINFILE = "LOCALINFILE"
+local RESP_EOF = "EOF"
+local RESP_ERR = "ERR"
+local RESP_DATA = "DATA"
+
+local MY_RND_MAX_VAL = 0x3FFFFFFF
+local MIN_PROTOCOL_VER = 10
+
+local LEN_NATIVE_SCRAMBLE = 20
+local LEN_OLD_SCRAMBLE = 8
+
 -- 16MB - 1, the default max allowed packet size used by libmysqlclient
 local FULL_PACKET_SIZE = 16777215
 
@@ -190,11 +219,6 @@ local function _to_cstring(data)
 end
 
 
-local function _to_binary_coded_string(data)
-    return strchar(#data) .. data
-end
-
-
 local function _dump(data)
     local len = #data
     local bytes = new_tab(len, 0)
@@ -215,18 +239,128 @@ local function _dumphex(data)
 end
 
 
+local function _pwd_hash(password)
+    local add = 7
+
+    local hash1 = 1345345333
+    local hash2 = 0x12345671
+
+    local len = #password
+    for i = 1, len do
+        -- skip spaces and tabs in password
+        local byte = strbyte(password, i)
+        if byte ~= 32 and byte ~= 9 then -- not ' ' or '\t'
+            hash1 = bxor(hash1, (band(hash1, 63) + add) * byte
+                                + lshift(hash1, 8))
+
+            hash2 = bxor(lshift(hash2, 8), hash1) + hash2
+
+            add = add + byte
+        end
+    end
+
+    -- remove sign bit (1<<31)-1)
+    return band(hash1, 0x7FFFFFFF), band(hash2, 0x7FFFFFFF)
+end
+
+
+local function _random_byte(seed1, seed2)
+    seed1 = (seed1 * 3 + seed2) % MY_RND_MAX_VAL
+    seed2 = (seed1 + seed2 + 33) % MY_RND_MAX_VAL
+
+    return to_int(seed1 * 31 / MY_RND_MAX_VAL), seed1, seed2
+end
+
+
+local function _compute_old_token(password, scramble)
+    if password == "" then
+        return ""
+    end
+
+    scramble = sub(scramble, 1, LEN_OLD_SCRAMBLE)
+
+    local hash_pw1, hash_pw2 = _pwd_hash(password)
+    local hash_sc1, hash_sc2 = _pwd_hash(scramble)
+
+    local seed1 = bxor(hash_pw1, hash_sc1) % MY_RND_MAX_VAL
+    local seed2 = bxor(hash_pw2, hash_sc2) % MY_RND_MAX_VAL
+    local rand_byte
+
+    local bytes = new_tab(LEN_OLD_SCRAMBLE, 0)
+    for i = 1, LEN_OLD_SCRAMBLE do
+        rand_byte, seed1, seed2 = _random_byte(seed1, seed2)
+        bytes[i] = rand_byte + 64
+    end
+
+    rand_byte = _random_byte(seed1, seed2)
+    for i = 1, LEN_OLD_SCRAMBLE do
+        bytes[i] = strchar(bxor(bytes[i], rand_byte))
+    end
+
+    return _to_cstring(concat(bytes))
+end
+
+
+local function _compute_sha256_token(password, scramble)
+    if password == "" then
+        return ""
+    end
+
+    local sha256 = resty_sha256:new()
+    if not sha256 then
+        return nil, "failed to create the sha256 object"
+    end
+
+    if not sha256:update(password) then
+        return nil, "failed to update string to sha256"
+    end
+
+    local message1 = sha256:final()
+
+    sha256:reset()
+
+    if not sha256:update(message1) then
+        return nil, "failed to update string to sha256"
+    end
+
+    local message1_hash = sha256:final()
+
+    sha256:reset()
+
+    if not sha256:update(message1_hash) then
+        return nil, "failed to update string to sha256"
+    end
+
+    if not sha256:update(scramble) then
+        return nil, "failed to update string to sha256"
+    end
+
+    local message2 = sha256:final()
+
+    local n = #message2
+    local bytes = new_tab(n, 0)
+    for i = 1, n do
+        bytes[i] = strchar(bxor(strbyte(message1, i), strbyte(message2, i)))
+    end
+
+    return concat(bytes)
+end
+
+
 local function _compute_token(password, scramble)
     if password == "" then
         return ""
     end
 
+    scramble = sub(scramble, 1, LEN_NATIVE_SCRAMBLE)
+
     local stage1 = sha1(password)
     local stage2 = sha1(stage1)
     local stage3 = sha1(scramble .. stage2)
     local n = #stage1
     local bytes = new_tab(n, 0)
     for i = 1, n do
-         bytes[i] = strchar(bxor(strbyte(stage3, i), strbyte(stage1, i)))
+        bytes[i] = strchar(bxor(strbyte(stage3, i), strbyte(stage1, i)))
     end
 
     return concat(bytes)
@@ -293,13 +427,17 @@ local function _recv_packet(self)
 
     local typ
     if field_count == 0x00 then
-        typ = "OK"
-    elseif field_count == 0xff then
-        typ = "ERR"
+        typ = RESP_OK
+    elseif field_count == 0x01 then
+        typ = RESP_AUTHMOREDATA
+    elseif field_count == 0xfb then
+        typ = RESP_LOCALINFILE
     elseif field_count == 0xfe then
-        typ = "EOF"
+        typ = RESP_EOF
+    elseif field_count == 0xff then
+        typ = RESP_ERR
     else
-        typ = "DATA"
+        typ = RESP_DATA
     end
 
     return data, typ
@@ -504,243 +642,565 @@ local function _recv_field_packet(self)
         return nil, err
     end
 
-    if typ == "ERR" then
+    if typ == RESP_ERR then
         local errno, msg, sqlstate = _parse_err_packet(packet)
         return nil, msg, errno, sqlstate
     end
 
-    if typ ~= 'DATA' then
+    if typ ~= RESP_DATA then
         return nil, "bad field packet type: " .. typ
     end
 
-    -- typ == 'DATA'
+    -- typ == RESP_DATA
 
     return _parse_field_packet(packet)
 end
 
 
-function _M.new(self)
-    local sock, err = tcp()
-    if not sock then
-        return nil, err
+-- refer to https://dev.mysql.com/doc/internals/en/connection-phase-packets.html
+local function _read_hand_shake_packet(self)
+    local packet, typ, err = _recv_packet(self)
+    if not packet then
+        return nil, nil, err
     end
-    return setmetatable({ sock = sock }, mt)
-end
 
+    if typ == RESP_ERR then
+        local errno, msg, sqlstate = _parse_err_packet(packet)
+        return nil, nil, msg, errno, sqlstate
+    end
 
-function _M.set_timeout(self, timeout)
-    local sock = self.sock
-    if not sock then
-        return nil, "not initialized"
+    local protocol_ver = tonumber(strbyte(packet))
+    if not protocol_ver then
+        return nil, nil,
+            "bad handshake initialization packet: bad protocol version"
     end
 
-    return sock:settimeout(timeout)
-end
+    if protocol_ver < MIN_PROTOCOL_VER then
+        return nil, nil, "unsupported protocol version " .. protocol_ver
+                         .. ", version " .. MIN_PROTOCOL_VER
+                         .. " or higher is required"
+    end
 
+    self.protocol_ver = protocol_ver
 
-function _M.connect(self, opts)
-    local sock = self.sock
-    if not sock then
-        return nil, "not initialized"
+    local server_ver, pos = _from_cstring(packet, 2)
+    if not server_ver then
+        return nil, nil,
+            "bad handshake initialization packet: bad server version"
     end
 
-    local max_packet_size = opts.max_packet_size
-    if not max_packet_size then
-        max_packet_size = 1024 * 1024 -- default 1 MB
+    self._server_ver = server_ver
+
+    local thread_id, pos = _get_byte4(packet, pos)
+
+    local scramble = sub(packet, pos, pos + 8 - 1)
+    if not scramble then
+        return nil, nil, "1st part of scramble not found"
     end
-    self._max_packet_size = max_packet_size
 
-    local ok, err
+    pos = pos + 9 -- skip filler(8 + 1)
 
-    self.compact = opts.compact_arrays
+    -- two lower bytes
+    local capabilities  -- server capabilities
+    capabilities, pos = _get_byte2(packet, pos)
 
-    local database = opts.database or ""
-    local user = opts.user or ""
+    self._server_lang = strbyte(packet, pos)
+    pos = pos + 1
 
-    local charset = CHARSET_MAP[opts.charset or "_default"]
-    if not charset then
-        return nil, "charset '" .. opts.charset .. "' is not supported"
+    self._server_status, pos = _get_byte2(packet, pos)
+
+    local more_capabilities
+    more_capabilities, pos = _get_byte2(packet, pos)
+
+    self.capabilities = bor(capabilities, lshift(more_capabilities, 16))
+
+    pos = pos + 11 -- skip length of auth-plugin-data(1) and reserved(10)
+
+    -- follow official Python library uses the fixed length 12
+    -- and the 13th byte is "\0 byte
+    local scramble_part2 = sub(packet, pos, pos + 12 - 1)
+    if not scramble_part2 then
+        return nil, nil, "2nd part of scramble not found"
     end
 
-    local pool = opts.pool
+    pos = pos + 13
 
-    local host = opts.host
-    if host then
-        local port = opts.port or 3306
-        if not pool then
-            pool = user .. ":" .. database .. ":" .. host .. ":" .. port
+    local plugin, _ = _from_cstring(packet, pos)
+    if not plugin then
+        -- EOF if version (>= 5.5.7 and < 5.5.10) or (>= 5.6.0 and < 5.6.2)
+        -- \NUL otherwise
+        plugin = sub(packet, pos)
+    end
+
+    return scramble .. scramble_part2, plugin
+end
+
+
+local function _append_auth_length(self, data)
+    local n = #data
+
+    if n <= 250 then
+        data = strchar(n) .. data
+        return data, 1 + n
+    end
+
+    self.DEFAULT_CLIENT_FLAGS = bor(self.DEFAULT_CLIENT_FLAGS,
+                            CLIENT_PLUGIN_AUTH_LENENC_CLIENT_DATA)
+
+    if n <= 0xffff then
+        data = strchar(0xfc, band(n, 0xff), band(rshift(n, 8), 0xff)) .. data
+        return data, 3 + n
+    end
+
+    if n <= 0xffffff then
+        data = strchar(0xfd,
+                       band(n, 0xff),
+                       band(rshift(n, 8), 0xff),
+                       band(rshift(n, 16), 0xff))
+               .. data
+        return data, 4 + n
+    end
+
+    data = strchar(0xfe,
+                   band(n, 0xff),
+                   band(rshift(n, 8), 0xff),
+                   band(rshift(n, 16), 0xff),
+                   band(rshift(n, 24), 0xff),
+                   band(rshift(n, 32), 0xff),
+                   band(rshift(n, 40), 0xff),
+                   band(rshift(n, 48), 0xff),
+                   band(rshift(n, 56), 0xff))
+           .. data
+    return data, 9 + n
+end
+
+
+local function _write_hand_shake_response(self, auth_resp, plugin)
+    local append_auth, len = _append_auth_length(self, auth_resp)
+
+    if self.use_ssl then
+        if band(self.capabilities, CLIENT_SSL) == 0 then
+            return "ssl disabled on server"
         end
 
-        ok, err = sock:connect(host, port, { pool = pool, pool_size = opts.pool_size,
-                               backlog = opts.backlog})
+        -- send a SSL Request Packet
+        local req = _set_byte4(bor(self.DEFAULT_CLIENT_FLAGS, CLIENT_SSL))
+                    .. _set_byte4(self._max_packet_size)
+                    .. strchar(self.charset)
+                    .. strrep("\0", 23)
 
-    else
-        local path = opts.path
-        if not path then
-            return nil, 'neither "host" nor "path" options are specified'
+        local packet_len = 4 + 4 + 1 + 23
+        local bytes, err = _send_packet(self, req, packet_len)
+        if not bytes then
+            return "failed to send client authentication packet: " .. err
         end
 
-        if not pool then
-            pool = user .. ":" .. database .. ":" .. path
+        local sock = self.sock
+
+        local ok, err = sock:sslhandshake(false, nil, self.ssl_verify)
+        if not ok then
+            return "failed to do ssl handshake: " .. (err or "")
         end
+    end
+
+    local req = _set_byte4(self.DEFAULT_CLIENT_FLAGS)
+                .. _set_byte4(self._max_packet_size)
+                .. strchar(self.charset)
+                .. strrep("\0", 23)
+                .. _to_cstring(self.user)
+                .. append_auth
+                .. _to_cstring(self.database)
+                .. _to_cstring(plugin)
+
+    local packet_len = 4 + 4 + 1 + 23 + #self.user + 1
+        + len + #self.database + 1 + #plugin + 1
 
-        ok, err = sock:connect("unix:" .. path, { pool = pool, pool_size = opts.pool_size,
-                               backlog = opts.backlog})
+    local bytes, err = _send_packet(self, req, packet_len)
+    if not bytes then
+        return "failed to send client authentication packet: " .. err
     end
 
-    if not ok then
-        return nil, 'failed to connect: ' .. err
+    return nil
+end
+
+
+local function _read_auth_result(self, old_auth_data, plugin)
+    local packet, typ, err = _recv_packet(self)
+    if not packet then
+        return nil, nil, "failed to receive the result packet: " .. err
     end
 
-    local reused = sock:getreusedtimes()
+    if typ == RESP_OK then
+        return RESP_OK, ""
+    end
 
-    if reused and reused > 0 then
-        self.state = STATE_CONNECTED
-        return 1
+    if typ == RESP_AUTHMOREDATA then
+        return sub(packet, 2), ""
+    end
+
+    if typ == RESP_EOF then
+        if #packet == 1 then -- old pre-4.1 authentication protocol
+            return nil, "mysql_old_password"
+        end
+
+        local pos
+
+        plugin, pos = _from_cstring(packet, 2)
+        if not plugin then
+            return nil, nil, "malformed packet"
+        end
+
+        return sub(packet, pos), plugin
     end
 
+    if typ == RESP_ERR then
+        local errno, msg, sqlstate = _parse_err_packet(packet)
+        return errno, sqlstate, msg
+    end
+
+    return nil, nil, "bad packet type: " .. typ
+end
+
+
+local function _read_ok_result(self)
     local packet, typ, err = _recv_packet(self)
     if not packet then
-        return nil, err
+        return "failed to receive the result packet: " .. err
     end
 
-    if typ == "ERR" then
+    if typ == RESP_ERR then
         local errno, msg, sqlstate = _parse_err_packet(packet)
-        return nil, msg, errno, sqlstate
+        return msg, errno, sqlstate
     end
 
-    self.protocol_ver = strbyte(packet)
+    if typ ~= RESP_OK then
+        return "bad packet type: " .. typ
+    end
+end
 
-    --print("protocol version: ", self.protocol_ver)
 
-    local server_ver, pos = _from_cstring(packet, 2)
-    if not server_ver then
-        return nil, "bad handshake initialization packet: bad server version"
+local function _encrypt_password(self, auth_data, public_key)
+    if not has_rsa then
+        error("auth plugin caching_sha2_password or sha256_password are not" ..
+              " supported because resty.rsa is not installed", 2)
     end
 
-    --print("server version: ", server_ver)
-
-    self._server_ver = server_ver
+    local password = _to_cstring(self.password)
+    local n = #password
+    local l = #auth_data
+    local bytes = new_tab(n, 0)
 
-    local thread_id, pos = _get_byte4(packet, pos)
+    for i = 1, n do
+        local j = i % l
+        bytes[i] = strchar(bxor(strbyte(password, i), strbyte(auth_data, j)))
+    end
 
-    --print("thread id: ", thread_id)
+    local pub, err = resty_rsa:new({
+        public_key = public_key,
+        key_type = resty_rsa.KEY_TYPE.PKCS8,
+        padding = resty_rsa.PADDING.RSA_PKCS1_OAEP_PADDING,
+        algorithm = "sha1",
+    })
+    if not pub then
+        return nil, "new rsa err: " .. err
+    end
 
-    local scramble = sub(packet, pos, pos + 8 - 1)
-    if not scramble then
-        return nil, "1st part of scramble not found"
+    local enc, err = pub:encrypt(concat(bytes))
+    if not enc then
+        return nil, "encode password packet: " .. err
     end
 
-    pos = pos + 9 -- skip filler
+    return enc
+end
 
-    -- two lower bytes
-    local capabilities  -- server capabilities
-    capabilities, pos = _get_byte2(packet, pos)
 
-    -- print(format("server capabilities: %#x", capabilities))
+local function _write_encode_password(self, auth_data, public_key)
+    local enc, err = _encrypt_password(self, auth_data, public_key)
 
-    self._server_lang = strbyte(packet, pos)
-    pos = pos + 1
+    local bytes, err = _send_packet(self, enc, #enc)
+    if not bytes then
+        return "failed to send encode password packet: " .. err
+    end
+end
 
-    --print("server lang: ", self._server_lang)
 
-    self._server_status, pos = _get_byte2(packet, pos)
+local function _auth(self, auth_data, plugin)
+    local password = self.password
 
-    --print("server status: ", self._server_status)
+    if plugin == "caching_sha2_password" then
+        local auth_resp, err = _compute_sha256_token(password, auth_data)
+        if err then
+            return nil, "failed to compute sha256 token: " .. err
+        end
 
-    local more_capabilities
-    more_capabilities, pos = _get_byte2(packet, pos)
+        return auth_resp
+    end
 
-    capabilities = bor(capabilities, lshift(more_capabilities, 16))
+    if plugin == "mysql_old_password" then
+        return _compute_old_token(password, auth_data)
+    end
 
-    --print("server capabilities: ", capabilities)
+    if plugin == "mysql_clear_password" then
+        return _to_cstring(password)
+    end
 
-    -- local len = strbyte(packet, pos)
-    local len = 21 - 8 - 1
+    if plugin == "mysql_native_password" then
+        return _compute_token(password, auth_data)
+    end
 
-    --print("scramble len: ", len)
+    if plugin == "sha256_password" then
+        if self.is_unix or self.use_ssl or #password == 0 then
+            return _to_cstring(password)
+        end
 
-    pos = pos + 1 + 10
+        local public_key = self.public_key
+        if public_key then
+            return _encrypt_password(self, auth_data, public_key)
+        end
 
-    local scramble_part2 = sub(packet, pos, pos + len - 1)
-    if not scramble_part2 then
-        return nil, "2nd part of scramble not found"
+        return "\1" -- request public key from server
     end
 
-    scramble = scramble .. scramble_part2
-    --print("scramble: ", _dump(scramble))
+    return nil, "unknown plugin: " .. plugin
+end
 
-    local client_flags = 0x3f7cf;
 
-    local ssl_verify = opts.ssl_verify
-    local use_ssl = opts.ssl or ssl_verify
+local function _handle_auth_result(self, old_auth_data, plugin)
+    local auth_data, new_plugin, err = _read_auth_result(self, old_auth_data,
+                                                         plugin)
 
-    if use_ssl then
-        if band(capabilities, CLIENT_SSL) == 0 then
-            return nil, "ssl disabled on server"
+    if err ~= nil then
+        local errno, sqlstate = auth_data, new_plugin
+        return err, errno, sqlstate
+    end
+
+    if auth_data == RESP_OK then
+        return
+    end
+
+    if new_plugin ~= "" then
+        if not auth_data then
+            auth_data = old_auth_data
+        else
+            old_auth_data = auth_data
         end
 
-        -- send a SSL Request Packet
-        local req = _set_byte4(bor(client_flags, CLIENT_SSL))
-                    .. _set_byte4(self._max_packet_size)
-                    .. strchar(charset)
-                    .. strrep("\0", 23)
+        plugin = new_plugin
 
-        local packet_len = 4 + 4 + 1 + 23
-        local bytes, err = _send_packet(self, req, packet_len)
+        local auth_resp, err = _auth(self, auth_data, plugin)
+        if not auth_resp then
+            return err
+        end
+
+        local bytes, err = _send_packet(self, auth_resp, #auth_resp)
         if not bytes then
-            return nil, "failed to send client authentication packet: " .. err
+            return "failed to send client authentication packet: " .. err
         end
 
-        local ok, err = sock:sslhandshake(false, nil, ssl_verify)
-        if not ok then
-            return nil, "failed to do ssl handshake: " .. (err or "")
+        auth_data, new_plugin, err = _read_auth_result(self, old_auth_data,
+                                                       plugin)
+
+        if err ~= nil then
+            local errno, sqlstate = auth_data, new_plugin
+            return err, errno, sqlstate
+        end
+
+        if auth_data == RESP_OK then
+            return
+        end
+
+        if new_plugin ~= "" then
+            return "malformed packet"
         end
     end
 
-    local password = opts.password or ""
+    if plugin == "caching_sha2_password" then
+        local len = #auth_data
+        if len == 0 then
+            return
+        end
 
-    local token = _compute_token(password, scramble)
+        if len == 1 then
+            local status = strbyte(auth_data)
+            -- caching_sha2_password fast auth success
+            if status == 3 then
+                return _read_ok_result(self)
+            end
 
-    --print("token: ", _dump(token))
+            -- caching_sha2_password perform full authentication
+            if status == 4 then
+                if self.is_unix or self.use_ssl then
+                    local bytes, err = _send_packet(self,
+                                                    _to_cstring(self.password),
+                                                    #self.password + 1)
+
+                    if not bytes then
+                        return "failed to send cleartext auth packet: "
+                            .. err
+                    end
+
+                else
+                    local public_key = self.public_key
+                    if not public_key then
+                        -- caching_sha2_password request public_key
+                        local bytes, err = _send_packet(self, "\2", 1)
+                        if not bytes then
+                            return "failed to send password request packet: "
+                                .. err
+                        end
+
+                        local packet, _, err = _recv_packet(self)
+                        if not packet then
+                            return "failed to receive the result packet: "
+                                .. err
+                        end
+
+                        public_key = sub(packet, 2)
+                    end
+
+                    err = _write_encode_password(self, old_auth_data,
+                                                 public_key)
+
+                    if err then
+                        return err
+                    end
+
+                    self.public_key = public_key
+                end
+
+                return _read_ok_result(self)
+            end
+        end
 
-    local req = _set_byte4(client_flags)
-                .. _set_byte4(self._max_packet_size)
-                .. strchar(charset)
-                .. strrep("\0", 23)
-                .. _to_cstring(user)
-                .. _to_binary_coded_string(token)
-                .. _to_cstring(database)
+        return "malformed packet"
+    end
 
-    local packet_len = 4 + 4 + 1 + 23 + #user + 1
-        + #token + 1 + #database + 1
+    if plugin == "sha256_password" then
+        if #auth_data ~= 0 then
+            local enc, err = _write_encode_password(self, old_auth_data,
+                                                    auth_data)
 
-    -- print("packet content length: ", packet_len)
-    -- print("packet content: ", _dump(concat(req, "")))
+            if err then
+                return err
+            end
 
-    local bytes, err = _send_packet(self, req, packet_len)
-    if not bytes then
-        return nil, "failed to send client authentication packet: " .. err
+            return _read_ok_result(self)
+        end
     end
+end
 
-    --print("packet sent ", bytes, " bytes")
 
-    local packet, typ, err = _recv_packet(self)
-    if not packet then
-        return nil, "failed to receive the result packet: " .. err
+function _M.new(self)
+    local sock, err = tcp()
+    if not sock then
+        return nil, err
     end
+    return setmetatable({ sock = sock }, mt)
+end
 
-    if typ == 'ERR' then
-        local errno, msg, sqlstate = _parse_err_packet(packet)
-        return nil, msg, errno, sqlstate
+
+function _M.set_timeout(self, timeout)
+    local sock = self.sock
+    if not sock then
+        return nil, "not initialized"
+    end
+
+    return sock:settimeout(timeout)
+end
+
+
+function _M.connect(self, opts)
+    local sock = self.sock
+    if not sock then
+        return nil, "not initialized"
     end
 
-    if typ == 'EOF' then
-        return nil, "old pre-4.1 authentication protocol not supported"
+    local max_packet_size = opts.max_packet_size
+    if not max_packet_size then
+        max_packet_size = 1024 * 1024 -- default 1 MB
     end
+    self._max_packet_size = max_packet_size
 
-    if typ ~= 'OK' then
-        return nil, "bad packet type: " .. typ
+    local ok, err
+
+    self.compact = opts.compact_arrays
+
+    self.database = opts.database or ""
+    self.user = opts.user or ""
+
+    self.charset = CHARSET_MAP[opts.charset or "_default"]
+    if not self.charset then
+        return nil, "charset '" .. opts.charset .. "' is not supported"
+    end
+
+    local pool = opts.pool
+
+    self.ssl_verify = opts.ssl_verify
+    self.use_ssl = opts.ssl or opts.ssl_verify
+
+    self.password = opts.password or ""
+
+    local host = opts.host
+    if host then
+        local port = opts.port or 3306
+        if not pool then
+            pool = self.user .. ":" .. self.database .. ":" .. host .. ":"
+                   .. port
+        end
+
+        ok, err = sock:connect(host, port, { pool = pool,
+                               pool_size = opts.pool_size,
+                               backlog = opts.backlog })
+
+    else
+        local path = opts.path
+        if not path then
+            return nil, 'neither "host" nor "path" options are specified'
+        end
+
+        if not pool then
+            pool = self.user .. ":" .. self.database .. ":" .. path
+        end
+
+        self.is_unix = true
+        ok, err = sock:connect("unix:" .. path, { pool = pool,
+                               pool_size = opts.pool_size,
+                               backlog = opts.backlog })
+    end
+
+    if not ok then
+        return nil, 'failed to connect: ' .. err
+    end
+
+    local reused = sock:getreusedtimes()
+
+    if reused and reused > 0 then
+        self.state = STATE_CONNECTED
+        return 1
+    end
+
+    self.DEFAULT_CLIENT_FLAGS = bor(DEFAULT_CLIENT_FLAGS, CLIENT_PLUGIN_AUTH)
+
+    local auth_data, plugin, err, errno, sqlstate
+        = _read_hand_shake_packet(self)
+
+    if err ~= nil then
+        return nil, err
+    end
+
+    local auth_resp, err = _auth(self, auth_data, plugin)
+    if not auth_resp then
+        return nil, err
+    end
+
+    err = _write_hand_shake_response(self, auth_resp, plugin)
+    if err ~= nil then
+        return nil, err
+    end
+
+    local err, errno, sqlstate = _handle_auth_result(self, auth_data, plugin)
+    if err ~= nil then
+        return nil, err, errno, sqlstate
     end
 
     self.state = STATE_CONNECTED
@@ -843,14 +1303,14 @@ local function read_result(self, est_nrows)
         return nil, err
     end
 
-    if typ == "ERR" then
+    if typ == RESP_ERR then
         self.state = STATE_CONNECTED
 
         local errno, msg, sqlstate = _parse_err_packet(packet)
         return nil, msg, errno, sqlstate
     end
 
-    if typ == 'OK' then
+    if typ == RESP_OK then
         local res = _parse_ok_packet(packet)
         if res and band(res.server_status, SERVER_MORE_RESULTS_EXISTS) ~= 0 then
             return res, "again"
@@ -860,13 +1320,13 @@ local function read_result(self, est_nrows)
         return res
     end
 
-    if typ ~= 'DATA' then
+    if typ == RESP_LOCALINFILE then
         self.state = STATE_CONNECTED
 
         return nil, "packet type " .. typ .. " not supported"
     end
 
-    -- typ == 'DATA'
+    -- typ == RESP_DATA or RESP_AUTHMOREDATA(also mean RESP_DATA here)
 
     --print("read the result set header packet")
 
@@ -889,12 +1349,12 @@ local function read_result(self, est_nrows)
         return nil, err
     end
 
-    if typ ~= 'EOF' then
+    if typ ~= RESP_EOF then
         return nil, "unexpected packet type " .. typ .. " while eof packet is "
             .. "expected"
     end
 
-    -- typ == 'EOF'
+    -- typ == RESP_EOF
 
     local compact = self.compact
 
@@ -908,7 +1368,7 @@ local function read_result(self, est_nrows)
             return nil, err
         end
 
-        if typ == 'EOF' then
+        if typ == RESP_EOF then
             local warning_count, status_flags = _parse_eof_packet(packet)
 
             --print("status flags: ", status_flags)
@@ -920,12 +1380,6 @@ local function read_result(self, est_nrows)
             break
         end
 
-        -- if typ ~= 'DATA' then
-            -- return nil, 'bad row packet type: ' .. typ
-        -- end
-
-        -- typ == 'DATA'
-
         local row = _parse_row_data_packet(packet, cols, compact)
         i = i + 1
         rows[i] = row
diff --git a/t/auth.t b/t/auth.t
new file mode 100644
index 0000000..cfb4355
--- /dev/null
+++ b/t/auth.t
@@ -0,0 +1,263 @@
+# vim:set ft= ts=4 sw=4 et:
+
+use Test::Nginx::Socket::Lua;
+use Cwd qw(cwd);
+
+repeat_each(5);
+
+plan tests => repeat_each() * (2 * blocks());
+
+my $pwd = cwd();
+
+our $HttpConfig = qq{
+    resolver \$TEST_NGINX_RESOLVER;
+    lua_package_path "$pwd/t/servroot/html/?.lua;$pwd/lib/?.lua;$pwd/t/lib/?.lua;;";
+    lua_package_cpath "/usr/local/openresty-debug/lualib/?.so;/usr/local/openresty/lualib/?.so;;";
+};
+
+$ENV{TEST_NGINX_RESOLVER} = '8.8.8.8';
+$ENV{TEST_NGINX_MYSQL_PORT} ||= 3306;
+$ENV{TEST_NGINX_MYSQL_HOST} ||= '127.0.0.1';
+$ENV{TEST_NGINX_MYSQL_PATH} ||= '/var/run/mysql/mysql.sock';
+
+#log_level 'warn';
+
+no_long_string();
+no_shuffle();
+check_accum_error_log();
+
+add_block_preprocessor(sub {
+    my $block = shift;
+
+    if (!defined $block->user_files) {
+        $block->set_value("user_files", <<'_EOC_');
+>>> test_suit.lua
+local _M = {}
+
+local ljson = require "ljson"
+local mysql = require "resty.mysql"
+
+function _M.prepare()
+    local db = mysql:new()
+    db:set_timeout(2000) -- 2 sec
+
+    local ok, err, errno, sqlstate = db:connect({
+        host = "$TEST_NGINX_MYSQL_HOST",
+        port = $TEST_NGINX_MYSQL_PORT,
+        database = "ngx_test",
+        user = "ngx_test",
+        password = "ngx_test"})
+
+    if not ok then
+        ngx.log(ngx.ERR, "failed to connect: ", err, ": ", errno, " ", sqlstate)
+        return
+    end
+
+    ngx.say("connected to mysql.")
+
+    local res, err, errno, sqlstate = db:query("drop table if exists cats")
+    if not res then
+        ngx.log(ngx.ERR, "bad result: ", err, ": ", errno, ": ", sqlstate, ".")
+        return
+    end
+
+    ngx.say("table cats dropped.")
+
+    res, err, errno, sqlstate = db:query("create table cats (id serial primary key, name varchar(5))")
+    if not res then
+        ngx.log(ngx.ERR, "bad result: ", err, ": ", errno, ": ", sqlstate, ".")
+        return
+    end
+
+    ngx.say("table cats created.")
+
+    res, err, errno, sqlstate = db:query("insert into cats (name) value (\'Bob\'),(\'\'),(null)")
+    if not res then
+        ngx.log(ngx.ERR, "bad result: ", err, ": ", errno, ": ", sqlstate, ".")
+        return
+    end
+
+    ngx.say(res.affected_rows, " rows inserted into table cats (last id: ", res.insert_id, ")")
+
+    local ok, err = db:close()
+    if not ok then
+        ngx.log(ngx.ERR, "failed to close: ", err)
+        return
+    end
+end
+
+function _M.run(user, password, ssl)
+    local db = mysql:new()
+    db:set_timeout(2000) -- 2 sec
+
+    local ok, err, errno, sqlstate = db:connect({
+        host = "$TEST_NGINX_MYSQL_HOST",
+        port = $TEST_NGINX_MYSQL_PORT,
+        database = "ngx_test",
+        user = user,
+        password = password,
+        ssl = ssl,
+    })
+
+    if not ok then
+        ngx.log(ngx.ERR, "failed to connect: ", err, ": ", errno, " ", sqlstate)
+        return
+    end
+
+    ngx.say("mysql auth successful.")
+
+    local res, err, errno, sqlstate = db:query("select * from cats order by id asc")
+    if not res then
+        ngx.log(ngx.ERR, "bad result: ", err, ": ", errno, ": ", sqlstate, ".")
+        return
+    end
+
+    ngx.say("result: ", ljson.encode(res))
+
+    res, err, errno, sqlstate = db:query("select * from cats order by id desc")
+    if not res then
+        ngx.log(ngx.ERR, "bad result: ", err, ": ", errno, ": ", sqlstate, ".")
+        return
+    end
+
+    ngx.say("result: ", ljson.encode(res))
+
+    local ok, err = db:close()
+    if not ok then
+        ngx.log(ngx.ERR, "failed to close: ", err)
+        return
+    end
+
+    return true
+end
+
+return _M
+_EOC_
+    }
+});
+
+run_tests();
+
+__DATA__
+
+=== TEST 1: test different auth plugin
+--- main_config
+    env DB_VERSION;
+--- http_config eval: $::HttpConfig
+--- config
+    location /t {
+        content_by_lua_block {
+            local test_suit = require "test_suit"
+            test_suit.prepare()
+            local version = os.getenv("DB_VERSION")
+            if not version then
+                ngx.log(ngx.ERR, "please add the environment value \"DB_VERSION\"")
+            end
+
+            local version_plugin_mapping = {
+                ["mysql:5.5"] = {
+                    "mysql_native_password",
+                    "mysql_old_password",
+                },
+                ["mysql:5.6"] = {
+                    "mysql_native_password",
+                    "mysql_old_password",
+                    "sha256_password",
+                },
+                ["mysql:5.7"] = {
+                    "mysql_native_password",
+                    "sha256_password",
+                },
+                ["mysql:8.0"] = {
+                    "mysql_native_password",
+                    "sha256_password",
+                    "caching_sha2_password",
+                },
+                ["mariadb:5.5"] = {
+                    "mysql_native_password",
+                    "mysql_old_password",
+                },
+                ["mariadb:10.0"] = {
+                    "mysql_native_password",
+                    "mysql_old_password",
+                },
+                ["mariadb:10.1"] = {
+                    "mysql_native_password",
+                    "mysql_old_password",
+                },
+                ["mariadb:10.2"] = {
+                    "mysql_native_password",
+                    "mysql_old_password",
+                },
+                ["mariadb:10.3"] = {
+                    "mysql_native_password",
+                    "mysql_old_password",
+                },
+            }
+
+            local plugin_user_mapping = {
+                ["mysql_native_password"] = {
+                    {
+                        user = "user_native",
+                        password = "pass_native",
+                    },
+                    {
+                        user = "nopass_native",
+                    },
+                },
+                ["mysql_old_password"] = {
+                    {
+                        user = "user_old",
+                        password = "pass_old",
+                    },
+                    {
+                        user = "nopass_old",
+                    },
+                },
+                ["sha256_password"] = {
+                    {
+                        user = "user_sha256",
+                        password = "pass_sha256",
+                    },
+                    {
+                        user = "nopass_sha256",
+                    },
+                },
+                ["caching_sha2_password"] = {
+                    {
+                        user = "user_caching_sha2",
+                        password = "pass_caching_sha2",
+                    },
+                    {
+                        user = "nopass_caching_sha2",
+                    },
+                },
+            }
+
+            local plugin_list = version_plugin_mapping[version]
+            if not plugin_list then
+                ngx.log(ngx.ERR, "unknown version: ", version)
+            end
+
+            for _, p in ipairs(plugin_list) do
+                local user_infos = plugin_user_mapping[p]
+                for _, u in ipairs(user_infos) do
+                    if not test_suit.run(u.user, u.password) then
+                        ngx.log(ngx.ERR, "testing with plugin ", p,
+                                " failed, and the user is ", u.user,
+                                ", password is ", u.password or "null")
+                    end
+
+                    if not test_suit.run(u.user, u.password, true) then -- tls
+                        ngx.log(ngx.ERR, "testing(by tls) with plugin ", p,
+                                " failed, and the user is ", u.user,
+                                ", password is ", u.password or "null")
+                    end
+                end
+            end
+        }
+    }
+--- request
+GET /t
+--- no_error_log
+[error]
diff --git a/t/data/test-sha1.crt b/t/data/test-sha1.crt
new file mode 100644
index 0000000..a69a011
--- /dev/null
+++ b/t/data/test-sha1.crt
@@ -0,0 +1,17 @@
+-----BEGIN CERTIFICATE-----
+MIICqTCCAhICCQClDm1WkreW4jANBgkqhkiG9w0BAQUFADCBlzELMAkGA1UEBhMC
+VVMxEzARBgNVBAgMCkNhbGlmb3JuaWExFjAUBgNVBAcMDVNhbiBGcmFuY2lzY28x
+EjAQBgNVBAoMCU9wZW5SZXN0eTESMBAGA1UECwwJT3BlblJlc3R5MREwDwYDVQQD
+DAh0ZXN0LmNvbTEgMB4GCSqGSIb3DQEJARYRYWdlbnR6aEBnbWFpbC5jb20wIBcN
+MTQwNzIxMDMyMzQ3WhgPMjE1MTA2MTMwMzIzNDdaMIGXMQswCQYDVQQGEwJVUzET
+MBEGA1UECAwKQ2FsaWZvcm5pYTEWMBQGA1UEBwwNU2FuIEZyYW5jaXNjbzESMBAG
+A1UECgwJT3BlblJlc3R5MRIwEAYDVQQLDAlPcGVuUmVzdHkxETAPBgNVBAMMCHRl
+c3QuY29tMSAwHgYJKoZIhvcNAQkBFhFhZ2VudHpoQGdtYWlsLmNvbTCBnzANBgkq
+hkiG9w0BAQEFAAOBjQAwgYkCgYEA6P18zUvtmaKQK2xePy8ZbFwSyTLw+jW6t9eZ
+aiTec8X3ibN9WemrxHzkTRikxP3cAQoITRuZiQvF4Q7DO6wMkz/b0zwfgX5uedGq
+047AJP6n/mwlDOjGSNomBLoXQzo7tVe60ikEm3ZyDUqnJPJMt3hImO5XSop4MPMu
+Za9WhFcCAwEAATANBgkqhkiG9w0BAQUFAAOBgQA4OBb9bOyWB1//93nSXX1mdENZ
+IQeyTK0Dd6My76lnZxnZ4hTWrvvd0b17KLDU6JnS2N5ee3ATVkojPidRLWLIhnh5
+0eXrcKalbO2Ce6nShoFvQCQKXN2Txmq2vO/Mud2bHAWwJALg+qi1Iih/gVYB9sct
+FLg8zFOzRlYiU+6Mmw==
+-----END CERTIFICATE-----
diff --git a/t/data/test-sha1.key b/t/data/test-sha1.key
new file mode 100644
index 0000000..6c13527
--- /dev/null
+++ b/t/data/test-sha1.key
@@ -0,0 +1,15 @@
+-----BEGIN RSA PRIVATE KEY-----
+MIICXgIBAAKBgQDo/XzNS+2ZopArbF4/LxlsXBLJMvD6Nbq315lqJN5zxfeJs31Z
+6avEfORNGKTE/dwBCghNG5mJC8XhDsM7rAyTP9vTPB+Bfm550arTjsAk/qf+bCUM
+6MZI2iYEuhdDOju1V7rSKQSbdnINSqck8ky3eEiY7ldKingw8y5lr1aEVwIDAQAB
+AoGBANgB66sKMga2SKN5nQdHS3LDCkevCutu1OWM5ZcbB4Kej5kC57xsf+tzPtab
+emeIVGhCPOAALqB4YcT+QtMX967oM1MjcFbtH7si5oq6UYyp3i0G9Si6jIoVHz3+
+8yOUaqwKbK+bRX8VS0YsHZmBsPK5ryN50iUwsU08nemoA94BAkEA9GS9Q5OPeFkM
+tFxsIQ1f2FSsZAuN/1cpZgJqY+YaAN7MSPGTWyfd7nWG/Zgk3GO9/2ihh4gww+7B
+To09GkmW4QJBAPQOHC2V+t2TA98+6Lj6+TYwcGEkhOENfVpH25mQ+kXgF/1Bd6rA
+nosT1bdAY+SnmWXbSw6Kv5C20Em+bEX8WjcCQCSRRjhsRdVODbaW9Z7kb2jhEoJN
+sEt6cTlQNzcHYPCsZYisjM3g4zYg47fiIfHQAsfKkhDDcfh/KvFj9LaQOEECQQCH
+eBWYEDpSJ7rsfqT7mQQgWj7nDThdG/nK1TxGP71McBmg0Gg2dfkLRhVJRQqt74Is
+kc9V4Rp4n6F6baL4Lh19AkEA6pZZer0kg3Kv9hjhaITIKUYdfIp9vYnDRWbQlBmR
+atV8V9u9q2ETZvqfHpN+9Lu6NYR4yXIEIRf1bnIZ/mr9eQ==
+-----END RSA PRIVATE KEY-----
diff --git a/t/data/test-sha1.pub b/t/data/test-sha1.pub
new file mode 100644
index 0000000..77bf7fd
--- /dev/null
+++ b/t/data/test-sha1.pub
@@ -0,0 +1,6 @@
+-----BEGIN PUBLIC KEY-----
+MIGfMA0GCSqGSIb3DQEBAQUAA4GNADCBiQKBgQDo/XzNS+2ZopArbF4/LxlsXBLJ
+MvD6Nbq315lqJN5zxfeJs31Z6avEfORNGKTE/dwBCghNG5mJC8XhDsM7rAyTP9vT
+PB+Bfm550arTjsAk/qf+bCUM6MZI2iYEuhdDOju1V7rSKQSbdnINSqck8ky3eEiY
+7ldKingw8y5lr1aEVwIDAQAB
+-----END PUBLIC KEY-----
diff --git a/t/data/test-sha256.crt b/t/data/test-sha256.crt
new file mode 100644
index 0000000..4195d97
--- /dev/null
+++ b/t/data/test-sha256.crt
@@ -0,0 +1,22 @@
+-----BEGIN CERTIFICATE-----
+MIIDrjCCApYCCQCcdjRMo/UMDjANBgkqhkiG9w0BAQsFADCBlzELMAkGA1UEBhMC
+VVMxEzARBgNVBAgMCkNhbGlmb3JuaWExFjAUBgNVBAcMDVNhbiBGcmFuY2lzY28x
+EjAQBgNVBAoMCU9wZW5SZXN0eTESMBAGA1UECwwJT3BlblJlc3R5MREwDwYDVQQD
+DAh0ZXN0LmNvbTEgMB4GCSqGSIb3DQEJARYRYWdlbnR6aEBnbWFpbC5jb20wIBcN
+MjAwNjAzMTI0ODQzWhgPMjEyMDA1MTAxMjQ4NDNaMIGXMQswCQYDVQQGEwJVUzET
+MBEGA1UECAwKQ2FsaWZvcm5pYTEWMBQGA1UEBwwNU2FuIEZyYW5jaXNjbzESMBAG
+A1UECgwJT3BlblJlc3R5MRIwEAYDVQQLDAlPcGVuUmVzdHkxETAPBgNVBAMMCHRl
+c3QuY29tMSAwHgYJKoZIhvcNAQkBFhFhZ2VudHpoQGdtYWlsLmNvbTCCASIwDQYJ
+KoZIhvcNAQEBBQADggEPADCCAQoCggEBAJ1BGBbWH+9GbtrSoD21zfkHjH1nEVRy
+Jq/kORPD/ADzNRqOPaxDZBPqTRjmc/cUglET6uASC5GYa+aiuKdHgf+B/ocCZkl1
+h3VRWsV7X8blKgKZv1uvCd77QtLuhgA99k4+vlJnHduV5vuK45BjXNPENYX8eqbk
+oxaFSKktF2qsmGbJsycy14yF/ZFE0BvX50NIXlTG3l79r6Kh2CIWk97lmYnyU3Jw
+bHzr6gZToB0UbpIRZrD0dXAgY7v1vuvG1n+3e6CsqzgqqTTtuHa9Afx1mnntp5Bk
+KICK36IUbsD+ORhUlNtjYJGIHhN3U7XRReHb58kCvaqOKhsV7stcSG0CAwEAATAN
+BgkqhkiG9w0BAQsFAAOCAQEAWWWcU5/OvgK8hDy3YTcuyip2zzH7197ls7abwXTg
+Hhq+YVRrf0CfGd4cdBCD/MjWOWeQgmnZC0PfRUqYrBKgujhwHTTD6SfrTlgW43lt
+FvHq6M2euoy/LwyngQBukeqgH6LGbMlxydU8Z0LxyFzPy7apB0LkUZyZDZzjcIiA
+kzsDAKqzcq0Vhp+vUHWpEkNH9Y+QaNO2yZrtdBEw3nuy8pDQsvWdZPcZJy9EoMm8
+FyQqBXHz1ampbIaYrDRliRrpD8w9QKH/vwOzRoeKzhmQfXoSt1PO1KO2gZkSYZSz
+vXiQH+kKyOlxT6uU52U67Y8xBVGoqVpGv+1M4YlwTHqqVA==
+-----END CERTIFICATE-----
diff --git a/t/data/test-sha256.key b/t/data/test-sha256.key
new file mode 100644
index 0000000..4bdf065
--- /dev/null
+++ b/t/data/test-sha256.key
@@ -0,0 +1,27 @@
+-----BEGIN RSA PRIVATE KEY-----
+MIIEpAIBAAKCAQEAnUEYFtYf70Zu2tKgPbXN+QeMfWcRVHImr+Q5E8P8APM1Go49
+rENkE+pNGOZz9xSCURPq4BILkZhr5qK4p0eB/4H+hwJmSXWHdVFaxXtfxuUqApm/
+W68J3vtC0u6GAD32Tj6+Umcd25Xm+4rjkGNc08Q1hfx6puSjFoVIqS0XaqyYZsmz
+JzLXjIX9kUTQG9fnQ0heVMbeXv2voqHYIhaT3uWZifJTcnBsfOvqBlOgHRRukhFm
+sPR1cCBju/W+68bWf7d7oKyrOCqpNO24dr0B/HWaee2nkGQogIrfohRuwP45GFSU
+22NgkYgeE3dTtdFF4dvnyQK9qo4qGxXuy1xIbQIDAQABAoIBAD9zA1A7h1kZFyNt
+tsAPehMP66yxiHmFMXzo3erOugB8ISIc4F+ANYIfmIoCeinoeYhTPAK65TYSxP6j
+C1RbcuVwQw2gdzsOk+BPOgvSctuinWe9N0u7/YSd5uGK4kB4v8fkYxCGkLKH8lHu
+QVGB9fNwCJSOQcLTH8a3cpDoI7mjVjBr5xLTDfB7noZx8I+cHbQLIq4WUuG8KnP0
+aFASNp5PnqJnd5rtBAqRMLFuaLtFnmXDt2T1rjV9Q7a0qR2CUwXnyfuaWKgV4FDz
+RWfS769azTz+AsWnvpRfv9Znb39s7BiU7CtaWsxSPhQPp5CoEynzkPs1qr4jn083
+K4nhQgECgYEA0T1MpAyQpKyEhSkbNzhfPTa35Nh2fHTNr/2rt817MZBVPpf3rDim
+iy/Boc4YBVyVgYPLmQPj+E8Wf+LfCYCMqqGsjM+hAnggjM8DjLETLsr2zTPVdXCi
+pmfAT1oSxs43sNEP4K2OUC82ETJ0BqKyAdNEyVaJrZ4E2JxGpcvlle0CgYEAwGWx
+7FnmJMiex7R5ktUeBCGQfyCpepdzlM0tsZyU5BQMZC5NO9kE27grUz2Ta80bZZLE
+u2ug4dw9S5UVll6eOK7bvPRg9S3WqUBncTlhJK1ckDnkz21sVKls23HTnPsbYg1Y
+dy9O9WLmpyLi6VEL7K8UBEps2HEoxedXuYWjLIECgYEAo5Ss6kP4gQVuxTwRzuX/
+bzfsJLkmSL54X/KN4TB/84vHWRwtwTK44XAAjaM2HFr5dzu2XHYyL9qE2I5hmGgr
+kOq8n4ljcy6/I9ZkDAYT3S1ILb0sUJgyUK4kJuVgcJSf7VhEdX66F+4Q8vjixJ1F
+VS/6Qv2ovVcgqsfiY5Q4dTECgYAYmSftWvUUwN2kFMvyXPMQfiYWStvAQ7rQTIdK
+DQXwPyvyZwUS4MVBPkOzycyeXMPi8afbeoBAQENJ9Y6kAgbiomCPwQLgdfLbAtP2
+4uoroUqTWgOKDahrDppPWDdA+83ddG1aF59VukZZGhm+0NDgeuXpQoa2CYm3+8L4
+gkCBgQKBgQDBwIl59plr2FU5NoGDEEGz0s7a2hbmnjDXsFtzKFLnYvhl9z9y8R/U
+T96MtfbMS4bLcDFA6w/LAmHwInK3mLXbnQlnZpQ1AoSXk5nIUJhP9JJOEx1IeD/c
+P8tauzGwEJWfrRu4G26s0/hWInDN+sbRZa/xkJt38KW+oxw2UegPEg==
+-----END RSA PRIVATE KEY-----
diff --git a/t/data/test.crt b/t/data/test.crt
deleted file mode 100644
index 4439282..0000000
--- a/t/data/test.crt
+++ /dev/null
@@ -1,18 +0,0 @@
------BEGIN CERTIFICATE-----
-MIIC+DCCAeACAQEwDQYJKoZIhvcNAQELBQAwQjELMAkGA1UEBhMCWFgxFTATBgNV
-BAcMDERlZmF1bHQgQ2l0eTEcMBoGA1UECgwTRGVmYXVsdCBDb21wYW55IEx0ZDAe
-Fw0yMDA3MDYwNTE1NDdaFw0zMDA1MTUwNTE1NDdaMEIxCzAJBgNVBAYTAlhYMRUw
-EwYDVQQHDAxEZWZhdWx0IENpdHkxHDAaBgNVBAoME0RlZmF1bHQgQ29tcGFueSBM
-dGQwggEiMA0GCSqGSIb3DQEBAQUAA4IBDwAwggEKAoIBAQDqqBq1VUP0N1N+g5FX
-Pcd3o42VNEdp6HYQy1OYs+Cpuuax/BC1ceGUFA58mVSoT6YvjBfGXHMh9KcCFtnX
-BwPel8IARI5mHCfp/h2503dBipzpCD4JJwV7+W1xkiQVhj73ZEr/3AJoTFJGVJGa
-I+doJLsmnwQymNh5lULFJbph5PpC7+LSNy7tz2Wa24vaHhSeticvlwBcQjXCzavB
-zx5zwidZ6T5Kf7VbQquPOQILWi8Rd1NQClsuQuvYDXHvnGLYuPRpw8c86eXNJSLL
-z0eFPXq+154RWUH7y8rx2AMlRkL8Qx1WRqwz+zxKKJsP36uyMDXX1rWlsaLGinWM
-oob5AgMBAAEwDQYJKoZIhvcNAQELBQADggEBAE2ZC5uFxb/eBJKtCYqJ1r81BLRP
-iRwcW77RaySZsnp1VI3euVaQ7/P5Ic1jK4qshK9PU1EwnELNWT5/2rRNihcooZmt
-WMT2qi7Uz3qruywGQ72KEyAmeG/czWSS73Mw0ch80AEK9B7umgFklIZHe1T0vdov
-iKL04Z7RmuZDirNCtK9LBXd80/FSg15FY7vWIdDhJVF7UQfxLKNGQHFKtjguRBAV
-GCxQmCZzIYE/r3A6MBTouHSmQZVshDZzJKd9knoQWOVuEwFpWH/T/seZPqC0sUSP
-uswgPa1G4XzRVPStws6F3ZE47I48KXBBZ2AzETzAEWTrhy7m/z7D340HtF0=
------END CERTIFICATE-----
diff --git a/t/data/test.key b/t/data/test.key
deleted file mode 100644
index 4424cf6..0000000
--- a/t/data/test.key
+++ /dev/null
@@ -1,27 +0,0 @@
------BEGIN RSA PRIVATE KEY-----
-MIIEpAIBAAKCAQEA6qgatVVD9DdTfoORVz3Hd6ONlTRHaeh2EMtTmLPgqbrmsfwQ
-tXHhlBQOfJlUqE+mL4wXxlxzIfSnAhbZ1wcD3pfCAESOZhwn6f4dudN3QYqc6Qg+
-CScFe/ltcZIkFYY+92RK/9wCaExSRlSRmiPnaCS7Jp8EMpjYeZVCxSW6YeT6Qu/i
-0jcu7c9lmtuL2h4UnrYnL5cAXEI1ws2rwc8ec8InWek+Sn+1W0KrjzkCC1ovEXdT
-UApbLkLr2A1x75xi2Lj0acPHPOnlzSUiy89HhT16vteeEVlB+8vK8dgDJUZC/EMd
-VkasM/s8SiibD9+rsjA119a1pbGixop1jKKG+QIDAQABAoIBAQCmZN3Lh9LP8gt6
-wsDlJCG1bHyROKkLKJPQBN4agjLlKGs9+oe+oipbXn2HTRMC5rfpL2YMerIJefqT
-OLDwEUFlLiebGQIA1iZXfqKFirYd+7SYagfTZaA18QDyb7a2rKMpuiyUkeYDH1uY
-E4/LxXnqF2G+WTQYzNl0HatjMQWhM+nI0W+42JZiAOJuY0FrI15t1gJCgXSFsUjA
-YYuc8AKBKnO3HVZby2ZnWeGlFoSMG/M1R/WTGROEYQyqhzSEn+eeXZZQPvazUnPd
-YNoi7TD/wPwxwczaVnGNOMO4NHhAKukzOxsjrvrcEbYMjPYJgimUfBW/1a54dEFw
-bPaGdbABAoGBAPXGIFKxwN0G2yoTT5pup6OGBOyPd1Po0AL6F0YBNUm11Kh+Opkb
-I1OTdSmmZl44ZOML11q82fl9Mit8iSMWfOFlIc8tfb7ZzmZfJuutdfzrRh7KzgVs
-xnUvBxw12mIY79Fze2tCEgM7YIJdstG/q3hVDmwfhQDDZCTuGD48XjG5AoGBAPRr
-j9XgVtvIELiaVUD5YmGqXJ1tM/NzomtFoxKwiiU02BhMtv0CZnY2rh/cQxiumRtz
-VzJKCn1LEDeAeEhCu8C+s0e1sz4u939Xqvh5k5Lkbs9bNyC08vt+T84P/HsUKiVk
-cWqa05U2DmWsGhuC7UaV6Atn9iOvYynSudW5hp9BAoGAUpy3TrSbHHBqiNkW39Uk
-Gk45J38N4DGYgfeojQpo7A7nnX9YmRBLLpOZRVe+fxs7pinbyI9EQZ14mK9ytU2g
-ym6hD6+93cH+o+CGB6A10b8Pwdfvqlkm2Erne+8KKgEx01ia+rGptlZmGUv/iIuB
-yp/kiimKHniPF+7ETV8jVlkCgYBf7xPuk3YkH5uIiXLq5LdbtB1T4PfiF0HprtR5
-0nb2cY5bw0iTd+y1e3LOqIphVq5bmuLfpzYExYCg+Di9zAubdH4zqDqpLpAQGF3P
-1xA4OJbRpnC10rAITCSQsa+cs2ZzdMAbYpenWic+etVodPQin1YLnAt9KCrY0JAG
-NiKDwQKBgQDVN+NvFO99Hq2IfQ+eR0xCjBaJxwLacJbPm+jtKrDzUDSMoxy+w1oI
-8LPV3fwRM0IKgNghhwP3+79E9sb4tqddDNRvN4EvfCUWcuvBgIAxJ/ffi7ICZ+ru
-q3HqgzqcER9No1ixzR4Vu7tZwYYBdO5B9r3zLctSUSeZtfgYWajgag==
------END RSA PRIVATE KEY-----

commit a46c69b40fc49ee16ad99935ff3858fee05798f7
Author: syz <eagle-china@hotmail.com>
Date:   Tue Jul 7 00:19:09 2020 +0800

    feature: add connection backlog support, #106

diff --git a/README.markdown b/README.markdown
index fba944f..2c2bfe0 100644
--- a/README.markdown
+++ b/README.markdown
@@ -230,6 +230,15 @@ The following values are accepted: `big5`, `dec8`, `cp850`, `hp8`, `koi8r`, `lat
 * `pool`
 
     the name for the MySQL connection pool. if omitted, an ambiguous pool name will be generated automatically with the string template `user:database:host:port` or `user:database:path`. (this option was first introduced in `v0.08`.)
+
+* `pool_size`
+
+    Specifies the size of the connection pool. If omitted and no `backlog` option was provided, no pool will be created. If omitted but `backlog` was provided, the pool will be created with a default size equal to the value of the [lua_socket_pool_size](https://github.com/openresty/lua-nginx-module#lua_socket_pool_size) directive. The connection pool holds up to `pool_size` alive connections ready to be reused by subsequent calls to [connect](#connect), but note that there is no upper limit to the total number of opened connections outside of the pool. If you need to restrict the total number of opened connections, specify the `backlog` option. When the connection pool would exceed its size limit, the least recently used (kept-alive) connection already in the pool will be closed to make room for the current connection. Note that the cosocket connection pool is per Nginx worker process rather than per Nginx server instance, so the size limit specified here also applies to every single Nginx worker process. Also note that the size of the connection pool cannot be changed once it has been created. Note that at least [ngx_lua 0.10.14](https://github.com/openresty/lua-nginx-module/tags) is required to use this options.
+
+* `backlog`
+
+    If specified, this module will limit the total number of opened connections for this pool. No more connections than `pool_size` can be opened for this pool at any time. If the connection pool is full, subsequent connect operations will be queued into a queue equal to this option's value (the "backlog" queue). If the number of queued connect operations is equal to `backlog`, subsequent connect operations will fail and return nil plus the error string `"too many waiting connect operations"`. The queued connect operations will be resumed once the number of connections in the pool is less than `pool_size`. The queued connect operation will abort once they have been queued for more than `connect_timeout`, controlled by [set_timeout](#set_timeout), and will return nil plus the error string "timeout". Note that at least [ngx_lua 0.10.14](https://github.com/openresty/lua-nginx-module/tags) is required to use this options.
+
 * `compact_arrays`
 
     when this option is set to true, then the [query](#query) and [read_result](#read_result) methods will return the array-of-arrays structure for the resultset, rather than the default array-of-hashes structure.
diff --git a/lib/resty/mysql.lua b/lib/resty/mysql.lua
index 3b5ecff..830ac9b 100644
--- a/lib/resty/mysql.lua
+++ b/lib/resty/mysql.lua
@@ -571,7 +571,8 @@ function _M.connect(self, opts)
             pool = user .. ":" .. database .. ":" .. host .. ":" .. port
         end
 
-        ok, err = sock:connect(host, port, { pool = pool })
+        ok, err = sock:connect(host, port, { pool = pool, pool_size = opts.pool_size,
+                               backlog = opts.backlog})
 
     else
         local path = opts.path
@@ -583,7 +584,8 @@ function _M.connect(self, opts)
             pool = user .. ":" .. database .. ":" .. path
         end
 
-        ok, err = sock:connect("unix:" .. path, { pool = pool })
+        ok, err = sock:connect("unix:" .. path, { pool = pool, pool_size = opts.pool_size,
+                               backlog = opts.backlog})
     end
 
     if not ok then
diff --git a/t/sanity.t b/t/sanity.t
index e84ffe0..a614c65 100644
--- a/t/sanity.t
+++ b/t/sanity.t
@@ -1651,3 +1651,138 @@ success
 --- no_error_log
 [error]
 --- timeout: 20
+
+
+
+=== TEST 24: connected with no error when pool opts are provided
+--- http_config eval: $::HttpConfig
+--- config
+    location /t {
+        content_by_lua '
+            local mysql = require "resty.mysql"
+            local db = mysql:new()
+
+            db:set_timeout(1000) -- 1 sec
+
+            local ok, err, errno, sqlstate = db:connect({
+                host = "$TEST_NGINX_MYSQL_HOST",
+                port = $TEST_NGINX_MYSQL_PORT,
+                database = "ngx_test",
+                user = "ngx_test",
+                password = "ngx_test",
+                pool = "my_pool",
+                pool_size = 10,
+                backlog = 5
+                })
+
+            if not ok then
+                ngx.say("failed to connect: ", err, ": ", errno, " ", sqlstate)
+                return
+            end
+
+            ngx.say("connected to mysql ", db:server_ver())
+
+            db:close()
+        ';
+    }
+--- request
+GET /t
+--- response_body_like
+connected to mysql \d\.[^\s\x00]+
+--- no_error_log
+[error]
+
+
+
+=== TEST 25: set pool_size option no backlog option
+--- http_config eval: $::HttpConfig
+--- config
+    location /t {
+        content_by_lua_block {
+            local mysql = require "resty.mysql"
+
+            local function mysql_conn()
+                local db = mysql:new()
+                db:set_timeout(1000) -- 1 sec
+
+                local ok, err, errno, sqlstate = db:connect({
+                    host = "$TEST_NGINX_MYSQL_HOST",
+                    port = $TEST_NGINX_MYSQL_PORT,
+                    database = "ngx_test",
+                    user = "ngx_test",
+                    password = "ngx_test",
+                    pool = "my_pool",
+                    pool_size = 5
+                })
+                if not ok then
+                    return err
+                end
+                return nil
+            end
+
+            for i = 1,10 do
+                local err = mysql_conn()
+                if err ~= nil then
+                    ngx.say(err)
+                    return
+                end
+            end
+            ngx.say("connected to mysql")
+        }
+    }
+--- request
+GET /t
+--- response_body_like
+connected to mysql
+--- no_error_log
+[error]
+
+
+
+=== TEST 26: set the pool_size and backlog options at the same time
+--- http_config eval: $::HttpConfig
+--- config
+    location /t {
+        content_by_lua_block {
+            local mysql = require "resty.mysql"
+
+            local function mysql_conn()
+                local db = mysql:new()
+                db:set_timeout(1000) -- 1 sec
+
+                local ok, err, errno, sqlstate = db:connect({
+                    host = "$TEST_NGINX_MYSQL_HOST",
+                    port = $TEST_NGINX_MYSQL_PORT,
+                    database = "ngx_test",
+                    user = "ngx_test",
+                    password = "ngx_test",
+                    pool = "my_pool",
+                    pool_size = 5,
+                    backlog = 5
+                })
+                if not ok then
+                    ngx.say(err)
+                    return err
+                end
+                return nil
+            end
+            for i = 1,15 do
+                ngx.thread.spawn(mysql_conn)
+            end
+        }
+    }
+--- request
+GET /t
+--- response_body_like
+failed to connect: too many waiting connect operations
+failed to connect: too many waiting connect operations
+failed to connect: too many waiting connect operations
+failed to connect: too many waiting connect operations
+failed to connect: too many waiting connect operations
+failed to connect: timeout
+failed to connect: timeout
+failed to connect: timeout
+failed to connect: timeout
+failed to connect: timeout
+--- error_log
+lua tcp socket queued connect timed out

commit 3f39cf974552c535162d148368ca3750b17d10f7
Author: syz <eagle-china@hotmail.com>
Date:   Tue Jul 7 00:17:18 2020 +0800

    test: fixed mariadb 10.3 failed to setup ssl (#107)

diff --git a/t/data/test.crt b/t/data/test.crt
index a69a011..4439282 100644
--- a/t/data/test.crt
+++ b/t/data/test.crt
@@ -1,17 +1,18 @@
 -----BEGIN CERTIFICATE-----
-MIICqTCCAhICCQClDm1WkreW4jANBgkqhkiG9w0BAQUFADCBlzELMAkGA1UEBhMC
-VVMxEzARBgNVBAgMCkNhbGlmb3JuaWExFjAUBgNVBAcMDVNhbiBGcmFuY2lzY28x
-EjAQBgNVBAoMCU9wZW5SZXN0eTESMBAGA1UECwwJT3BlblJlc3R5MREwDwYDVQQD
-DAh0ZXN0LmNvbTEgMB4GCSqGSIb3DQEJARYRYWdlbnR6aEBnbWFpbC5jb20wIBcN
-MTQwNzIxMDMyMzQ3WhgPMjE1MTA2MTMwMzIzNDdaMIGXMQswCQYDVQQGEwJVUzET
-MBEGA1UECAwKQ2FsaWZvcm5pYTEWMBQGA1UEBwwNU2FuIEZyYW5jaXNjbzESMBAG
-A1UECgwJT3BlblJlc3R5MRIwEAYDVQQLDAlPcGVuUmVzdHkxETAPBgNVBAMMCHRl
-c3QuY29tMSAwHgYJKoZIhvcNAQkBFhFhZ2VudHpoQGdtYWlsLmNvbTCBnzANBgkq
-hkiG9w0BAQEFAAOBjQAwgYkCgYEA6P18zUvtmaKQK2xePy8ZbFwSyTLw+jW6t9eZ
-aiTec8X3ibN9WemrxHzkTRikxP3cAQoITRuZiQvF4Q7DO6wMkz/b0zwfgX5uedGq
-047AJP6n/mwlDOjGSNomBLoXQzo7tVe60ikEm3ZyDUqnJPJMt3hImO5XSop4MPMu
-Za9WhFcCAwEAATANBgkqhkiG9w0BAQUFAAOBgQA4OBb9bOyWB1//93nSXX1mdENZ
-IQeyTK0Dd6My76lnZxnZ4hTWrvvd0b17KLDU6JnS2N5ee3ATVkojPidRLWLIhnh5
-0eXrcKalbO2Ce6nShoFvQCQKXN2Txmq2vO/Mud2bHAWwJALg+qi1Iih/gVYB9sct
-FLg8zFOzRlYiU+6Mmw==
+MIIC+DCCAeACAQEwDQYJKoZIhvcNAQELBQAwQjELMAkGA1UEBhMCWFgxFTATBgNV
+BAcMDERlZmF1bHQgQ2l0eTEcMBoGA1UECgwTRGVmYXVsdCBDb21wYW55IEx0ZDAe
+Fw0yMDA3MDYwNTE1NDdaFw0zMDA1MTUwNTE1NDdaMEIxCzAJBgNVBAYTAlhYMRUw
+EwYDVQQHDAxEZWZhdWx0IENpdHkxHDAaBgNVBAoME0RlZmF1bHQgQ29tcGFueSBM
+dGQwggEiMA0GCSqGSIb3DQEBAQUAA4IBDwAwggEKAoIBAQDqqBq1VUP0N1N+g5FX
+Pcd3o42VNEdp6HYQy1OYs+Cpuuax/BC1ceGUFA58mVSoT6YvjBfGXHMh9KcCFtnX
+BwPel8IARI5mHCfp/h2503dBipzpCD4JJwV7+W1xkiQVhj73ZEr/3AJoTFJGVJGa
+I+doJLsmnwQymNh5lULFJbph5PpC7+LSNy7tz2Wa24vaHhSeticvlwBcQjXCzavB
+zx5zwidZ6T5Kf7VbQquPOQILWi8Rd1NQClsuQuvYDXHvnGLYuPRpw8c86eXNJSLL
+z0eFPXq+154RWUH7y8rx2AMlRkL8Qx1WRqwz+zxKKJsP36uyMDXX1rWlsaLGinWM
+oob5AgMBAAEwDQYJKoZIhvcNAQELBQADggEBAE2ZC5uFxb/eBJKtCYqJ1r81BLRP
+iRwcW77RaySZsnp1VI3euVaQ7/P5Ic1jK4qshK9PU1EwnELNWT5/2rRNihcooZmt
+WMT2qi7Uz3qruywGQ72KEyAmeG/czWSS73Mw0ch80AEK9B7umgFklIZHe1T0vdov
+iKL04Z7RmuZDirNCtK9LBXd80/FSg15FY7vWIdDhJVF7UQfxLKNGQHFKtjguRBAV
+GCxQmCZzIYE/r3A6MBTouHSmQZVshDZzJKd9knoQWOVuEwFpWH/T/seZPqC0sUSP
+uswgPa1G4XzRVPStws6F3ZE47I48KXBBZ2AzETzAEWTrhy7m/z7D340HtF0=
 -----END CERTIFICATE-----
diff --git a/t/data/test.key b/t/data/test.key
index 6c13527..4424cf6 100644
--- a/t/data/test.key
+++ b/t/data/test.key
@@ -1,15 +1,27 @@
 -----BEGIN RSA PRIVATE KEY-----
-MIICXgIBAAKBgQDo/XzNS+2ZopArbF4/LxlsXBLJMvD6Nbq315lqJN5zxfeJs31Z
-6avEfORNGKTE/dwBCghNG5mJC8XhDsM7rAyTP9vTPB+Bfm550arTjsAk/qf+bCUM
-6MZI2iYEuhdDOju1V7rSKQSbdnINSqck8ky3eEiY7ldKingw8y5lr1aEVwIDAQAB
-AoGBANgB66sKMga2SKN5nQdHS3LDCkevCutu1OWM5ZcbB4Kej5kC57xsf+tzPtab
-emeIVGhCPOAALqB4YcT+QtMX967oM1MjcFbtH7si5oq6UYyp3i0G9Si6jIoVHz3+
-8yOUaqwKbK+bRX8VS0YsHZmBsPK5ryN50iUwsU08nemoA94BAkEA9GS9Q5OPeFkM
-tFxsIQ1f2FSsZAuN/1cpZgJqY+YaAN7MSPGTWyfd7nWG/Zgk3GO9/2ihh4gww+7B
-To09GkmW4QJBAPQOHC2V+t2TA98+6Lj6+TYwcGEkhOENfVpH25mQ+kXgF/1Bd6rA
-nosT1bdAY+SnmWXbSw6Kv5C20Em+bEX8WjcCQCSRRjhsRdVODbaW9Z7kb2jhEoJN
-sEt6cTlQNzcHYPCsZYisjM3g4zYg47fiIfHQAsfKkhDDcfh/KvFj9LaQOEECQQCH
-eBWYEDpSJ7rsfqT7mQQgWj7nDThdG/nK1TxGP71McBmg0Gg2dfkLRhVJRQqt74Is
-kc9V4Rp4n6F6baL4Lh19AkEA6pZZer0kg3Kv9hjhaITIKUYdfIp9vYnDRWbQlBmR
-atV8V9u9q2ETZvqfHpN+9Lu6NYR4yXIEIRf1bnIZ/mr9eQ==
+MIIEpAIBAAKCAQEA6qgatVVD9DdTfoORVz3Hd6ONlTRHaeh2EMtTmLPgqbrmsfwQ
+tXHhlBQOfJlUqE+mL4wXxlxzIfSnAhbZ1wcD3pfCAESOZhwn6f4dudN3QYqc6Qg+
+CScFe/ltcZIkFYY+92RK/9wCaExSRlSRmiPnaCS7Jp8EMpjYeZVCxSW6YeT6Qu/i
+0jcu7c9lmtuL2h4UnrYnL5cAXEI1ws2rwc8ec8InWek+Sn+1W0KrjzkCC1ovEXdT
+UApbLkLr2A1x75xi2Lj0acPHPOnlzSUiy89HhT16vteeEVlB+8vK8dgDJUZC/EMd
+VkasM/s8SiibD9+rsjA119a1pbGixop1jKKG+QIDAQABAoIBAQCmZN3Lh9LP8gt6
+wsDlJCG1bHyROKkLKJPQBN4agjLlKGs9+oe+oipbXn2HTRMC5rfpL2YMerIJefqT
+OLDwEUFlLiebGQIA1iZXfqKFirYd+7SYagfTZaA18QDyb7a2rKMpuiyUkeYDH1uY
+E4/LxXnqF2G+WTQYzNl0HatjMQWhM+nI0W+42JZiAOJuY0FrI15t1gJCgXSFsUjA
+YYuc8AKBKnO3HVZby2ZnWeGlFoSMG/M1R/WTGROEYQyqhzSEn+eeXZZQPvazUnPd
+YNoi7TD/wPwxwczaVnGNOMO4NHhAKukzOxsjrvrcEbYMjPYJgimUfBW/1a54dEFw
+bPaGdbABAoGBAPXGIFKxwN0G2yoTT5pup6OGBOyPd1Po0AL6F0YBNUm11Kh+Opkb
+I1OTdSmmZl44ZOML11q82fl9Mit8iSMWfOFlIc8tfb7ZzmZfJuutdfzrRh7KzgVs
+xnUvBxw12mIY79Fze2tCEgM7YIJdstG/q3hVDmwfhQDDZCTuGD48XjG5AoGBAPRr
+j9XgVtvIELiaVUD5YmGqXJ1tM/NzomtFoxKwiiU02BhMtv0CZnY2rh/cQxiumRtz
+VzJKCn1LEDeAeEhCu8C+s0e1sz4u939Xqvh5k5Lkbs9bNyC08vt+T84P/HsUKiVk
+cWqa05U2DmWsGhuC7UaV6Atn9iOvYynSudW5hp9BAoGAUpy3TrSbHHBqiNkW39Uk
+Gk45J38N4DGYgfeojQpo7A7nnX9YmRBLLpOZRVe+fxs7pinbyI9EQZ14mK9ytU2g
+ym6hD6+93cH+o+CGB6A10b8Pwdfvqlkm2Erne+8KKgEx01ia+rGptlZmGUv/iIuB
+yp/kiimKHniPF+7ETV8jVlkCgYBf7xPuk3YkH5uIiXLq5LdbtB1T4PfiF0HprtR5
+0nb2cY5bw0iTd+y1e3LOqIphVq5bmuLfpzYExYCg+Di9zAubdH4zqDqpLpAQGF3P
+1xA4OJbRpnC10rAITCSQsa+cs2ZzdMAbYpenWic+etVodPQin1YLnAt9KCrY0JAG
+NiKDwQKBgQDVN+NvFO99Hq2IfQ+eR0xCjBaJxwLacJbPm+jtKrDzUDSMoxy+w1oI
+8LPV3fwRM0IKgNghhwP3+79E9sb4tqddDNRvN4EvfCUWcuvBgIAxJ/ffi7ICZ+ru
+q3HqgzqcER9No1ixzR4Vu7tZwYYBdO5B9r3zLctSUSeZtfgYWajgag==
 -----END RSA PRIVATE KEY-----

commit a859046215d2aaa5e5be4ff3629121af6e213eb8
Author: rainingmaster <312841925@qq.com>
Date:   Thu Jun 4 12:08:05 2020 +0800

    feature: test difference version of mysql/mariadb by docker

diff --git a/.gitignore b/.gitignore
index b1c7a31..3cbc4d8 100644
--- a/.gitignore
+++ b/.gitignore
@@ -7,3 +7,5 @@ reindex
 tags
 *.t_
 src/
+mysqld.cnf
+download-cache/
diff --git a/.travis.yml b/.travis.yml
index 7ac789f..ae67756 100644
--- a/.travis.yml
+++ b/.travis.yml
@@ -2,6 +2,9 @@ dist: trusty
 
 os: linux
 
+services:
+  - docker
+
 language: c
 
 compiler:
@@ -11,9 +14,6 @@ compiler:
 addons:
   apt:
     packages:
-    - mysql-server-5.6
-    - mysql-client-core-5.6
-    - mysql-client-5.6
     - axel
     - cpanminus
 
@@ -33,7 +33,14 @@ env:
     - TEST_NGINX_MYSQL_PATH=/var/run/mysqld/mysqld.sock
     - TEST_NGINX_SLEEP=0.006
   jobs:
-    - NGINX_VERSION=1.17.8
+    - NGINX_VERSION=1.17.8 DB_VERSION=mysql:5.5
+    - NGINX_VERSION=1.17.8 DB_VERSION=mysql:5.6
+    - NGINX_VERSION=1.17.8 DB_VERSION=mysql:5.7
+    - NGINX_VERSION=1.17.8 DB_VERSION=mariadb:5.5
+    - NGINX_VERSION=1.17.8 DB_VERSION=mariadb:10.0
+    - NGINX_VERSION=1.17.8 DB_VERSION=mariadb:10.1
+    - NGINX_VERSION=1.17.8 DB_VERSION=mariadb:10.2
+    - NGINX_VERSION=1.17.8 DB_VERSION=mariadb:10.3
 
 install:
   - git clone https://github.com/openresty/test-nginx.git
@@ -48,24 +55,14 @@ install:
   - git clone -b v2.1-agentzh https://github.com/openresty/luajit2.git luajit2
 
 before_script:
-  - mysql -uroot -e 'create database ngx_test; grant all on ngx_test.* to "ngx_test"@"%" identified by "ngx_test";'
-  - if [ ! -d download-cache ]; then mkdir download-cache; fi
-  - if [ ! -f download-cache/world.sql.gz ]; then wget -O download-cache/world.sql.gz http://downloads.mysql.com/docs/world.sql.gz; fi
-  - zcat download-cache/world.sql.gz | mysql -uroot
-  - mysql -uroot -e 'grant all on world.* to "ngx_test"@"%"; flush privileges;'
+  - sudo service mysql stop
+  - ./.travis/initializedb.sh
   - cd luajit2/
   - make -j$JOBS CCDEBUG=-g Q= PREFIX=$LUAJIT_PREFIX CC=$CC XCFLAGS='-DLUA_USE_APICHECK -DLUA_USE_ASSERT -msse4.2' > build.log 2>&1 || (cat build.log && exit 1)
   - sudo make install PREFIX=$LUAJIT_PREFIX > build.log 2>&1 || (cat build.log && exit 1)
   - cd ..
 
 script:
-  - sudo cp t/data/test.crt t/data/test.key /etc/mysql
-  - echo '[mysqld]' > ssl.cnf
-  - echo 'ssl-ca=/etc/mysql/test.crt' >> ssl.cnf
-  - echo 'ssl-cert=/etc/mysql/test.crt' >> ssl.cnf
-  - echo 'ssl-key=/etc/mysql/test.key' >> ssl.cnf
-  - sudo cp ssl.cnf /etc/mysql/conf.d
-  - sudo service mysql restart
   - cd test-nginx && (sudo cpanm . > build.log 2>&1 || (cat build.log && exit 1)) && cd ..
   - cd lua-cjson && (LUA_INCLUDE_DIR=$LUAJIT_INC make && sudo PATH=$PATH make install) || (cat build.log && exit 1) && cd ..
   - export PATH=$PWD/work/nginx/sbin:$PWD/nginx-devel-utils:$PATH
diff --git a/.travis/initializedb.sh b/.travis/initializedb.sh
new file mode 100755
index 0000000..04b5878
--- /dev/null
+++ b/.travis/initializedb.sh
@@ -0,0 +1,52 @@
+#!/bin/bash
+
+set -ex
+
+cat << EOF >mysqld.cnf
+[mysqld]
+ssl-ca=/etc/mysql/ssl/test.crt
+ssl-cert=/etc/mysql/ssl/test.crt
+ssl-key=/etc/mysql/ssl/test.key
+socket=/var/run/mysqld/mysqld.sock
+
+[client]
+socket=/var/run/mysqld/mysqld.sock
+EOF
+
+path=`pwd`
+
+sudo chmod -R 777 /var/run/mysqld
+sudo docker pull ${DB_VERSION}
+sudo docker run \
+    -itd \
+    --privileged \
+    --name=mysqld \
+    --pid=host \
+    --net=host \
+    --ipc=host \
+    -e MYSQL_ALLOW_EMPTY_PASSWORD=yes \
+    --volume=/var/run/mysqld:/var/run/mysqld \
+    --volume=$path/mysqld.cnf:/etc/mysql/conf.d/mysqld.cnf \
+    --volume=$path/t/data/test.crt:/etc/mysql/ssl/test.crt \
+    --volume=$path/t/data/test.key:/etc/mysql/ssl/test.key \
+    ${DB_VERSION}
+
+mysql() {
+    docker exec mysqld mysql "${@}"
+}
+while :
+do
+    sleep 3
+    mysql --protocol=tcp -e 'select version()' && break
+done
+docker logs mysqld
+
+if [ ! -d download-cache ]; then mkdir download-cache; fi
+if [ ! -f download-cache/world.sql.gz ]; then wget -O download-cache/world.sql.gz http://downloads.mysql.com/docs/world.sql.gz; fi
+docker cp download-cache/world.sql.gz mysqld:/tmp/world.sql.gz
+docker exec mysqld /bin/sh -c "zcat /tmp/world.sql.gz | mysql -uroot"
+
+mysql -uroot -e 'create database ngx_test;'
+mysql -uroot -e 'create user "ngx_test"@"%" identified by "ngx_test";'
+mysql -uroot -e 'grant all on ngx_test.* to "ngx_test"@"%";'
+mysql -uroot -e 'grant all on world.* to "ngx_test"@"%"; flush privileges;'
diff --git a/server.crt b/server.crt
new file mode 100644
index 0000000..d059a02
--- /dev/null
+++ b/server.crt
@@ -0,0 +1,17 @@
+-----BEGIN CERTIFICATE-----
+MIICqTCCAhICCQCCQYMy4RG07jANBgkqhkiG9w0BAQsFADCBlzELMAkGA1UEBhMC
+VVMxEzARBgNVBAgMCkNhbGlmb3JuaWExFjAUBgNVBAcMDVNhbiBGcmFuY2lzY28x
+EjAQBgNVBAoMCU9wZW5SZXN0eTESMBAGA1UECwwJT3BlblJlc3R5MREwDwYDVQQD
+DAh0ZXN0LmNvbTEgMB4GCSqGSIb3DQEJARYRYWdlbnR6aEBnbWFpbC5jb20wIBcN
+MjAwNjAzMTI1NzIzWhgPMjEyMDA1MTAxMjU3MjNaMIGXMQswCQYDVQQGEwJVUzET
+MBEGA1UECAwKQ2FsaWZvcm5pYTEWMBQGA1UEBwwNU2FuIEZyYW5jaXNjbzESMBAG
+A1UECgwJT3BlblJlc3R5MRIwEAYDVQQLDAlPcGVuUmVzdHkxETAPBgNVBAMMCHRl
+c3QuY29tMSAwHgYJKoZIhvcNAQkBFhFhZ2VudHpoQGdtYWlsLmNvbTCBnzANBgkq
+hkiG9w0BAQEFAAOBjQAwgYkCgYEAnETL3u1VPLIHHdqbUiCdYCDfzEiI7YxCEa97
+7PQ/hw3BuykC0udJf9K2ALmhumnyqZ7maG62ecvihdYZk+PWvph7CPXT5hLdJbI+
+3BEwO/7DL88kk+r/dUv4DbvQHobewu0DueiSrs82Wb1yzaHPU0ljmM+7L8q6kWbn
+QKwOC5kCAwEAATANBgkqhkiG9w0BAQsFAAOBgQApArlYvWgHBefd25XLrYV5Rvhx
+DkmnieLQ1PGJL+iyvaQE7WFNPHrgGFWc3zF3zjD5b9UxKPJropxZ2OjDLEB5wt1a
+MAAlsex31X1sOYRPXuvFw82NyhOu1BrSCAiA5AW8LufIQ/j2T7pw/yHc++/CPREz
+m5XC/p+0cyRhn0d3CA==
+-----END CERTIFICATE-----
diff --git a/server.key b/server.key
new file mode 100644
index 0000000..d3a7be5
--- /dev/null
+++ b/server.key
@@ -0,0 +1,15 @@
+-----BEGIN RSA PRIVATE KEY-----
+MIICXgIBAAKBgQCcRMve7VU8sgcd2ptSIJ1gIN/MSIjtjEIRr3vs9D+HDcG7KQLS
+50l/0rYAuaG6afKpnuZobrZ5y+KF1hmT49a+mHsI9dPmEt0lsj7cETA7/sMvzyST
+6v91S/gNu9Aeht7C7QO56JKuzzZZvXLNoc9TSWOYz7svyrqRZudArA4LmQIDAQAB
+AoGBAIPwukmhDYTPs56LQvUWwIm3d/4diC85a1dPWUz59OFsxhPmTpIP4kjgefcm
+xNyGM/LvTQ8D22H+uWXTHYl2p4q3pwd+QD6ITHl8nU/wkIYV7kFtmIc0E0FKxZzP
+5knwPUI1M98v4mhoSyaw3EuD+VMMFlDAC1qz4Jr/HPWPW1sBAkEAyF8e9U+dttqh
+XUI7/otbp5VUaf0pvz98h1elhwKHbpu5I4mwCuOvTvhQBegNjKvJ4yWMAdDDAtMT
+IVe06I7skQJBAMenLvU9GLH5T6/rrj+0GoVLRASzsbrj4D0O43wjSpSBGGnpkjoh
+lam8AJyvfenxQHFngiXh78Jdb5kRf/SbUokCQQCmV8l0r9bnwZMqv9zckcbSVjdR
+EjoBKmxwU4P4lFHosmC9rwW11JVqQtz0OlRdTxR4fWhA7ZWnl6GPEaf/VP/xAkEA
+qsBvRsqT/lKNNpXIly7/p5Rxfdv5Wy9dLps3L4o3VL78FEjxCMqEZ4AkvdzRQW1V
+gifWhXOwTHkA4ta2qorUkQJAC54nj44IVHedd3kGvf0M1HzGOXhkGrGBBLG45rtl
+y0NNp7u5JfCkxP0a+vJqMujeyvJJjaYvG3J8XZYptPfdSg==
+-----END RSA PRIVATE KEY-----
diff --git a/t/big.t b/t/big.t
index 9638186..3a08b7a 100644
--- a/t/big.t
+++ b/t/big.t
@@ -349,7 +349,7 @@ result: [{"name":"' . ('B' x 1024)
 
             ngx.say("table cats dropped.")
 
-            res, err, errno, sqlstate = db:query("create table cats (id serial primary key, name varchar(65540))")
+            res, err, errno, sqlstate = db:query("create table cats (id serial primary key, name text(65540))")
             if not res then
                 ngx.say("bad result: ", err, ": ", errno, ": ", sqlstate, ".")
                 return

commit a431c8e22429a8017860353310504a14af0ee965
Author: Jinhua Tan <312841925@qq.com>
Date:   Thu Jun 4 15:33:45 2020 +0800

    chore: align the space for test (#102)

diff --git a/t/sanity.t b/t/sanity.t
index 6ac3f05..e84ffe0 100644
--- a/t/sanity.t
+++ b/t/sanity.t
@@ -795,7 +795,7 @@ failed to set keepalive: cannot be reused in the current connection state: 2
                 return
             end
 
-ok, err, errno, sqlstate = db:connect({
+            ok, err, errno, sqlstate = db:connect({
                 host = "$TEST_NGINX_MYSQL_HOST",
                 port = $TEST_NGINX_MYSQL_PORT,
                 database = "ngx_test",

commit 180db30817020356acfe810ea666d1db567cf65d
Author: rainingmaster <312841925@qq.com>
Date:   Fri Apr 3 10:56:27 2020 +0800

    bumped version to 0.22.

diff --git a/lib/resty/mysql.lua b/lib/resty/mysql.lua
index a84988f..3b5ecff 100644
--- a/lib/resty/mysql.lua
+++ b/lib/resty/mysql.lua
@@ -41,7 +41,7 @@ if not ok then
 end
 
 
-local _M = { _VERSION = '0.21' }
+local _M = { _VERSION = '0.22' }
 
 
 -- constants

commit 929f577fe12f99a34ae93e431357d15a4c6628bf
Author: Jinhua Tan <312841925@qq.com>
Date:   Thu Apr 2 21:51:14 2020 +0800

    feature: support using in stream subsystem.

diff --git a/.travis.yml b/.travis.yml
index 9bd990f..7ac789f 100644
--- a/.travis.yml
+++ b/.travis.yml
@@ -1,4 +1,3 @@
-sudo: required
 dist: trusty
 
 os: linux
@@ -33,7 +32,7 @@ env:
     - LD_LIBRARY_PATH=$LUAJIT_LIB:$LD_LIBRARY_PATH
     - TEST_NGINX_MYSQL_PATH=/var/run/mysqld/mysqld.sock
     - TEST_NGINX_SLEEP=0.006
-  matrix:
+  jobs:
     - NGINX_VERSION=1.17.8
 
 install:
@@ -42,6 +41,7 @@ install:
   - git clone https://github.com/openresty/nginx-devel-utils.git
   - git clone https://github.com/openresty/lua-cjson.git
   - git clone https://github.com/openresty/lua-nginx-module.git ../lua-nginx-module
+  - git clone https://github.com/openresty/stream-lua-nginx-module.git ../stream-lua-nginx-module
   - git clone https://github.com/openresty/lua-resty-core.git ../lua-resty-core
   - git clone https://github.com/openresty/lua-resty-lrucache.git ../lua-resty-lrucache
   - git clone https://github.com/openresty/no-pool-nginx.git ../no-pool-nginx
@@ -69,5 +69,5 @@ script:
   - cd test-nginx && (sudo cpanm . > build.log 2>&1 || (cat build.log && exit 1)) && cd ..
   - cd lua-cjson && (LUA_INCLUDE_DIR=$LUAJIT_INC make && sudo PATH=$PATH make install) || (cat build.log && exit 1) && cd ..
   - export PATH=$PWD/work/nginx/sbin:$PWD/nginx-devel-utils:$PATH
-  - ngx-build $NGINX_VERSION --with-ipv6 --with-http_realip_module --with-http_ssl_module --add-module=../lua-nginx-module --with-debug > build.log 2>&1 || (cat build.log && exit 1)
+  - ngx-build $NGINX_VERSION --with-ipv6 --with-http_realip_module --with-http_ssl_module --with-stream --with-stream_ssl_module --with-stream_ssl_preread_module --add-module=../lua-nginx-module --add-module=../stream-lua-nginx-module --with-debug > build.log 2>&1 || (cat build.log && exit 1)
   - prove -r t
diff --git a/lib/resty/mysql.lua b/lib/resty/mysql.lua
index ad0562d..a84988f 100644
--- a/lib/resty/mysql.lua
+++ b/lib/resty/mysql.lua
@@ -24,9 +24,12 @@ local error = error
 local tonumber = tonumber
 
 
-if not ngx.config
-   or not ngx.config.ngx_lua_version
-   or ngx.config.ngx_lua_version < 9011
+if not ngx.config then
+    error("ngx_lua 0.9.11+ or ngx_stream_lua required")
+end
+
+if (not ngx.config.subsystem or ngx.config.subsystem == "http") -- subsystem is http
+    and (not ngx.config.ngx_lua_version or ngx.config.ngx_lua_version < 9011) -- old version
 then
     error("ngx_lua 0.9.11+ required")
 end
diff --git a/t/stream.t b/t/stream.t
new file mode 100644
index 0000000..4627d82
--- /dev/null
+++ b/t/stream.t
@@ -0,0 +1,61 @@
+# vim:set ft= ts=4 sw=4 et:
+
+use Test::Nginx::Socket::Lua::Stream;
+use Cwd qw(cwd);
+
+repeat_each(2);
+
+plan tests => repeat_each() * (3 * blocks());
+
+my $pwd = cwd();
+
+our $StreamConfig = qq{
+    resolver \$TEST_NGINX_RESOLVER;
+    lua_package_path "$pwd/lib/?.lua;$pwd/t/lib/?.lua;;";
+    lua_package_cpath "/usr/local/openresty-debug/lualib/?.so;/usr/local/openresty/lualib/?.so;;";
+};
+
+$ENV{TEST_NGINX_RESOLVER} = '8.8.8.8';
+$ENV{TEST_NGINX_MYSQL_PORT} ||= 3306;
+$ENV{TEST_NGINX_MYSQL_HOST} ||= '127.0.0.1';
+$ENV{TEST_NGINX_MYSQL_PATH} ||= '/var/run/mysql/mysql.sock';
+
+#log_level 'warn';
+
+no_long_string();
+no_shuffle();
+check_accum_error_log();
+
+run_tests();
+
+__DATA__
+
+=== TEST 1: connected (support in stream module)
+--- stream_config eval: $::StreamConfig
+--- stream_server_config
+    content_by_lua_block {
+        local mysql = require "resty.mysql"
+        local db = mysql:new()
+
+        db:set_timeout(1000) -- 1 sec
+
+        local ok, err, errno, sqlstate = db:connect({
+            host = "$TEST_NGINX_MYSQL_HOST",
+            port = $TEST_NGINX_MYSQL_PORT,
+            database = "ngx_test",
+            user = "ngx_test",
+            password = "ngx_test"})
+
+        if not ok then
+            ngx.say("failed to connect: ", err, ": ", errno, " ", sqlstate)
+            return
+        end
+
+        ngx.say("connected to mysql ", db:server_ver())
+
+        db:close()
+    }
+--- response_body_like
+connected to mysql \d\.[^\s\x00]+
+--- no_error_log
+[error]

commit 356da402ac76703aebb475eb2568f81960a8d2cd
Author: Thibault Charbonnier <thibaultcha@me.com>
Date:   Wed Jan 22 15:09:43 2020 -0800

    travis-ci: bumped the NGINX core to 1.17.8.

diff --git a/.travis.yml b/.travis.yml
index eea8936..9bd990f 100644
--- a/.travis.yml
+++ b/.travis.yml
@@ -34,7 +34,7 @@ env:
     - TEST_NGINX_MYSQL_PATH=/var/run/mysqld/mysqld.sock
     - TEST_NGINX_SLEEP=0.006
   matrix:
-    - NGINX_VERSION=1.17.4
+    - NGINX_VERSION=1.17.8
 
 install:
   - git clone https://github.com/openresty/test-nginx.git

commit 2c3ce08dda74be3d4b576372107214478efa3fae
Author: Thibault Charbonnier <thibaultcha@me.com>
Date:   Mon Sep 30 14:05:15 2019 -0700

    travis-ci: bumped the NGINX core to 1.17.4.

diff --git a/.travis.yml b/.travis.yml
index 2b808eb..eea8936 100644
--- a/.travis.yml
+++ b/.travis.yml
@@ -34,7 +34,7 @@ env:
     - TEST_NGINX_MYSQL_PATH=/var/run/mysqld/mysqld.sock
     - TEST_NGINX_SLEEP=0.006
   matrix:
-    - NGINX_VERSION=1.17.1
+    - NGINX_VERSION=1.17.4
 
 install:
   - git clone https://github.com/openresty/test-nginx.git

commit c1e41521bc9bd6dc8a6430662f61c42bb6d67ed4
Author: Thibault Charbonnier <thibaultcha@me.com>
Date:   Mon Sep 30 12:03:39 2019 -0700

    travis-ci: switched to OpenResty's fork of LuaJIT.
    
    The previously installed LuaJIT version did not have FFI enabled which
    made compilation fail.

diff --git a/.travis.yml b/.travis.yml
index ccac1ef..2b808eb 100644
--- a/.travis.yml
+++ b/.travis.yml
@@ -15,9 +15,8 @@ addons:
     - mysql-server-5.6
     - mysql-client-core-5.6
     - mysql-client-5.6
-    - axel 
-    - cpanminus 
-    - libluajit-5.1-dev 
+    - axel
+    - cpanminus
 
 cache:
   apt: true
@@ -28,10 +27,10 @@ env:
   global:
     - JOBS=3
     - NGX_BUILD_JOBS=$JOBS
-    - LUAJIT_LIB=/usr/lib64/libluajit-5.1.so
-    - LUAJIT_INC=/usr/include/luajit-2.0
-    - LUA_INCLUDE_DIR=/usr/include/luajit-2.0
-    - LUA_CMODULE_DIR=/lib
+    - LUAJIT_PREFIX=/opt/luajit21
+    - LUAJIT_LIB=$LUAJIT_PREFIX/lib
+    - LUAJIT_INC=$LUAJIT_PREFIX/include/luajit-2.1
+    - LD_LIBRARY_PATH=$LUAJIT_LIB:$LD_LIBRARY_PATH
     - TEST_NGINX_MYSQL_PATH=/var/run/mysqld/mysqld.sock
     - TEST_NGINX_SLEEP=0.006
   matrix:
@@ -46,6 +45,7 @@ install:
   - git clone https://github.com/openresty/lua-resty-core.git ../lua-resty-core
   - git clone https://github.com/openresty/lua-resty-lrucache.git ../lua-resty-lrucache
   - git clone https://github.com/openresty/no-pool-nginx.git ../no-pool-nginx
+  - git clone -b v2.1-agentzh https://github.com/openresty/luajit2.git luajit2
 
 before_script:
   - mysql -uroot -e 'create database ngx_test; grant all on ngx_test.* to "ngx_test"@"%" identified by "ngx_test";'
@@ -53,6 +53,10 @@ before_script:
   - if [ ! -f download-cache/world.sql.gz ]; then wget -O download-cache/world.sql.gz http://downloads.mysql.com/docs/world.sql.gz; fi
   - zcat download-cache/world.sql.gz | mysql -uroot
   - mysql -uroot -e 'grant all on world.* to "ngx_test"@"%"; flush privileges;'
+  - cd luajit2/
+  - make -j$JOBS CCDEBUG=-g Q= PREFIX=$LUAJIT_PREFIX CC=$CC XCFLAGS='-DLUA_USE_APICHECK -DLUA_USE_ASSERT -msse4.2' > build.log 2>&1 || (cat build.log && exit 1)
+  - sudo make install PREFIX=$LUAJIT_PREFIX > build.log 2>&1 || (cat build.log && exit 1)
+  - cd ..
 
 script:
   - sudo cp t/data/test.crt t/data/test.key /etc/mysql
@@ -63,7 +67,7 @@ script:
   - sudo cp ssl.cnf /etc/mysql/conf.d
   - sudo service mysql restart
   - cd test-nginx && (sudo cpanm . > build.log 2>&1 || (cat build.log && exit 1)) && cd ..
-  - cd lua-cjson && make && sudo PATH=$PATH make install && cd ..
+  - cd lua-cjson && (LUA_INCLUDE_DIR=$LUAJIT_INC make && sudo PATH=$PATH make install) || (cat build.log && exit 1) && cd ..
   - export PATH=$PWD/work/nginx/sbin:$PWD/nginx-devel-utils:$PATH
   - ngx-build $NGINX_VERSION --with-ipv6 --with-http_realip_module --with-http_ssl_module --add-module=../lua-nginx-module --with-debug > build.log 2>&1 || (cat build.log && exit 1)
   - prove -r t

commit 68f4841ab6e6ea197c1de002bed435f90ae7cab6
Author: Thibault Charbonnier <thibaultcha@me.com>
Date:   Thu Jul 11 13:52:01 2019 -0700

    travis: bumped the nginx core version to 1.17.1.

diff --git a/.travis.yml b/.travis.yml
index 47db771..ccac1ef 100644
--- a/.travis.yml
+++ b/.travis.yml
@@ -35,7 +35,7 @@ env:
     - TEST_NGINX_MYSQL_PATH=/var/run/mysqld/mysqld.sock
     - TEST_NGINX_SLEEP=0.006
   matrix:
-    - NGINX_VERSION=1.15.8
+    - NGINX_VERSION=1.17.1
 
 install:
   - git clone https://github.com/openresty/test-nginx.git

commit 6001a1e1e6fe615cbac7effb239a8034d1497f2f
Author: Thibault Charbonnier <thibaultcha@me.com>
Date:   Wed Apr 24 09:01:58 2019 -0700

    tests: t/sanity.t: improved test suite robustness in various environments.

diff --git a/t/sanity.t b/t/sanity.t
index cf9d46c..6ac3f05 100644
--- a/t/sanity.t
+++ b/t/sanity.t
@@ -57,8 +57,8 @@ __DATA__
     }
 --- request
 GET /t
---- response_body
-failed to connect: Access denied for user 'user_not_found'@'localhost' (using password: YES): 1045 28000
+--- response_body_like
+failed to connect: Access denied for user 'user_not_found'@'[^\s]+' \(using password: YES\): 1045 28000
 --- no_error_log
 [error]
 
@@ -831,7 +831,7 @@ result: \[\{"id":"1","name":"Bob"\},\{"id":"2","name":""\},\{"id":"3","name":nul
 --- error_log eval
 qr/lua tcp socket keepalive create connection pool for key "ngx_test:ngx_test:[^\s:]+:\d+"/
 --- log_level: debug
---- wait: 0.1
+--- wait: 0.3
 
 
 
@@ -1046,7 +1046,7 @@ result: \[\{"id":"1","name":"Bob"\},\{"id":"2","name":""\},\{"id":"3","name":nul
 --- error_log eval
 qr/lua tcp socket keepalive create connection pool for key "ngx_test:ngx_test:[^\s:]+"/
 --- log_level: debug
---- wait: 0.1
+--- wait: 0.3
 
 
 
@@ -1120,7 +1120,7 @@ result: \[\{"id":"1","name":"Bob"\},\{"id":"2","name":""\},\{"id":"3","name":nul
 --- error_log eval
 qr/lua tcp socket keepalive create connection pool for key "my_pool"/
 --- log_level: debug
---- wait: 0.1
+--- wait: 0.3
 
 
 
@@ -1194,7 +1194,7 @@ result: \[\{"sum\(id\)":6\}\], err:nil$
 --- error_log eval
 qr/lua tcp socket keepalive create connection pool for key "my_pool"/
 --- log_level: debug
---- wait: 0.1
+--- wait: 0.3
 
 
 

commit 120d15470945603ff776d2ff8079cf1df308dab8
Author: Thibault Charbonnier <thibaultcha@me.com>
Date:   Sat Apr 13 00:21:27 2019 -0400

    travis: added steps to clone lua-resty-core and lua-resty-lrucache which are required by ngx_lua.

diff --git a/.travis.yml b/.travis.yml
index 7fb5876..47db771 100644
--- a/.travis.yml
+++ b/.travis.yml
@@ -43,6 +43,8 @@ install:
   - git clone https://github.com/openresty/nginx-devel-utils.git
   - git clone https://github.com/openresty/lua-cjson.git
   - git clone https://github.com/openresty/lua-nginx-module.git ../lua-nginx-module
+  - git clone https://github.com/openresty/lua-resty-core.git ../lua-resty-core
+  - git clone https://github.com/openresty/lua-resty-lrucache.git ../lua-resty-lrucache
   - git clone https://github.com/openresty/no-pool-nginx.git ../no-pool-nginx
 
 before_script:

commit f607681025984935a960cbe7030ecafb8adcbe85
Author: Thibault Charbonnier <thibaultcha@me.com>
Date:   Tue Jan 29 19:37:40 2019 -0800

    travis: bumped the nginx core version to 1.15.8.

diff --git a/.travis.yml b/.travis.yml
index 2fae8e4..7fb5876 100644
--- a/.travis.yml
+++ b/.travis.yml
@@ -35,7 +35,7 @@ env:
     - TEST_NGINX_MYSQL_PATH=/var/run/mysqld/mysqld.sock
     - TEST_NGINX_SLEEP=0.006
   matrix:
-    - NGINX_VERSION=1.9.15
+    - NGINX_VERSION=1.15.8
 
 install:
   - git clone https://github.com/openresty/test-nginx.git

commit 4c0c6ccb9a644a8d642db9f7957ebbc0ac559726
Author: wuyachao <2316239673@qq.com>
Date:   Thu Nov 1 07:34:25 2018 +0800

    doc: fixed a typo in readme.

diff --git a/README.markdown b/README.markdown
index 7cc0dcc..fba944f 100644
--- a/README.markdown
+++ b/README.markdown
@@ -302,7 +302,7 @@ Reads in one result returned from the MySQL server.
 
 It returns a Lua table (`res`) describing the MySQL `OK packet` or `result set packet` for the query result.
 
-For queries corresponding to a result set, it returns an array holding all the rows. Each row holds key-value apirs for each data fields. For instance,
+For queries corresponding to a result set, it returns an array holding all the rows. Each row holds key-value pairs for each data fields. For instance,
 
 ```lua
     {

commit fbefaa7f2c34e6654b83181e029b03303056fd46
Author: Yichun Zhang (agentzh) <yichun@openresty.com>
Date:   Mon Oct 29 15:26:30 2018 -0700

    tests: fixed some misuses of lua globals in some of the tests. caught by the "write guard" of ngx_lua.

diff --git a/t/sanity.t b/t/sanity.t
index 85fd6b5..cf9d46c 100644
--- a/t/sanity.t
+++ b/t/sanity.t
@@ -804,7 +804,7 @@ ok, err, errno, sqlstate = db:connect({
 
             ngx.say("connected to mysql: ", db:get_reused_times())
 
-            res, err, errno, sqlstate =
+            local res, err, errno, sqlstate =
                 db:query("select * from cats order by id asc;")
             if not res then
                 ngx.say("bad result: ", err, ": ", errno, ": ", sqlstate, ".")
@@ -917,7 +917,8 @@ result: (?:\{"insert_id":0,"server_status":2,"warning_count":1,"affected_rows":0
 
             ngx.say("connected to mysql.")
 
-            local res, err, errno, sqlstate = db:query("drop table if exists cats")
+            local res
+            res, err, errno, sqlstate = db:query("drop table if exists cats")
             if not res then
                 ngx.say("bad result: ", err, ": ", errno, ": ", sqlstate, ".")
                 return
@@ -1017,6 +1018,7 @@ result: [{"name":null},{"name":""},{"name":"Bob"}]
 
             ngx.say("connected to mysql: ", db:get_reused_times())
 
+            local res
             res, err, errno, sqlstate =
                 db:query("select * from cats order by id asc;")
             if not res then
@@ -1090,6 +1092,7 @@ qr/lua tcp socket keepalive create connection pool for key "ngx_test:ngx_test:[^
 
             ngx.say("connected to mysql: ", db:get_reused_times())
 
+            local res
             res, err, errno, sqlstate =
                 db:query("select * from cats order by id asc;")
             if not res then
@@ -1147,7 +1150,7 @@ qr/lua tcp socket keepalive create connection pool for key "my_pool"/
 
             ngx.say("connected to mysql: ", db:get_reused_times())
 
-            local ok, err = db:set_keepalive()
+            ok, err = db:set_keepalive()
             if not ok then
                 ngx.say("failed to set keepalive: ", err)
                 return
@@ -1163,6 +1166,7 @@ qr/lua tcp socket keepalive create connection pool for key "my_pool"/
 
             ngx.say("connected to mysql: ", db:get_reused_times())
 
+            local res
             res, err, errno, sqlstate =
                 db:query("select sum(id) from cats")
             if not res then
------ diff log end --------
** Summary: check here https://github.com/openresty/lua-resty-mysql
===================== END lua-resty-mysql =================================
Pass		: lua-resty-limit-traffic: latest!
===================== END lua-resty-limit-traf =================================
New Commit	: lua-resty-upload: 5 commits since 'v0.10'
------ diff log --------
commit 8f4f0f8cb1edc97fb39c16d256968e5b1a18f9ea
Author: Yichun Zhang (agentzh) <agentzh@gmail.com>
Date:   Fri Oct 27 13:53:18 2017 -0700

    tests: added new valgrind false positives in the latest nginx core.

diff --git a/valgrind.suppress b/valgrind.suppress
index ab2d2b3..5ead2a6 100644
--- a/valgrind.suppress
+++ b/valgrind.suppress
@@ -358,3 +358,22 @@
    fun:_dl_sysdep_start
    fun:_dl_start
 }
+{
+   <insert_a_suppression_name_here>
+   Memcheck:Leak
+   match-leak-kinds: definite
+   fun:malloc
+   fun:ngx_alloc
+   fun:ngx_set_environment
+   fun:ngx_single_process_cycle
+}
+{
+   <insert_a_suppression_name_here>
+   Memcheck:Leak
+   match-leak-kinds: definite
+   fun:malloc
+   fun:ngx_alloc
+   fun:ngx_set_environment
+   fun:ngx_worker_process_init
+   fun:ngx_worker_process_cycle
+}

commit 1e06345d8b7e943b8b427090f9f90bacdd0e6ec4
Author: Yichun Zhang (agentzh) <agentzh@gmail.com>
Date:   Fri Oct 27 13:13:28 2017 -0700

    tests: valgrind.suppress: removed too aggressive suppressions in nginx mem pools and luajit lj_str_new.

diff --git a/valgrind.suppress b/valgrind.suppress
index ec52b7a..ab2d2b3 100644
--- a/valgrind.suppress
+++ b/valgrind.suppress
@@ -87,20 +87,6 @@
    fun:ngx_calloc
    fun:ngx_event_process_init
 }
-{
-   <insert_a_suppression_name_here>
-   Memcheck:Leak
-   fun:malloc
-   fun:ngx_alloc
-   fun:ngx_malloc
-   fun:ngx_pcalloc
-}
-{
-   <insert_a_suppression_name_here>
-   Memcheck:Leak
-   fun:malloc
-   fun:ngx_alloc
-}
 {
    <insert_a_suppression_name_here>
    Memcheck:Param
@@ -128,14 +114,6 @@
    fun:ngx_log_error_core
    fun:ngx_http_charset_header_filter
 }
-{
-   <insert_a_suppression_name_here>
-   Memcheck:Leak
-   fun:memalign
-   fun:posix_memalign
-   fun:ngx_memalign
-   fun:ngx_pcalloc
-}
 {
    <insert_a_suppression_name_here>
    Memcheck:Param
@@ -143,13 +121,6 @@
    fun:setsockopt
    fun:drizzle_state_connect
 }
-{
-   <insert_a_suppression_name_here>
-   Memcheck:Leak
-   fun:malloc
-   fun:ngx_alloc
-   fun:ngx_palloc_large
-}
 {
    <insert_a_suppression_name_here>
    Memcheck:Leak
@@ -157,13 +128,6 @@
    fun:ngx_alloc
    fun:ngx_pool_cleanup_add
 }
-{
-   <insert_a_suppression_name_here>
-   Memcheck:Leak
-   fun:malloc
-   fun:ngx_alloc
-   fun:ngx_pnalloc
-}
 {
    <insert_a_suppression_name_here>
    Memcheck:Cond
@@ -171,53 +135,6 @@
    fun:ngx_single_process_cycle
    fun:main
 }
-
-{
-   <insert_a_suppression_name_here>
-   Memcheck:Leak
-   fun:malloc
-   fun:ngx_alloc
-   fun:ngx_palloc
-}
-{
-   <insert_a_suppression_name_here>
-   Memcheck:Leak
-   fun:malloc
-   fun:ngx_alloc
-   fun:ngx_pcalloc
-}
-{
-   <insert_a_suppression_name_here>
-   Memcheck:Leak
-   fun:malloc
-   fun:ngx_alloc
-   fun:ngx_malloc
-   fun:ngx_palloc_large
-}
-{
-   <insert_a_suppression_name_here>
-   Memcheck:Leak
-   fun:malloc
-   fun:ngx_alloc
-   fun:ngx_create_pool
-}
-{
-   <insert_a_suppression_name_here>
-   Memcheck:Leak
-   fun:malloc
-   fun:ngx_alloc
-   fun:ngx_malloc
-   fun:ngx_palloc
-}
-{
-   <insert_a_suppression_name_here>
-   Memcheck:Leak
-   fun:malloc
-   fun:ngx_alloc
-   fun:ngx_malloc
-   fun:ngx_pnalloc
-}
-
 {
    <insert_a_suppression_name_here>
    Memcheck:Leak
@@ -234,7 +151,6 @@
    fun:ngx_init_cycle
    fun:main
 }
-
 {
    <insert_a_suppression_name_here>
    Memcheck:Leak
@@ -429,23 +345,6 @@
    fun:ngx_init_cycle
    fun:main
 }
-{
-   <insert_a_suppression_name_here>
-   Memcheck:Leak
-   fun:memalign
-   fun:posix_memalign
-   fun:ngx_memalign
-   fun:ngx_create_pool
-}
-{
-   <insert_a_suppression_name_here>
-   Memcheck:Leak
-   fun:memalign
-   fun:posix_memalign
-   fun:ngx_memalign
-   fun:ngx_palloc_block
-   fun:ngx_palloc
-}
 {
    <insert_a_suppression_name_here>
    Memcheck:Cond

commit 7b023acbde5263bcd7e67e8e35bd04cacc46e35e
Author: Yichun Zhang (agentzh) <agentzh@gmail.com>
Date:   Fri Oct 27 12:02:15 2017 -0700

    tests: minor tweaks in valgrind.suppress.

diff --git a/valgrind.suppress b/valgrind.suppress
index 14d92de..ec52b7a 100644
--- a/valgrind.suppress
+++ b/valgrind.suppress
@@ -100,7 +100,6 @@
    Memcheck:Leak
    fun:malloc
    fun:ngx_alloc
-   fun:(below main)
 }
 {
    <insert_a_suppression_name_here>

commit 2aa954fa78daf9f38084bda7ae5a672bcd3ceeab
Author: luanote <luanote@gmail.com>
Date:   Thu Aug 24 10:49:16 2017 -0700

    doc: fixed a typo in the code sample.
    
    Signed-off-by: Yichun Zhang (agentzh) <agentzh@gmail.com>

diff --git a/README.markdown b/README.markdown
index 2420751..e841603 100644
--- a/README.markdown
+++ b/README.markdown
@@ -41,7 +41,7 @@ Synopsis
 ========
 
 ```lua
-    lua_package_path "/path/to/lua-resty-redis/lib/?.lua;;";
+    lua_package_path "/path/to/lua-resty-upload/lib/?.lua;;";
 
     server {
         location /test {

commit d5de8cc16ad9f2d019c2c8f4d23dae53c93a2247
Author: Yichun Zhang (agentzh) <agentzh@gmail.com>
Date:   Sun Dec 18 14:44:34 2016 -0800

    doc: updated copyright notice.

diff --git a/README.markdown b/README.markdown
index dcd1ba2..2420751 100644
--- a/README.markdown
+++ b/README.markdown
@@ -164,7 +164,7 @@ not want to save the data on local file systems.
 Author
 ======
 
-Yichun "agentzh" Zhang (章亦春) <agentzh@gmail.com>, CloudFlare Inc.
+Yichun "agentzh" Zhang (章亦春) <agentzh@gmail.com>, OpenResty Inc.
 
 [Back to TOC](#table-of-contents)
 
@@ -173,7 +173,7 @@ Copyright and License
 
 This module is licensed under the BSD license.
 
-Copyright (C) 2012-2016, by Yichun "agentzh" Zhang (章亦春) <agentzh@gmail.com>, CloudFlare Inc.
+Copyright (C) 2012-2017, by Yichun "agentzh" Zhang (章亦春) <agentzh@gmail.com>, OpenResty Inc.
 
 All rights reserved.
 
------ diff log end --------
** Summary: check here https://github.com/openresty/lua-resty-upload
===================== END lua-resty-upload =================================
Pass		: lua-resty-string: latest!
===================== END lua-resty-string =================================
New Commit	: lua-resty-websocket: 8 commits since 'v0.07'
------ diff log --------
commit f5ed6c4ca6dbd85363e68cbd4a450e76c0ed3c1d
Author: Gerrard-YNWA <gyc_ssdut@163.com>
Date:   Wed Aug 26 12:04:18 2020 +0800

    optimization: using cdata instead lua table for generating masked payload (#49)

diff --git a/lib/resty/websocket/protocol.lua b/lib/resty/websocket/protocol.lua
index dcab18b..b23a433 100644
--- a/lib/resty/websocket/protocol.lua
+++ b/lib/resty/websocket/protocol.lua
@@ -2,6 +2,7 @@
 
 
 local bit = require "bit"
+local ffi = require "ffi"
 
 
 local byte = string.byte
@@ -15,12 +16,13 @@ local rshift = bit.rshift
 --local tohex = bit.tohex
 local tostring = tostring
 local concat = table.concat
-local str_char = string.char
 local rand = math.random
 local type = type
 local debug = ngx.config.debug
 local ngx_log = ngx.log
 local ngx_DEBUG = ngx.DEBUG
+local ffi_new = ffi.new
+local ffi_string = ffi.string
 
 
 local ok, new_tab = pcall(require, "table.new")
@@ -44,6 +46,22 @@ local types = {
     [0xa] = "pong",
 }
 
+local str_buf_size = 4096
+local str_buf
+local c_buf_type = ffi.typeof("char[?]")
+
+
+local function get_string_buf(size)
+    if size > str_buf_size then
+        return ffi_new(c_buf_type, size)
+    end
+    if not str_buf then
+        str_buf = ffi_new(c_buf_type, str_buf_size)
+    end
+
+    return str_buf
+end
+
 
 function _M.recv_frame(sock, max_payload_len, force_masking)
     local data, err = sock:receive(2)
@@ -175,13 +193,12 @@ function _M.recv_frame(sock, max_payload_len, force_masking)
 
                 if payload_len > 2 then
                     -- TODO string.buffer optimizations
-                    local bytes = new_tab(payload_len - 2, 0)
+                    local bytes = get_string_buf(payload_len - 2)
                     for i = 3, payload_len do
-                        bytes[i - 2] = str_char(bxor(byte(data, 4 + i),
-                                                     byte(data,
-                                                          (i - 1) % 4 + 1)))
+                        bytes[i - 3] = bxor(byte(data, 4 + i),
+                                            byte(data, (i - 1) % 4 + 1))
                     end
-                    msg = concat(bytes)
+                    msg = ffi_string(bytes, payload_len - 2)
 
                 else
                     msg = ""
@@ -211,12 +228,12 @@ function _M.recv_frame(sock, max_payload_len, force_masking)
     local msg
     if mask then
         -- TODO string.buffer optimizations
-        local bytes = new_tab(payload_len, 0)
+        local bytes = get_string_buf(payload_len)
         for i = 1, payload_len do
-            bytes[i] = str_char(bxor(byte(data, 4 + i),
-                                     byte(data, (i - 1) % 4 + 1)))
+            bytes[i - 1] = bxor(byte(data, 4 + i),
+                                byte(data, (i - 1) % 4 + 1))
         end
-        msg = concat(bytes)
+        msg = ffi_string(bytes, payload_len)
 
     else
         msg = data
@@ -269,12 +286,12 @@ local function build_frame(fin, opcode, payload_len, payload, masking)
                            band(key, 0xff))
 
         -- TODO string.buffer optimizations
-        local bytes = new_tab(payload_len, 0)
+        local bytes = get_string_buf(payload_len)
         for i = 1, payload_len do
-            bytes[i] = str_char(bxor(byte(payload, i),
-                                     byte(masking_key, (i - 1) % 4 + 1)))
+            bytes[i - 1] = bxor(byte(payload, i),
+                                byte(masking_key, (i - 1) % 4 + 1))
         end
-        payload = concat(bytes)
+        payload = ffi_string(bytes, payload_len)
 
     else
         masking_key = ""

commit cdb16f2434819c61ca0db6792db1c7069bcf5e06
Author: 罗泽轩 <spacewanderlzx@gmail.com>
Date:   Tue May 26 11:09:19 2020 +0800

    bumped client's version to 0.08. (#48)

diff --git a/lib/resty/websocket/client.lua b/lib/resty/websocket/client.lua
index b6971c4..067b2a5 100644
--- a/lib/resty/websocket/client.lua
+++ b/lib/resty/websocket/client.lua
@@ -36,7 +36,7 @@ then
 end
 
 local _M = new_tab(0, 13)
-_M._VERSION = '0.07'
+_M._VERSION = '0.08'
 
 
 local mt = { __index = _M }

commit 3bbd05a3133aa406b4ca5090e57378b89f11b8c5
Author: chronolaw <chronolaw@gmail.com>
Date:   Sun May 24 17:22:43 2020 +0800

    doc: fix link of recv_frame/send_frame (#37)

diff --git a/README.markdown b/README.markdown
index c5e72be..9897bcc 100644
--- a/README.markdown
+++ b/README.markdown
@@ -38,9 +38,9 @@ Table of Contents
             * [client:recv_frame](#clientrecv_frame)
     * [resty.websocket.protocol](#restywebsocketprotocol)
         * [Methods](#methods)
-            * [recv_frame](#recv_frame)
-            * [build_frame](#build_frame)
-            * [send_frame](#send_frame)
+            * [protocol.recv_frame](#protocolrecv_frame)
+            * [protocol.build_frame](#protocolbuild_frame)
+            * [protocol.send_frame](#protocolsend_frame)
 * [Automatic Error Logging](#automatic-error-logging)
 * [Limitations](#limitations)
 * [Installation](#installation)
@@ -497,21 +497,21 @@ To load this module, just do this
 
 [Back to TOC](#table-of-contents)
 
-#### recv_frame
+#### protocol.recv_frame
 `syntax: data, typ, err = protocol.recv_frame(socket, max_payload_len, force_masking)`
 
 Receives a WebSocket frame from the wire.
 
 [Back to TOC](#table-of-contents)
 
-#### build_frame
+#### protocol.build_frame
 `syntax: frame = protocol.build_frame(fin, opcode, payload_len, payload, masking)`
 
 Builds a raw WebSocket frame.
 
 [Back to TOC](#table-of-contents)
 
-#### send_frame
+#### protocol.send_frame
 `syntax: bytes, err = protocol.send_frame(socket, fin, opcode, payload, max_payload_len, masking)`
 
 Sends a raw WebSocket frame.

commit 36b0b30a7077a96d5314ead3b81846d6f7ef830d
Author: Guilherme Salazar <gsz@acm.org>
Date:   Sat May 23 15:19:54 2020 -0300

    feature: support adding custom headers during handshake (#29)

diff --git a/README.markdown b/README.markdown
index a49d804..c5e72be 100644
--- a/README.markdown
+++ b/README.markdown
@@ -390,6 +390,10 @@ An optional Lua table can be specified as the last argument to this method to sp
     Specifies whether to perform SSL certificate verification during the
 SSL handshake if the `wss://` scheme is used.
 
+* `headers`
+
+    Specifies custom headers to be sent in the handshake request. The table is expected to contain strings in the format `{"a-header: a header value", "another-header: another header value"}`.
+
 The SSL connection mode (`wss://`) requires at least `ngx_lua` 0.9.11 or OpenResty 1.7.4.1.
 
 [Back to TOC](#table-of-contents)
diff --git a/lib/resty/websocket/client.lua b/lib/resty/websocket/client.lua
index 13d4b99..b6971c4 100644
--- a/lib/resty/websocket/client.lua
+++ b/lib/resty/websocket/client.lua
@@ -98,7 +98,7 @@ function _M.connect(self, uri, opts)
         path = "/"
     end
 
-    local ssl_verify, proto_header, origin_header, sock_opts = false
+    local ssl_verify, headers, proto_header, origin_header, sock_opts = false
 
     if opts then
         local protos = opts.protocols
@@ -128,6 +128,13 @@ function _M.connect(self, uri, opts)
             end
             ssl_verify = true
         end
+
+        if opts.headers then
+            headers = opts.headers
+            if type(headers) ~= "table" then
+                return nil, "custom headers must be a table"
+            end
+        end
     end
 
     local ok, err
@@ -161,6 +168,12 @@ function _M.connect(self, uri, opts)
         return 1
     end
 
+    local custom_headers
+    if headers then
+        custom_headers = concat(headers, "\r\n")
+        custom_headers = "\r\n" .. custom_headers
+    end
+
     -- do the websocket handshake:
 
     local bytes = char(rand(256) - 1, rand(256) - 1, rand(256) - 1,
@@ -177,7 +190,9 @@ function _M.connect(self, uri, opts)
                 .. (proto_header or "")
                 .. "\r\nSec-WebSocket-Version: 13"
                 .. (origin_header or "")
-                .. "\r\nConnection: Upgrade\r\n\r\n"
+                .. "\r\nConnection: Upgrade"
+                .. (custom_headers or "")
+                .. "\r\n\r\n"
 
     local bytes, err = sock:send(req)
     if not bytes then
diff --git a/t/cs.t b/t/cs.t
index 94bac98..3b01954 100644
--- a/t/cs.t
+++ b/t/cs.t
@@ -1964,3 +1964,46 @@ received: hello 3 (text)
 [warn]
 
 --- timeout: 10
+
+
+
+=== TEST 27: handhake with custom headers
+--- http_config eval: $::HttpConfig
+--- config
+    location = /c {
+        content_by_lua_block {
+            local client = require "resty.websocket.client"
+            local wb, err = client:new()
+            local uri = "ws://127.0.0.1:" .. ngx.var.server_port .. "/s"
+            local headers = {
+                "a-header: a header value",
+                "another-header: another header value",
+                "yet-another-header: yet another header value"
+            }
+            local ok, err = wb:connect(uri, {headers = headers})
+            if not ok then
+                ngx.say("failed to connect: " .. err)
+                return
+            end
+        }
+    }
+
+    location = /s {
+        content_by_lua_block {
+            local server = require "resty.websocket.server"
+            local wb, err = server:new()
+            if not wb then
+                ngx.log(ngx.ERR, "failed to new websocket: ", err)
+                return ngx.exit(444)
+            end
+            for k, v in pairs(ngx.req.get_headers()) do
+                print(string.format("%s = %s", k, v))
+            end
+        }
+    }
+--- request
+GET /c
+--- error_log
+a-header = a header value
+another-header = another header value
+yet-another-header = yet another header value

commit 739183cd638eb069af2686682a3810c28d822e82
Author: Thibault Charbonnier <thibaultcha@me.com>
Date:   Wed Jan 22 15:11:58 2020 -0800

    travis-ci: bumped the NGINX core to 1.17.8.

diff --git a/.travis.yml b/.travis.yml
index 3fb3e7a..97481d1 100644
--- a/.travis.yml
+++ b/.travis.yml
@@ -37,7 +37,7 @@ env:
     - TEST_NGINX_SLEEP=0.006
   matrix:
     - NGINX_VERSION=1.9.15
-    - NGINX_VERSION=1.17.4
+    - NGINX_VERSION=1.17.8
 
 install:
   - if [ ! -d download-cache ]; then mkdir download-cache; fi

commit 423e41c1d54f4b2548740ab31afff62fca8f3bd7
Author: Thibault Charbonnier <thibaultcha@me.com>
Date:   Mon Sep 30 11:55:05 2019 -0700

    travis-ci: bumped the NGINX core to 1.17.4.

diff --git a/.travis.yml b/.travis.yml
index c9bde25..3fb3e7a 100644
--- a/.travis.yml
+++ b/.travis.yml
@@ -37,7 +37,7 @@ env:
     - TEST_NGINX_SLEEP=0.006
   matrix:
     - NGINX_VERSION=1.9.15
-    - NGINX_VERSION=1.17.1
+    - NGINX_VERSION=1.17.4
 
 install:
   - if [ ! -d download-cache ]; then mkdir download-cache; fi

commit 888000e7278025d6ac28050d48f7ae96062bbdc4
Author: Thibault Charbonnier <thibaultcha@me.com>
Date:   Thu Jul 11 14:40:32 2019 -0700

    travis: bumped the nginx core version to 1.17.1.

diff --git a/.travis.yml b/.travis.yml
index 9607d8c..c9bde25 100644
--- a/.travis.yml
+++ b/.travis.yml
@@ -37,7 +37,7 @@ env:
     - TEST_NGINX_SLEEP=0.006
   matrix:
     - NGINX_VERSION=1.9.15
-    - NGINX_VERSION=1.15.8
+    - NGINX_VERSION=1.17.1
 
 install:
   - if [ ! -d download-cache ]; then mkdir download-cache; fi

commit b8a78144113e57b5a9ad89a49294e61f7a800afe
Author: Thibault Charbonnier <thibaultcha@me.com>
Date:   Thu Jul 11 14:40:11 2019 -0700

    travis: clone the lua-resty-core and lua-resty-lrucache repositories.
    
    Those are required with recent versions of ngx_lua.

diff --git a/.travis.yml b/.travis.yml
index ab1fec7..9607d8c 100644
--- a/.travis.yml
+++ b/.travis.yml
@@ -47,6 +47,8 @@ install:
   - git clone https://github.com/openresty/nginx-devel-utils.git
   - git clone https://github.com/simpl/ngx_devel_kit.git ../ndk-nginx-module
   - git clone https://github.com/openresty/lua-nginx-module.git ../lua-nginx-module
+  - git clone https://github.com/openresty/lua-resty-core.git ../lua-resty-core
+  - git clone https://github.com/openresty/lua-resty-lrucache.git ../lua-resty-lrucache
   - git clone https://github.com/openresty/no-pool-nginx.git ../no-pool-nginx
   - git clone -b v2.1-agentzh https://github.com/openresty/luajit2.git
   - git clone https://github.com/openresty/mockeagain.git
------ diff log end --------
** Summary: check here https://github.com/openresty/lua-resty-websocket
===================== END lua-resty-websocket =================================
New Commit	: lua-resty-lock: 5 commits since 'v0.08'
------ diff log --------
commit 987b0e9c6748e2af0f4300309ab8c94df5be9692
Author: Thibault Charbonnier <thibaultcha@me.com>
Date:   Wed Jan 22 15:08:42 2020 -0800

    travis-ci: bumped the NGINX core to 1.17.8.

diff --git a/.travis.yml b/.travis.yml
index d985684..f2f501b 100644
--- a/.travis.yml
+++ b/.travis.yml
@@ -29,7 +29,7 @@ env:
     - LD_LIBRARY_PATH=$LUAJIT_LIB:$LD_LIBRARY_PATH
     - TEST_NGINX_SLEEP=0.006
   matrix:
-    - NGINX_VERSION=1.17.4
+    - NGINX_VERSION=1.17.8
 
 install:
   - if [ ! -d download-cache ]; then mkdir download-cache; fi

commit 89017540b06d6548de90dac4d1c377fcaa53d449
Author: Thibault Charbonnier <thibaultcha@me.com>
Date:   Mon Sep 30 11:53:48 2019 -0700

    travis-ci: bumped the NGINX core to 1.17.4.

diff --git a/.travis.yml b/.travis.yml
index 3d65de9..d985684 100644
--- a/.travis.yml
+++ b/.travis.yml
@@ -29,7 +29,7 @@ env:
     - LD_LIBRARY_PATH=$LUAJIT_LIB:$LD_LIBRARY_PATH
     - TEST_NGINX_SLEEP=0.006
   matrix:
-    - NGINX_VERSION=1.17.1
+    - NGINX_VERSION=1.17.4
 
 install:
   - if [ ! -d download-cache ]; then mkdir download-cache; fi

commit d14b2b0a2aeeca6f6a81f59020265933123aa635
Author: Thibault Charbonnier <thibaultcha@me.com>
Date:   Thu Jul 11 13:30:36 2019 -0700

    travis: bumped the nginx core version to 1.17.1.

diff --git a/.travis.yml b/.travis.yml
index a9e5417..3d65de9 100644
--- a/.travis.yml
+++ b/.travis.yml
@@ -29,7 +29,7 @@ env:
     - LD_LIBRARY_PATH=$LUAJIT_LIB:$LD_LIBRARY_PATH
     - TEST_NGINX_SLEEP=0.006
   matrix:
-    - NGINX_VERSION=1.15.8
+    - NGINX_VERSION=1.17.1
 
 install:
   - if [ ! -d download-cache ]; then mkdir download-cache; fi

commit 7873748a8500827f9c46a0feae8495ca4fbe1a4c
Author: Thibault Charbonnier <thibaultcha@me.com>
Date:   Wed May 1 15:01:27 2019 -0700

    tests: t/sanity.t: skipped tests requiring debug mode when NGINX is not compiled with debug mode enabled.

diff --git a/t/sanity.t b/t/sanity.t
index e69ddf0..4125799 100644
--- a/t/sanity.t
+++ b/t/sanity.t
@@ -319,6 +319,7 @@ GET /t
 
 --- no_error_log
 [error]
+--- skip_eval: 3: system("$NginxBinary -V 2>&1 | grep -- '--with-debug'") ne 0
 
 
 
@@ -361,6 +362,7 @@ GET /t
 
 --- no_error_log
 [error]
+--- skip_eval: 3: system("$NginxBinary -V 2>&1 | grep -- '--with-debug'") ne 0
 
 
 
@@ -426,6 +428,7 @@ GET /t
 4
 --- no_error_log
 [error]
+--- skip_eval: 3: system("$NginxBinary -V 2>&1 | grep -- '--with-debug'") ne 0
 
 
 

commit 006e7508cc126f3b9ba001fca1b83a2d1166ff32
Author: Thibault Charbonnier <thibaultcha@me.com>
Date:   Sat Apr 13 00:16:45 2019 -0400

    travis: added a step to clone lua-resty-lrucache which is required by resty.core.

diff --git a/.travis.yml b/.travis.yml
index 5a4acb6..a9e5417 100644
--- a/.travis.yml
+++ b/.travis.yml
@@ -38,6 +38,7 @@ install:
   - sudo cpanm --notest Test::Nginx > build.log 2>&1 || (cat build.log && exit 1)
   - git clone https://github.com/openresty/openresty.git ../openresty
   - git clone https://github.com/openresty/lua-resty-core.git ../lua-resty-core
+  - git clone https://github.com/openresty/lua-resty-lrucache.git ../lua-resty-lrucache
   - git clone https://github.com/openresty/nginx-devel-utils.git
   - git clone https://github.com/simpl/ngx_devel_kit.git ../ndk-nginx-module
   - git clone https://github.com/openresty/lua-nginx-module.git ../lua-nginx-module
------ diff log end --------
** Summary: check here https://github.com/openresty/lua-resty-lock
===================== END lua-resty-lock =================================
Pass		: lua-resty-lrucache: latest!
===================== END lua-resty-lrucache =================================
New Commit	: lua-resty-core: 5 commits since 'v0.1.19'
------ diff log --------
commit d130d96591cf72a958f02a9af39aa9ecb7c0f3fc
Author: 罗泽轩 <spacewanderlzx@gmail.com>
Date:   Fri Aug 21 20:45:15 2020 +0800

    feature: shared ngx.ctx among SSL_* phases and the following phases. (#243)

diff --git a/lib/resty/core/ctx.lua b/lib/resty/core/ctx.lua
index 0683aaa..61b391a 100644
--- a/lib/resty/core/ctx.lua
+++ b/lib/resty/core/ctx.lua
@@ -17,6 +17,7 @@ local get_request = base.get_request
 local FFI_NO_REQ_CTX = base.FFI_NO_REQ_CTX
 local FFI_OK = base.FFI_OK
 local error = error
+local setmetatable = setmetatable
 local subsystem = ngx.config.subsystem
 
 
@@ -26,7 +27,8 @@ local ngx_lua_ffi_set_ctx_ref
 
 if subsystem == "http" then
     ffi.cdef[[
-    int ngx_http_lua_ffi_get_ctx_ref(ngx_http_request_t *r);
+    int ngx_http_lua_ffi_get_ctx_ref(ngx_http_request_t *r, int *in_ssl_phase,
+        int *ssl_ctx_ref);
     int ngx_http_lua_ffi_set_ctx_ref(ngx_http_request_t *r, int ref);
     ]]
 
@@ -35,7 +37,8 @@ if subsystem == "http" then
 
 elseif subsystem == "stream" then
     ffi.cdef[[
-    int ngx_stream_lua_ffi_get_ctx_ref(ngx_stream_lua_request_t *r);
+    int ngx_stream_lua_ffi_get_ctx_ref(ngx_stream_lua_request_t *r,
+        int *in_ssl_phase, int *ssl_ctx_ref);
     int ngx_stream_lua_ffi_set_ctx_ref(ngx_stream_lua_request_t *r, int ref);
     ]]
 
@@ -49,28 +52,56 @@ local _M = {
 }
 
 
-local function get_ctx_table()
-    local r = get_request()
+local get_ctx_table
+do
+    local in_ssl_phase = ffi.new("int[1]")
+    local ssl_ctx_ref = ffi.new("int[1]")
 
-    if not r then
-        error("no request found")
-    end
+    function get_ctx_table()
+        local r = get_request()
 
-    local ctx_ref = ngx_lua_ffi_get_ctx_ref(r)
-    if ctx_ref == FFI_NO_REQ_CTX then
-        error("no request ctx found")
-    end
+        if not r then
+            error("no request found")
+        end
 
-    local ctxs = registry.ngx_lua_ctx_tables
-    if ctx_ref < 0 then
-        local ctx = new_tab(0, 4)
-        ctx_ref = ref_in_table(ctxs, ctx)
-        if ngx_lua_ffi_set_ctx_ref(r, ctx_ref) ~= FFI_OK then
-            return nil
+        local ctx_ref = ngx_lua_ffi_get_ctx_ref(r, in_ssl_phase, ssl_ctx_ref)
+        if ctx_ref == FFI_NO_REQ_CTX then
+            error("no request ctx found")
+        end
+
+        local ctxs = registry.ngx_lua_ctx_tables
+        if ctx_ref < 0 then
+            local ctx
+
+            ctx_ref = ssl_ctx_ref[0]
+            if ctx_ref > 0 and ctxs[ctx_ref] then
+                if in_ssl_phase[0] ~= 0 then
+                    return ctxs[ctx_ref]
+                end
+
+                ctx = new_tab(0, 4)
+                ctx = setmetatable(ctx, ctxs[ctx_ref])
+
+            else
+                if in_ssl_phase[0] ~= 0 then
+                    ctx = new_tab(1, 4)
+                    -- to avoid creating another table, we assume the users
+                    -- won't overwrite the `__index` key
+                    ctx.__index = ctx
+
+                else
+                    ctx = new_tab(0, 4)
+                end
+            end
+
+            ctx_ref = ref_in_table(ctxs, ctx)
+            if ngx_lua_ffi_set_ctx_ref(r, ctx_ref) ~= FFI_OK then
+                return nil
+            end
+            return ctx
         end
-        return ctx
+        return ctxs[ctx_ref]
     end
-    return ctxs[ctx_ref]
 end
 register_getter("ctx", get_ctx_table)
 
@@ -82,7 +113,7 @@ local function set_ctx_table(ctx)
         error("no request found")
     end
 
-    local ctx_ref = ngx_lua_ffi_get_ctx_ref(r)
+    local ctx_ref = ngx_lua_ffi_get_ctx_ref(r, nil, nil)
     if ctx_ref == FFI_NO_REQ_CTX then
         error("no request ctx found")
     end
diff --git a/t/ctx.t b/t/ctx.t
index e352e71..b968046 100644
--- a/t/ctx.t
+++ b/t/ctx.t
@@ -1,19 +1,52 @@
 # vim:set ft= ts=4 sw=4 et fdm=marker:
 use lib '.';
 use t::TestCore;
+use Cwd qw(cwd);
 
 #worker_connections(1014);
 #master_process_enabled(1);
-log_level('warn');
+log_level('debug');
 
 #repeat_each(120);
 repeat_each(2);
 
-plan tests => repeat_each() * (blocks() * 6);
+plan tests => repeat_each() * (blocks() * 4);
 
 #no_diff();
 #no_long_string();
+
+my $pwd = cwd();
+
+add_block_preprocessor(sub {
+    my $block = shift;
+
+    my $http_config = $block->http_config || '';
+
+    $http_config .= <<_EOC_;
+
+    lua_package_path "$pwd/lib/?.lua;\$prefix/html/?.lua;../lua-resty-lrucache/lib/?.lua;;";
+    init_by_lua_block {
+        local verbose = false
+        if verbose then
+            local dump = require "jit.dump"
+            dump.on(nil, "$Test::Nginx::Util::ErrLogFile")
+        else
+            local v = require "jit.v"
+            v.on("$Test::Nginx::Util::ErrLogFile")
+        end
+
+        require "resty.core"
+        -- jit.off()
+    }
+_EOC_
+
+    $block->set_value("http_config", $http_config);
+});
+
 check_accum_error_log();
+
+$ENV{TEST_NGINX_HTML_DIR} ||= html_dir();
+
 run_tests();
 
 __DATA__
@@ -61,3 +94,789 @@ ctx.foo = 100
  bad argument
 --- error_log eval
 qr/\[TRACE\s+\d+\s+content_by_lua\(nginx\.conf:\d+\):2 loop\]/
+
+
+
+=== TEST 3: ngx.ctx in ssl_certificate_by_lua
+--- http_config
+    server {
+        listen unix:$TEST_NGINX_HTML_DIR/nginx.sock ssl;
+        server_name   test.com;
+        ssl_certificate_by_lua_block {
+            ngx.ctx.answer = 42
+            ngx.log(ngx.WARN, "ngx.ctx.answer = ", ngx.ctx.answer)
+
+            ngx.ctx.count = 0
+        }
+        ssl_certificate ../../cert/test.crt;
+        ssl_certificate_key ../../cert/test.key;
+
+        server_tokens off;
+        location /foo {
+            content_by_lua_block {
+                ngx.say(ngx.ctx.answer)
+                ngx.ctx.count = ngx.ctx.count + 1
+                ngx.say(ngx.ctx.count)
+            }
+        }
+    }
+--- config
+    lua_ssl_trusted_certificate ../../cert/test.crt;
+
+    location /t {
+        content_by_lua_block {
+            do
+                local sock = ngx.socket.tcp()
+
+                sock:settimeout(3000)
+
+                local ok, err = sock:connect("unix:$TEST_NGINX_HTML_DIR/nginx.sock")
+                if not ok then
+                    ngx.say("failed to connect: ", err)
+                    return
+                end
+
+                local sess, err = sock:sslhandshake(nil, "test.com", true)
+                if not sess then
+                    ngx.say("failed to do SSL handshake: ", err)
+                    return
+                end
+
+                for i = 1, 2 do
+                    local req = "GET /foo HTTP/1.1\r\nHost: test.com\r\n\r\n"
+                    local bytes, err = sock:send(req)
+                    if not bytes then
+                        ngx.say("failed to send http request: ", err)
+                        return
+                    end
+
+                    local body_seen = false
+                    while true do
+                        local line, err = sock:receive()
+                        if not line then
+                            break
+                        end
+
+                        if body_seen then
+                            if line == "0" then
+                                assert(sock:receive())
+                                break
+                            end
+                            local line, err = sock:receive(line)
+                            ngx.print("received: ", line)
+                            assert(sock:receive())
+
+                        elseif line == "" then
+                            body_seen = true
+                        end
+                    end
+                end
+
+                sock:close()
+            end  -- do
+            -- collectgarbage()
+        }
+    }
+
+--- request
+GET /t
+--- response_body
+received: 42
+received: 1
+received: 42
+received: 1
+--- error_log
+ngx.ctx.answer = 42
+--- grep_error_log eval
+qr/lua release ngx.ctx at ref \d+/
+--- grep_error_log_out eval
+["lua release ngx.ctx at ref 2
+lua release ngx.ctx at ref 2
+lua release ngx.ctx at ref 1
+",
+"lua release ngx.ctx at ref 2
+lua release ngx.ctx at ref 2
+lua release ngx.ctx at ref 1
+lua release ngx.ctx at ref 2
+lua release ngx.ctx at ref 2
+lua release ngx.ctx at ref 1
+"]
+--- no_error_log
+[error]
+
+
+
+=== TEST 4: ngx.ctx in ssl_certificate_by_lua (share objects)
+--- http_config
+    server {
+        listen unix:$TEST_NGINX_HTML_DIR/nginx.sock ssl;
+        server_name   test.com;
+        ssl_certificate_by_lua_block {
+            ngx.ctx.req = { count = 0 }
+        }
+        ssl_certificate ../../cert/test.crt;
+        ssl_certificate_key ../../cert/test.key;
+
+        server_tokens off;
+        location /foo {
+            content_by_lua_block {
+                ngx.ctx.req.count = ngx.ctx.req.count + 1
+                ngx.say(ngx.ctx.req.count)
+            }
+        }
+    }
+--- config
+    lua_ssl_trusted_certificate ../../cert/test.crt;
+
+    location /t {
+        content_by_lua_block {
+            do
+                local sock = ngx.socket.tcp()
+
+                sock:settimeout(3000)
+
+                local ok, err = sock:connect("unix:$TEST_NGINX_HTML_DIR/nginx.sock")
+                if not ok then
+                    ngx.say("failed to connect: ", err)
+                    return
+                end
+
+                local sess, err = sock:sslhandshake(nil, "test.com", true)
+                if not sess then
+                    ngx.say("failed to do SSL handshake: ", err)
+                    return
+                end
+
+                for i = 1, 2 do
+                    local req = "GET /foo HTTP/1.1\r\nHost: test.com\r\n\r\n"
+                    local bytes, err = sock:send(req)
+                    if not bytes then
+                        ngx.say("failed to send http request: ", err)
+                        return
+                    end
+
+                    local body_seen = false
+                    while true do
+                        local line, err = sock:receive()
+                        if not line then
+                            break
+                        end
+
+                        if body_seen then
+                            if line == "0" then
+                                assert(sock:receive())
+                                break
+                            end
+                            local line, err = sock:receive(line)
+                            ngx.print("received: ", line)
+                            assert(sock:receive())
+
+                        elseif line == "" then
+                            body_seen = true
+                        end
+                    end
+                end
+
+                sock:close()
+            end  -- do
+            -- collectgarbage()
+        }
+    }
+
+--- request
+GET /t
+--- response_body
+received: 1
+received: 2
+--- no_error_log
+[error]
+
+
+
+=== TEST 5: ngx.ctx in ssl_certificate_by_lua (release ctx when client aborted)
+--- http_config
+    server {
+        listen unix:$TEST_NGINX_HTML_DIR/nginx.sock ssl;
+        server_name   test.com;
+        ssl_certificate_by_lua_block {
+            local ssl = require "ngx.ssl"
+            ssl.clear_certs()
+            ngx.ctx.answer = 42
+        }
+        ssl_certificate ../../cert/test.crt;
+        ssl_certificate_key ../../cert/test.key;
+
+        server_tokens off;
+        location /foo {
+            return 200 "ok";
+        }
+    }
+--- config
+    lua_ssl_trusted_certificate ../../cert/test.crt;
+
+    location /t {
+        content_by_lua_block {
+            do
+                local sock = ngx.socket.tcp()
+                sock:settimeout(3000)
+
+                local ok, err = sock:connect("unix:$TEST_NGINX_HTML_DIR/nginx.sock")
+                if not ok then
+                    ngx.say("failed to connect: ", err)
+                    return
+                end
+
+                local sess, err = sock:sslhandshake(nil, "test.com", true)
+                if not sess then
+                    ngx.say("failed to do SSL handshake: ", err)
+                end
+
+                sock:close()
+            end  -- do
+            -- collectgarbage()
+        }
+    }
+
+--- request
+GET /t
+--- response_body
+failed to do SSL handshake: handshake failed
+--- grep_error_log eval
+qr/lua release ngx.ctx at ref \d+/
+--- grep_error_log_out eval
+["lua release ngx.ctx at ref 1
+",
+"lua release ngx.ctx at ref 1
+lua release ngx.ctx at ref 1
+"]
+
+
+
+=== TEST 6: ngx.ctx in ssl_session_store_by_lua
+--- http_config
+    ssl_session_store_by_lua_block {
+        ngx.ctx.answer = 42
+        ngx.log(ngx.WARN, "ngx.ctx.answer = ", ngx.ctx.answer)
+
+        ngx.ctx.count = 0
+    }
+
+    server {
+        listen unix:$TEST_NGINX_HTML_DIR/nginx.sock ssl;
+        server_name test.com;
+        ssl_session_tickets off;
+        ssl_certificate ../../cert/test.crt;
+        ssl_certificate_key ../../cert/test.key;
+
+        server_tokens off;
+        location /foo {
+            content_by_lua_block {
+                ngx.say(ngx.ctx.answer)
+                ngx.ctx.count = ngx.ctx.count + 1
+                ngx.say(ngx.ctx.count)
+            }
+        }
+    }
+--- config
+    lua_ssl_trusted_certificate ../../cert/test.crt;
+
+    location /t {
+        content_by_lua_block {
+            do
+                local sock = ngx.socket.tcp()
+                sock:settimeout(3000)
+
+                local ok, err = sock:connect("unix:$TEST_NGINX_HTML_DIR/nginx.sock")
+                if not ok then
+                    ngx.say("failed to connect: ", err)
+                    return
+                end
+
+                local sess, err = sock:sslhandshake(package.loaded.session, "test.com", true)
+                if not sess then
+                    ngx.say("failed to do SSL handshake: ", err)
+                    return
+                end
+
+                for i = 1, 2 do
+                    local req = "GET /foo HTTP/1.1\r\nHost: test.com\r\n\r\n"
+                    local bytes, err = sock:send(req)
+                    if not bytes then
+                        ngx.say("failed to send http request: ", err)
+                        return
+                    end
+
+                    local body_seen = false
+                    while true do
+                        local line, err = sock:receive()
+                        if not line then
+                            break
+                        end
+
+                        if body_seen then
+                            if line == "0" then
+                                assert(sock:receive())
+                                break
+                            end
+                            local line, err = sock:receive(line)
+                            ngx.print("received: ", line)
+                            assert(sock:receive())
+
+                        elseif line == "" then
+                            body_seen = true
+                        end
+                    end
+                end
+
+                package.loaded.session = sess
+                sock:close()
+            end  -- do
+        }
+    }
+--- request
+GET /t
+--- response_body
+received: 42
+received: 1
+received: 42
+received: 1
+--- error_log
+ngx.ctx.answer = 42
+--- grep_error_log eval
+qr/lua release ngx.ctx at ref \d+/
+--- grep_error_log_out eval
+["lua release ngx.ctx at ref 2
+lua release ngx.ctx at ref 2
+lua release ngx.ctx at ref 1
+",
+"lua release ngx.ctx at ref 2
+lua release ngx.ctx at ref 2
+lua release ngx.ctx at ref 1
+lua release ngx.ctx at ref 2
+lua release ngx.ctx at ref 2
+lua release ngx.ctx at ref 1
+"]
+--- no_error_log
+[error]
+
+
+
+=== TEST 7: ngx.ctx in ssl_session_store_by_lua (release ctx when client aborted)
+--- http_config
+    ssl_session_store_by_lua_block {
+        ngx.ctx.answer = 42
+    }
+
+    server {
+        listen unix:$TEST_NGINX_HTML_DIR/nginx.sock ssl;
+        server_name test.com;
+        ssl_session_tickets off;
+        ssl_certificate ../../cert/test.crt;
+        ssl_certificate_key ../../cert/test.key;
+
+        server_tokens off;
+        location /foo {
+            return 200 "ok";
+        }
+    }
+--- config
+    lua_ssl_trusted_certificate ../../cert/test.crt;
+
+    location /t {
+        content_by_lua_block {
+            do
+                local sock = ngx.socket.tcp()
+                sock:settimeout(3000)
+
+                local ok, err = sock:connect("unix:$TEST_NGINX_HTML_DIR/nginx.sock")
+                if not ok then
+                    ngx.say("failed to connect: ", err)
+                    return
+                end
+
+                local sess, err = sock:sslhandshake(package.loaded.session, "test.com", true)
+                if not sess then
+                    ngx.say("failed to do SSL handshake: ", err)
+                    return
+                end
+
+                ngx.say("closed")
+                sock:close()
+            end  -- do
+        }
+    }
+--- request
+GET /t
+--- response_body
+closed
+--- grep_error_log eval
+qr/lua release ngx.ctx at ref \d+/
+--- grep_error_log_out eval
+["lua release ngx.ctx at ref 1
+",
+"lua release ngx.ctx at ref 1
+lua release ngx.ctx at ref 1
+"]
+--- no_error_log
+[error]
+
+
+
+=== TEST 8: ngx.ctx in ssl_session_fetch_by_lua
+--- http_config
+    ssl_session_fetch_by_lua_block {
+        ngx.ctx.answer = 42
+        ngx.ctx.count = 0
+    }
+
+    server {
+        listen unix:$TEST_NGINX_HTML_DIR/nginx.sock ssl;
+        server_name test.com;
+        ssl_session_tickets off;
+        ssl_certificate ../../cert/test.crt;
+        ssl_certificate_key ../../cert/test.key;
+
+        server_tokens off;
+        location /foo {
+            content_by_lua_block {
+                if package.loaded.session then
+                    ngx.say(ngx.ctx.answer)
+                    ngx.ctx.count = ngx.ctx.count + 1
+                    ngx.say(ngx.ctx.count)
+                end
+            }
+        }
+    }
+--- config
+    lua_ssl_trusted_certificate ../../cert/test.crt;
+
+    location /t {
+        content_by_lua_block {
+            do
+                local sock = ngx.socket.tcp()
+                sock:settimeout(3000)
+
+                local ok, err = sock:connect("unix:$TEST_NGINX_HTML_DIR/nginx.sock")
+                if not ok then
+                    ngx.say("failed to connect: ", err)
+                    return
+                end
+
+                local sess, err = sock:sslhandshake(package.loaded.session, "test.com", true)
+                if not sess then
+                    ngx.say("failed to do SSL handshake: ", err)
+                    return
+                end
+
+                for i = 1, 2 do
+                    local req = "GET /foo HTTP/1.1\r\nHost: test.com\r\n\r\n"
+                    local bytes, err = sock:send(req)
+                    if not bytes then
+                        ngx.say("failed to send http request: ", err)
+                        return
+                    end
+
+                    local body_seen = false
+                    while true do
+                        local line, err = sock:receive()
+                        if not line then
+                            break
+                        end
+
+                        if body_seen then
+                            if line == "0" then
+                                assert(sock:receive())
+                                break
+                            end
+                            local line, err = sock:receive(line)
+                            ngx.log(ngx.WARN, "received: ", line)
+                            assert(sock:receive())
+
+                        elseif line == "" then
+                            body_seen = true
+                        end
+                    end
+                end
+
+                package.loaded.session = sess
+                sock:close()
+            end  -- do
+        }
+    }
+--- request
+GET /t
+--- grep_error_log eval
+qr/(received: \w+|lua release ngx.ctx at ref \d+)/
+--- grep_error_log_out eval
+["",
+"lua release ngx.ctx at ref 2
+received: 42
+received: 1
+lua release ngx.ctx at ref 2
+received: 42
+received: 1
+lua release ngx.ctx at ref 1
+"]
+--- no_error_log
+[error]
+
+
+
+=== TEST 9: ngx.ctx in ssl_session_fetch_by_lua (release ctx when client aborted)
+--- http_config
+    ssl_session_fetch_by_lua_block {
+        ngx.ctx.answer = 42
+    }
+
+    server {
+        listen unix:$TEST_NGINX_HTML_DIR/nginx.sock ssl;
+        server_name test.com;
+        ssl_session_tickets off;
+        ssl_certificate ../../cert/test.crt;
+        ssl_certificate_key ../../cert/test.key;
+
+        server_tokens off;
+        location /foo {
+            return 200 "ok";
+        }
+    }
+--- config
+    lua_ssl_trusted_certificate ../../cert/test.crt;
+
+    location /t {
+        content_by_lua_block {
+            do
+                local sock = ngx.socket.tcp()
+                sock:settimeout(3000)
+
+                local ok, err = sock:connect("unix:$TEST_NGINX_HTML_DIR/nginx.sock")
+                if not ok then
+                    ngx.say("failed to connect: ", err)
+                    return
+                end
+
+                local sess, err = sock:sslhandshake(package.loaded.session, "test.com", true)
+                if not sess then
+                    ngx.say("failed to do SSL handshake: ", err)
+                    return
+                end
+
+                package.loaded.session = sess
+                ngx.say("closed")
+                sock:close()
+            end  -- do
+        }
+    }
+--- request
+GET /t
+--- response_body
+closed
+--- grep_error_log eval
+qr/lua release ngx.ctx at ref \d+/
+--- grep_error_log_out eval
+["",
+"lua release ngx.ctx at ref 1
+"]
+--- no_error_log
+[error]
+
+
+
+=== TEST 10: ngx.ctx in ssl* and other phases
+--- http_config
+    ssl_session_store_by_lua_block {
+        ngx.ctx.count = ngx.ctx.count and (ngx.ctx.count + 1) or 1
+    }
+
+    ssl_session_fetch_by_lua_block {
+        ngx.ctx.count = ngx.ctx.count and (ngx.ctx.count + 10) or 10
+    }
+
+    server {
+        listen unix:$TEST_NGINX_HTML_DIR/nginx.sock ssl;
+        server_name test.com;
+        ssl_session_tickets off;
+        ssl_certificate ../../cert/test.crt;
+        ssl_certificate_key ../../cert/test.key;
+
+        ssl_certificate_by_lua_block {
+            ngx.ctx.count = ngx.ctx.count and (ngx.ctx.count + 100) or 100
+        }
+        server_tokens off;
+        location /foo {
+            content_by_lua_block {
+                ngx.ctx.count = ngx.ctx.count + 1
+                ngx.say(ngx.ctx.count)
+            }
+        }
+    }
+--- config
+    lua_ssl_trusted_certificate ../../cert/test.crt;
+
+    location /t {
+        content_by_lua_block {
+            do
+                local sock = ngx.socket.tcp()
+                sock:settimeout(3000)
+
+                local ok, err = sock:connect("unix:$TEST_NGINX_HTML_DIR/nginx.sock")
+                if not ok then
+                    ngx.say("failed to connect: ", err)
+                    return
+                end
+
+                local sess, err = sock:sslhandshake(package.loaded.session, "test.com", true)
+                if not sess then
+                    ngx.say("failed to do SSL handshake: ", err)
+                    return
+                end
+
+                for i = 1, 2 do
+                    local req = "GET /foo HTTP/1.1\r\nHost: test.com\r\n\r\n"
+                    local bytes, err = sock:send(req)
+                    if not bytes then
+                        ngx.say("failed to send http request: ", err)
+                        return
+                    end
+
+                    local body_seen = false
+                    while true do
+                        local line, err = sock:receive()
+                        if not line then
+                            break
+                        end
+
+                        if body_seen then
+                            if line == "0" then
+                                assert(sock:receive())
+                                break
+                            end
+                            local line, err = sock:receive(line)
+                            ngx.log(ngx.WARN, "received: ", line)
+                            assert(sock:receive())
+
+                        elseif line == "" then
+                            body_seen = true
+                        end
+                    end
+                end
+
+                package.loaded.session = sess
+                sock:close()
+            end  -- do
+        }
+    }
+--- request
+GET /t
+--- grep_error_log eval
+qr/(received: \w+|lua release ngx.ctx at ref \d+)/
+--- grep_error_log_out eval
+["lua release ngx.ctx at ref 2
+received: 102
+lua release ngx.ctx at ref 2
+received: 102
+lua release ngx.ctx at ref 1
+",
+"lua release ngx.ctx at ref 2
+received: 102
+lua release ngx.ctx at ref 2
+received: 102
+lua release ngx.ctx at ref 1
+lua release ngx.ctx at ref 2
+received: 112
+lua release ngx.ctx at ref 2
+received: 112
+lua release ngx.ctx at ref 1
+"]
+--- no_error_log
+[error]
+
+
+
+=== TEST 11: overwrite values will only take affect in the current http request
+--- http_config
+    server {
+        listen unix:$TEST_NGINX_HTML_DIR/nginx.sock ssl;
+        server_name   test.com;
+        ssl_certificate_by_lua_block {
+            ngx.ctx.answer = 0
+        }
+        ssl_certificate ../../cert/test.crt;
+        ssl_certificate_key ../../cert/test.key;
+
+        server_tokens off;
+        location /foo1 {
+            content_by_lua_block {
+                ngx.say(ngx.ctx.answer)
+                ngx.ctx.answer = 42
+            }
+        }
+        location /foo2 {
+            content_by_lua_block {
+                ngx.say(ngx.ctx.answer)
+            }
+        }
+    }
+--- config
+    lua_ssl_trusted_certificate ../../cert/test.crt;
+
+    location /t {
+        content_by_lua_block {
+            do
+                local sock = ngx.socket.tcp()
+
+                sock:settimeout(3000)
+
+                local ok, err = sock:connect("unix:$TEST_NGINX_HTML_DIR/nginx.sock")
+                if not ok then
+                    ngx.say("failed to connect: ", err)
+                    return
+                end
+
+                local sess, err = sock:sslhandshake(nil, "test.com", true)
+                if not sess then
+                    ngx.say("failed to do SSL handshake: ", err)
+                    return
+                end
+
+                for i = 1, 2 do
+                    local req = "GET /foo" .. i .. " HTTP/1.1\r\nHost: test.com\r\n\r\n"
+                    local bytes, err = sock:send(req)
+                    if not bytes then
+                        ngx.say("failed to send http request: ", err)
+                        return
+                    end
+
+                    local body_seen = false
+                    while true do
+                        local line, err = sock:receive()
+                        if not line then
+                            break
+                        end
+
+                        if body_seen then
+                            if line == "0" then
+                                assert(sock:receive())
+                                break
+                            end
+                            local line, err = sock:receive(line)
+                            ngx.print("received: ", line)
+                            assert(sock:receive())
+
+                        elseif line == "" then
+                            body_seen = true
+                        end
+                    end
+                end
+
+                sock:close()
+            end  -- do
+            -- collectgarbage()
+        }
+    }
+
+--- request
+GET /t
+--- response_body
+received: 0
+received: 0
diff --git a/t/stream/ctx.t b/t/stream/ctx.t
new file mode 100644
index 0000000..d7f5295
--- /dev/null
+++ b/t/stream/ctx.t
@@ -0,0 +1,203 @@
+# vim:set ft= ts=4 sw=4 et fdm=marker:
+use lib '.';
+use t::TestCore::Stream;
+
+repeat_each(2);
+
+plan tests => repeat_each() * (blocks() * 3 + 2);
+
+$ENV{TEST_NGINX_HTML_DIR} ||= html_dir();
+no_long_string();
+check_accum_error_log();
+run_tests();
+
+__DATA__
+
+=== TEST 1: ngx.ctx in ssl_certificate_by_lua
+--- stream_config
+    server {
+        listen unix:$TEST_NGINX_HTML_DIR/nginx.sock ssl;
+        ssl_certificate_by_lua_block {
+            ngx.ctx.answer = 42
+            ngx.log(ngx.WARN, "ngx.ctx.answer = ", ngx.ctx.answer)
+
+            ngx.ctx.count = 0
+        }
+        ssl_certificate ../../cert/test.crt;
+        ssl_certificate_key ../../cert/test.key;
+
+        content_by_lua_block {
+            ngx.say(ngx.ctx.answer)
+            ngx.ctx.count = ngx.ctx.count + 1
+            ngx.say(ngx.ctx.count)
+        }
+    }
+--- stream_server_config
+    lua_ssl_trusted_certificate ../../cert/test.crt;
+
+    content_by_lua_block {
+        do
+            local sock = ngx.socket.tcp()
+
+            sock:settimeout(3000)
+
+            local function run()
+                local ok, err = sock:connect("unix:$TEST_NGINX_HTML_DIR/nginx.sock")
+                if not ok then
+                    ngx.say("failed to connect: ", err)
+                    return
+                end
+
+                local sess, err = sock:sslhandshake(nil, "test.com", true)
+                if not sess then
+                    ngx.say("failed to do SSL handshake: ", err)
+                    return
+                end
+
+                while true do
+                    local line, err = sock:receive()
+                    if not line then
+                        break
+                    end
+
+                    ngx.say("received: ", line)
+                end
+
+                sock:close()
+            end
+
+            run()
+        end  -- do
+        -- collectgarbage()
+    }
+
+--- stream_response
+received: 42
+received: 1
+--- error_log
+ngx.ctx.answer = 42
+--- grep_error_log eval
+qr/lua release ngx.ctx at ref \d+/
+--- grep_error_log_out eval
+["lua release ngx.ctx at ref 2
+lua release ngx.ctx at ref 1
+",
+"lua release ngx.ctx at ref 2
+lua release ngx.ctx at ref 1
+lua release ngx.ctx at ref 2
+lua release ngx.ctx at ref 1
+"]
+--- no_error_log
+[error]
+
+
+
+=== TEST 2: ngx.ctx in ssl_certificate_by_lua (share objects)
+--- stream_config
+    server {
+        listen unix:$TEST_NGINX_HTML_DIR/nginx.sock ssl;
+        ssl_certificate_by_lua_block {
+            ngx.ctx.req = { count = 0 }
+        }
+        ssl_certificate ../../cert/test.crt;
+        ssl_certificate_key ../../cert/test.key;
+
+        content_by_lua_block {
+            ngx.ctx.req.count = ngx.ctx.req.count + 1
+            ngx.say(ngx.ctx.req.count)
+        }
+    }
+--- stream_server_config
+    lua_ssl_trusted_certificate ../../cert/test.crt;
+
+    content_by_lua_block {
+        do
+            local sock = ngx.socket.tcp()
+
+            sock:settimeout(3000)
+
+            local function run()
+                local ok, err = sock:connect("unix:$TEST_NGINX_HTML_DIR/nginx.sock")
+                if not ok then
+                    ngx.say("failed to connect: ", err)
+                    return
+                end
+
+                local sess, err = sock:sslhandshake(nil, "test.com", true)
+                if not sess then
+                    ngx.say("failed to do SSL handshake: ", err)
+                    return
+                end
+
+                while true do
+                    local line, err = sock:receive()
+                    if not line then
+                        break
+                    end
+
+                    ngx.say("received: ", line)
+                end
+
+                sock:close()
+            end
+
+            run()
+        end  -- do
+        -- collectgarbage()
+    }
+
+--- stream_response
+received: 1
+--- no_error_log
+[error]
+
+
+
+=== TEST 3: ngx.ctx in ssl_certificate_by_lua (release ctx when client aborted)
+--- stream_config
+    server {
+        listen unix:$TEST_NGINX_HTML_DIR/nginx.sock ssl;
+        ssl_certificate_by_lua_block {
+            local ssl = require "ngx.ssl"
+            ssl.clear_certs()
+            ngx.ctx.answer = 42
+        }
+        ssl_certificate ../../cert/test.crt;
+        ssl_certificate_key ../../cert/test.key;
+
+        return "ok";
+    }
+--- stream_server_config
+    lua_ssl_trusted_certificate ../../cert/test.crt;
+
+    content_by_lua_block {
+        do
+            local sock = ngx.socket.tcp()
+            sock:settimeout(3000)
+
+            local ok, err = sock:connect("unix:$TEST_NGINX_HTML_DIR/nginx.sock")
+            if not ok then
+                ngx.say("failed to connect: ", err)
+                return
+            end
+
+            local sess, err = sock:sslhandshake(nil, "test.com", true)
+            if not sess then
+                ngx.say("failed to do SSL handshake: ", err)
+            end
+
+            sock:close()
+        end  -- do
+        -- collectgarbage()
+    }
+
+--- stream_response
+failed to do SSL handshake: handshake failed
+--- grep_error_log eval
+qr/lua release ngx.ctx at ref \d+/
+--- grep_error_log_out eval
+["lua release ngx.ctx at ref 1
+",
+"lua release ngx.ctx at ref 1
+lua release ngx.ctx at ref 1
+"]

commit 464121e031bf4cbfb413b8c28ddc17113a9be103
Author: Thibault Charbonnier <thibaultcha@me.com>
Date:   Mon Jul 13 15:41:10 2020 -0700

    bugfix: added the missing 'ngx.req.start_time' to the stream subsystem.
    
    The `ngx.req.start_time()` API is part of `request.lua` which is was
    understandably not loaded for the stream subsystem. There existed no
    tests for this API in the stream subsystem, so the removal of its
    underlying CFunction resulted in `ngx.req.start_time` being `nil` with
    no test cases to realize it.

diff --git a/lib/resty/core.lua b/lib/resty/core.lua
index 54d9756..be287a9 100644
--- a/lib/resty/core.lua
+++ b/lib/resty/core.lua
@@ -12,10 +12,10 @@ require "resty.core.hash"
 require "resty.core.uri"
 require "resty.core.exit"
 require "resty.core.base64"
+require "resty.core.request"
 
 
 if subsystem == 'http' then
-    require "resty.core.request"
     require "resty.core.response"
     require "resty.core.phase"
     require "resty.core.ndk"
diff --git a/lib/resty/core/request.lua b/lib/resty/core/request.lua
index f912bfa..747b8c2 100644
--- a/lib/resty/core/request.lua
+++ b/lib/resty/core/request.lua
@@ -3,10 +3,10 @@
 
 local ffi = require 'ffi'
 local base = require "resty.core.base"
-base.allows_subsystem("http")
 local utils = require "resty.core.utils"
 
 
+local subsystem = ngx.config.subsystem
 local FFI_BAD_CONTEXT = base.FFI_BAD_CONTEXT
 local FFI_DECLINED = base.FFI_DECLINED
 local FFI_OK = base.FFI_OK
@@ -34,6 +34,40 @@ local _M = {
 }
 
 
+local ngx_lua_ffi_req_start_time
+
+
+if subsystem == "stream" then
+    ffi.cdef[[
+    double ngx_stream_lua_ffi_req_start_time(ngx_stream_lua_request_t *r);
+    ]]
+
+    ngx_lua_ffi_req_start_time = C.ngx_stream_lua_ffi_req_start_time
+
+elseif subsystem == "http" then
+    ffi.cdef[[
+    double ngx_http_lua_ffi_req_start_time(ngx_http_request_t *r);
+    ]]
+
+    ngx_lua_ffi_req_start_time = C.ngx_http_lua_ffi_req_start_time
+end
+
+
+function ngx.req.start_time()
+    local r = get_request()
+    if not r then
+        error("no request found")
+    end
+
+    return tonumber(ngx_lua_ffi_req_start_time(r))
+end
+
+
+if subsystem == "stream" then
+    return _M
+end
+
+
 local errmsg = base.get_errmsg_ptr()
 local ffi_str_type = ffi.typeof("ngx_http_lua_ffi_str_t*")
 local ffi_str_size = ffi.sizeof("ngx_http_lua_ffi_str_t")
@@ -59,8 +93,6 @@ ffi.cdef[[
     int ngx_http_lua_ffi_req_get_uri_args(ngx_http_request_t *r,
         unsigned char *buf, ngx_http_lua_ffi_table_elt_t *out, int count);
 
-    double ngx_http_lua_ffi_req_start_time(ngx_http_request_t *r);
-
     int ngx_http_lua_ffi_req_get_method(ngx_http_request_t *r);
 
     int ngx_http_lua_ffi_req_get_method_name(ngx_http_request_t *r,
@@ -222,16 +254,6 @@ function ngx.req.get_uri_args(max_args)
 end
 
 
-function ngx.req.start_time()
-    local r = get_request()
-    if not r then
-        error("no request found")
-    end
-
-    return tonumber(C.ngx_http_lua_ffi_req_start_time(r))
-end
-
-
 do
     local methods = {
         [0x0002] = "GET",
diff --git a/lib/resty/core/utils.lua b/lib/resty/core/utils.lua
index 398d7d5..98a0cac 100644
--- a/lib/resty/core/utils.lua
+++ b/lib/resty/core/utils.lua
@@ -3,7 +3,6 @@
 
 local ffi = require "ffi"
 local base = require "resty.core.base"
-base.allows_subsystem("http")
 
 
 local C = ffi.C
@@ -12,12 +11,7 @@ local ffi_copy = ffi.copy
 local byte = string.byte
 local str_find = string.find
 local get_string_buf = base.get_string_buf
-
-
-ffi.cdef[[
-    void ngx_http_lua_ffi_str_replace_char(unsigned char *buf, size_t len,
-        const unsigned char find, const unsigned char replace);
-]]
+local subsystem = ngx.config.subsystem
 
 
 local _M = {
@@ -25,19 +19,27 @@ local _M = {
 }
 
 
-function _M.str_replace_char(str, find, replace)
-    if not str_find(str, find, nil, true) then
-        return str
-    end
+if subsystem == "http" then
+    ffi.cdef[[
+    void ngx_http_lua_ffi_str_replace_char(unsigned char *buf, size_t len,
+        const unsigned char find, const unsigned char replace);
+    ]]
+
 
-    local len = #str
-    local buf = get_string_buf(len)
-    ffi_copy(buf, str)
+    function _M.str_replace_char(str, find, replace)
+        if not str_find(str, find, nil, true) then
+            return str
+        end
 
-    C.ngx_http_lua_ffi_str_replace_char(buf, len, byte(find),
-                                        byte(replace))
+        local len = #str
+        local buf = get_string_buf(len)
+        ffi_copy(buf, str)
 
-    return ffi_str(buf, len)
+        C.ngx_http_lua_ffi_str_replace_char(buf, len, byte(find),
+                                            byte(replace))
+
+        return ffi_str(buf, len)
+    end
 end
 
 
diff --git a/t/stream/request.t b/t/stream/request.t
new file mode 100644
index 0000000..4387725
--- /dev/null
+++ b/t/stream/request.t
@@ -0,0 +1,39 @@
+# vim:set ft= ts=4 sw=4 et fdm=marker:
+use lib '.';
+use t::TestCore::Stream;
+
+repeat_each(2);
+
+plan tests => repeat_each() * (blocks() * 6);
+
+no_long_string();
+check_accum_error_log();
+run_tests();
+
+__DATA__
+
+=== TEST 1: ngx.req.start_time()
+--- stream_server_config
+    content_by_lua_block {
+        local t
+        for i = 1, 500 do
+            t = ngx.req.start_time()
+        end
+        ngx.sleep(0.10)
+        local elapsed = ngx.now() - t
+        ngx.say(t > 1399867351)
+        ngx.say(">= 0.099: ", elapsed >= 0.099)
+        ngx.say("< 0.11: ", elapsed < 0.11)
+        -- ngx.say(t, " ", elapsed)
+    }
+--- stream_response
+true
+>= 0.099: true
+< 0.11: true
+
+--- error_log eval
+qr/\[TRACE\s+\d+ content_by_lua\(nginx\.conf:\d+\):3 loop\]/
+--- no_error_log
+[error]
+bad argument type
+stitch

commit f1b1e7639b007826752f2f7da626511b8dd670f8
Author: Datong Sun <datong.sun@konghq.com>
Date:   Tue Jun 23 17:40:20 2020 -0700

    feature: add the `balancer.recreate_request` function, which allows user to recreate request buffer in balancer phase. (#302)
    
    This allows certain request parameters, such as headers (including
    `Host` header) to be modified between balancer retries.

diff --git a/lib/ngx/balancer.lua b/lib/ngx/balancer.lua
index d584639..7d64d63 100644
--- a/lib/ngx/balancer.lua
+++ b/lib/ngx/balancer.lua
@@ -38,6 +38,9 @@ if subsystem == 'http' then
     int ngx_http_lua_ffi_balancer_set_timeouts(ngx_http_request_t *r,
         long connect_timeout, long send_timeout,
         long read_timeout, char **err);
+
+    int ngx_http_lua_ffi_balancer_recreate_request(ngx_http_request_t *r,
+        char **err);
     ]]
 
     ngx_lua_ffi_balancer_set_current_peer =
@@ -207,4 +210,25 @@ function _M.set_timeouts(connect_timeout, send_timeout, read_timeout)
 end
 
 
+if subsystem == 'http' then
+    function _M.recreate_request()
+        local r = get_request()
+        if not r then
+            error("no request found")
+        end
+
+        local rc = C.ngx_http_lua_ffi_balancer_recreate_request(r, errmsg)
+        if rc == FFI_OK then
+            return true
+        end
+
+        if errmsg[0] ~= nil then
+            return nil, ffi_str(errmsg[0])
+        end
+
+        return nil, "failed to recreate the upstream request"
+    end
+end
+
+
 return _M
diff --git a/lib/ngx/balancer.md b/lib/ngx/balancer.md
index 16def45..98db241 100644
--- a/lib/ngx/balancer.md
+++ b/lib/ngx/balancer.md
@@ -9,12 +9,15 @@ Table of Contents
 * [Name](#name)
 * [Status](#status)
 * [Synopsis](#synopsis)
+    * [http subsystem](#http-subsystem)
+    * [stream subsystem](#stream-subsystem)
 * [Description](#description)
 * [Methods](#methods)
     * [set_current_peer](#set_current_peer)
     * [set_more_tries](#set_more_tries)
     * [get_last_failure](#get_last_failure)
     * [set_timeouts](#set_timeouts)
+    * [recreate_request](#recreate_request)
 * [Community](#community)
     * [English Mailing List](#english-mailing-list)
     * [Chinese Mailing List](#chinese-mailing-list)
@@ -79,6 +82,8 @@ http {
 }
 ```
 
+[Back to TOC](#table-of-contents)
+
 stream subsystem
 ----------------
 
@@ -121,6 +126,8 @@ stream {
 }
 ```
 
+[Back to TOC](#table-of-contents)
+
 Description
 ===========
 
@@ -237,6 +244,32 @@ This function was first added in the `0.1.7` version of this library.
 
 [Back to TOC](#table-of-contents)
 
+recreate_request
+----------------
+**syntax:** `ok, err = balancer.recreate_request()`
+
+**context:** *balancer_by_lua&#42;*
+
+Recreates the request buffer for sending to the upstream server. This is useful, for example
+if you want to change a request header field to the new upstream server on balancer retries.
+
+Normally this does not work because the request buffer is created once during upstream module
+initialization and won't be regenerated for subsequent retries. However you can use
+`proxy_set_header My-Header $my_header` and set the `ngx.var.my_header` variable inside the
+balancer phase. Calling `balancer.recreate_request()` after updating a header field will
+cause the request buffer to be re-generated and the `My-Header` header will thus contain
+the new value.
+
+**Warning:** because the request buffer has to be recreated and such allocation occurs on the
+request memory pool, the old buffer has to be thrown away and will only be freed after the request
+finishes. Do not call this function too often or memory leaks may be noticeable. Even so, a call
+to this function should be made **only** if you know the request buffer must be regenerated,
+instead of unconditionally in each balancer retries.
+
+This function was first added in the `0.1.20` version of this library.
+
+[Back to TOC](#table-of-contents)
+
 Community
 =========
 
diff --git a/t/balancer.t b/t/balancer.t
index 2097370..5d8b377 100644
--- a/t/balancer.t
+++ b/t/balancer.t
@@ -9,7 +9,7 @@ use t::TestCore;
 
 repeat_each(2);
 
-plan tests => repeat_each() * (blocks() * 4 + 5);
+plan tests => repeat_each() * (blocks() * 4 + 6);
 
 $ENV{TEST_NGINX_LUA_PACKAGE_PATH} = "$t::TestCore::lua_package_path";
 
@@ -834,3 +834,51 @@ GET /t
 [lua] log_by_lua(nginx.conf:59):2: ngx.var.upstream_addr is 127.0.0.3:12345, 127.0.0.3:12346
 --- no_error_log
 [alert]
+
+
+
+=== TEST 19: recreate upstream module requests with header change
+--- http_config
+    lua_package_path "$TEST_NGINX_LUA_PACKAGE_PATH";
+
+    upstream backend {
+        server 0.0.0.1;
+
+        balancer_by_lua_block {
+            print("here")
+            local b = require "ngx.balancer"
+
+            if ngx.ctx.balancer_run then
+                assert(b.set_current_peer("127.0.0.1", tonumber(ngx.var.server_port)))
+                ngx.var.test = "second"
+                assert(b.recreate_request())
+
+            else
+                ngx.ctx.balancer_run = true
+                assert(b.set_current_peer("127.0.0.3", 12345))
+                assert(b.set_more_tries(1))
+            end
+        }
+    }
+--- config
+    location = /t {
+        proxy_next_upstream error timeout invalid_header http_500 http_502 http_503 http_504 http_403 http_404;
+        proxy_next_upstream_tries 2;
+
+        set $test "first";
+
+        proxy_set_header X-Test $test;
+        proxy_pass http://backend/upstream;
+    }
+
+    location = /upstream {
+        return 200 "value is: $http_x_test";
+    }
+--- request
+GET /t
+--- response_body: value is: second
+--- error_log
+connect() failed (111: Connection refused) while connecting to upstream, client: 127.0.0.1
+--- no_error_log
+[warn]
+[crit]

commit fa672ab3584da908991d0f20384a2b9d8188bad9
Author: ArchangelSDY <Archangel.SDY@gmail.com>
Date:   Thu Jul 30 19:41:51 2020 +0800

    feature: implemented the new ssl.verify_client() API to require a client certificate during TLS handshake (#289)

diff --git a/lib/ngx/ssl.lua b/lib/ngx/ssl.lua
index 6e5d991..a03131c 100644
--- a/lib/ngx/ssl.lua
+++ b/lib/ngx/ssl.lua
@@ -35,6 +35,7 @@ local ngx_lua_ffi_set_cert
 local ngx_lua_ffi_set_priv_key
 local ngx_lua_ffi_free_cert
 local ngx_lua_ffi_free_priv_key
+local ngx_lua_ffi_ssl_verify_client
 
 
 if subsystem == 'http' then
@@ -78,6 +79,9 @@ if subsystem == 'http' then
     void ngx_http_lua_ffi_free_cert(void *cdata);
 
     void ngx_http_lua_ffi_free_priv_key(void *cdata);
+
+    int ngx_http_lua_ffi_ssl_verify_client(void *r,
+        void *cdata, int depth, char **err);
     ]]
 
     ngx_lua_ffi_ssl_set_der_certificate =
@@ -97,6 +101,7 @@ if subsystem == 'http' then
     ngx_lua_ffi_set_priv_key = C.ngx_http_lua_ffi_set_priv_key
     ngx_lua_ffi_free_cert = C.ngx_http_lua_ffi_free_cert
     ngx_lua_ffi_free_priv_key = C.ngx_http_lua_ffi_free_priv_key
+    ngx_lua_ffi_ssl_verify_client = C.ngx_http_lua_ffi_ssl_verify_client
 
 elseif subsystem == 'stream' then
     ffi.cdef[[
@@ -140,6 +145,9 @@ elseif subsystem == 'stream' then
     void ngx_stream_lua_ffi_free_cert(void *cdata);
 
     void ngx_stream_lua_ffi_free_priv_key(void *cdata);
+
+    int ngx_stream_lua_ffi_ssl_verify_client(void *r,
+        void *cdata, int depth, char **err);
     ]]
 
     ngx_lua_ffi_ssl_set_der_certificate =
@@ -159,6 +167,7 @@ elseif subsystem == 'stream' then
     ngx_lua_ffi_set_priv_key = C.ngx_stream_lua_ffi_set_priv_key
     ngx_lua_ffi_free_cert = C.ngx_stream_lua_ffi_free_cert
     ngx_lua_ffi_free_priv_key = C.ngx_stream_lua_ffi_free_priv_key
+    ngx_lua_ffi_ssl_verify_client = C.ngx_stream_lua_ffi_ssl_verify_client
 end
 
 
@@ -380,6 +389,25 @@ function _M.set_priv_key(priv_key)
 end
 
 
+function _M.verify_client(ca_certs, depth)
+    local r = get_request()
+    if not r then
+        error("no request found")
+    end
+
+    if not depth then
+        depth = -1
+    end
+
+    local rc = ngx_lua_ffi_ssl_verify_client(r, ca_certs, depth, errmsg)
+    if rc == FFI_OK then
+        return true
+    end
+
+    return nil, ffi_str(errmsg[0])
+end
+
+
 do
     _M.SSL3_VERSION = 0x0300
     _M.TLS1_VERSION = 0x0301
diff --git a/lib/ngx/ssl.md b/lib/ngx/ssl.md
index f1b7dd9..97fd226 100644
--- a/lib/ngx/ssl.md
+++ b/lib/ngx/ssl.md
@@ -475,6 +475,31 @@ This function was first added in version `0.1.7`.
 
 [Back to TOC](#table-of-contents)
 
+verify_client
+------------
+**syntax:** *ok, err = ssl.verify_client(ca_certs?, depth?)*
+
+**context:** *ssl_certificate_by_lua&#42;*
+
+Requires a client certificate during TLS handshake.
+
+The `ca_certs` is the CA certificate chain opaque pointer returned by the
+[parse_pem_cert](#parse_pem_cert) function for the current SSL connection.
+The list of certificates will be sent to clients. Also, they will be added to trusted store.
+If omitted, will not send any CA certificate to clients.
+
+The `depth` is the verification depth in the client certificates chain.
+If omitted, will use the value specified by `ssl_verify_depth`.
+
+Returns `true` on success, or a `nil` value and a string describing the error otherwise.
+
+Note that TLS is not terminated when verification fails. You need to examine Nginx variable `$ssl_client_verify`
+later to determine next steps.
+
+This function was first added in version `0.1.20`.
+
+[Back to TOC](#table-of-contents)
+
 Community
 =========
 
diff --git a/t/ssl.t b/t/ssl.t
index 3e5fab4..f42eca6 100644
--- a/t/ssl.t
+++ b/t/ssl.t
@@ -2330,3 +2330,177 @@ got TLS1 version: TLSv1.3,
 [error]
 [alert]
 [emerg]
+
+
+
+=== TEST 23: verify client with CA certificates
+--- http_config
+    lua_package_path "$TEST_NGINX_LUA_PACKAGE_PATH";
+
+    server {
+        listen unix:$TEST_NGINX_HTML_DIR/nginx.sock ssl;
+        server_name   test.com;
+        ssl_certificate_by_lua_block {
+            local ssl = require "ngx.ssl"
+
+            local f = assert(io.open("t/cert/test.crt"))
+            local cert_data = f:read("*a")
+            f:close()
+
+            local cert, err = ssl.parse_pem_cert(cert_data)
+            if not cert then
+                ngx.log(ngx.ERR, "failed to parse pem cert: ", err)
+                return
+            end
+
+            local ok, err = ssl.verify_client(cert, 1)
+            if not ok then
+                ngx.log(ngx.ERR, "failed to verify client: ", err)
+                return
+            end
+        }
+
+        ssl_certificate ../../cert/test2.crt;
+        ssl_certificate_key ../../cert/test2.key;
+
+        location / {
+            default_type 'text/plain';
+            content_by_lua_block {
+                print('client certificate subject: ', ngx.var.ssl_client_s_dn)
+                ngx.say(ngx.var.ssl_client_verify)
+            }
+            more_clear_headers Date;
+        }
+    }
+--- config
+    location /t {
+        proxy_pass                  https://unix:$TEST_NGINX_HTML_DIR/nginx.sock;
+        proxy_ssl_certificate       ../../cert/test.crt;
+        proxy_ssl_certificate_key   ../../cert/test.key;
+        proxy_ssl_session_reuse     off;
+    }
+
+--- request
+GET /t
+--- response_body
+SUCCESS
+
+--- error_log
+client certificate subject: emailAddress=agentzh@gmail.com,CN=test.com
+
+--- no_error_log
+[error]
+[alert]
+[emerg]
+
+
+
+=== TEST 24: verify client without CA certificates
+--- http_config
+    lua_package_path "$TEST_NGINX_LUA_PACKAGE_PATH";
+
+    server {
+        listen unix:$TEST_NGINX_HTML_DIR/nginx.sock ssl;
+        server_name   test.com;
+        ssl_certificate_by_lua_block {
+            local ssl = require "ngx.ssl"
+
+            local ok, err = ssl.verify_client()
+            if not ok then
+                ngx.log(ngx.ERR, "failed to verify client: ", err)
+                return
+            end
+        }
+
+        ssl_certificate ../../cert/test2.crt;
+        ssl_certificate_key ../../cert/test2.key;
+
+        location / {
+            default_type 'text/plain';
+            content_by_lua_block {
+                print('client certificate subject: ', ngx.var.ssl_client_s_dn)
+                ngx.say(ngx.var.ssl_client_verify)
+            }
+            more_clear_headers Date;
+        }
+    }
+--- config
+    location /t {
+        proxy_pass                  https://unix:$TEST_NGINX_HTML_DIR/nginx.sock;
+        proxy_ssl_certificate       ../../cert/test.crt;
+        proxy_ssl_certificate_key   ../../cert/test.key;
+        proxy_ssl_session_reuse     off;
+    }
+
+--- request
+GET /t
+--- response_body
+FAILED:self signed certificate
+
+--- error_log
+client certificate subject: emailAddress=agentzh@gmail.com,CN=test.com
+
+--- no_error_log
+[error]
+[alert]
+[emerg]
+
+
+
+=== TEST 25: verify client but client provides no certificate
+--- http_config
+    lua_package_path "$TEST_NGINX_LUA_PACKAGE_PATH";
+
+    server {
+        listen unix:$TEST_NGINX_HTML_DIR/nginx.sock ssl;
+        server_name   test.com;
+        ssl_certificate_by_lua_block {
+            local ssl = require "ngx.ssl"
+
+            local f = assert(io.open("t/cert/test.crt"))
+            local cert_data = f:read("*a")
+            f:close()
+
+            local cert, err = ssl.parse_pem_cert(cert_data)
+            if not cert then
+                ngx.log(ngx.ERR, "failed to parse pem cert: ", err)
+                return
+            end
+
+            local ok, err = ssl.verify_client(cert, 1)
+            if not ok then
+                ngx.log(ngx.ERR, "failed to verify client: ", err)
+                return
+            end
+        }
+
+        ssl_certificate ../../cert/test2.crt;
+        ssl_certificate_key ../../cert/test2.key;
+
+        location / {
+            default_type 'text/plain';
+            content_by_lua_block {
+                print('client certificate subject: ', ngx.var.ssl_client_s_dn)
+                ngx.say(ngx.var.ssl_client_verify)
+            }
+            more_clear_headers Date;
+        }
+    }
+--- config
+    location /t {
+        proxy_pass                  https://unix:$TEST_NGINX_HTML_DIR/nginx.sock;
+        proxy_ssl_session_reuse     off;
+    }
+
+--- request
+GET /t
+--- response_body
+NONE
+
+--- error_log
+client certificate subject: nil
+
+--- no_error_log
+[error]
+[alert]
+[emerg]
diff --git a/t/stream/ssl.t b/t/stream/ssl.t
index dec4324..b743c7f 100644
--- a/t/stream/ssl.t
+++ b/t/stream/ssl.t
@@ -1887,3 +1887,150 @@ got TLS1 version: TLSv1.3,
 [error]
 [alert]
 [emerg]
+
+
+
+=== TEST 23: verify client with CA certificates
+--- stream_config
+    server {
+        listen unix:$TEST_NGINX_HTML_DIR/nginx.sock ssl;
+
+        ssl_certificate ../../cert/test2.crt;
+        ssl_certificate_key ../../cert/test2.key;
+
+        ssl_certificate_by_lua_block {
+            local ssl = require "ngx.ssl"
+
+            local f = assert(io.open("t/cert/test.crt", "rb"))
+            local cert_data = f:read("*all")
+            f:close()
+
+            local cert = ssl.parse_pem_cert(cert_data)
+            if not cert then
+                ngx.log(ngx.ERR, "failed to parse pem cert: ", err)
+                return
+            end
+
+            local ok, err = ssl.verify_client(cert, 1)
+            if not ok then
+                ngx.log(ngx.ERR, "failed to verify client: ", err)
+                return
+            end
+        }
+
+        content_by_lua_block {
+            print('client certificate subject: ', ngx.var.ssl_client_s_dn)
+            ngx.say(ngx.var.ssl_client_verify)
+        }
+    }
+--- stream_server_config
+    proxy_pass                  unix:$TEST_NGINX_HTML_DIR/nginx.sock;
+    proxy_ssl                   on;
+    proxy_ssl_certificate       ../../cert/test.crt;
+    proxy_ssl_certificate_key   ../../cert/test.key;
+    proxy_ssl_session_reuse     off;
+
+--- stream_response
+SUCCESS
+
+--- error_log
+client certificate subject: emailAddress=agentzh@gmail.com,CN=test.com
+
+--- no_error_log
+[error]
+[alert]
+[emerg]
+
+
+
+=== TEST 24: verify client without CA certificates
+--- stream_config
+    server {
+        listen unix:$TEST_NGINX_HTML_DIR/nginx.sock ssl;
+
+        ssl_certificate ../../cert/test2.crt;
+        ssl_certificate_key ../../cert/test2.key;
+
+        ssl_certificate_by_lua_block {
+            local ssl = require "ngx.ssl"
+
+            local ok, err = ssl.verify_client()
+            if not ok then
+                ngx.log(ngx.ERR, "failed to verify client: ", err)
+                return
+            end
+        }
+
+        content_by_lua_block {
+            print('client certificate subject: ', ngx.var.ssl_client_s_dn)
+            ngx.say(ngx.var.ssl_client_verify)
+        }
+    }
+--- stream_server_config
+    proxy_pass                  unix:$TEST_NGINX_HTML_DIR/nginx.sock;
+    proxy_ssl                   on;
+    proxy_ssl_certificate       ../../cert/test.crt;
+    proxy_ssl_certificate_key   ../../cert/test.key;
+    proxy_ssl_session_reuse     off;
+
+--- stream_response
+FAILED:self signed certificate
+
+--- error_log
+client certificate subject: emailAddress=agentzh@gmail.com,CN=test.com
+
+--- no_error_log
+[error]
+[alert]
+[emerg]
+
+
+
+=== TEST 25: verify client but client provides no certificate
+--- stream_config
+    server {
+        listen unix:$TEST_NGINX_HTML_DIR/nginx.sock ssl;
+
+        ssl_certificate ../../cert/test2.crt;
+        ssl_certificate_key ../../cert/test2.key;
+
+        ssl_certificate_by_lua_block {
+            local ssl = require "ngx.ssl"
+
+            local f = assert(io.open("t/cert/test.crt", "rb"))
+            local cert_data = f:read("*all")
+            f:close()
+
+            local cert = ssl.parse_pem_cert(cert_data)
+            if not cert then
+                ngx.log(ngx.ERR, "failed to parse pem cert: ", err)
+                return
+            end
+
+            local ok, err = ssl.verify_client(cert, 1)
+            if not ok then
+                ngx.log(ngx.ERR, "failed to verify client: ", err)
+                return
+            end
+        }
+
+        content_by_lua_block {
+            print('client certificate subject: ', ngx.var.ssl_client_s_dn)
+            ngx.say(ngx.var.ssl_client_verify)
+        }
+    }
+--- stream_server_config
+    proxy_pass                  unix:$TEST_NGINX_HTML_DIR/nginx.sock;
+    proxy_ssl                   on;
+    proxy_ssl_session_reuse     off;
+
+--- stream_response
+NONE
+
+--- error_log
+client certificate subject: nil
+
+--- no_error_log
+[error]
+[alert]
+[emerg]

commit 68f2b224f85bb29480fa19210ad2d06fe772b93d
Author: rainingmaster <312841925@qq.com>
Date:   Sat Apr 4 00:37:26 2020 +0800

    feature: add exit_worker as new phase

diff --git a/lib/resty/core/phase.lua b/lib/resty/core/phase.lua
index d30a534..331752a 100644
--- a/lib/resty/core/phase.lua
+++ b/lib/resty/core/phase.lua
@@ -28,6 +28,7 @@ local context_names = {
     [0x0400] = "ssl_cert",
     [0x0800] = "ssl_session_store",
     [0x1000] = "ssl_session_fetch",
+    [0x2000] = "exit_worker",
 }
 
 
------ diff log end --------
** Summary: check here https://github.com/openresty/lua-resty-core
===================== END lua-resty-core =================================
New Commit	: lua-resty-upstream-healthcheck: 5 commits since 'v0.06'
------ diff log --------
commit 26bad5df8131d93c6f06011cce82b80929ad8340
Author: Thibault Charbonnier <thibaultcha@me.com>
Date:   Wed Jan 22 15:11:28 2020 -0800

    travis-ci: bumped the NGINX core to 1.17.8.

diff --git a/.travis.yml b/.travis.yml
index 57067ee..d02d898 100644
--- a/.travis.yml
+++ b/.travis.yml
@@ -36,7 +36,7 @@ env:
     - LD_LIBRARY_PATH=$LUAJIT_LIB:$LD_LIBRARY_PATH
     - TEST_NGINX_SLEEP=0.006
   matrix:
-    - NGINX_VERSION=1.17.4
+    - NGINX_VERSION=1.17.8
 
 install:
   - if [ ! -d download-cache ]; then mkdir download-cache; fi

commit 2522146c239ceea1de0c5bc7d76281d1235d688c
Author: Thibault Charbonnier <thibaultcha@me.com>
Date:   Mon Sep 30 15:10:02 2019 -0700

    travis: bumped the nginx core version to 1.17.4.

diff --git a/.travis.yml b/.travis.yml
index 9b0ef1d..57067ee 100644
--- a/.travis.yml
+++ b/.travis.yml
@@ -36,7 +36,7 @@ env:
     - LD_LIBRARY_PATH=$LUAJIT_LIB:$LD_LIBRARY_PATH
     - TEST_NGINX_SLEEP=0.006
   matrix:
-    - NGINX_VERSION=1.17.1
+    - NGINX_VERSION=1.17.4
 
 install:
   - if [ ! -d download-cache ]; then mkdir download-cache; fi

commit e36656b8604fcdcc7c0f3501428e751a1fa505df
Author: Thibault Charbonnier <thibaultcha@me.com>
Date:   Thu Jul 11 15:03:35 2019 -0700

    travis: bumped the nginx core version to 1.17.1.

diff --git a/.travis.yml b/.travis.yml
index 6526dd4..9b0ef1d 100644
--- a/.travis.yml
+++ b/.travis.yml
@@ -36,7 +36,7 @@ env:
     - LD_LIBRARY_PATH=$LUAJIT_LIB:$LD_LIBRARY_PATH
     - TEST_NGINX_SLEEP=0.006
   matrix:
-    - NGINX_VERSION=1.15.8
+    - NGINX_VERSION=1.17.1
 
 install:
   - if [ ! -d download-cache ]; then mkdir download-cache; fi

commit bd28ef990f21a486db270b27604346c985dd43c6
Author: Thibault Charbonnier <thibaultcha@me.com>
Date:   Sat Apr 13 00:42:00 2019 -0400

    travis: bumped nginx to 1.15.8 so that resty.core can be loaded by ngx_lua.

diff --git a/.travis.yml b/.travis.yml
index a90dde6..6526dd4 100644
--- a/.travis.yml
+++ b/.travis.yml
@@ -36,8 +36,7 @@ env:
     - LD_LIBRARY_PATH=$LUAJIT_LIB:$LD_LIBRARY_PATH
     - TEST_NGINX_SLEEP=0.006
   matrix:
-    - NGINX_VERSION=1.9.15
-    - NGINX_VERSION=1.11.2
+    - NGINX_VERSION=1.15.8
 
 install:
   - if [ ! -d download-cache ]; then mkdir download-cache; fi

commit f8fc5e500b6ce09df48410e42ff556a3b0b5cde0
Author: Thibault Charbonnier <thibaultcha@me.com>
Date:   Sat Apr 13 00:23:52 2019 -0400

    travis: added steps to clone lua-resty-core and lua-resty-lrucache which are required by ngx_lua.

diff --git a/.travis.yml b/.travis.yml
index 1d81ce4..a90dde6 100644
--- a/.travis.yml
+++ b/.travis.yml
@@ -47,6 +47,8 @@ install:
   - git clone https://github.com/openresty/nginx-devel-utils.git
   - git clone https://github.com/simpl/ngx_devel_kit.git ../ndk-nginx-module
   - git clone https://github.com/openresty/lua-nginx-module.git ../lua-nginx-module
+  - git clone https://github.com/openresty/lua-resty-core.git ../lua-resty-core
+  - git clone https://github.com/openresty/lua-resty-lrucache.git ../lua-resty-lrucache
   - git clone https://github.com/openresty/lua-upstream-nginx-module.git ../lua-upstream-nginx-module
   - git clone https://github.com/openresty/echo-nginx-module.git ../echo-nginx-module
   - git clone https://github.com/openresty/no-pool-nginx.git ../no-pool-nginx
------ diff log end --------
** Summary: check here https://github.com/openresty/lua-resty-upstream-healthcheck
===================== END lua-resty-upstream-h =================================
Pass		: lua-tablepool: latest!
===================== END lua-tablepool =================================
New Commit	: lua-resty-signal: 5 commits since 'v0.02'
------ diff log --------
commit 6b1bf606563c18eb4a25a7f36e9e2337af9217c0
Author: Thibault Charbonnier <thibaultcha@me.com>
Date:   Wed Jan 22 15:10:46 2020 -0800

    travis-ci: bumped the NGINX core to 1.17.8.

diff --git a/.travis.yml b/.travis.yml
index 5a145c2..5b4fd2e 100644
--- a/.travis.yml
+++ b/.travis.yml
@@ -18,7 +18,7 @@ env:
     - LUAJIT_INC=$LUAJIT_PREFIX/include/luajit-2.1
     - LD_LIBRARY_PATH=$LUAJIT_LIB:$LD_LIBRARY_PATH
   matrix:
-    - NGINX_VERSION=1.17.4
+    - NGINX_VERSION=1.17.8
 
 install:
   - sudo apt-get install -qq -y cpanminus axel

commit 93d23c96123da25e5d5eef4cf5fe13dbe5e4aea9
Author: Thibault Charbonnier <thibaultcha@me.com>
Date:   Mon Sep 30 11:54:43 2019 -0700

    travis-ci: bumped the NGINX core to 1.17.4.

diff --git a/.travis.yml b/.travis.yml
index 977d002..5a145c2 100644
--- a/.travis.yml
+++ b/.travis.yml
@@ -18,7 +18,7 @@ env:
     - LUAJIT_INC=$LUAJIT_PREFIX/include/luajit-2.1
     - LD_LIBRARY_PATH=$LUAJIT_LIB:$LD_LIBRARY_PATH
   matrix:
-    - NGINX_VERSION=1.17.1
+    - NGINX_VERSION=1.17.4
 
 install:
   - sudo apt-get install -qq -y cpanminus axel

commit 2495446a928aa0179923d08d1ab7eb736c822e66
Author: Thibault Charbonnier <thibaultcha@me.com>
Date:   Thu Jul 11 14:43:24 2019 -0700

    travis: bumped the nginx core version to 1.17.1.

diff --git a/.travis.yml b/.travis.yml
index 497d264..977d002 100644
--- a/.travis.yml
+++ b/.travis.yml
@@ -18,7 +18,7 @@ env:
     - LUAJIT_INC=$LUAJIT_PREFIX/include/luajit-2.1
     - LD_LIBRARY_PATH=$LUAJIT_LIB:$LD_LIBRARY_PATH
   matrix:
-    - NGINX_VERSION=1.15.8
+    - NGINX_VERSION=1.17.1
 
 install:
   - sudo apt-get install -qq -y cpanminus axel

commit 79bdbb0598f3800a80f86cb1e816eaf895732d21
Author: Thibault Charbonnier <thibaultcha@me.com>
Date:   Wed Feb 13 15:53:06 2019 -0800

    tests: updated valgrind.suppress for a known nginx false positive.

diff --git a/valgrind.suppress b/valgrind.suppress
index a561086..1cac506 100644
--- a/valgrind.suppress
+++ b/valgrind.suppress
@@ -19,3 +19,12 @@
    fun:ngx_single_process_cycle
    fun:main
 }
+{
+   <insert_a_suppression_name_here>
+   Memcheck:Leak
+   match-leak-kinds: definite
+   fun:malloc
+   fun:ngx_alloc
+   fun:ngx_set_environment
+   fun:ngx_worker_process_init
+}

commit c84491d314401b090920c82e95bdfef39a5926a2
Author: Thibault Charbonnier <thibaultcha@me.com>
Date:   Sun Feb 10 22:33:41 2019 -0800

    travis: removed unused download-cache directory and nginx tarball download.

diff --git a/.travis.yml b/.travis.yml
index 2e5abdf..497d264 100644
--- a/.travis.yml
+++ b/.travis.yml
@@ -9,10 +9,6 @@ compiler:
   - gcc
   - clang
 
-cache:
-  directories:
-  - download-cache
-
 env:
   global:
     - JOBS=3
@@ -25,10 +21,8 @@ env:
     - NGINX_VERSION=1.15.8
 
 install:
-  - if [ ! -d download-cache ]; then mkdir download-cache; fi
   - sudo apt-get install -qq -y cpanminus axel
   - sudo cpanm --notest Test::Nginx > build.log 2>&1 || (cat build.log && exit 1)
-  - wget http://nginx.org/download/nginx-${NGINX_VERSION}.tar.gz
   - git clone https://github.com/openresty/openresty.git ../openresty
   - git clone https://github.com/openresty/nginx-devel-utils.git
   - git clone https://github.com/simpl/ngx_devel_kit.git ../ndk-nginx-module
------ diff log end --------
** Summary: check here https://github.com/openresty/lua-resty-signal
===================== END lua-resty-signal =================================
Pass		: lua-resty-shell: latest!
===================== END lua-resty-shell =================================
